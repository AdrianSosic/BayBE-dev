Search.setIndex({"alltitles": {"Acquisition function": [[373, "acquisition-function"]], "AcquisitionFunction": [[20, null]], "Active Learning": [[414, null]], "Added": [[410, "added"], [410, "id4"], [410, "id8"], [410, "id14"], [410, "id21"], [410, "id30"], [410, "id36"], [410, "id40"], [410, "id47"], [410, "id52"], [410, "id58"], [410, "id64"], [410, "id68"], [410, "id72"], [410, "id76"], [410, "id81"], [410, "id85"], [410, "id88"], [410, "id92"], [410, "id96"], [410, "id100"], [410, "id103"], [410, "id107"], [410, "id111"], [410, "id115"], [410, "id119"], [410, "id125"], [410, "id128"]], "Addendum: Description of transformation functions": [[395, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[429, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[427, null]], "Adding Partial Results": [[415, "adding-partial-results"]], "Adding measurements": [[416, "adding-measurements"]], "Additional Options for Discrete Search Spaces": [[421, null]], "AdditiveKernel": [[98, null]], "Advanced Example: Chemical Substances": [[408, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[393, "an-imaginary-use-case"]], "Array-Based Callables": [[424, null]], "Asynchronous Workflows": [[415, null]], "Automatic field conversion": [[423, "automatic-field-conversion"]], "Available Models": [[425, "available-models"]], "Available recommenders suitable for initial recommendation": [[373, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[373, "available-surrogate-models"]], "Backtesting": [[366, null], [405, null]], "BaseSequentialMetaRecommender": [[162, null]], "Basic Instructions": [[418, "basic-instructions"]], "Basic creation": [[416, "basic-creation"]], "Basic example for using BayBE": [[372, null]], "Basic string assembly": [[423, "basic-string-assembly"]], "BasicKernel": [[85, null]], "Basics": [[371, null], [416, "basics"]], "Batch optimization": [[416, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[408, null]], "Bayesian Recommenders": [[421, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[255, null]], "BayesianRecommender": [[173, null]], "Bernoulli Multi Armed Bandit": [[393, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[231, null]], "BetaPrior": [[148, null]], "BinaryTarget": [[273, null]], "BotorchRecommender": [[175, null]], "Bound methods": [[383, "bound-methods"]], "Breaking Changes": [[410, "breaking-changes"], [410, "id13"], [410, "id20"]], "Building from the Product of Parameter Values": [[422, "building-from-the-product-of-parameter-values"], [422, "id2"]], "Building the Model": [[393, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[409, "cpus-without-avx-support-installation-of-polars"]], "Caching of recommendations": [[416, "caching-of-recommendations"]], "Campaign": [[27, null]], "Campaign Stopping": [[384, null]], "Campaigns": [[416, null]], "CardinalityConstraint": [[30, null]], "CategoricalEncoding": [[127, null]], "CategoricalParameter": [[122, null], [420, "categoricalparameter"]], "Changed": [[410, "changed"], [410, "id5"], [410, "id9"], [410, "id15"], [410, "id22"], [410, "id27"], [410, "id31"], [410, "id37"], [410, "id41"], [410, "id44"], [410, "id48"], [410, "id53"], [410, "id59"], [410, "id65"], [410, "id69"], [410, "id73"], [410, "id77"], [410, "id82"], [410, "id86"], [410, "id89"], [410, "id93"], [410, "id97"], [410, "id101"], [410, "id104"], [410, "id108"], [410, "id112"], [410, "id116"], [410, "id120"]], "Changelog": [[410, null]], "Clustering Recommenders": [[421, "clustering-recommenders"]], "Code Design": [[411, "code-design"]], "ColumnTransformer": [[357, null]], "Comparing recommendations in both objects": [[401, "comparing-recommendations-in-both-objects"]], "CompositeKernel": [[86, null]], "Condition": [[36, null]], "Conditions": [[417, "conditions"]], "Constraint": [[31, null]], "Constraint Setup": [[390, "constraint-setup"]], "Constraints": [[417, null]], "Constraints Continuous": [[374, null]], "Constraints Discrete": [[377, null]], "Constraints Setup": [[391, "constraints-setup"]], "Construct the campaign and run some iterations": [[375, "construct-the-campaign-and-run-some-iterations"], [376, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[422, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[368, "constructing-campaigns-for-the-simulation-loop"], [369, "constructing-campaigns-for-the-simulation-loop"], [370, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[422, "constructing-from-a-dataframe"], [422, "id1"], [422, "id3"]], "Constructing hybrid recommenders": [[399, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[398, "constructing-the-campaign-and-performing-a-recommendation"], [399, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[399, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[417, "continuous-constraints"]], "Continuous Parameters": [[420, "continuous-parameters"]], "Continuous Subspaces": [[422, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[40, null]], "ContinuousConstraint": [[32, null]], "ContinuousLinearConstraint": [[41, null], [417, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[33, null]], "ContinuousParameter": [[118, null]], "Contributing to BayBE": [[411, null]], "Contributors": [[412, null], [412, "id1"]], "Convenience construction and implicit conversion": [[419, null]], "Conventions for attrs classes": [[411, "conventions-for-attrs-classes"]], "Convert model to onnx": [[387, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[387, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[388, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[387, "create-campaign"]], "Creating Continuous Search Spaces": [[397, null]], "Creating a Simplex-Bound Discrete Subspace": [[422, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign": [[416, "creating-a-campaign"]], "Creating a campaign from the configuration file": [[402, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[378, "creating-and-printing-the-campaign"], [379, "creating-and-printing-the-campaign"], [381, "creating-and-printing-the-campaign"], [395, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[367, "creating-the-campaigns"]], "Creating the Objective": [[369, "creating-the-objective"]], "Creating the Optimization Objective": [[405, "creating-the-optimization-objective"], [406, "creating-the-optimization-objective"]], "Creating the Search Space": [[405, "creating-the-search-space"]], "Creating the Searchspace": [[406, "creating-the-searchspace"]], "Creating the campaign": [[373, "creating-the-campaign"], [388, "creating-the-campaign"], [401, "creating-the-campaign"]], "Creating the constraint": [[378, "creating-the-constraint"], [380, "creating-the-constraint"]], "Creating the constraints": [[379, "creating-the-constraints"], [381, "creating-the-constraints"]], "Creating the objective": [[395, "creating-the-objective"]], "Creating the recommender object": [[373, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[368, "creating-the-searchspace-and-the-objective"], [370, "creating-the-searchspace-and-the-objective"], [375, "creating-the-searchspace-and-the-objective"], [376, "creating-the-searchspace-and-the-objective"], [378, "creating-the-searchspace-and-the-objective"], [379, "creating-the-searchspace-and-the-objective"], [380, "creating-the-searchspace-and-the-objective"], [381, "creating-the-searchspace-and-the-objective"], [398, "creating-the-searchspace-and-the-objective"]], "Creation from a JSON config": [[416, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[425, null]], "Custom Hooks": [[382, null]], "Custom Surrogates": [[386, null]], "CustomDiscreteParameter": [[125, null], [420, "customdiscreteparameter"]], "CustomEncoding": [[128, null]], "CustomONNXSurrogate": [[237, null]], "Dataframe deserialization": [[423, "dataframe-deserialization"]], "DefaultKernelFactory": [[251, null]], "Defining config dictionaries": [[403, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[384, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[385, "defining-the-hook"]], "Defining the Hooks": [[383, "defining-the-hooks"]], "Defining the Optimization Objective": [[408, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[367, "defining-the-optimization-problem"]], "Defining the Search Space": [[408, "defining-the-search-space"]], "Defining the Tasks": [[405, "defining-the-tasks"], [406, "defining-the-tasks"]], "Defining the targets": [[395, "defining-the-targets"]], "Defining the test function": [[375, "defining-the-test-function"], [376, "defining-the-test-function"], [398, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[399, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[410, "deprecations"], [410, "id11"], [410, "id18"], [410, "id25"], [410, "id34"], [410, "id50"], [410, "id56"], [410, "id62"], [410, "id79"]], "Deserialization from configuration strings": [[423, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[110, null], [419, "desirabilityobjective"]], "Developer Tools": [[411, "developer-tools"]], "Discrete Constraints": [[417, "discrete-constraints"]], "Discrete Parameters": [[420, "discrete-parameters"]], "Discrete Subspaces": [[422, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[390, null]], "DiscreteCardinalityConstraint": [[47, null]], "DiscreteConstraint": [[34, null]], "DiscreteCustomConstraint": [[48, null], [417, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[49, null], [417, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[50, null], [417, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[51, null], [417, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[52, null], [417, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[119, null]], "DiscretePermutationInvarianceConstraint": [[53, null], [417, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[54, null]], "DiscreteSamplingMethod": [[353, null]], "DiscreteSumConstraint": [[55, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[417, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[393, "discussion"]], "Disk Caching": [[418, "disk-caching"]], "Dummy": [[294, null]], "Duplicate Substances": [[390, "duplicate-substances"]], "EDBOKernelFactory": [[253, null]], "EXPERIMENTAL: Floating Point Precision": [[418, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[429, null]], "Environment Variables": [[418, null]], "Equivalent copies": [[423, null]], "Estimation with Constraints": [[429, null]], "Example Searchspace and objective parameters": [[373, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[375, null]], "Example for creating campaigns from configs": [[402, null]], "Example for custom parameter passing in surrogate models": [[388, null]], "Example for full simulation loop using a table-based lookup mechanism": [[369, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[370, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[368, null]], "Example for linear constraints in a continuous searchspace": [[376, null]], "Example for surrogate model with a custom pretrained model": [[387, null]], "Example for the serialization of a campaign": [[401, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[398, null]], "Example for using custom constraints in discrete searchspaces": [[378, null]], "Example for using dependency constraints in discrete searchspaces": [[379, null]], "Example for using different strategies": [[373, null]], "Example for using exclusion constraints in discrete searchspaces": [[380, null]], "Example for using exclusion constraints incorporating sums and products": [[381, null]], "Example for using synthetic test functions in hybrid spaces": [[399, null]], "Example for using the multi target mode for the objective": [[395, null]], "Example for validation of a config file": [[403, null]], "Examples": [[407, null]], "Expectations": [[427, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[387, "experiment-setup"], [388, "experiment-setup"]], "Experiment setup": [[378, "experiment-setup"], [379, "experiment-setup"], [380, "experiment-setup"], [381, "experiment-setup"], [401, "experiment-setup"]], "Experiment setup and creating the searchspace": [[395, "experiment-setup-and-creating-the-searchspace"]], "Experimental feature only!": [[418, null]], "Expired Deprecations (from 0.6.*)": [[410, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[410, "expired-deprecations-from-0-7"]], "Extending BayBE\u2019s Functionality": [[411, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[425, "extracting-the-model-for-advanced-study"]], "FPSRecommender": [[187, null]], "Fixed": [[410, "fixed"], [410, "id2"], [410, "id6"], [410, "id10"], [410, "id16"], [410, "id24"], [410, "id28"], [410, "id33"], [410, "id38"], [410, "id42"], [410, "id49"], [410, "id54"], [410, "id60"], [410, "id66"], [410, "id74"], [410, "id78"], [410, "id83"], [410, "id90"], [410, "id94"], [410, "id98"], [410, "id105"], [410, "id109"], [410, "id113"], [410, "id117"], [410, "id121"], [410, "id123"], [410, "id126"]], "From GitHub": [[408, "from-github"]], "From Local Clone": [[408, "from-local-clone"]], "From Package Index": [[408, "from-package-index"]], "From the Default Constructor": [[422, "from-the-default-constructor"]], "Further information": [[416, "further-information"]], "GammaPrior": [[149, null]], "GaussianMixtureClusteringRecommender": [[182, null]], "GaussianProcessPreset": [[248, null]], "GaussianProcessSurrogate": [[241, null]], "General Information": [[421, "general-information"]], "General Workflow": [[411, "general-workflow"]], "Generating Lookup Tables": [[405, "generating-lookup-tables"], [406, "generating-lookup-tables"]], "Getting a recommendation and adding measurements": [[372, "getting-a-recommendation-and-adding-measurements"]], "Getting recommendations": [[416, "getting-recommendations"]], "Global Uncertainty Reduction": [[414, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[150, null]], "HalfNormalPrior": [[151, null]], "Hook instance vs. target instance": [[383, null]], "Hybrid constraints": [[417, null]], "Imports": [[367, "imports"], [383, "imports"], [385, "imports"], [390, "imports"], [391, "imports"], [393, "imports"], [397, "imports"], [405, "imports"], [406, "imports"]], "Inclusion of initial data": [[368, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[233, null]], "Indices and Tables": [[408, "indices-and-tables"]], "Influence of Continuous Parameters": [[429, null]], "Installation Related Issues": [[409, "installation-related-issues"]], "Interval": [[333, null]], "Invoking alternative constructors": [[423, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[387, "iterate-with-recommendations-and-measurements"], [388, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[423, "json-de-serialization"]], "KMeansClusteringRecommender": [[183, null]], "Kernel": [[87, null]], "KernelFactory": [[243, null]], "Known Issues": [[409, null]], "License": [[413, null]], "Limitations": [[426, "limitations"]], "LinearKernel": [[89, null]], "Links for documentation": [[388, "links-for-documentation"]], "Local Uncertainty Reduction": [[414, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[152, null]], "Lookup functionality and data creation": [[368, "lookup-functionality-and-data-creation"], [369, "lookup-functionality-and-data-creation"], [370, "lookup-functionality-and-data-creation"]], "MATCH mode": [[426, "match-mode"]], "MIN and MAX mode": [[426, "min-and-max-mode"]], "Maintainers": [[412, "maintainers"]], "Mandatory target bounds": [[419, null]], "Manual verification of the constraint": [[378, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[379, "manual-verification-of-the-constraints"], [380, "manual-verification-of-the-constraints"], [381, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[415, "marking-experiments-as-pending"]], "MaternKernel": [[90, null]], "MeanPredictionSurrogate": [[257, null]], "Memory During Optimization": [[429, null]], "MemorySize": [[198, null]], "Meta Recommenders": [[421, "meta-recommenders"]], "MetaRecommender": [[160, null]], "Method overrides": [[411, "method-overrides"]], "Missing Lookup Values": [[424, null]], "Mixtures": [[389, null]], "Model Outputs": [[387, "model-outputs"], [388, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[390, null]], "Modeling a Mixture in Traditional Representation": [[391, null]], "Monitoring the Probability of Improvement": [[385, null]], "Monkeypatching": [[383, "monkeypatching"], [384, null], [385, "monkeypatching"]], "Multi Target": [[394, null]], "Multi-Armed Bandit": [[392, null]], "NGBoostSurrogate": [[259, null]], "NaiveHybridSpaceRecommender": [[167, null]], "Necessary imports": [[387, "necessary-imports"], [388, "necessary-imports"], [401, "necessary-imports"], [402, "necessary-imports"], [403, "necessary-imports"]], "Necessary imports for this example": [[368, "necessary-imports-for-this-example"], [369, "necessary-imports-for-this-example"], [370, "necessary-imports-for-this-example"], [372, "necessary-imports-for-this-example"], [373, "necessary-imports-for-this-example"], [375, "necessary-imports-for-this-example"], [376, "necessary-imports-for-this-example"], [378, "necessary-imports-for-this-example"], [379, "necessary-imports-for-this-example"], [380, "necessary-imports-for-this-example"], [381, "necessary-imports-for-this-example"], [395, "necessary-imports-for-this-example"], [398, "necessary-imports-for-this-example"], [399, "necessary-imports-for-this-example"]], "Nesting objects": [[423, "nesting-objects"]], "NonPredictiveRecommender": [[180, null]], "NormalPrior": [[153, null]], "NumericalContinuousParameter": [[132, null], [420, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[133, null], [420, "numericaldiscreteparameter"]], "NumericalTarget": [[279, null], [426, "numericaltarget"]], "Objective": [[105, null], [419, null]], "Optimizing a Custom Black-Box Function": [[367, null]], "Optional Dependencies": [[408, "optional-dependencies"]], "Optional dependency": [[420, null]], "Optional: Defining the Optimization Strategy": [[408, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[390, null]], "Other parameters": [[373, "other-parameters"]], "PAMClusteringRecommender": [[184, null]], "Parameter": [[120, null]], "Parameter Setup": [[390, "parameter-setup"], [391, "parameter-setup"]], "Parameter encoding": [[420, null]], "Parameter names": [[420, null]], "Parameter tolerances": [[416, null]], "ParameterEncoding": [[129, null]], "Parameters": [[420, null]], "Parameters for a full simulation loop": [[368, "parameters-for-a-full-simulation-loop"], [369, "parameters-for-a-full-simulation-loop"], [370, "parameters-for-a-full-simulation-loop"]], "PartialAcquisitionFunction": [[22, null]], "Performing some iterations": [[395, "performing-some-iterations"]], "Performing the simulation loop": [[368, "performing-the-simulation-loop"]], "PeriodicKernel": [[91, null]], "Permutation Invariance": [[390, "permutation-invariance"]], "PiecewisePolynomialKernel": [[92, null]], "PlainKernelFactory": [[244, null]], "Plotting the Results": [[367, "plotting-the-results"], [384, "plotting-the-results"], [385, "plotting-the-results"]], "Polars": [[418, "polars"]], "PolynomialKernel": [[93, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Prior": [[146, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[384, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[99, null]], "Pure Recommenders": [[421, "pure-recommenders"]], "PureRecommender": [[170, null]], "Purely Continuous Search Spaces": [[414, null]], "PyCharm vs. exceptiongroup": [[409, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[94, null]], "RFFKernel": [[95, null]], "RQKernel": [[96, null]], "RandomForestSurrogate": [[261, null]], "RandomRecommender": [[188, null]], "RecommenderProtocol": [[157, null]], "Recommenders": [[421, null]], "Registering Custom Hooks": [[383, null]], "Removed": [[410, "removed"], [410, "id17"], [410, "id23"], [410, "id32"], [410, "id45"], [410, "id55"], [410, "id61"], [410, "id70"]], "Representation of Data within Discrete Subspaces": [[422, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[429, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[422, "restricting-search-spaces-using-constraints"]], "Running the Simulation": [[393, "running-the-simulation"]], "Running the Simulation Loop": [[367, "running-the-simulation-loop"]], "SHAPInsight": [[80, null]], "SKLearnClusteringRecommender": [[185, null]], "Sampling Recommenders": [[421, "sampling-recommenders"]], "Scalarizer": [[113, null]], "ScaleKernel": [[100, null]], "Search Space Creation": [[390, "search-space-creation"], [391, "search-space-creation"]], "Search Space Memory Estimation": [[429, "search-space-memory-estimation"]], "Search Spaces": [[422, null]], "SearchSpace": [[193, null]], "SearchSpaceType": [[194, null]], "Searchspaces": [[396, null]], "Seeing Transfer Learning in Action": [[427, "seeing-transfer-learning-in-action"]], "Sequential vs. parallel experimentation": [[416, null]], "SequentialMetaRecommender": [[163, null]], "SerialMixin": [[216, null]], "Serialization": [[400, null], [416, "serialization"], [423, null]], "Serialization and de-serialization": [[401, "serialization-and-de-serialization"]], "Settings": [[367, "settings"], [384, "settings"], [385, "settings"], [397, "settings"], [405, "settings"], [406, "settings"]], "Setup": [[372, "setup"], [393, "setup"]], "Signature components": [[383, null]], "Simplex Construction": [[390, null]], "Simulating Multiple Scenarios": [[424, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[424, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[424, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[384, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[384, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[424, null]], "Simulation Loop": [[405, "simulation-loop"], [406, "simulation-loop"]], "SingleTargetObjective": [[115, null], [419, "singletargetobjective"]], "Slot-based Representation": [[391, null]], "SmoothedBoxPrior": [[154, null]], "StreamingSequentialMetaRecommender": [[164, null]], "Sub-Sampling Method": [[414, null]], "SubSelectionCondition": [[37, null], [417, "subselectioncondition"]], "SubspaceContinuous": [[191, null]], "SubspaceDiscrete": [[199, null]], "Substance Amounts": [[390, "substance-amounts"]], "SubstanceEncoding": [[130, null]], "SubstanceParameter": [[136, null], [420, "substanceparameter"]], "Suggested Fix": [[409, null], [409, null], [409, null], [409, null]], "Supported Acquisition Functions": [[415, null]], "Supported Recommenders": [[415, null]], "Surrogate": [[234, null]], "SurrogateProtocol": [[235, null]], "Surrogates": [[425, null]], "Synchronizing Pull Requests": [[411, "synchronizing-pull-requests"]], "Target": [[271, null]], "TargetMode": [[276, null]], "TargetTransformation": [[277, null]], "Targets": [[426, null]], "TaskParameter": [[123, null], [420, "taskparameter"]], "Technology": [[427, null]], "Telemetry": [[418, "telemetry"]], "Telemetry Scope": [[418, null]], "Terminology": [[390, "terminology"], [423, null], [427, null]], "Terminology Continued": [[427, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[424, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[393, "the-black-box-model"]], "The Lookup Mechanism": [[424, "the-lookup-mechanism"]], "The Optimization Loop": [[408, "the-optimization-loop"]], "The Role of the TaskParameter": [[427, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[402, "the-configuration-dictionary-as-a-string"]], "The type field": [[423, "the-type-field"]], "Theoretical Span": [[390, null]], "ThresholdCondition": [[38, null], [417, "thresholdcondition"]], "Transfer Learning": [[404, null], [406, null], [427, null]], "Triggering the Hook": [[385, "triggering-the-hook"]], "Triggering the Hooks": [[383, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[165, null]], "Uninstalling Internet Packages": [[418, null]], "Unlocking Data Treasures Through Transfer Learning": [[427, "unlocking-data-treasures-through-transfer-learning"]], "UpperConfidenceBound": [[8, null]], "User Guide": [[428, null]], "Using Custom Models": [[425, "using-custom-models"]], "Using Explicit Bounds": [[422, "using-explicit-bounds"]], "Using None": [[424, "using-none"]], "Using a Callable": [[424, "using-a-callable"]], "Using a Dataframe": [[424, "using-a-dataframe"]], "Using abbreviations": [[423, "using-abbreviations"]], "Using configuration instead": [[387, "using-configuration-instead"], [388, "using-configuration-instead"]], "Using default values": [[423, "using-default-values"]], "Utilities": [[429, null]], "Validation of model parameters": [[388, "validation-of-model-parameters"]], "Verification of Constraints": [[390, "verification-of-constraints"], [391, "verification-of-constraints"]], "Verification of Span": [[390, "verification-of-span"]], "Verification of the two dictionaries": [[403, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[376, "verify-the-constraints"]], "Windows \u2013 Torch Problems": [[409, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[375, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [376, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [399, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[411, "writing-docstrings"]], "Writing classes": [[411, "writing-classes"]], "[0.1.0] - 2022-10-01": [[410, "id127"]], "[0.10.0] - 2024-08-02": [[410, "id19"]], "[0.11.0] - 2024-09-09": [[410, "id12"]], "[0.11.1] - 2024-10-01": [[410, "id7"]], "[0.11.2] - 2024-10-11": [[410, "id3"]], "[0.11.3] - 2024-11-06": [[410, "id1"]], "[0.2.0] - 2022-11-10": [[410, "id124"]], "[0.2.1] - 2022-12-01": [[410, "id122"]], "[0.2.2] - 2023-01-13": [[410, "id118"]], "[0.2.3] - 2023-03-14": [[410, "id114"]], "[0.2.4] - 2023-03-24": [[410, "id110"]], "[0.3.0] - 2023-06-27": [[410, "id106"]], "[0.3.1] - 2023-07-17": [[410, "id102"]], "[0.3.2] - 2023-07-24": [[410, "id99"]], "[0.4.0] - 2023-08-16": [[410, "id95"]], "[0.4.1] - 2023-08-23": [[410, "id91"]], "[0.4.2] - 2023-08-29": [[410, "id87"]], "[0.5.0] - 2023-09-15": [[410, "id84"]], "[0.5.1] - 2023-10-19": [[410, "id80"]], "[0.6.0] - 2023-11-17": [[410, "id75"]], "[0.6.1] - 2023-11-27": [[410, "id71"]], "[0.7.0] - 2023-12-04": [[410, "id67"]], "[0.7.1] - 2023-12-07": [[410, "id63"]], "[0.7.2] - 2024-01-24": [[410, "id57"]], "[0.7.3] - 2024-02-09": [[410, "id51"]], "[0.7.4] - 2024-02-28": [[410, "id46"]], "[0.8.0] - 2024-02-29": [[410, "id43"]], "[0.8.1] - 2024-03-11": [[410, "id39"]], "[0.8.2] - 2024-03-27": [[410, "id35"]], "[0.9.0] - 2024-05-21": [[410, "id29"]], "[0.9.1] - 2024-06-04": [[410, "id26"]], "[Unreleased]": [[410, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[19, null]], "baybe.acquisition.partial": [[21, null]], "baybe.acquisition.utils": [[23, null]], "baybe.acquisition.utils.convert_acqf": [[24, null]], "baybe.acquisition.utils.str_to_acqf": [[25, null]], "baybe.campaign": [[26, null]], "baybe.constraints": [[28, null]], "baybe.constraints.base": [[29, null]], "baybe.constraints.conditions": [[35, null]], "baybe.constraints.continuous": [[39, null]], "baybe.constraints.deprecation": [[42, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[43, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[44, null]], "baybe.constraints.deprecation.structure_constraints": [[45, null]], "baybe.constraints.discrete": [[46, null]], "baybe.constraints.validation": [[56, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[57, null]], "baybe.constraints.validation.validate_constraints": [[58, null]], "baybe.exceptions": [[59, null]], "baybe.exceptions.DeprecationError": [[60, null]], "baybe.exceptions.EmptySearchSpaceError": [[61, null]], "baybe.exceptions.IncompatibilityError": [[62, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[63, null]], "baybe.exceptions.IncompatibleExplainerError": [[64, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[65, null]], "baybe.exceptions.InvalidSurrogateModelError": [[66, null]], "baybe.exceptions.InvalidTargetValueError": [[67, null]], "baybe.exceptions.ModelNotTrainedError": [[68, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[69, null]], "baybe.exceptions.NoRecommendersLeftError": [[70, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[71, null]], "baybe.exceptions.NothingToSimulateError": [[72, null]], "baybe.exceptions.NumericalUnderflowError": [[73, null]], "baybe.exceptions.OptionalImportError": [[74, null]], "baybe.exceptions.UnidentifiedSubclassError": [[75, null]], "baybe.exceptions.UnmatchedAttributeError": [[76, null]], "baybe.exceptions.UnusedObjectWarning": [[77, null]], "baybe.insights": [[78, null]], "baybe.insights.shap": [[79, null]], "baybe.insights.shap.is_shap_explainer": [[81, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[82, null]], "baybe.kernels": [[83, null]], "baybe.kernels.base": [[84, null]], "baybe.kernels.basic": [[88, null]], "baybe.kernels.composite": [[97, null]], "baybe.objective": [[101, null]], "baybe.objective.Objective": [[102, null]], "baybe.objectives": [[103, null]], "baybe.objectives.base": [[104, null]], "baybe.objectives.base.to_objective": [[106, null]], "baybe.objectives.deprecation": [[107, null]], "baybe.objectives.deprecation.structure_objective": [[108, null]], "baybe.objectives.desirability": [[109, null]], "baybe.objectives.desirability.scalarize": [[111, null]], "baybe.objectives.enum": [[112, null]], "baybe.objectives.single": [[114, null]], "baybe.parameters": [[116, null]], "baybe.parameters.base": [[117, null]], "baybe.parameters.categorical": [[121, null]], "baybe.parameters.custom": [[124, null]], "baybe.parameters.enum": [[126, null]], "baybe.parameters.numerical": [[131, null]], "baybe.parameters.substance": [[134, null]], "baybe.parameters.substance.Smiles": [[135, null]], "baybe.parameters.utils": [[137, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[138, null]], "baybe.parameters.utils.sort_parameters": [[139, null]], "baybe.parameters.validation": [[140, null]], "baybe.parameters.validation.validate_decorrelation": [[141, null]], "baybe.parameters.validation.validate_is_finite": [[142, null]], "baybe.parameters.validation.validate_unique_values": [[143, null]], "baybe.priors": [[144, null]], "baybe.priors.base": [[145, null]], "baybe.priors.basic": [[147, null]], "baybe.recommenders": [[155, null]], "baybe.recommenders.base": [[156, null]], "baybe.recommenders.meta": [[158, null]], "baybe.recommenders.meta.base": [[159, null]], "baybe.recommenders.meta.sequential": [[161, null]], "baybe.recommenders.naive": [[166, null]], "baybe.recommenders.pure": [[168, null]], "baybe.recommenders.pure.base": [[169, null]], "baybe.recommenders.pure.bayesian": [[171, null]], "baybe.recommenders.pure.bayesian.base": [[172, null]], "baybe.recommenders.pure.bayesian.botorch": [[174, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[176, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[177, null]], "baybe.recommenders.pure.nonpredictive": [[178, null]], "baybe.recommenders.pure.nonpredictive.base": [[179, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[181, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[186, null]], "baybe.searchspace": [[189, null]], "baybe.searchspace.continuous": [[190, null]], "baybe.searchspace.core": [[192, null]], "baybe.searchspace.core.to_searchspace": [[195, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[196, null]], "baybe.searchspace.discrete": [[197, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[200, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[201, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[202, null]], "baybe.searchspace.validation": [[203, null]], "baybe.searchspace.validation.get_transform_parameters": [[204, null]], "baybe.searchspace.validation.validate_parameter_names": [[205, null]], "baybe.searchspace.validation.validate_parameters": [[206, null]], "baybe.serialization": [[207, null]], "baybe.serialization.core": [[208, null]], "baybe.serialization.core.block_deserialization_hook": [[209, null]], "baybe.serialization.core.block_serialization_hook": [[210, null]], "baybe.serialization.core.converter": [[211, null]], "baybe.serialization.core.get_base_structure_hook": [[212, null]], "baybe.serialization.core.select_constructor_hook": [[213, null]], "baybe.serialization.core.unstructure_base": [[214, null]], "baybe.serialization.mixin": [[215, null]], "baybe.serialization.utils": [[217, null]], "baybe.serialization.utils.deserialize_dataframe": [[218, null]], "baybe.serialization.utils.serialize_dataframe": [[219, null]], "baybe.simulation": [[220, null]], "baybe.simulation.core": [[221, null]], "baybe.simulation.core.simulate_experiment": [[222, null]], "baybe.simulation.lookup": [[223, null]], "baybe.simulation.lookup.look_up_targets": [[224, null]], "baybe.simulation.scenarios": [[225, null]], "baybe.simulation.scenarios.simulate_scenarios": [[226, null]], "baybe.simulation.transfer_learning": [[227, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[228, null]], "baybe.surrogates": [[229, null]], "baybe.surrogates.bandit": [[230, null]], "baybe.surrogates.base": [[232, null]], "baybe.surrogates.custom": [[236, null]], "baybe.surrogates.custom.register_custom_architecture": [[238, null]], "baybe.surrogates.gaussian_process": [[239, null]], "baybe.surrogates.gaussian_process.core": [[240, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[242, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[245, null]], "baybe.surrogates.gaussian_process.presets": [[246, null]], "baybe.surrogates.gaussian_process.presets.core": [[247, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[249, null]], "baybe.surrogates.gaussian_process.presets.default": [[250, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[252, null]], "baybe.surrogates.linear": [[254, null]], "baybe.surrogates.naive": [[256, null]], "baybe.surrogates.ngboost": [[258, null]], "baybe.surrogates.random_forest": [[260, null]], "baybe.surrogates.utils": [[262, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[263, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[264, null]], "baybe.surrogates.utils.catch_constant_targets": [[265, null]], "baybe.surrogates.validation": [[266, null]], "baybe.surrogates.validation.get_model_params_validator": [[267, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[268, null]], "baybe.targets": [[269, null]], "baybe.targets.base": [[270, null]], "baybe.targets.binary": [[272, null]], "baybe.targets.binary.ChoiceValue": [[274, null]], "baybe.targets.enum": [[275, null]], "baybe.targets.numerical": [[278, null]], "baybe.targets.transforms": [[280, null]], "baybe.targets.transforms.bell_transform": [[281, null]], "baybe.targets.transforms.linear_transform": [[282, null]], "baybe.targets.transforms.triangular_transform": [[283, null]], "baybe.telemetry": [[284, null]], "baybe.telemetry.get_user_details": [[285, null]], "baybe.telemetry.is_enabled": [[286, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[287, null]], "baybe.telemetry.telemetry_record_value": [[288, null]], "baybe.utils": [[289, null]], "baybe.utils.augmentation": [[290, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[291, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[292, null]], "baybe.utils.basic": [[293, null]], "baybe.utils.basic.find_subclass": [[296, null]], "baybe.utils.basic.get_baseclasses": [[297, null]], "baybe.utils.basic.get_subclasses": [[298, null]], "baybe.utils.basic.group_duplicate_values": [[299, null]], "baybe.utils.basic.hilberts_factory": [[300, null]], "baybe.utils.basic.is_all_instance": [[301, null]], "baybe.utils.basic.match_attributes": [[302, null]], "baybe.utils.basic.refers_to": [[303, null]], "baybe.utils.basic.register_hooks": [[304, null]], "baybe.utils.basic.to_tuple": [[305, null]], "baybe.utils.boolean": [[306, null]], "baybe.utils.boolean.check_if_in": [[307, null]], "baybe.utils.boolean.is_abstract": [[308, null]], "baybe.utils.boolean.strtobool": [[309, null]], "baybe.utils.chemistry": [[310, null]], "baybe.utils.chemistry.get_canonical_smiles": [[311, null]], "baybe.utils.chemistry.get_fingerprint_class": [[312, null]], "baybe.utils.chemistry.name_to_smiles": [[313, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[314, null]], "baybe.utils.conversion": [[315, null]], "baybe.utils.conversion.fraction_to_float": [[316, null]], "baybe.utils.conversion.nonstring_to_tuple": [[317, null]], "baybe.utils.dataframe": [[318, null]], "baybe.utils.dataframe.add_fake_measurements": [[319, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[320, null]], "baybe.utils.dataframe.add_parameter_noise": [[321, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[322, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[323, null]], "baybe.utils.dataframe.df_drop_string_columns": [[324, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[325, null]], "baybe.utils.dataframe.filter_df": [[326, null]], "baybe.utils.dataframe.fuzzy_row_match": [[327, null]], "baybe.utils.dataframe.get_transform_objects": [[328, null]], "baybe.utils.dataframe.pretty_print_df": [[329, null]], "baybe.utils.dataframe.to_tensor": [[330, null]], "baybe.utils.interval": [[331, null]], "baybe.utils.interval.InfiniteIntervalError": [[332, null]], "baybe.utils.interval.convert_bounds": [[334, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[335, null]], "baybe.utils.memory": [[336, null]], "baybe.utils.memory.bytes_to_human_readable": [[337, null]], "baybe.utils.numerical": [[338, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[339, null]], "baybe.utils.numerical.DTypeFloatONNX": [[340, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[341, null]], "baybe.utils.numerical.closer_element": [[342, null]], "baybe.utils.numerical.closest_element": [[343, null]], "baybe.utils.numerical.geom_mean": [[344, null]], "baybe.utils.plotting": [[345, null]], "baybe.utils.plotting.create_example_plots": [[346, null]], "baybe.utils.plotting.indent": [[347, null]], "baybe.utils.plotting.to_string": [[348, null]], "baybe.utils.random": [[349, null]], "baybe.utils.random.set_random_seed": [[350, null]], "baybe.utils.random.temporary_seed": [[351, null]], "baybe.utils.sampling_algorithms": [[352, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[354, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[355, null]], "baybe.utils.scaling": [[356, null]], "baybe.utils.torch": [[358, null]], "baybe.utils.torch.DTypeFloatTorch": [[359, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[360, null]], "baybe.utils.validation": [[361, null]], "baybe.utils.validation.finite_float": [[362, null]], "baybe.utils.validation.non_inf_float": [[363, null]], "baybe.utils.validation.non_nan_float": [[364, null]], "baybe.utils.validation.validate_not_nan": [[365, null]], "classproperty": [[295, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[409, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNoisyExpectedImprovement": [[12, null]], "qNegIntegratedPosteriorVariance": [[13, null]], "qNoisyExpectedImprovement": [[14, null]], "qProbabilityOfImprovement": [[15, null]], "qSimpleRegret": [[16, null]], "qThompsonSampling": [[17, null]], "qUpperConfidenceBound": [[18, null]], "\u201cPre-training\u201d stage": [[387, "pre-training-stage"]], "\u26a1 Quick Start": [[408, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[408, "maintainers"]], "\ud83d\udcbb Installation": [[408, "installation"]], "\ud83d\udcc4 License": [[408, "license"]], "\ud83d\udce1 Telemetry": [[408, "telemetry"]], "\ud83d\udd0b Batteries Included": [[408, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[408, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objective", "_autosummary/baybe.objective.Objective", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.deprecation", "_autosummary/baybe.objectives.deprecation.structure_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.plotting", "_autosummary/baybe.utils.plotting.create_example_plots", "_autosummary/baybe.utils.plotting.indent", "_autosummary/baybe.utils.plotting.to_string", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objective.rst", "_autosummary/baybe.objective.Objective.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.deprecation.rst", "_autosummary/baybe.objectives.deprecation.structure_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.plotting.rst", "_autosummary/baybe.utils.plotting.create_example_plots.rst", "_autosummary/baybe.utils.plotting.indent.rst", "_autosummary/baybe.utils.plotting.to_string.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[60, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[61, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[62, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[64, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[65, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[66, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[67, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[68, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[69, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[70, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[71, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[72, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[73, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[74, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[75, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[76, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[77, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[80, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[85, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[86, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[87, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[89, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[90, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[91, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[93, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[94, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[95, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[96, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[98, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[99, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[100, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[105, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[110, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[115, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[118, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[119, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[120, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[122, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[123, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[136, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[146, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[148, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[149, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[150, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[151, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[152, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[153, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[154, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[157, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[162, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[163, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[164, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[165, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[167, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[170, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[173, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[175, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[180, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[187, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[188, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[193, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[198, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[231, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[233, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[234, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[235, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[237, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[241, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[243, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[244, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[251, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[253, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[255, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[257, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[259, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[261, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[271, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[273, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[279, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[295, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[294, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[332, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[333, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[357, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[60, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[61, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[62, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[64, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[65, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[66, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[67, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[68, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[69, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[70, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[71, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[72, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[73, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[74, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[75, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[76, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[77, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[127, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[128, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[130, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[332, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[154, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[20, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[173, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[175, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[173, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function_cls", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[175, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function_cls", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[20, "baybe.acquisition.base.AcquisitionFunction", false]], "active_values (baybe.parameters.categorical.taskparameter attribute)": [[123, "baybe.parameters.categorical.TaskParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[319, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[320, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[321, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[98, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[167, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender attribute)": [[170, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[173, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[175, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[180, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[167, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender attribute)": [[170, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[173, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[175, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[180, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[167, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender attribute)": [[170, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[173, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[175, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[180, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[148, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[322, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[154, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[80, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[100, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[98, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[99, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[162, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[85, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[263, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[264, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[248, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[19, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[21, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[23, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[26, "module-baybe.campaign", false]], "baybe.constraints": [[28, "module-baybe.constraints", false]], "baybe.constraints.base": [[29, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[35, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[39, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[42, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[46, "module-baybe.constraints.discrete", false]], "baybe.constraints.validation": [[56, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[59, "module-baybe.exceptions", false]], "baybe.insights": [[78, "module-baybe.insights", false]], "baybe.insights.shap": [[79, "module-baybe.insights.shap", false]], "baybe.kernels": [[83, "module-baybe.kernels", false]], "baybe.kernels.base": [[84, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[88, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[97, "module-baybe.kernels.composite", false]], "baybe.objective": [[101, "module-baybe.objective", false]], "baybe.objectives": [[103, "module-baybe.objectives", false]], "baybe.objectives.base": [[104, "module-baybe.objectives.base", false]], "baybe.objectives.deprecation": [[107, "module-baybe.objectives.deprecation", false]], "baybe.objectives.desirability": [[109, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[112, "module-baybe.objectives.enum", false]], "baybe.objectives.single": [[114, "module-baybe.objectives.single", false]], "baybe.parameters": [[116, "module-baybe.parameters", false]], "baybe.parameters.base": [[117, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[121, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[124, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[126, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[131, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[134, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[137, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[140, "module-baybe.parameters.validation", false]], "baybe.priors": [[144, "module-baybe.priors", false]], "baybe.priors.base": [[145, "module-baybe.priors.base", false]], "baybe.priors.basic": [[147, "module-baybe.priors.basic", false]], "baybe.recommenders": [[155, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[156, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[158, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[159, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[161, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[166, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[168, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[169, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[171, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[172, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[174, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[176, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[178, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[179, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[181, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[186, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[189, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[190, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[192, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[197, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[203, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[207, "module-baybe.serialization", false]], "baybe.serialization.core": [[208, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[215, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[217, "module-baybe.serialization.utils", false]], "baybe.simulation": [[220, "module-baybe.simulation", false]], "baybe.simulation.core": [[221, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[223, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[225, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[227, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[229, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[230, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[232, "module-baybe.surrogates.base", false]], "baybe.surrogates.custom": [[236, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[239, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[240, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[242, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[246, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[247, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[250, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[252, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[254, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[256, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[258, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[260, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[262, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[266, "module-baybe.surrogates.validation", false]], "baybe.targets": [[269, "module-baybe.targets", false]], "baybe.targets.base": [[270, "module-baybe.targets.base", false]], "baybe.targets.binary": [[272, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[275, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[278, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[280, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[284, "module-baybe.telemetry", false]], "baybe.utils": [[289, "module-baybe.utils", false]], "baybe.utils.augmentation": [[290, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[293, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[306, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[310, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[315, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[318, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[331, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[336, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[338, "module-baybe.utils.numerical", false]], "baybe.utils.plotting": [[345, "module-baybe.utils.plotting", false]], "baybe.utils.random": [[349, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[352, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[356, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[358, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[361, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[255, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[173, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[277, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[281, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[148, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[231, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[148, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[273, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[209, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[210, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[175, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[279, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[337, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[27, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[30, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[265, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[127, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[122, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[333, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[307, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[274, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[295, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[342, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[343, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[357, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[119, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[122, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[123, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[136, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[193, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[198, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[118, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[119, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[120, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[122, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[123, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[136, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[193, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[198, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[198, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[167, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[170, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[173, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[175, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[180, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[86, "baybe.kernels.base.CompositeKernel", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[149, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[36, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[31, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[193, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[193, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[167, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[333, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[193, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[194, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[32, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[43, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[44, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[118, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[24, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[334, "baybe.utils.interval.convert_bounds", false]], "converter (in module baybe.serialization.core)": [[211, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[333, "baybe.utils.interval.Interval.create", false]], "create_example_plots() (in module baybe.utils.plotting)": [[346, "baybe.utils.plotting.create_example_plots", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[128, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[125, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[128, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[237, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[136, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[136, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[237, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[251, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[60, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[218, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[110, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[291, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[292, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[323, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[324, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[325, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[167, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[193, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[194, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[119, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[353, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[339, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[340, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[359, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[294, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[253, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[194, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[61, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[119, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[122, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[123, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[136, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[193, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[198, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[198, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[198, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[80, "baybe.insights.shap.SHAPInsight.explain", false]], "explainer (baybe.insights.shap.shapinsight attribute)": [[80, "baybe.insights.shap.SHAPInsight.explainer", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[273, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[354, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[326, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[296, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[362, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[231, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[233, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[234, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[235, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[237, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[241, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[255, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[257, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[259, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[261, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[357, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[353, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[187, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[316, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[80, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[193, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[20, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[30, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[31, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[32, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[34, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[36, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[38, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[85, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[86, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[87, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[89, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[90, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[91, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[93, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[94, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[95, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[96, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[98, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[99, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[100, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[105, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[110, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[115, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[118, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[119, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[120, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[122, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[123, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[136, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[146, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[148, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[149, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[150, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[151, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[152, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[153, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[154, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[162, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[163, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[164, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[165, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[193, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[216, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[231, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[233, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[234, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[237, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[241, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[244, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[255, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[257, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[259, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[261, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[271, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[273, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[279, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[333, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[20, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[30, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[31, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[32, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[34, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[36, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[38, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[85, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[86, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[87, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[89, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[90, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[91, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[93, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[94, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[95, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[96, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[98, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[99, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[100, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[105, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[110, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[115, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[118, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[119, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[120, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[122, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[123, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[136, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[146, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[148, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[149, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[150, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[151, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[152, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[153, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[154, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[162, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[163, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[164, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[165, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[193, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[216, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[231, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[233, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[234, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[237, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[241, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[244, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[255, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[257, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[259, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[261, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[271, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[273, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[279, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[333, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[193, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[241, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[193, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[80, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[80, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[327, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[149, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[248, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[241, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[113, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[344, "baybe.utils.numerical.geom_mean", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[212, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[297, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[311, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[193, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[162, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[163, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[164, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[165, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[312, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[267, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[162, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[163, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[164, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[165, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[162, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[163, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[164, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[165, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[193, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[138, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[298, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[173, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[175, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[328, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[204, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[285, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[299, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[150, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[151, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[300, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[194, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[175, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "incompatibilityerror": [[62, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleexplainererror": [[64, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[65, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "indent() (in module baybe.utils.plotting)": [[347, "baybe.utils.plotting.indent", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[233, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infiniteintervalerror": [[332, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[165, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[127, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[333, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[66, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[67, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[308, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[301, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[333, "baybe.utils.interval.Interval.is_bounded", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[30, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[31, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[32, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[34, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[118, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[119, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[120, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[122, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[123, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[136, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[333, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[30, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[31, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[32, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[34, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[118, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[119, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[120, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[122, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[123, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[136, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[286, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[333, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[333, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[118, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[119, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[120, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[122, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[123, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[136, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[333, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[118, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[119, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[120, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[122, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[123, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[136, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[333, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[81, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[160, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[162, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[163, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[164, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[165, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[244, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[87, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[241, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[243, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[136, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[136, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[90, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[91, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[94, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[95, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[96, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[90, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[91, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[94, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[95, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[96, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[277, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[282, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[89, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[152, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[153, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[152, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[224, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[333, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[82, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[249, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[357, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[276, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[302, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[90, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[276, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[113, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[257, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[198, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[160, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[276, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[163, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[279, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[255, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[259, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[261, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[68, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [19, "module-baybe.acquisition.base", false], [21, "module-baybe.acquisition.partial", false], [23, "module-baybe.acquisition.utils", false], [26, "module-baybe.campaign", false], [28, "module-baybe.constraints", false], [29, "module-baybe.constraints.base", false], [35, "module-baybe.constraints.conditions", false], [39, "module-baybe.constraints.continuous", false], [42, "module-baybe.constraints.deprecation", false], [46, "module-baybe.constraints.discrete", false], [56, "module-baybe.constraints.validation", false], [59, "module-baybe.exceptions", false], [78, "module-baybe.insights", false], [79, "module-baybe.insights.shap", false], [83, "module-baybe.kernels", false], [84, "module-baybe.kernels.base", false], [88, "module-baybe.kernels.basic", false], [97, "module-baybe.kernels.composite", false], [101, "module-baybe.objective", false], [103, "module-baybe.objectives", false], [104, "module-baybe.objectives.base", false], [107, "module-baybe.objectives.deprecation", false], [109, "module-baybe.objectives.desirability", false], [112, "module-baybe.objectives.enum", false], [114, "module-baybe.objectives.single", false], [116, "module-baybe.parameters", false], [117, "module-baybe.parameters.base", false], [121, "module-baybe.parameters.categorical", false], [124, "module-baybe.parameters.custom", false], [126, "module-baybe.parameters.enum", false], [131, "module-baybe.parameters.numerical", false], [134, "module-baybe.parameters.substance", false], [137, "module-baybe.parameters.utils", false], [140, "module-baybe.parameters.validation", false], [144, "module-baybe.priors", false], [145, "module-baybe.priors.base", false], [147, "module-baybe.priors.basic", false], [155, "module-baybe.recommenders", false], [156, "module-baybe.recommenders.base", false], [158, "module-baybe.recommenders.meta", false], [159, "module-baybe.recommenders.meta.base", false], [161, "module-baybe.recommenders.meta.sequential", false], [166, "module-baybe.recommenders.naive", false], [168, "module-baybe.recommenders.pure", false], [169, "module-baybe.recommenders.pure.base", false], [171, "module-baybe.recommenders.pure.bayesian", false], [172, "module-baybe.recommenders.pure.bayesian.base", false], [174, "module-baybe.recommenders.pure.bayesian.botorch", false], [176, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [178, "module-baybe.recommenders.pure.nonpredictive", false], [179, "module-baybe.recommenders.pure.nonpredictive.base", false], [181, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [186, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [189, "module-baybe.searchspace", false], [190, "module-baybe.searchspace.continuous", false], [192, "module-baybe.searchspace.core", false], [197, "module-baybe.searchspace.discrete", false], [203, "module-baybe.searchspace.validation", false], [207, "module-baybe.serialization", false], [208, "module-baybe.serialization.core", false], [215, "module-baybe.serialization.mixin", false], [217, "module-baybe.serialization.utils", false], [220, "module-baybe.simulation", false], [221, "module-baybe.simulation.core", false], [223, "module-baybe.simulation.lookup", false], [225, "module-baybe.simulation.scenarios", false], [227, "module-baybe.simulation.transfer_learning", false], [229, "module-baybe.surrogates", false], [230, "module-baybe.surrogates.bandit", false], [232, "module-baybe.surrogates.base", false], [236, "module-baybe.surrogates.custom", false], [239, "module-baybe.surrogates.gaussian_process", false], [240, "module-baybe.surrogates.gaussian_process.core", false], [242, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [246, "module-baybe.surrogates.gaussian_process.presets", false], [247, "module-baybe.surrogates.gaussian_process.presets.core", false], [250, "module-baybe.surrogates.gaussian_process.presets.default", false], [252, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [254, "module-baybe.surrogates.linear", false], [256, "module-baybe.surrogates.naive", false], [258, "module-baybe.surrogates.ngboost", false], [260, "module-baybe.surrogates.random_forest", false], [262, "module-baybe.surrogates.utils", false], [266, "module-baybe.surrogates.validation", false], [269, "module-baybe.targets", false], [270, "module-baybe.targets.base", false], [272, "module-baybe.targets.binary", false], [275, "module-baybe.targets.enum", false], [278, "module-baybe.targets.numerical", false], [280, "module-baybe.targets.transforms", false], [284, "module-baybe.telemetry", false], [289, "module-baybe.utils", false], [290, "module-baybe.utils.augmentation", false], [293, "module-baybe.utils.basic", false], [306, "module-baybe.utils.boolean", false], [310, "module-baybe.utils.chemistry", false], [315, "module-baybe.utils.conversion", false], [318, "module-baybe.utils.dataframe", false], [331, "module-baybe.utils.interval", false], [336, "module-baybe.utils.memory", false], [338, "module-baybe.utils.numerical", false], [345, "module-baybe.utils.plotting", false], [349, "module-baybe.utils.random", false], [352, "module-baybe.utils.sampling_algorithms", false], [356, "module-baybe.utils.scaling", false], [358, "module-baybe.utils.torch", false], [361, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.n_fits_done", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[175, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[175, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[193, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[167, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[118, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[119, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[120, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[122, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[123, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[136, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[271, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[273, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[279, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[313, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[259, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[69, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "non_inf_float() (in module baybe.utils.validation)": [[363, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[364, "baybe.utils.validation.non_nan_float", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[180, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[317, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[70, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[153, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[71, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[72, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[90, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[95, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[279, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[73, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[105, "baybe.objectives.base.Objective", false]], "objective() (in module baybe.objective)": [[102, "baybe.objective.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[93, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[93, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[127, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[237, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[237, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[74, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[100, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[100, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[120, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[200, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[201, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[193, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameterencoding (class in baybe.parameters.enum)": [[129, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[193, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[91, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[91, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[91, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[244, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[80, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[93, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[231, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[233, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[234, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[237, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[241, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[255, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[257, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[259, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[261, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[231, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[231, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[93, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[329, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[231, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[146, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[99, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[170, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[353, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[261, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[188, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[149, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[94, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[157, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[162, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[163, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[164, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[165, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[167, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[170, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[173, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[175, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[180, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[187, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[188, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[165, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[157, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[163, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[164, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "refers_to() (in module baybe.utils.basic)": [[303, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[238, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[304, "baybe.utils.basic.register_hooks", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[165, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "rffkernel (class in baybe.kernels.basic)": [[95, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[96, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[355, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[175, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[111, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[110, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[113, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[150, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[151, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[152, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[153, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[100, "baybe.kernels.composite.ScaleKernel", false]], "searchspace (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[193, "baybe.searchspace.core.SearchSpace", false]], "searchspacetype (class in baybe.searchspace.core)": [[194, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[213, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[162, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[163, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[164, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[165, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[37, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[175, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[177, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[163, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[219, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[216, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[350, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shapinsight (class in baybe.insights.shap)": [[80, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[154, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[222, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[226, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[228, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[115, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[185, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[135, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[314, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[154, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[139, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[25, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[164, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[309, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[45, "baybe.constraints.deprecation.structure_constraints", false]], "structure_objective() (in module baybe.objectives.deprecation)": [[108, "baybe.objectives.deprecation.structure_objective", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[37, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[191, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[130, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[136, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[273, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[118, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[119, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[120, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[122, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[123, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[136, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[271, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[273, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[279, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[231, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[233, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[234, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[237, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[241, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[255, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[257, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[259, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[261, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[234, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[173, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[175, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[235, "baybe.surrogates.base.SurrogateProtocol", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[165, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[271, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[276, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[105, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[110, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[115, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[277, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[193, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[123, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[287, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[288, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[351, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[38, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[231, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[233, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[234, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[235, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[237, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[241, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[255, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[257, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[259, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[261, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[85, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[86, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[87, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[89, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[90, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[91, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[93, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[94, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[95, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[96, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[98, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[99, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[100, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[105, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[110, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[115, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[118, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[119, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[120, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[122, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[123, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[136, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[146, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[148, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[149, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[150, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[151, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[152, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[153, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[154, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[162, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[163, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[164, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[165, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[193, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[216, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[231, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[233, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[234, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[237, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[241, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[244, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[255, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[257, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[259, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[261, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[271, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[273, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[279, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[333, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[85, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[86, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[87, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[89, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[90, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[91, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[93, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[94, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[95, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[96, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[98, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[99, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[100, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[85, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[86, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[87, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[89, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[90, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[91, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[93, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[94, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[95, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[96, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[98, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[99, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[100, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[146, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[148, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[149, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[150, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[151, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[152, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[153, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[154, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[85, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[86, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[87, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[89, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[90, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[91, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[93, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[94, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[95, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[96, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[98, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[99, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[100, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[105, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[110, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[115, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[118, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[119, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[120, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[122, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[123, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[136, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[146, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[148, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[149, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[150, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[151, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[152, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[153, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[154, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[162, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[163, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[164, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[165, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[193, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[216, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[231, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[233, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[234, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[237, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[241, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[244, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[255, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[257, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[259, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[261, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[271, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[273, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[279, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[333, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[245, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[333, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[271, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[273, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[279, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[106, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[118, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[119, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[120, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[122, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[123, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[136, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[195, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.plotting)": [[348, "baybe.utils.plotting.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[118, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[119, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[122, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[123, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[136, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[333, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[330, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[333, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[305, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[105, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[110, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[115, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[119, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[122, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[123, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[136, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[191, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[193, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[199, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[271, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[273, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[279, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[357, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[279, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[277, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[283, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[165, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[193, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[75, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[76, "baybe.exceptions.UnmatchedAttributeError", false]], "unstructure_base() (in module baybe.serialization.core)": [[214, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[77, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[333, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[335, "baybe.utils.interval.use_fallback_constructor_hook", false]], "uses_shap_explainer (baybe.insights.shap.shapinsight property)": [[80, "baybe.insights.shap.SHAPInsight.uses_shap_explainer", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[57, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[237, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[58, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[268, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[141, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[142, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[365, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[205, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[206, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[196, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[202, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[143, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[119, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[122, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[123, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[136, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[89, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[89, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[341, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[360, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[110, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [26, 0, 0, "-", "campaign"], [28, 0, 0, "-", "constraints"], [59, 0, 0, "-", "exceptions"], [78, 0, 0, "-", "insights"], [83, 0, 0, "-", "kernels"], [101, 0, 0, "-", "objective"], [103, 0, 0, "-", "objectives"], [116, 0, 0, "-", "parameters"], [144, 0, 0, "-", "priors"], [155, 0, 0, "-", "recommenders"], [189, 0, 0, "-", "searchspace"], [207, 0, 0, "-", "serialization"], [220, 0, 0, "-", "simulation"], [229, 0, 0, "-", "surrogates"], [269, 0, 0, "-", "targets"], [284, 0, 0, "-", "telemetry"], [289, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [19, 0, 0, "-", "base"], [21, 0, 0, "-", "partial"], [23, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNoisyExpectedImprovement"], [13, 1, 1, "", "qNegIntegratedPosteriorVariance"], [14, 1, 1, "", "qNoisyExpectedImprovement"], [15, 1, 1, "", "qProbabilityOfImprovement"], [16, 1, 1, "", "qSimpleRegret"], [17, 1, 1, "", "qThompsonSampling"], [18, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 2, 1, "", "get_integration_points"], [13, 3, 1, "", "sampling_fraction"], [13, 3, 1, "", "sampling_method"], [13, 3, 1, "", "sampling_n_points"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[13, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "n_mc_samples"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 3, 1, "", "beta"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.base": [[20, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.partial": [[22, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "botorch_acqf"], [22, 3, 1, "", "pin_discrete"], [22, 3, 1, "", "pinned_part"], [22, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[22, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[24, 5, 1, "", "convert_acqf"], [25, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[27, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "add_measurements"], [27, 2, 1, "", "from_config"], [27, 2, 1, "", "from_dict"], [27, 2, 1, "", "from_json"], [27, 2, 1, "", "get_surrogate"], [27, 6, 1, "", "measurements"], [27, 3, 1, "", "n_batches_done"], [27, 3, 1, "", "n_fits_done"], [27, 3, 1, "", "objective"], [27, 6, 1, "", "parameters"], [27, 2, 1, "", "posterior"], [27, 2, 1, "", "recommend"], [27, 3, 1, "", "recommender"], [27, 3, 1, "", "searchspace"], [27, 6, 1, "", "targets"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_json"], [27, 2, 1, "", "toggle_discrete_candidates"], [27, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.add_measurements.params": [[27, 4, 1, "", "data"], [27, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[27, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[27, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[27, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_surrogate.params": [[27, 4, 1, "", "batch_size"], [27, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[27, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.recommend.params": [[27, 4, 1, "", "batch_size"], [27, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[27, 4, 1, "", "complement"], [27, 4, 1, "", "constraints"], [27, 4, 1, "", "dry_run"], [27, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.validate_config.params": [[27, 4, 1, "", "config_json"]], "baybe.constraints": [[29, 0, 0, "-", "base"], [35, 0, 0, "-", "conditions"], [39, 0, 0, "-", "continuous"], [42, 0, 0, "-", "deprecation"], [46, 0, 0, "-", "discrete"], [56, 0, 0, "-", "validation"]], "baybe.constraints.base": [[30, 1, 1, "", "CardinalityConstraint"], [31, 1, 1, "", "Constraint"], [32, 1, 1, "", "ContinuousConstraint"], [33, 1, 1, "", "ContinuousNonlinearConstraint"], [34, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[30, 2, 1, "", "__init__"], [30, 3, 1, "", "eval_during_augmentation"], [30, 3, 1, "", "eval_during_creation"], [30, 3, 1, "", "eval_during_modeling"], [30, 2, 1, "", "from_dict"], [30, 2, 1, "", "from_json"], [30, 6, 1, "", "is_continuous"], [30, 6, 1, "", "is_discrete"], [30, 3, 1, "", "max_cardinality"], [30, 3, 1, "", "min_cardinality"], [30, 3, 1, "", "numerical_only"], [30, 3, 1, "", "parameters"], [30, 2, 1, "", "summary"], [30, 2, 1, "", "to_dict"], [30, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[30, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[30, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "eval_during_augmentation"], [31, 3, 1, "", "eval_during_creation"], [31, 3, 1, "", "eval_during_modeling"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 6, 1, "", "is_continuous"], [31, 6, 1, "", "is_discrete"], [31, 3, 1, "", "numerical_only"], [31, 3, 1, "", "parameters"], [31, 2, 1, "", "summary"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[31, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[32, 2, 1, "", "__init__"], [32, 3, 1, "", "eval_during_augmentation"], [32, 3, 1, "", "eval_during_creation"], [32, 3, 1, "", "eval_during_modeling"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "from_json"], [32, 6, 1, "", "is_continuous"], [32, 6, 1, "", "is_discrete"], [32, 3, 1, "", "numerical_only"], [32, 3, 1, "", "parameters"], [32, 2, 1, "", "summary"], [32, 2, 1, "", "to_dict"], [32, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[32, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[32, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "eval_during_augmentation"], [33, 3, 1, "", "eval_during_creation"], [33, 3, 1, "", "eval_during_modeling"], [33, 2, 1, "", "from_dict"], [33, 2, 1, "", "from_json"], [33, 6, 1, "", "is_continuous"], [33, 6, 1, "", "is_discrete"], [33, 3, 1, "", "numerical_only"], [33, 3, 1, "", "parameters"], [33, 2, 1, "", "summary"], [33, 2, 1, "", "to_dict"], [33, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[33, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[33, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 2, 1, "", "get_invalid"], [34, 2, 1, "", "get_invalid_polars"], [34, 2, 1, "", "get_valid"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[34, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[34, 4, 1, "", "df"]], "baybe.constraints.conditions": [[36, 1, 1, "", "Condition"], [37, 1, 1, "", "SubSelectionCondition"], [38, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[36, 2, 1, "", "evaluate"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"], [36, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[36, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[36, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[36, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[36, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "evaluate"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "selection"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"], [37, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[37, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[37, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "evaluate"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 3, 1, "", "operator"], [38, 3, 1, "", "threshold"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"], [38, 2, 1, "", "to_polars"], [38, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[38, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[38, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[40, 1, 1, "", "ContinuousCardinalityConstraint"], [41, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[40, 2, 1, "", "__init__"], [40, 3, 1, "", "eval_during_augmentation"], [40, 3, 1, "", "eval_during_creation"], [40, 3, 1, "", "eval_during_modeling"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 6, 1, "", "is_continuous"], [40, 6, 1, "", "is_discrete"], [40, 3, 1, "", "max_cardinality"], [40, 3, 1, "", "min_cardinality"], [40, 3, 1, "", "numerical_only"], [40, 3, 1, "", "parameters"], [40, 2, 1, "", "sample_inactive_parameters"], [40, 2, 1, "", "summary"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[40, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[41, 2, 1, "", "__init__"], [41, 3, 1, "", "coefficients"], [41, 3, 1, "", "eval_during_augmentation"], [41, 3, 1, "", "eval_during_creation"], [41, 3, 1, "", "eval_during_modeling"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "is_continuous"], [41, 6, 1, "", "is_discrete"], [41, 6, 1, "", "is_eq"], [41, 3, 1, "", "numerical_only"], [41, 3, 1, "", "operator"], [41, 3, 1, "", "parameters"], [41, 3, 1, "", "rhs"], [41, 2, 1, "", "summary"], [41, 2, 1, "", "to_botorch"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[41, 4, 1, "", "idx_offset"], [41, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[43, 5, 1, "", "ContinuousLinearEqualityConstraint"], [44, 5, 1, "", "ContinuousLinearInequalityConstraint"], [45, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[47, 1, 1, "", "DiscreteCardinalityConstraint"], [48, 1, 1, "", "DiscreteCustomConstraint"], [49, 1, 1, "", "DiscreteDependenciesConstraint"], [50, 1, 1, "", "DiscreteExcludeConstraint"], [51, 1, 1, "", "DiscreteLinkedParametersConstraint"], [52, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [53, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [54, 1, 1, "", "DiscreteProductConstraint"], [55, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[47, 2, 1, "", "__init__"], [47, 3, 1, "", "eval_during_augmentation"], [47, 3, 1, "", "eval_during_creation"], [47, 3, 1, "", "eval_during_modeling"], [47, 2, 1, "", "from_dict"], [47, 2, 1, "", "from_json"], [47, 2, 1, "", "get_invalid"], [47, 2, 1, "", "get_invalid_polars"], [47, 2, 1, "", "get_valid"], [47, 6, 1, "", "is_continuous"], [47, 6, 1, "", "is_discrete"], [47, 3, 1, "", "max_cardinality"], [47, 3, 1, "", "min_cardinality"], [47, 3, 1, "", "numerical_only"], [47, 3, 1, "", "parameters"], [47, 2, 1, "", "summary"], [47, 2, 1, "", "to_dict"], [47, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[47, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[47, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[47, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[47, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[48, 2, 1, "", "__init__"], [48, 3, 1, "", "eval_during_augmentation"], [48, 3, 1, "", "eval_during_creation"], [48, 3, 1, "", "eval_during_modeling"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "from_json"], [48, 2, 1, "", "get_invalid"], [48, 2, 1, "", "get_invalid_polars"], [48, 2, 1, "", "get_valid"], [48, 6, 1, "", "is_continuous"], [48, 6, 1, "", "is_discrete"], [48, 3, 1, "", "numerical_only"], [48, 3, 1, "", "parameters"], [48, 2, 1, "", "summary"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_json"], [48, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[48, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[48, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[48, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[48, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[49, 2, 1, "", "__init__"], [49, 3, 1, "", "affected_parameters"], [49, 3, 1, "", "conditions"], [49, 3, 1, "", "eval_during_augmentation"], [49, 3, 1, "", "eval_during_creation"], [49, 3, 1, "", "eval_during_modeling"], [49, 2, 1, "", "from_dict"], [49, 2, 1, "", "from_json"], [49, 2, 1, "", "get_invalid"], [49, 2, 1, "", "get_invalid_polars"], [49, 2, 1, "", "get_valid"], [49, 6, 1, "", "is_continuous"], [49, 6, 1, "", "is_discrete"], [49, 3, 1, "", "numerical_only"], [49, 3, 1, "", "parameters"], [49, 3, 1, "", "permutation_invariant"], [49, 2, 1, "", "summary"], [49, 2, 1, "", "to_dict"], [49, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[49, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[49, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[49, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[49, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[50, 2, 1, "", "__init__"], [50, 3, 1, "", "combiner"], [50, 3, 1, "", "conditions"], [50, 3, 1, "", "eval_during_augmentation"], [50, 3, 1, "", "eval_during_creation"], [50, 3, 1, "", "eval_during_modeling"], [50, 2, 1, "", "from_dict"], [50, 2, 1, "", "from_json"], [50, 2, 1, "", "get_invalid"], [50, 2, 1, "", "get_invalid_polars"], [50, 2, 1, "", "get_valid"], [50, 6, 1, "", "is_continuous"], [50, 6, 1, "", "is_discrete"], [50, 3, 1, "", "numerical_only"], [50, 3, 1, "", "parameters"], [50, 2, 1, "", "summary"], [50, 2, 1, "", "to_dict"], [50, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[50, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[50, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[50, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[50, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "dependencies"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "condition"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "condition"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.validation": [[57, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [58, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[57, 4, 1, "", "constraints"]], "baybe.exceptions": [[60, 7, 1, "", "DeprecationError"], [61, 7, 1, "", "EmptySearchSpaceError"], [62, 7, 1, "", "IncompatibilityError"], [63, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [64, 7, 1, "", "IncompatibleExplainerError"], [65, 7, 1, "", "IncompatibleSearchSpaceError"], [66, 7, 1, "", "InvalidSurrogateModelError"], [67, 7, 1, "", "InvalidTargetValueError"], [68, 7, 1, "", "ModelNotTrainedError"], [69, 7, 1, "", "NoMCAcquisitionFunctionError"], [70, 7, 1, "", "NoRecommendersLeftError"], [71, 7, 1, "", "NotEnoughPointsLeftError"], [72, 7, 1, "", "NothingToSimulateError"], [73, 7, 1, "", "NumericalUnderflowError"], [74, 7, 1, "", "OptionalImportError"], [75, 7, 1, "", "UnidentifiedSubclassError"], [76, 7, 1, "", "UnmatchedAttributeError"], [77, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.insights": [[79, 0, 0, "-", "shap"]], "baybe.insights.shap": [[80, 1, 1, "", "SHAPInsight"], [81, 5, 1, "", "is_shap_explainer"], [82, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[80, 2, 1, "", "__init__"], [80, 3, 1, "", "background_data"], [80, 2, 1, "", "explain"], [80, 3, 1, "", "explainer"], [80, 2, 1, "", "from_campaign"], [80, 2, 1, "", "from_recommender"], [80, 2, 1, "", "from_surrogate"], [80, 2, 1, "", "plot"], [80, 6, 1, "", "uses_shap_explainer"]], "baybe.insights.shap.SHAPInsight.explain.params": [[80, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[80, 4, 1, "", "campaign"], [80, 4, 1, "", "explainer_cls"], [80, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[80, 4, 1, "", "explainer_cls"], [80, 4, 1, "", "measurements"], [80, 4, 1, "", "objective"], [80, 4, 1, "", "recommender"], [80, 4, 1, "", "searchspace"], [80, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[80, 4, 1, "", "**kwargs"], [80, 4, 1, "", "data"], [80, 4, 1, "", "explanation_index"], [80, 4, 1, "", "plot_type"], [80, 4, 1, "", "show"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[82, 4, 1, "", "data"], [82, 4, 1, "", "explainer_cls"], [82, 4, 1, "", "surrogate"], [82, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[84, 0, 0, "-", "base"], [88, 0, 0, "-", "basic"], [97, 0, 0, "-", "composite"]], "baybe.kernels.base": [[85, 1, 1, "", "BasicKernel"], [86, 1, 1, "", "CompositeKernel"], [87, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "from_dict"], [85, 2, 1, "", "from_json"], [85, 2, 1, "", "to_dict"], [85, 2, 1, "", "to_factory"], [85, 2, 1, "", "to_gpytorch"], [85, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[85, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[85, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "from_dict"], [86, 2, 1, "", "from_json"], [86, 2, 1, "", "to_dict"], [86, 2, 1, "", "to_factory"], [86, 2, 1, "", "to_gpytorch"], [86, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[86, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[86, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "from_dict"], [87, 2, 1, "", "from_json"], [87, 2, 1, "", "to_dict"], [87, 2, 1, "", "to_factory"], [87, 2, 1, "", "to_gpytorch"], [87, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[87, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[87, 4, 1, "", "string"]], "baybe.kernels.basic": [[89, 1, 1, "", "LinearKernel"], [90, 1, 1, "", "MaternKernel"], [91, 1, 1, "", "PeriodicKernel"], [92, 1, 1, "", "PiecewisePolynomialKernel"], [93, 1, 1, "", "PolynomialKernel"], [94, 1, 1, "", "RBFKernel"], [95, 1, 1, "", "RFFKernel"], [96, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "from_dict"], [89, 2, 1, "", "from_json"], [89, 2, 1, "", "to_dict"], [89, 2, 1, "", "to_factory"], [89, 2, 1, "", "to_gpytorch"], [89, 2, 1, "", "to_json"], [89, 3, 1, "", "variance_initial_value"], [89, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[89, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[89, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "from_dict"], [90, 2, 1, "", "from_json"], [90, 3, 1, "", "lengthscale_initial_value"], [90, 3, 1, "", "lengthscale_prior"], [90, 3, 1, "", "nu"], [90, 2, 1, "", "to_dict"], [90, 2, 1, "", "to_factory"], [90, 2, 1, "", "to_gpytorch"], [90, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[90, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[90, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "from_dict"], [91, 2, 1, "", "from_json"], [91, 3, 1, "", "lengthscale_initial_value"], [91, 3, 1, "", "lengthscale_prior"], [91, 3, 1, "", "period_length_initial_value"], [91, 3, 1, "", "period_length_prior"], [91, 2, 1, "", "to_dict"], [91, 2, 1, "", "to_factory"], [91, 2, 1, "", "to_gpytorch"], [91, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[91, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[91, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "from_dict"], [92, 2, 1, "", "from_json"], [92, 3, 1, "", "lengthscale_initial_value"], [92, 3, 1, "", "lengthscale_prior"], [92, 3, 1, "", "q"], [92, 2, 1, "", "to_dict"], [92, 2, 1, "", "to_factory"], [92, 2, 1, "", "to_gpytorch"], [92, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[92, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[92, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "from_dict"], [93, 2, 1, "", "from_json"], [93, 3, 1, "", "offset_initial_value"], [93, 3, 1, "", "offset_prior"], [93, 3, 1, "", "power"], [93, 2, 1, "", "to_dict"], [93, 2, 1, "", "to_factory"], [93, 2, 1, "", "to_gpytorch"], [93, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[93, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[93, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "from_dict"], [94, 2, 1, "", "from_json"], [94, 3, 1, "", "lengthscale_initial_value"], [94, 3, 1, "", "lengthscale_prior"], [94, 2, 1, "", "to_dict"], [94, 2, 1, "", "to_factory"], [94, 2, 1, "", "to_gpytorch"], [94, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[94, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[94, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "from_dict"], [95, 2, 1, "", "from_json"], [95, 3, 1, "", "lengthscale_initial_value"], [95, 3, 1, "", "lengthscale_prior"], [95, 3, 1, "", "num_samples"], [95, 2, 1, "", "to_dict"], [95, 2, 1, "", "to_factory"], [95, 2, 1, "", "to_gpytorch"], [95, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[95, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[95, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "from_dict"], [96, 2, 1, "", "from_json"], [96, 3, 1, "", "lengthscale_initial_value"], [96, 3, 1, "", "lengthscale_prior"], [96, 2, 1, "", "to_dict"], [96, 2, 1, "", "to_factory"], [96, 2, 1, "", "to_gpytorch"], [96, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[96, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[96, 4, 1, "", "string"]], "baybe.kernels.composite": [[98, 1, 1, "", "AdditiveKernel"], [99, 1, 1, "", "ProductKernel"], [100, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[98, 2, 1, "", "__init__"], [98, 3, 1, "", "base_kernels"], [98, 2, 1, "", "from_dict"], [98, 2, 1, "", "from_json"], [98, 2, 1, "", "to_dict"], [98, 2, 1, "", "to_factory"], [98, 2, 1, "", "to_gpytorch"], [98, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[98, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[98, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[99, 2, 1, "", "__init__"], [99, 3, 1, "", "base_kernels"], [99, 2, 1, "", "from_dict"], [99, 2, 1, "", "from_json"], [99, 2, 1, "", "to_dict"], [99, 2, 1, "", "to_factory"], [99, 2, 1, "", "to_gpytorch"], [99, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[99, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[99, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[100, 2, 1, "", "__init__"], [100, 3, 1, "", "base_kernel"], [100, 2, 1, "", "from_dict"], [100, 2, 1, "", "from_json"], [100, 3, 1, "", "outputscale_initial_value"], [100, 3, 1, "", "outputscale_prior"], [100, 2, 1, "", "to_dict"], [100, 2, 1, "", "to_factory"], [100, 2, 1, "", "to_gpytorch"], [100, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[100, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[100, 4, 1, "", "string"]], "baybe.objective": [[102, 5, 1, "", "Objective"]], "baybe.objectives": [[104, 0, 0, "-", "base"], [107, 0, 0, "-", "deprecation"], [109, 0, 0, "-", "desirability"], [112, 0, 0, "-", "enum"], [114, 0, 0, "-", "single"]], "baybe.objectives.base": [[105, 1, 1, "", "Objective"], [106, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "from_dict"], [105, 2, 1, "", "from_json"], [105, 6, 1, "", "targets"], [105, 2, 1, "", "to_dict"], [105, 2, 1, "", "to_json"], [105, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[105, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[105, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[105, 4, 1, "", "allow_extra"], [105, 4, 1, "", "allow_missing"], [105, 4, 1, "", "df"]], "baybe.objectives.deprecation": [[108, 5, 1, "", "structure_objective"]], "baybe.objectives.desirability": [[110, 1, 1, "", "DesirabilityObjective"], [111, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "from_dict"], [110, 2, 1, "", "from_json"], [110, 3, 1, "", "scalarizer"], [110, 6, 1, "", "targets"], [110, 2, 1, "", "to_dict"], [110, 2, 1, "", "to_json"], [110, 2, 1, "", "transform"], [110, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[110, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[110, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[110, 4, 1, "", "allow_extra"], [110, 4, 1, "", "allow_missing"], [110, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[111, 4, 1, "", "scalarizer"], [111, 4, 1, "", "values"], [111, 4, 1, "", "weights"]], "baybe.objectives.enum": [[113, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[113, 3, 1, "", "GEOM_MEAN"], [113, 3, 1, "", "MEAN"]], "baybe.objectives.single": [[115, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "from_dict"], [115, 2, 1, "", "from_json"], [115, 6, 1, "", "targets"], [115, 2, 1, "", "to_dict"], [115, 2, 1, "", "to_json"], [115, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[115, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[115, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[115, 4, 1, "", "allow_extra"], [115, 4, 1, "", "allow_missing"], [115, 4, 1, "", "df"]], "baybe.parameters": [[117, 0, 0, "-", "base"], [121, 0, 0, "-", "categorical"], [124, 0, 0, "-", "custom"], [126, 0, 0, "-", "enum"], [131, 0, 0, "-", "numerical"], [134, 0, 0, "-", "substance"], [137, 0, 0, "-", "utils"], [140, 0, 0, "-", "validation"]], "baybe.parameters.base": [[118, 1, 1, "", "ContinuousParameter"], [119, 1, 1, "", "DiscreteParameter"], [120, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[118, 2, 1, "", "__init__"], [118, 6, 1, "", "comp_rep_columns"], [118, 2, 1, "", "from_dict"], [118, 2, 1, "", "from_json"], [118, 6, 1, "", "is_continuous"], [118, 6, 1, "", "is_discrete"], [118, 2, 1, "", "is_in_range"], [118, 3, 1, "", "is_numerical"], [118, 3, 1, "", "name"], [118, 2, 1, "", "summary"], [118, 2, 1, "", "to_dict"], [118, 2, 1, "", "to_json"], [118, 2, 1, "", "to_searchspace"], [118, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[118, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[118, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[118, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[119, 2, 1, "", "__init__"], [119, 6, 1, "", "comp_df"], [119, 6, 1, "", "comp_rep_columns"], [119, 3, 1, "", "encoding"], [119, 2, 1, "", "from_dict"], [119, 2, 1, "", "from_json"], [119, 6, 1, "", "is_continuous"], [119, 6, 1, "", "is_discrete"], [119, 2, 1, "", "is_in_range"], [119, 3, 1, "", "is_numerical"], [119, 3, 1, "", "name"], [119, 2, 1, "", "summary"], [119, 2, 1, "", "to_dict"], [119, 2, 1, "", "to_json"], [119, 2, 1, "", "to_searchspace"], [119, 2, 1, "", "to_subspace"], [119, 2, 1, "", "transform"], [119, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[119, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[119, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[119, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[119, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[120, 2, 1, "", "__init__"], [120, 6, 1, "", "comp_rep_columns"], [120, 2, 1, "", "from_dict"], [120, 2, 1, "", "from_json"], [120, 6, 1, "", "is_continuous"], [120, 6, 1, "", "is_discrete"], [120, 2, 1, "", "is_in_range"], [120, 3, 1, "", "is_numerical"], [120, 3, 1, "", "name"], [120, 2, 1, "", "summary"], [120, 2, 1, "", "to_dict"], [120, 2, 1, "", "to_json"], [120, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[120, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[120, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[120, 4, 1, "", "item"]], "baybe.parameters.categorical": [[122, 1, 1, "", "CategoricalParameter"], [123, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[122, 2, 1, "", "__init__"], [122, 6, 1, "", "comp_df"], [122, 6, 1, "", "comp_rep_columns"], [122, 3, 1, "", "encoding"], [122, 2, 1, "", "from_dict"], [122, 2, 1, "", "from_json"], [122, 6, 1, "", "is_continuous"], [122, 6, 1, "", "is_discrete"], [122, 2, 1, "", "is_in_range"], [122, 3, 1, "", "is_numerical"], [122, 3, 1, "", "name"], [122, 2, 1, "", "summary"], [122, 2, 1, "", "to_dict"], [122, 2, 1, "", "to_json"], [122, 2, 1, "", "to_searchspace"], [122, 2, 1, "", "to_subspace"], [122, 2, 1, "", "transform"], [122, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[122, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[122, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[122, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[122, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[123, 2, 1, "", "__init__"], [123, 3, 1, "", "active_values"], [123, 6, 1, "", "comp_df"], [123, 6, 1, "", "comp_rep_columns"], [123, 3, 1, "", "encoding"], [123, 2, 1, "", "from_dict"], [123, 2, 1, "", "from_json"], [123, 6, 1, "", "is_continuous"], [123, 6, 1, "", "is_discrete"], [123, 2, 1, "", "is_in_range"], [123, 3, 1, "", "is_numerical"], [123, 3, 1, "", "name"], [123, 2, 1, "", "summary"], [123, 2, 1, "", "to_dict"], [123, 2, 1, "", "to_json"], [123, 2, 1, "", "to_searchspace"], [123, 2, 1, "", "to_subspace"], [123, 2, 1, "", "transform"], [123, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[123, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[123, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[123, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[123, 4, 1, "", "series"]], "baybe.parameters.custom": [[125, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[125, 2, 1, "", "__init__"], [125, 6, 1, "", "comp_df"], [125, 6, 1, "", "comp_rep_columns"], [125, 3, 1, "", "data"], [125, 3, 1, "", "decorrelate"], [125, 3, 1, "", "encoding"], [125, 2, 1, "", "from_dict"], [125, 2, 1, "", "from_json"], [125, 6, 1, "", "is_continuous"], [125, 6, 1, "", "is_discrete"], [125, 2, 1, "", "is_in_range"], [125, 3, 1, "", "is_numerical"], [125, 3, 1, "", "name"], [125, 2, 1, "", "summary"], [125, 2, 1, "", "to_dict"], [125, 2, 1, "", "to_json"], [125, 2, 1, "", "to_searchspace"], [125, 2, 1, "", "to_subspace"], [125, 2, 1, "", "transform"], [125, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[125, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[125, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[125, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[125, 4, 1, "", "series"]], "baybe.parameters.enum": [[127, 1, 1, "", "CategoricalEncoding"], [128, 1, 1, "", "CustomEncoding"], [129, 1, 1, "", "ParameterEncoding"], [130, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[127, 3, 1, "", "INT"], [127, 3, 1, "", "OHE"], [127, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[128, 3, 1, "", "CUSTOM"], [128, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[130, 3, 1, "", "ATOMPAIR"], [130, 3, 1, "", "AUTOCORR"], [130, 3, 1, "", "AVALON"], [130, 3, 1, "", "E3FP"], [130, 3, 1, "", "ECFP"], [130, 3, 1, "", "ELECTROSHAPE"], [130, 3, 1, "", "ERG"], [130, 3, 1, "", "ESTATE"], [130, 3, 1, "", "FUNCTIONALGROUPS"], [130, 3, 1, "", "GETAWAY"], [130, 3, 1, "", "GHOSECRIPPEN"], [130, 3, 1, "", "KLEKOTAROTH"], [130, 3, 1, "", "LAGGNER"], [130, 3, 1, "", "LAYERED"], [130, 3, 1, "", "LINGO"], [130, 3, 1, "", "MACCS"], [130, 3, 1, "", "MAP"], [130, 3, 1, "", "MHFP"], [130, 3, 1, "", "MORDRED"], [130, 3, 1, "", "MORGAN_FP"], [130, 3, 1, "", "MORSE"], [130, 3, 1, "", "MQNS"], [130, 3, 1, "", "PATTERN"], [130, 3, 1, "", "PHARMACOPHORE"], [130, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [130, 3, 1, "", "PUBCHEM"], [130, 3, 1, "", "RDF"], [130, 3, 1, "", "RDKIT"], [130, 3, 1, "", "RDKIT2DDESCRIPTORS"], [130, 3, 1, "", "RDKITFINGERPRINT"], [130, 3, 1, "", "SECFP"], [130, 3, 1, "", "TOPOLOGICALTORSION"], [130, 3, 1, "", "USR"], [130, 3, 1, "", "USRCAT"], [130, 3, 1, "", "VSA"], [130, 3, 1, "", "WHIM"], [130, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[132, 1, 1, "", "NumericalContinuousParameter"], [133, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[132, 2, 1, "", "__init__"], [132, 3, 1, "", "bounds"], [132, 6, 1, "", "comp_rep_columns"], [132, 2, 1, "", "from_dict"], [132, 2, 1, "", "from_json"], [132, 6, 1, "", "is_continuous"], [132, 6, 1, "", "is_discrete"], [132, 2, 1, "", "is_in_range"], [132, 3, 1, "", "is_numerical"], [132, 3, 1, "", "name"], [132, 2, 1, "", "summary"], [132, 2, 1, "", "to_dict"], [132, 2, 1, "", "to_json"], [132, 2, 1, "", "to_searchspace"], [132, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[132, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[132, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[132, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[133, 2, 1, "", "__init__"], [133, 6, 1, "", "comp_df"], [133, 6, 1, "", "comp_rep_columns"], [133, 3, 1, "", "encoding"], [133, 2, 1, "", "from_dict"], [133, 2, 1, "", "from_json"], [133, 6, 1, "", "is_continuous"], [133, 6, 1, "", "is_discrete"], [133, 2, 1, "", "is_in_range"], [133, 3, 1, "", "is_numerical"], [133, 3, 1, "", "name"], [133, 2, 1, "", "summary"], [133, 2, 1, "", "to_dict"], [133, 2, 1, "", "to_json"], [133, 2, 1, "", "to_searchspace"], [133, 2, 1, "", "to_subspace"], [133, 3, 1, "", "tolerance"], [133, 2, 1, "", "transform"], [133, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[133, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[133, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[133, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[133, 4, 1, "", "series"]], "baybe.parameters.substance": [[135, 3, 1, "", "Smiles"], [136, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[136, 2, 1, "", "__init__"], [136, 6, 1, "", "comp_df"], [136, 6, 1, "", "comp_rep_columns"], [136, 3, 1, "", "data"], [136, 3, 1, "", "decorrelate"], [136, 3, 1, "", "encoding"], [136, 2, 1, "", "from_dict"], [136, 2, 1, "", "from_json"], [136, 6, 1, "", "is_continuous"], [136, 6, 1, "", "is_discrete"], [136, 2, 1, "", "is_in_range"], [136, 3, 1, "", "is_numerical"], [136, 3, 1, "", "kwargs_conformer"], [136, 3, 1, "", "kwargs_fingerprint"], [136, 3, 1, "", "name"], [136, 2, 1, "", "summary"], [136, 2, 1, "", "to_dict"], [136, 2, 1, "", "to_json"], [136, 2, 1, "", "to_searchspace"], [136, 2, 1, "", "to_subspace"], [136, 2, 1, "", "transform"], [136, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[136, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[136, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[136, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[136, 4, 1, "", "series"]], "baybe.parameters.utils": [[138, 5, 1, "", "get_parameters_from_dataframe"], [139, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[138, 4, 1, "", "df"], [138, 4, 1, "", "factory"], [138, 4, 1, "", "parameters"]], "baybe.parameters.validation": [[141, 5, 1, "", "validate_decorrelation"], [142, 5, 1, "", "validate_is_finite"], [143, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[145, 0, 0, "-", "base"], [147, 0, 0, "-", "basic"]], "baybe.priors.base": [[146, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "from_dict"], [146, 2, 1, "", "from_json"], [146, 2, 1, "", "to_dict"], [146, 2, 1, "", "to_gpytorch"], [146, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[146, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[146, 4, 1, "", "string"]], "baybe.priors.basic": [[148, 1, 1, "", "BetaPrior"], [149, 1, 1, "", "GammaPrior"], [150, 1, 1, "", "HalfCauchyPrior"], [151, 1, 1, "", "HalfNormalPrior"], [152, 1, 1, "", "LogNormalPrior"], [153, 1, 1, "", "NormalPrior"], [154, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[148, 2, 1, "", "__init__"], [148, 3, 1, "", "alpha"], [148, 3, 1, "", "beta"], [148, 2, 1, "", "from_dict"], [148, 2, 1, "", "from_json"], [148, 2, 1, "", "to_dict"], [148, 2, 1, "", "to_gpytorch"], [148, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[148, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[148, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[149, 2, 1, "", "__init__"], [149, 3, 1, "", "concentration"], [149, 2, 1, "", "from_dict"], [149, 2, 1, "", "from_json"], [149, 3, 1, "", "rate"], [149, 2, 1, "", "to_dict"], [149, 2, 1, "", "to_gpytorch"], [149, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[149, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[149, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "from_dict"], [150, 2, 1, "", "from_json"], [150, 3, 1, "", "scale"], [150, 2, 1, "", "to_dict"], [150, 2, 1, "", "to_gpytorch"], [150, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[150, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[150, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "from_dict"], [151, 2, 1, "", "from_json"], [151, 3, 1, "", "scale"], [151, 2, 1, "", "to_dict"], [151, 2, 1, "", "to_gpytorch"], [151, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[151, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[151, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "from_dict"], [152, 2, 1, "", "from_json"], [152, 3, 1, "", "loc"], [152, 3, 1, "", "scale"], [152, 2, 1, "", "to_dict"], [152, 2, 1, "", "to_gpytorch"], [152, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[152, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[152, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "from_dict"], [153, 2, 1, "", "from_json"], [153, 3, 1, "", "loc"], [153, 3, 1, "", "scale"], [153, 2, 1, "", "to_dict"], [153, 2, 1, "", "to_gpytorch"], [153, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[153, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[153, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[154, 2, 1, "", "__init__"], [154, 3, 1, "", "a"], [154, 3, 1, "", "b"], [154, 2, 1, "", "from_dict"], [154, 2, 1, "", "from_json"], [154, 3, 1, "", "sigma"], [154, 2, 1, "", "to_dict"], [154, 2, 1, "", "to_gpytorch"], [154, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[154, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[154, 4, 1, "", "string"]], "baybe.recommenders": [[156, 0, 0, "-", "base"], [158, 0, 0, "-", "meta"], [166, 0, 0, "-", "naive"], [168, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[157, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[157, 4, 1, "", "batch_size"], [157, 4, 1, "", "measurements"], [157, 4, 1, "", "objective"], [157, 4, 1, "", "pending_experiments"], [157, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[159, 0, 0, "-", "base"], [161, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[160, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "from_dict"], [160, 2, 1, "", "from_json"], [160, 2, 1, "", "get_current_recommender"], [160, 2, 1, "", "get_next_recommender"], [160, 2, 1, "", "get_non_meta_recommender"], [160, 6, 1, "", "is_stateful"], [160, 2, 1, "", "recommend"], [160, 2, 1, "", "select_recommender"], [160, 2, 1, "", "to_dict"], [160, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[160, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[160, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[162, 1, 1, "", "BaseSequentialMetaRecommender"], [163, 1, 1, "", "SequentialMetaRecommender"], [164, 1, 1, "", "StreamingSequentialMetaRecommender"], [165, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "from_dict"], [162, 2, 1, "", "from_json"], [162, 2, 1, "", "get_current_recommender"], [162, 2, 1, "", "get_next_recommender"], [162, 2, 1, "", "get_non_meta_recommender"], [162, 6, 1, "", "is_stateful"], [162, 2, 1, "", "recommend"], [162, 2, 1, "", "select_recommender"], [162, 2, 1, "", "to_dict"], [162, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[162, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[162, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "from_dict"], [163, 2, 1, "", "from_json"], [163, 2, 1, "", "get_current_recommender"], [163, 2, 1, "", "get_next_recommender"], [163, 2, 1, "", "get_non_meta_recommender"], [163, 6, 1, "", "is_stateful"], [163, 3, 1, "", "mode"], [163, 2, 1, "", "recommend"], [163, 3, 1, "", "recommenders"], [163, 2, 1, "", "select_recommender"], [163, 2, 1, "", "to_dict"], [163, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[163, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[163, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "from_dict"], [164, 2, 1, "", "from_json"], [164, 2, 1, "", "get_current_recommender"], [164, 2, 1, "", "get_next_recommender"], [164, 2, 1, "", "get_non_meta_recommender"], [164, 6, 1, "", "is_stateful"], [164, 2, 1, "", "recommend"], [164, 3, 1, "", "recommenders"], [164, 2, 1, "", "select_recommender"], [164, 2, 1, "", "to_dict"], [164, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[164, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[164, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "from_dict"], [165, 2, 1, "", "from_json"], [165, 2, 1, "", "get_current_recommender"], [165, 2, 1, "", "get_next_recommender"], [165, 2, 1, "", "get_non_meta_recommender"], [165, 3, 1, "", "initial_recommender"], [165, 6, 1, "", "is_stateful"], [165, 2, 1, "", "recommend"], [165, 3, 1, "", "recommender"], [165, 3, 1, "", "remain_switched"], [165, 2, 1, "", "select_recommender"], [165, 3, 1, "", "switch_after"], [165, 2, 1, "", "to_dict"], [165, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[165, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[165, 4, 1, "", "string"]], "baybe.recommenders.naive": [[167, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[167, 2, 1, "", "__init__"], [167, 3, 1, "", "allow_recommending_already_measured"], [167, 3, 1, "", "allow_recommending_pending_experiments"], [167, 3, 1, "", "allow_repeated_recommendations"], [167, 3, 1, "", "compatibility"], [167, 3, 1, "", "cont_recommender"], [167, 3, 1, "", "disc_recommender"], [167, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[167, 4, 1, "", "batch_size"], [167, 4, 1, "", "measurements"], [167, 4, 1, "", "objective"], [167, 4, 1, "", "pending_experiments"], [167, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[169, 0, 0, "-", "base"], [171, 0, 0, "-", "bayesian"], [178, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[170, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[170, 2, 1, "", "__init__"], [170, 3, 1, "", "allow_recommending_already_measured"], [170, 3, 1, "", "allow_recommending_pending_experiments"], [170, 3, 1, "", "allow_repeated_recommendations"], [170, 3, 1, "", "compatibility"], [170, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[170, 4, 1, "", "batch_size"], [170, 4, 1, "", "measurements"], [170, 4, 1, "", "objective"], [170, 4, 1, "", "pending_experiments"], [170, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[172, 0, 0, "-", "base"], [174, 0, 0, "-", "botorch"], [176, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[173, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[173, 2, 1, "", "__init__"], [173, 3, 1, "", "acquisition_function"], [173, 3, 1, "", "acquisition_function_cls"], [173, 3, 1, "", "allow_recommending_already_measured"], [173, 3, 1, "", "allow_recommending_pending_experiments"], [173, 3, 1, "", "allow_repeated_recommendations"], [173, 3, 1, "", "compatibility"], [173, 2, 1, "", "get_surrogate"], [173, 2, 1, "", "recommend"], [173, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[173, 4, 1, "", "batch_size"], [173, 4, 1, "", "measurements"], [173, 4, 1, "", "objective"], [173, 4, 1, "", "pending_experiments"], [173, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[175, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[175, 2, 1, "", "__init__"], [175, 3, 1, "", "acquisition_function"], [175, 3, 1, "", "acquisition_function_cls"], [175, 3, 1, "", "allow_recommending_already_measured"], [175, 3, 1, "", "allow_recommending_pending_experiments"], [175, 3, 1, "", "allow_repeated_recommendations"], [175, 3, 1, "", "compatibility"], [175, 2, 1, "", "get_surrogate"], [175, 3, 1, "", "hybrid_sampler"], [175, 3, 1, "", "n_raw_samples"], [175, 3, 1, "", "n_restarts"], [175, 2, 1, "", "recommend"], [175, 3, 1, "", "sampling_percentage"], [175, 3, 1, "", "sequential_continuous"], [175, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[175, 4, 1, "", "batch_size"], [175, 4, 1, "", "measurements"], [175, 4, 1, "", "objective"], [175, 4, 1, "", "pending_experiments"], [175, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[177, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[179, 0, 0, "-", "base"], [181, 0, 0, "-", "clustering"], [186, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[180, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[180, 2, 1, "", "__init__"], [180, 3, 1, "", "allow_recommending_already_measured"], [180, 3, 1, "", "allow_recommending_pending_experiments"], [180, 3, 1, "", "allow_repeated_recommendations"], [180, 3, 1, "", "compatibility"], [180, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[180, 4, 1, "", "batch_size"], [180, 4, 1, "", "measurements"], [180, 4, 1, "", "objective"], [180, 4, 1, "", "pending_experiments"], [180, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[182, 1, 1, "", "GaussianMixtureClusteringRecommender"], [183, 1, 1, "", "KMeansClusteringRecommender"], [184, 1, 1, "", "PAMClusteringRecommender"], [185, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[182, 2, 1, "", "__init__"], [182, 3, 1, "", "allow_recommending_already_measured"], [182, 3, 1, "", "allow_recommending_pending_experiments"], [182, 3, 1, "", "allow_repeated_recommendations"], [182, 3, 1, "", "compatibility"], [182, 3, 1, "", "model_cluster_num_parameter_name"], [182, 3, 1, "", "model_params"], [182, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[182, 4, 1, "", "batch_size"], [182, 4, 1, "", "measurements"], [182, 4, 1, "", "objective"], [182, 4, 1, "", "pending_experiments"], [182, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[183, 2, 1, "", "__init__"], [183, 3, 1, "", "allow_recommending_already_measured"], [183, 3, 1, "", "allow_recommending_pending_experiments"], [183, 3, 1, "", "allow_repeated_recommendations"], [183, 3, 1, "", "compatibility"], [183, 3, 1, "", "model_cluster_num_parameter_name"], [183, 3, 1, "", "model_params"], [183, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[183, 4, 1, "", "batch_size"], [183, 4, 1, "", "measurements"], [183, 4, 1, "", "objective"], [183, 4, 1, "", "pending_experiments"], [183, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[184, 2, 1, "", "__init__"], [184, 3, 1, "", "allow_recommending_already_measured"], [184, 3, 1, "", "allow_recommending_pending_experiments"], [184, 3, 1, "", "allow_repeated_recommendations"], [184, 3, 1, "", "compatibility"], [184, 3, 1, "", "model_cluster_num_parameter_name"], [184, 3, 1, "", "model_params"], [184, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[184, 4, 1, "", "batch_size"], [184, 4, 1, "", "measurements"], [184, 4, 1, "", "objective"], [184, 4, 1, "", "pending_experiments"], [184, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[185, 2, 1, "", "__init__"], [185, 3, 1, "", "allow_recommending_already_measured"], [185, 3, 1, "", "allow_recommending_pending_experiments"], [185, 3, 1, "", "allow_repeated_recommendations"], [185, 3, 1, "", "compatibility"], [185, 3, 1, "", "model_cluster_num_parameter_name"], [185, 3, 1, "", "model_params"], [185, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[185, 4, 1, "", "batch_size"], [185, 4, 1, "", "measurements"], [185, 4, 1, "", "objective"], [185, 4, 1, "", "pending_experiments"], [185, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[187, 1, 1, "", "FPSRecommender"], [188, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[187, 2, 1, "", "__init__"], [187, 3, 1, "", "allow_recommending_already_measured"], [187, 3, 1, "", "allow_recommending_pending_experiments"], [187, 3, 1, "", "allow_repeated_recommendations"], [187, 3, 1, "", "compatibility"], [187, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[187, 4, 1, "", "batch_size"], [187, 4, 1, "", "measurements"], [187, 4, 1, "", "objective"], [187, 4, 1, "", "pending_experiments"], [187, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[188, 2, 1, "", "__init__"], [188, 3, 1, "", "allow_recommending_already_measured"], [188, 3, 1, "", "allow_recommending_pending_experiments"], [188, 3, 1, "", "allow_repeated_recommendations"], [188, 3, 1, "", "compatibility"], [188, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[188, 4, 1, "", "batch_size"], [188, 4, 1, "", "measurements"], [188, 4, 1, "", "objective"], [188, 4, 1, "", "pending_experiments"], [188, 4, 1, "", "searchspace"]], "baybe.searchspace": [[190, 0, 0, "-", "continuous"], [192, 0, 0, "-", "core"], [197, 0, 0, "-", "discrete"], [203, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[191, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[191, 2, 1, "", "__init__"], [191, 6, 1, "", "comp_rep_bounds"], [191, 6, 1, "", "comp_rep_columns"], [191, 6, 1, "", "constraints_cardinality"], [191, 3, 1, "", "constraints_lin_eq"], [191, 3, 1, "", "constraints_lin_ineq"], [191, 3, 1, "", "constraints_nonlin"], [191, 2, 1, "", "empty"], [191, 2, 1, "", "from_bounds"], [191, 2, 1, "", "from_dataframe"], [191, 2, 1, "", "from_dict"], [191, 2, 1, "", "from_json"], [191, 2, 1, "", "from_parameter"], [191, 2, 1, "", "from_product"], [191, 6, 1, "", "full_factorial"], [191, 2, 1, "", "get_parameters_by_name"], [191, 6, 1, "", "is_empty"], [191, 6, 1, "", "parameter_names"], [191, 3, 1, "", "parameters"], [191, 2, 1, "", "sample_from_full_factorial"], [191, 2, 1, "", "sample_uniform"], [191, 2, 1, "", "samples_full_factorial"], [191, 2, 1, "", "samples_random"], [191, 2, 1, "", "to_dict"], [191, 2, 1, "", "to_json"], [191, 2, 1, "", "to_searchspace"], [191, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[191, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[191, 4, 1, "", "df"], [191, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[191, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[191, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[191, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[191, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[191, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[191, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[193, 1, 1, "", "SearchSpace"], [194, 1, 1, "", "SearchSpaceType"], [195, 5, 1, "", "to_searchspace"], [196, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[193, 2, 1, "", "__init__"], [193, 6, 1, "", "comp_rep_bounds"], [193, 6, 1, "", "comp_rep_columns"], [193, 6, 1, "", "constraints"], [193, 6, 1, "", "constraints_augmentable"], [193, 3, 1, "", "continuous"], [193, 3, 1, "", "discrete"], [193, 2, 1, "", "estimate_product_space_size"], [193, 2, 1, "", "from_dataframe"], [193, 2, 1, "", "from_dict"], [193, 2, 1, "", "from_json"], [193, 2, 1, "", "from_parameter"], [193, 2, 1, "", "from_product"], [193, 2, 1, "", "get_comp_rep_parameter_indices"], [193, 2, 1, "", "get_parameters_by_name"], [193, 6, 1, "", "n_tasks"], [193, 6, 1, "", "parameter_names"], [193, 6, 1, "", "parameters"], [193, 6, 1, "", "task_idx"], [193, 2, 1, "", "to_dict"], [193, 2, 1, "", "to_json"], [193, 2, 1, "", "transform"], [193, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[193, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[193, 4, 1, "", "df"], [193, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[193, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[193, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[193, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[193, 4, 1, "", "constraints"], [193, 4, 1, "", "empty_encoding"], [193, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[193, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[193, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[193, 4, 1, "", "allow_extra"], [193, 4, 1, "", "allow_missing"], [193, 4, 1, "", "data"], [193, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[194, 3, 1, "", "CONTINUOUS"], [194, 3, 1, "", "DISCRETE"], [194, 3, 1, "", "EITHER"], [194, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[198, 1, 1, "", "MemorySize"], [199, 1, 1, "", "SubspaceDiscrete"], [200, 5, 1, "", "parameter_cartesian_prod_pandas"], [201, 5, 1, "", "parameter_cartesian_prod_polars"], [202, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[198, 2, 1, "", "__init__"], [198, 3, 1, "", "comp_rep_bytes"], [198, 6, 1, "", "comp_rep_human_readable"], [198, 3, 1, "", "comp_rep_shape"], [198, 3, 1, "", "exp_rep_bytes"], [198, 6, 1, "", "exp_rep_human_readable"], [198, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[199, 2, 1, "", "__init__"], [199, 3, 1, "", "comp_rep"], [199, 6, 1, "", "comp_rep_bounds"], [199, 6, 1, "", "comp_rep_columns"], [199, 3, 1, "", "constraints"], [199, 2, 1, "", "empty"], [199, 3, 1, "", "empty_encoding"], [199, 2, 1, "", "estimate_product_space_size"], [199, 3, 1, "", "exp_rep"], [199, 2, 1, "", "from_dataframe"], [199, 2, 1, "", "from_dict"], [199, 2, 1, "", "from_json"], [199, 2, 1, "", "from_parameter"], [199, 2, 1, "", "from_product"], [199, 2, 1, "", "from_simplex"], [199, 2, 1, "", "get_candidates"], [199, 2, 1, "", "get_parameters_by_name"], [199, 6, 1, "", "is_empty"], [199, 6, 1, "", "metadata"], [199, 6, 1, "", "parameter_names"], [199, 3, 1, "", "parameters"], [199, 2, 1, "", "to_dict"], [199, 2, 1, "", "to_json"], [199, 2, 1, "", "to_searchspace"], [199, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[199, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[199, 4, 1, "", "df"], [199, 4, 1, "", "empty_encoding"], [199, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[199, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[199, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[199, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[199, 4, 1, "", "boundary_only"], [199, 4, 1, "", "constraints"], [199, 4, 1, "", "max_nonzero"], [199, 4, 1, "", "max_sum"], [199, 4, 1, "", "min_nonzero"], [199, 4, 1, "", "product_parameters"], [199, 4, 1, "", "simplex_parameters"], [199, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates.params": [[199, 4, 1, "", "allow_recommending_already_measured"], [199, 4, 1, "", "allow_repeated_recommendations"], [199, 4, 1, "", "exclude"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[199, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[200, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[201, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[204, 5, 1, "", "get_transform_parameters"], [205, 5, 1, "", "validate_parameter_names"], [206, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[208, 0, 0, "-", "core"], [215, 0, 0, "-", "mixin"], [217, 0, 0, "-", "utils"]], "baybe.serialization.core": [[209, 5, 1, "", "block_deserialization_hook"], [210, 5, 1, "", "block_serialization_hook"], [211, 8, 1, "", "converter"], [212, 5, 1, "", "get_base_structure_hook"], [213, 5, 1, "", "select_constructor_hook"], [214, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[212, 4, 1, "", "base"], [212, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[214, 4, 1, "", "base"], [214, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[216, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[216, 2, 1, "", "from_dict"], [216, 2, 1, "", "from_json"], [216, 2, 1, "", "to_dict"], [216, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[216, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[216, 4, 1, "", "string"]], "baybe.serialization.utils": [[218, 5, 1, "", "deserialize_dataframe"], [219, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[221, 0, 0, "-", "core"], [223, 0, 0, "-", "lookup"], [225, 0, 0, "-", "scenarios"], [227, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[222, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[222, 4, 1, "", "batch_size"], [222, 4, 1, "", "campaign"], [222, 4, 1, "", "impute_mode"], [222, 4, 1, "", "initial_data"], [222, 4, 1, "", "lookup"], [222, 4, 1, "", "n_doe_iterations"], [222, 4, 1, "", "noise_percent"], [222, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[224, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[224, 4, 1, "", "impute_mode"], [224, 4, 1, "", "lookup"], [224, 4, 1, "", "queries"], [224, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[226, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[226, 4, 1, "", "batch_size"], [226, 4, 1, "", "groupby"], [226, 4, 1, "", "impute_mode"], [226, 4, 1, "", "initial_data"], [226, 4, 1, "", "lookup"], [226, 4, 1, "", "n_doe_iterations"], [226, 4, 1, "", "n_mc_iterations"], [226, 4, 1, "", "noise_percent"], [226, 4, 1, "", "random_seed"], [226, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[228, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[228, 4, 1, "", "batch_size"], [228, 4, 1, "", "campaign"], [228, 4, 1, "", "groupby"], [228, 4, 1, "", "lookup"], [228, 4, 1, "", "n_doe_iterations"], [228, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[230, 0, 0, "-", "bandit"], [232, 0, 0, "-", "base"], [236, 0, 0, "-", "custom"], [239, 0, 0, "-", "gaussian_process"], [254, 0, 0, "-", "linear"], [256, 0, 0, "-", "naive"], [258, 0, 0, "-", "ngboost"], [260, 0, 0, "-", "random_forest"], [262, 0, 0, "-", "utils"], [266, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[231, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[231, 2, 1, "", "__init__"], [231, 2, 1, "", "fit"], [231, 2, 1, "", "from_dict"], [231, 2, 1, "", "from_json"], [231, 2, 1, "", "posterior"], [231, 2, 1, "", "posterior_means"], [231, 2, 1, "", "posterior_modes"], [231, 3, 1, "", "prior"], [231, 3, 1, "", "supports_transfer_learning"], [231, 2, 1, "", "to_botorch"], [231, 2, 1, "", "to_dict"], [231, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[231, 4, 1, "", "measurements"], [231, 4, 1, "", "objective"], [231, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[231, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[231, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[231, 4, 1, "", "candidates"]], "baybe.surrogates.base": [[233, 1, 1, "", "IndependentGaussianSurrogate"], [234, 1, 1, "", "Surrogate"], [235, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[233, 2, 1, "", "__init__"], [233, 2, 1, "", "fit"], [233, 2, 1, "", "from_dict"], [233, 2, 1, "", "from_json"], [233, 2, 1, "", "posterior"], [233, 3, 1, "", "supports_transfer_learning"], [233, 2, 1, "", "to_botorch"], [233, 2, 1, "", "to_dict"], [233, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[233, 4, 1, "", "measurements"], [233, 4, 1, "", "objective"], [233, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[233, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[233, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[233, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate": [[234, 2, 1, "", "__init__"], [234, 2, 1, "", "fit"], [234, 2, 1, "", "from_dict"], [234, 2, 1, "", "from_json"], [234, 2, 1, "", "posterior"], [234, 3, 1, "", "supports_transfer_learning"], [234, 2, 1, "", "to_botorch"], [234, 2, 1, "", "to_dict"], [234, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[234, 4, 1, "", "measurements"], [234, 4, 1, "", "objective"], [234, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[234, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[234, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[234, 4, 1, "", "candidates"]], "baybe.surrogates.base.SurrogateProtocol": [[235, 2, 1, "", "__init__"], [235, 2, 1, "", "fit"], [235, 2, 1, "", "to_botorch"]], "baybe.surrogates.custom": [[237, 1, 1, "", "CustomONNXSurrogate"], [238, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[237, 2, 1, "", "__init__"], [237, 2, 1, "", "default_model"], [237, 2, 1, "", "fit"], [237, 2, 1, "", "from_dict"], [237, 2, 1, "", "from_json"], [237, 3, 1, "", "onnx_input_name"], [237, 3, 1, "", "onnx_str"], [237, 2, 1, "", "posterior"], [237, 3, 1, "", "supports_transfer_learning"], [237, 2, 1, "", "to_botorch"], [237, 2, 1, "", "to_dict"], [237, 2, 1, "", "to_json"], [237, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[237, 4, 1, "", "measurements"], [237, 4, 1, "", "objective"], [237, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[237, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[237, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[237, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[237, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[240, 0, 0, "-", "core"], [242, 0, 0, "-", "kernel_factory"], [246, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[241, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[241, 2, 1, "", "__init__"], [241, 2, 1, "", "fit"], [241, 2, 1, "", "from_dict"], [241, 2, 1, "", "from_json"], [241, 2, 1, "", "from_preset"], [241, 3, 1, "", "kernel_factory"], [241, 2, 1, "", "posterior"], [241, 3, 1, "", "supports_transfer_learning"], [241, 2, 1, "", "to_botorch"], [241, 2, 1, "", "to_dict"], [241, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[241, 4, 1, "", "measurements"], [241, 4, 1, "", "objective"], [241, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[241, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[241, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[241, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.kernel_factory": [[243, 1, 1, "", "KernelFactory"], [244, 1, 1, "", "PlainKernelFactory"], [245, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[243, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[244, 2, 1, "", "__init__"], [244, 2, 1, "", "from_dict"], [244, 2, 1, "", "from_json"], [244, 3, 1, "", "kernel"], [244, 2, 1, "", "to_dict"], [244, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[244, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[244, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[247, 0, 0, "-", "core"], [250, 0, 0, "-", "default"], [252, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[248, 1, 1, "", "GaussianProcessPreset"], [249, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[248, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[251, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[251, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[253, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[253, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[255, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[255, 2, 1, "", "__init__"], [255, 2, 1, "", "fit"], [255, 2, 1, "", "from_dict"], [255, 2, 1, "", "from_json"], [255, 3, 1, "", "model_params"], [255, 2, 1, "", "posterior"], [255, 3, 1, "", "supports_transfer_learning"], [255, 2, 1, "", "to_botorch"], [255, 2, 1, "", "to_dict"], [255, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[255, 4, 1, "", "measurements"], [255, 4, 1, "", "objective"], [255, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[255, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[255, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[255, 4, 1, "", "candidates"]], "baybe.surrogates.naive": [[257, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[257, 2, 1, "", "__init__"], [257, 2, 1, "", "fit"], [257, 2, 1, "", "from_dict"], [257, 2, 1, "", "from_json"], [257, 2, 1, "", "posterior"], [257, 3, 1, "", "supports_transfer_learning"], [257, 2, 1, "", "to_botorch"], [257, 2, 1, "", "to_dict"], [257, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[257, 4, 1, "", "measurements"], [257, 4, 1, "", "objective"], [257, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[257, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[257, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[257, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost": [[259, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[259, 2, 1, "", "__init__"], [259, 2, 1, "", "fit"], [259, 2, 1, "", "from_dict"], [259, 2, 1, "", "from_json"], [259, 3, 1, "", "model_params"], [259, 2, 1, "", "posterior"], [259, 3, 1, "", "supports_transfer_learning"], [259, 2, 1, "", "to_botorch"], [259, 2, 1, "", "to_dict"], [259, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[259, 4, 1, "", "measurements"], [259, 4, 1, "", "objective"], [259, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[259, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[259, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[259, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest": [[261, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[261, 2, 1, "", "__init__"], [261, 2, 1, "", "fit"], [261, 2, 1, "", "from_dict"], [261, 2, 1, "", "from_json"], [261, 3, 1, "", "model_params"], [261, 2, 1, "", "posterior"], [261, 3, 1, "", "supports_transfer_learning"], [261, 2, 1, "", "to_botorch"], [261, 2, 1, "", "to_dict"], [261, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[261, 4, 1, "", "measurements"], [261, 4, 1, "", "objective"], [261, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[261, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[261, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[261, 4, 1, "", "candidates"]], "baybe.surrogates.utils": [[263, 5, 1, "", "batchify_ensemble_predictor"], [264, 5, 1, "", "batchify_mean_var_prediction"], [265, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[263, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[265, 4, 1, "", "cls"], [265, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[267, 5, 1, "", "get_model_params_validator"], [268, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.get_model_params_validator.params": [[267, 4, 1, "", "model_init"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[268, 4, 1, "", "model_cls"]], "baybe.targets": [[270, 0, 0, "-", "base"], [272, 0, 0, "-", "binary"], [275, 0, 0, "-", "enum"], [278, 0, 0, "-", "numerical"], [280, 0, 0, "-", "transforms"]], "baybe.targets.base": [[271, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[271, 2, 1, "", "__init__"], [271, 2, 1, "", "from_dict"], [271, 2, 1, "", "from_json"], [271, 3, 1, "", "name"], [271, 2, 1, "", "summary"], [271, 2, 1, "", "to_dict"], [271, 2, 1, "", "to_json"], [271, 2, 1, "", "to_objective"], [271, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[271, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[271, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[271, 4, 1, "", "series"]], "baybe.targets.binary": [[273, 1, 1, "", "BinaryTarget"], [274, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[273, 2, 1, "", "__init__"], [273, 3, 1, "", "failure_value"], [273, 2, 1, "", "from_dict"], [273, 2, 1, "", "from_json"], [273, 3, 1, "", "name"], [273, 3, 1, "", "success_value"], [273, 2, 1, "", "summary"], [273, 2, 1, "", "to_dict"], [273, 2, 1, "", "to_json"], [273, 2, 1, "", "to_objective"], [273, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[273, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[273, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[273, 4, 1, "", "series"]], "baybe.targets.enum": [[276, 1, 1, "", "TargetMode"], [277, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[276, 3, 1, "", "MATCH"], [276, 3, 1, "", "MAX"], [276, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[277, 3, 1, "", "BELL"], [277, 3, 1, "", "LINEAR"], [277, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[279, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[279, 2, 1, "", "__init__"], [279, 3, 1, "", "bounds"], [279, 2, 1, "", "from_dict"], [279, 2, 1, "", "from_json"], [279, 3, 1, "", "mode"], [279, 3, 1, "", "name"], [279, 2, 1, "", "summary"], [279, 2, 1, "", "to_dict"], [279, 2, 1, "", "to_json"], [279, 2, 1, "", "to_objective"], [279, 2, 1, "", "transform"], [279, 3, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[279, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[279, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[279, 4, 1, "", "series"]], "baybe.targets.transforms": [[281, 5, 1, "", "bell_transform"], [282, 5, 1, "", "linear_transform"], [283, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[281, 4, 1, "", "arr"], [281, 4, 1, "", "lower"], [281, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[282, 4, 1, "", "arr"], [282, 4, 1, "", "descending"], [282, 4, 1, "", "lower"], [282, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[283, 4, 1, "", "arr"], [283, 4, 1, "", "lower"], [283, 4, 1, "", "upper"]], "baybe.telemetry": [[285, 5, 1, "", "get_user_details"], [286, 5, 1, "", "is_enabled"], [287, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [288, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[287, 4, 1, "", "cached_recommendation"], [287, 4, 1, "", "measurements"], [287, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [287, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[288, 4, 1, "", "instrument_name"], [288, 4, 1, "", "value"]], "baybe.utils": [[290, 0, 0, "-", "augmentation"], [293, 0, 0, "-", "basic"], [306, 0, 0, "-", "boolean"], [310, 0, 0, "-", "chemistry"], [315, 0, 0, "-", "conversion"], [318, 0, 0, "-", "dataframe"], [331, 0, 0, "-", "interval"], [336, 0, 0, "-", "memory"], [338, 0, 0, "-", "numerical"], [345, 0, 0, "-", "plotting"], [349, 0, 0, "-", "random"], [352, 0, 0, "-", "sampling_algorithms"], [356, 0, 0, "-", "scaling"], [358, 0, 0, "-", "torch"], [361, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[291, 5, 1, "", "df_apply_dependency_augmentation"], [292, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[291, 4, 1, "", "affected"], [291, 4, 1, "", "causing"], [291, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[292, 4, 1, "", "column_groups"], [292, 4, 1, "", "df"]], "baybe.utils.basic": [[294, 1, 1, "", "Dummy"], [295, 1, 1, "", "classproperty"], [296, 5, 1, "", "find_subclass"], [297, 5, 1, "", "get_baseclasses"], [298, 5, 1, "", "get_subclasses"], [299, 5, 1, "", "group_duplicate_values"], [300, 5, 1, "", "hilberts_factory"], [301, 5, 1, "", "is_all_instance"], [302, 5, 1, "", "match_attributes"], [303, 5, 1, "", "refers_to"], [304, 5, 1, "", "register_hooks"], [305, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[294, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[295, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[297, 4, 1, "", "abstract"], [297, 4, 1, "", "cls"], [297, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[298, 4, 1, "", "abstract"], [298, 4, 1, "", "cls"], [298, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[299, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[302, 4, 1, "", "callable_"], [302, 4, 1, "", "ignore"], [302, 4, 1, "", "object"], [302, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[304, 4, 1, "", "post_hooks"], [304, 4, 1, "", "pre_hooks"], [304, 4, 1, "", "target"]], "baybe.utils.boolean": [[307, 5, 1, "", "check_if_in"], [308, 5, 1, "", "is_abstract"], [309, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[307, 4, 1, "", "allowed"], [307, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[308, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[309, 4, 1, "", "val"]], "baybe.utils.chemistry": [[311, 5, 1, "", "get_canonical_smiles"], [312, 5, 1, "", "get_fingerprint_class"], [313, 5, 1, "", "name_to_smiles"], [314, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[312, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[313, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[314, 4, 1, "", "encoding"], [314, 4, 1, "", "kwargs_conformer"], [314, 4, 1, "", "kwargs_fingerprint"], [314, 4, 1, "", "prefix"], [314, 4, 1, "", "smiles"]], "baybe.utils.conversion": [[316, 5, 1, "", "fraction_to_float"], [317, 5, 1, "", "nonstring_to_tuple"]], "baybe.utils.conversion.fraction_to_float.params": [[316, 4, 1, "", "value"]], "baybe.utils.dataframe": [[319, 5, 1, "", "add_fake_measurements"], [320, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [321, 5, 1, "", "add_parameter_noise"], [322, 5, 1, "", "arrays_to_dataframes"], [323, 5, 1, "", "df_drop_single_value_columns"], [324, 5, 1, "", "df_drop_string_columns"], [325, 5, 1, "", "df_uncorrelated_features"], [326, 5, 1, "", "filter_df"], [327, 5, 1, "", "fuzzy_row_match"], [328, 5, 1, "", "get_transform_objects"], [329, 5, 1, "", "pretty_print_df"], [330, 5, 1, "", "to_tensor"]], "baybe.utils.dataframe.add_fake_measurements.params": [[319, 4, 1, "", "bad_intervals"], [319, 4, 1, "", "data"], [319, 4, 1, "", "good_intervals"], [319, 4, 1, "", "good_reference_values"], [319, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[320, 4, 1, "", "df"], [320, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[321, 4, 1, "", "data"], [321, 4, 1, "", "noise_level"], [321, 4, 1, "", "noise_type"], [321, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[322, 4, 1, "", "input_labels"], [322, 4, 1, "", "output_labels"], [322, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[323, 4, 1, "", "df"], [323, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[324, 4, 1, "", "df"], [324, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[325, 4, 1, "", "df"], [325, 4, 1, "", "exclude_list"], [325, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[326, 4, 1, "", "complement"], [326, 4, 1, "", "df"], [326, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[327, 4, 1, "", "left_df"], [327, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [327, 4, 1, "", "parameters"], [327, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[328, 4, 1, "", "allow_extra"], [328, 4, 1, "", "allow_missing"], [328, 4, 1, "", "df"], [328, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[329, 4, 1, "", "df"], [329, 4, 1, "", "max_columns"], [329, 4, 1, "", "max_colwidth"], [329, 4, 1, "", "max_rows"], [329, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[330, 4, 1, "", "*x"]], "baybe.utils.interval": [[332, 7, 1, "", "InfiniteIntervalError"], [333, 1, 1, "", "Interval"], [334, 5, 1, "", "convert_bounds"], [335, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[332, 2, 1, "", "__init__"], [332, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[333, 2, 1, "", "__init__"], [333, 6, 1, "", "center"], [333, 2, 1, "", "contains"], [333, 2, 1, "", "create"], [333, 2, 1, "", "from_dict"], [333, 2, 1, "", "from_json"], [333, 6, 1, "", "is_bounded"], [333, 6, 1, "", "is_degenerate"], [333, 6, 1, "", "is_fully_unbounded"], [333, 6, 1, "", "is_half_bounded"], [333, 6, 1, "", "is_left_bounded"], [333, 6, 1, "", "is_right_bounded"], [333, 3, 1, "", "lower"], [333, 2, 1, "", "to_dict"], [333, 2, 1, "", "to_json"], [333, 2, 1, "", "to_ndarray"], [333, 2, 1, "", "to_tensor"], [333, 2, 1, "", "to_tuple"], [333, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[333, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[333, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[333, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[334, 4, 1, "", "bounds"]], "baybe.utils.memory": [[337, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[337, 4, 1, "", "num"]], "baybe.utils.numerical": [[339, 3, 1, "", "DTypeFloatNumpy"], [340, 3, 1, "", "DTypeFloatONNX"], [341, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [342, 5, 1, "", "closer_element"], [343, 5, 1, "", "closest_element"], [344, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[342, 4, 1, "", "target"], [342, 4, 1, "", "x"], [342, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[343, 4, 1, "", "array"], [343, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[344, 4, 1, "", "arr"], [344, 4, 1, "", "weights"]], "baybe.utils.plotting": [[346, 5, 1, "", "create_example_plots"], [347, 5, 1, "", "indent"], [348, 5, 1, "", "to_string"]], "baybe.utils.plotting.create_example_plots.params": [[346, 4, 1, "", "ax"], [346, 4, 1, "", "base_name"], [346, 4, 1, "", "path"]], "baybe.utils.plotting.to_string.params": [[348, 4, 1, "", "*fields"], [348, 4, 1, "", "header"], [348, 4, 1, "", "single_line"]], "baybe.utils.random": [[350, 5, 1, "", "set_random_seed"], [351, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[350, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[351, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[353, 1, 1, "", "DiscreteSamplingMethod"], [354, 5, 1, "", "farthest_point_sampling"], [355, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[353, 3, 1, "", "FPS"], [353, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[354, 4, 1, "", "initialization"], [354, 4, 1, "", "n_samples"], [354, 4, 1, "", "points"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[355, 4, 1, "", "df"], [355, 4, 1, "", "method"], [355, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[357, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[357, 2, 1, "", "__init__"], [357, 2, 1, "", "fit"], [357, 3, 1, "", "mapping"], [357, 2, 1, "", "transform"]], "baybe.utils.torch": [[359, 8, 1, "", "DTypeFloatTorch"], [360, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[362, 5, 1, "", "finite_float"], [363, 5, 1, "", "non_inf_float"], [364, 5, 1, "", "non_nan_float"], [365, 5, 1, "", "validate_not_nan"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 175, 191, 193, 199, 216, 231, 233, 234, 237, 241, 244, 255, 257, 259, 261, 271, 273, 279, 300, 330, 333, 366, 369, 376, 380, 383, 384, 387, 388, 390, 391, 392, 393, 394, 400, 404, 405, 406, 408, 409, 410, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427], "0": [8, 18, 30, 40, 41, 47, 90, 125, 133, 136, 154, 162, 163, 164, 175, 199, 222, 224, 281, 282, 283, 291, 292, 309, 320, 321, 325, 326, 340, 368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 383, 384, 385, 387, 388, 390, 391, 393, 395, 397, 398, 399, 401, 402, 403, 405, 406, 408, 413, 414, 417, 419, 420, 422, 423, 424, 426, 429], "00": [399, 422], "000": [380, 401], "001": [320, 417], "0011432009999907677": 383, "001354": 391, "005": [368, 369, 370, 372, 373], "009290": 395, "01": [154, 375, 376, 381, 384, 398, 399, 406], "015236": 399, "016448": 391, "02": 406, "021": [253, 325], "028524": 391, "028728": 397, "03213": [253, 325], "034209": 397, "035201": 391, "041217": 391, "05": 406, "053246": 398, "054263": 395, "056119": 391, "057": [368, 369, 370, 372, 373, 383], "059010": 391, "06": [199, 265], "064341": 391, "08": 406, "080554": 399, "082085": 397, "085524": 391, "09653736976391157": 393, "0f": 384, "1": [22, 27, 40, 90, 111, 125, 136, 165, 175, 191, 222, 224, 226, 228, 281, 282, 283, 288, 291, 292, 299, 309, 321, 326, 340, 344, 354, 367, 368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 383, 384, 385, 387, 388, 390, 391, 393, 395, 397, 398, 399, 401, 402, 403, 405, 406, 408, 409, 413, 416, 417, 419, 420, 422, 423, 424, 426, 429], "10": [175, 224, 253, 325, 367, 369, 378, 379, 380, 381, 384, 387, 388, 390, 391, 393, 395, 397, 401, 402, 403, 405, 406, 408, 415, 420, 424, 429], "100": [373, 378, 379, 380, 381, 384, 387, 388, 390, 391, 395, 401, 406, 419, 420, 424, 426, 429], "1000": 424, "102": 398, "1024": [130, 410, 420], "1038": [253, 325], "104": 395, "105": [368, 369, 370, 372, 373, 383, 395, 422], "107293": 373, "107583": 391, "108": 399, "109317": 395, "109385": 397, "109563": 399, "11": [295, 390, 391, 409], "111": 401, "112009": 391, "113029": 395, "1147": 380, "1148": 380, "1149": 380, "1150": 380, "12": [390, 391, 398, 399, 411, 422], "120": [368, 369, 370, 372, 373, 378, 380, 383, 420], "120000": 398, "122": 401, "126": [378, 380, 381, 409], "1268824": [368, 369, 370], "128": 10, "129267": 391, "129415": 397, "13": [390, 391, 405, 422], "1337": [384, 385, 429], "134087": 391, "136": 395, "137": 395, "14": [390, 391, 398, 422], "14448993259018328": 393, "1454": 410, "148266": 391, "15": [224, 373, 380, 390, 391, 395, 405, 406, 408, 416, 422], "150": [378, 381, 417], "1500": 420, "151": 380, "153": [368, 369, 370, 372, 373, 383], "156": 395, "16": [329, 340, 390, 391], "160": 373, "164": 395, "165": 395, "165949": 391, "168129": 391, "169133": 391, "17": [390, 391], "177": 401, "177040": 391, "179": 395, "18": [373, 390, 391, 416], "180": 378, "183175": 391, "184579": 397, "187439": 397, "188": 401, "19": 390, "192": [380, 395], "197273": 395, "1e": [199, 265], "2": [8, 18, 90, 92, 111, 224, 291, 292, 299, 319, 326, 344, 354, 367, 368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 384, 385, 387, 388, 390, 391, 393, 395, 397, 398, 399, 401, 402, 403, 405, 406, 408, 413, 416, 417, 419, 420, 422, 423, 424, 426], "20": [136, 224, 367, 368, 369, 370, 384, 385, 390, 391, 395, 410, 420, 427, 429], "200": [369, 378, 380, 387, 388, 393, 401], "2004": 413, "2007": 427, "201926": 391, "2021": 369, "2022": 408, "2024": 408, "206273": 391, "209317": 391, "21": [390, 391, 402], "212241": 391, "22": [390, 391, 395, 399], "221": [398, 410], "221150": 391, "222": 401, "225134": 391, "227726": 397, "23": [390, 391, 424], "236": 398, "24": [372, 379, 390, 422], "240324": 391, "240375": 397, "240936": 391, "241": 420, "25": [372, 384, 390, 405, 422], "250": 414, "26": [390, 391, 422], "260": 373, "265046": 397, "265706": 391, "265852": 397, "267092": 397, "27": [390, 395, 422], "273367": 391, "275267": 391, "277": 395, "277269": 391, "278": 395, "279": 395, "28": [390, 391, 395], "280": 395, "280518": 391, "29": [390, 395, 408], "292764": 399, "3": [224, 291, 292, 295, 299, 326, 329, 347, 368, 369, 370, 373, 376, 378, 379, 380, 381, 383, 385, 388, 390, 391, 393, 395, 397, 398, 399, 401, 402, 405, 406, 408, 409, 411, 413, 416, 417, 420, 422, 423, 424, 426, 427], "30": [367, 381, 385, 390, 391, 420], "300648": 395, "300899": 397, "303668": 395, "306109": 395, "3078f3": 410, "31": [390, 402], "314531": 391, "317399": 391, "318983": 373, "32": [379, 390, 391, 395, 420], "320133": 397, "33": [379, 390, 391, 395], "332": 372, "333": 372, "34": 379, "340360": 391, "346487": 391, "35": [379, 390, 395], "352922": 395, "367965": 397, "370398": 391, "376050": 398, "379398": 395, "38": [391, 395], "380100": 391, "383176": 397, "39": 420, "3d": 385, "4": [130, 291, 292, 329, 375, 376, 378, 379, 380, 381, 385, 390, 391, 393, 395, 397, 398, 399, 408, 413, 416, 417, 420, 422], "40": [390, 395, 419, 420], "400055": 391, "402440": 397, "404614": 397, "409066": 391, "41": 391, "414159": 397, "414774": 391, "42": 393, "425": 373, "435083": 391, "437619": 397, "443877": 399, "447": 378, "448": 378, "449": 378, "45": [390, 395, 426], "450": 378, "459915": 391, "462473": 395, "467422": 395, "468615": 395, "469297": 397, "47": 391, "473606": 391, "485186": 395, "487011": 395, "493063": 391, "493154": 397, "493642": 395, "5": [90, 136, 291, 292, 368, 370, 375, 378, 379, 380, 381, 384, 387, 388, 390, 391, 395, 397, 398, 399, 401, 402, 403, 405, 406, 408, 413, 414, 415, 416, 417, 420, 422, 424, 427, 429], "50": [381, 388, 390, 393, 395, 405, 406, 413, 414, 420, 422, 426], "500": [385, 420], "5066666666666667": 393, "51": 395, "518253": 399, "518533": 397, "518588": 397, "52": 391, "523343": 399, "53": 395, "5313": 305, "538775": 397, "539079": 395, "54": [395, 408], "546185": 391, "546726": 397, "55": [395, 426], "551162": 391, "555786": 391, "56": [395, 424], "562265": 391, "565947": 391, "574174": 397, "578186": 391, "585065": 395, "589221": 395, "589631": 391, "59": [391, 401, 408], "590": 369, "6": [291, 292, 329, 368, 369, 370, 378, 379, 380, 381, 390, 391, 393, 395, 397, 399, 401, 413, 417, 422], "60": [391, 395, 419], "602792": 395, "608195": 391, "611707": 395, "619536": 395, "62": 393, "634107": 395, "638178": 391, "64": 175, "65": 393, "651318": 397, "651560": 399, "653132": 395, "654267": 395, "66368270ffd51418ec58bd793f2d9b1b": 427, "69": [368, 369, 370], "693371": 395, "695349": 391, "7": [136, 291, 292, 325, 379, 381, 385, 390, 391, 395, 397, 405, 413, 420, 422], "70": [390, 395], "701693": 397, "703786": 391, "705050": 395, "706667": 398, "708263": 373, "71": 420, "718594": 391, "720234": 391, "720440": 395, "721598": 372, "725407": 399, "729366": 399, "732870": 397, "733908": 397, "735445": 397, "74": 395, "745": 429, "75": [390, 422], "751529": 391, "752655": 397, "753269": 395, "758791": 391, "763592": 397, "764619": 395, "778": 401, "779493": 397, "78": 391, "780768": 391, "786507": 391, "786675": 391, "788029": 391, "79": 408, "794874": 391, "796152": 391, "7gz": 420, "7hf": 420, "8": [292, 368, 370, 378, 380, 381, 390, 391, 393, 395, 397, 408, 413, 417], "80": [391, 395, 417], "801503": 397, "813397": 391, "815482": 395, "830623": 391, "832090": 395, "834296": 391, "837927": 397, "8389": 305, "84": [395, 399], "8417": 305, "846714": 391, "856791": 397, "857": 380, "861": 381, "862": 381, "863": 381, "864": 381, "87": [399, 401], "879575": 397, "879593": 391, "88": 401, "8859": 387, "888058": 391, "889": 401, "89": [369, 398, 401], "8jq": 420, "9": [373, 381, 385, 390, 391, 395, 397, 399, 413, 416, 422, 423], "90": [368, 369, 370, 372, 373, 383, 401, 422], "902588": 395, "914220": 391, "920940": 391, "931038": 399, "942968": 391, "943999": 391, "944191": 397, "945034": 391, "947177": 372, "95": 395, "96": 369, "962102": 391, "982455": 395, "986144": 395, "988433": 391, "989015": 399, "991186": 395, "996571": 391, "999": 417, "A": [0, 8, 18, 22, 27, 34, 36, 37, 38, 40, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 65, 67, 68, 69, 70, 73, 75, 77, 80, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 108, 110, 111, 115, 119, 122, 123, 125, 133, 136, 138, 147, 148, 149, 150, 151, 152, 153, 154, 157, 163, 164, 165, 167, 170, 173, 175, 177, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 200, 201, 216, 217, 222, 224, 226, 228, 231, 233, 234, 237, 241, 243, 244, 251, 253, 255, 257, 259, 261, 267, 271, 273, 279, 281, 282, 283, 291, 295, 297, 298, 299, 302, 312, 319, 325, 326, 328, 337, 344, 352, 354, 357, 367, 379, 388, 390, 391, 393, 395, 402, 403, 409, 410, 411, 413, 417, 420, 421, 422, 423, 426, 427], "AND": [50, 380, 413, 417], "AS": [408, 413], "And": 387, "As": [368, 369, 370, 385, 393, 395, 405, 406, 408, 409, 410, 417, 421, 422, 424], "At": 426, "But": 426, "By": [80, 110, 123, 138, 199, 308, 326, 391, 411, 418, 421, 422], "FOR": 413, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 144, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 198, 199, 222, 228, 231, 233, 234, 235, 237, 241, 244, 251, 253, 255, 257, 259, 261, 271, 273, 279, 284, 304, 327, 333, 346, 357, 368, 369, 370, 372, 373, 379, 383, 384, 385, 390, 391, 393, 395, 399, 405, 406, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429], "If": [6, 13, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 80, 82, 105, 110, 111, 115, 138, 142, 143, 163, 164, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 205, 206, 222, 224, 226, 228, 231, 233, 234, 237, 241, 255, 257, 259, 261, 282, 287, 292, 297, 298, 302, 304, 307, 309, 312, 316, 319, 320, 321, 325, 326, 327, 328, 346, 348, 354, 355, 373, 375, 384, 390, 398, 399, 402, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 427, 429], "In": [27, 41, 53, 175, 193, 220, 222, 302, 329, 368, 369, 370, 372, 384, 385, 387, 390, 391, 393, 395, 398, 399, 402, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429], "It": [22, 157, 164, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 220, 236, 257, 319, 368, 372, 373, 379, 388, 390, 393, 395, 399, 401, 402, 403, 405, 408, 415, 416, 417, 418, 420, 421, 422, 424, 429], "Its": [224, 387], "No": [397, 410], "Not": [413, 417], "OF": [408, 413], "OR": [408, 413], "Of": [373, 382, 407, 423], "On": [387, 393], "One": [127, 368, 370, 408], "Or": 418, "Such": [373, 417, 424], "That": [193, 224, 231, 233, 234, 237, 241, 255, 257, 259, 261, 282, 373, 378, 390, 411, 422, 424, 427], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 80, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 111, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 144, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 198, 199, 211, 212, 214, 216, 220, 222, 224, 226, 231, 233, 234, 235, 237, 241, 244, 255, 257, 259, 261, 263, 265, 267, 268, 271, 273, 276, 279, 281, 282, 283, 285, 287, 288, 291, 292, 295, 297, 298, 299, 302, 304, 307, 308, 309, 312, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 337, 342, 343, 344, 346, 348, 350, 351, 354, 355, 368, 369, 370, 373, 378, 379, 380, 381, 383, 384, 385, 387, 388, 390, 395, 398, 399, 403, 405, 406, 409, 410, 411, 413, 416, 417, 418, 419, 420, 421, 422, 425, 426, 428, 429], "Then": 385, "There": [72, 265, 340, 390, 397, 408, 409, 411, 415, 422], "These": [285, 366, 369, 370, 371, 374, 377, 382, 386, 389, 392, 394, 396, 400, 404, 411, 415, 417, 418, 420, 422], "To": [368, 373, 384, 385, 391, 393, 401, 405, 406, 408, 409, 411, 415, 416, 418, 420, 424], "Will": 414, "With": [319, 384, 385, 390, 393, 405, 406, 408, 415, 417, 420, 423], "_": [142, 143, 196, 202, 209, 346, 375, 384, 406], "__class__": [383, 393], "__excepthook__": 409, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 198, 199, 231, 233, 234, 235, 237, 241, 243, 244, 251, 253, 255, 257, 259, 261, 271, 273, 279, 294, 295, 332, 333, 357, 422, 423], "__name__": [383, 393], "__new__": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 127, 128, 130, 332], "__str__": 410, "__version__": 410, "_amount": 390, "_arraylik": 322, "_c": 298, "_cumbest": 222, "_default_my_attribut": 411, "_fit": 268, "_has_switch": 165, "_iterbest": 222, "_label": 390, "_measur": 222, "_n_last_measur": [162, 163, 164], "_nbase": 314, "_nestedsequ": [111, 281, 282, 283, 343], "_no_tl": 405, "_option": 410, "_posterior": 268, "_step": [162, 163, 164], "_supportsarrai": [111, 281, 282, 283, 343], "_surrogate_model": [384, 385], "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 191, 193, 199, 204, 212, 213, 216, 231, 233, 234, 237, 241, 244, 255, 257, 259, 261, 271, 273, 279, 299, 300, 301, 317, 328, 333], "_target": 410, "_tparamet": 138, "_tsurrog": 264, "_u": 299, "_validate_my_attribut": 411, "_was_us": [162, 163, 164], "a1": 292, "a2": 292, "ab": [381, 390], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 296, 303, 410, 428], "abc": [20, 30, 31, 32, 33, 34, 36, 85, 86, 87, 105, 119, 120, 146, 160, 170, 173, 180, 185, 233, 234, 271, 308], "abil": [414, 427], "abl": [385, 409, 415, 417, 420, 423, 429], "about": [22, 27, 120, 136, 271, 288, 368, 369, 370, 390, 398, 399, 408, 410, 411, 420, 422], "abov": [265, 283, 308, 325, 367, 373, 380, 381, 383, 384, 391, 397, 408, 411, 413, 414, 415, 416, 417, 418, 420, 423, 424, 427], "absenc": 419, "absolut": [133, 321, 408], "abstract": [20, 30, 31, 32, 33, 34, 36, 85, 86, 87, 105, 118, 119, 120, 146, 160, 170, 173, 180, 234, 271, 297, 298, 308, 410, 417, 427], "abstractli": 393, "acceler": [408, 410, 412, 427], "accept": [27, 163, 241, 322, 327, 384, 385, 410, 413, 418, 419, 420, 424, 426], "access": [191, 199, 231, 233, 234, 237, 241, 255, 257, 259, 261, 368, 369, 370, 378, 383, 406, 410, 417, 423], "accord": [40, 158, 391, 414, 417, 418, 421, 429], "accordingli": [175, 416, 423], "account": 415, "accumul": [148, 393, 427], "accur": 416, "acet": [368, 369, 370, 372, 373], "aceton": 390, "achiev": [17, 199, 385, 390, 393, 408, 411, 414, 416, 417], "ack": 408, "acq_funct": 373, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 384, 385, 393], "acqf1": 423, "acqf2": 423, "acqf_valu": 384, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 63, 69, 173, 175, 378, 379, 380, 381, 384, 385, 393, 395, 401, 408, 410, 414, 421, 423, 425], "acquisition_funct": [173, 175, 373, 393, 402, 403, 410], "acquisition_function_cl": [173, 175, 410], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 22, 24, 25, 173, 175, 393, 423], "across": [390, 393, 405, 415, 421, 427], "act": [390, 410, 413, 417, 424], "action": [17, 383, 393, 410, 428], "activ": [13, 30, 123, 165, 384, 385, 393, 408, 409, 410, 411, 417, 418, 419, 421, 427, 428, 429], "active_dim": [85, 86, 87, 90, 92, 94, 95, 96], "active_valu": [123, 405, 406, 427], "actual": [163, 193, 220, 398, 410, 422, 424, 427, 429], "ad": [27, 199, 287, 291, 319, 354, 390, 391, 411, 414, 418, 419, 420, 425, 426, 428], "adapt": [164, 253, 309, 325], "add": [27, 214, 224, 319, 320, 373, 387, 388, 390, 395, 405, 408, 413, 415, 416, 417, 422, 427, 429], "add_collection3d": 385, "add_fake_measur": [372, 373, 378, 379, 380, 381, 387, 388, 395, 410, 415, 424, 429], "add_fake_result": 410, "add_measur": [27, 372, 373, 375, 376, 378, 379, 380, 381, 385, 387, 388, 393, 395, 398, 399, 408, 410, 415, 416, 418], "add_noise_to_perturb_degenerate_row": 410, "add_parameter_nois": [410, 429], "add_subplot": 385, "addendum": 413, "addit": [27, 80, 105, 110, 115, 163, 175, 193, 214, 222, 224, 226, 321, 368, 369, 370, 391, 398, 406, 408, 410, 412, 413, 416, 417, 418, 419, 420, 422, 423, 424, 427, 429], "addition": [383, 391, 408], "additivekernel": 410, "address": 424, "adher": [410, 411], "adjust": [164, 369, 373, 398, 410], "adopt": 373, "adrian": [408, 412], "advanc": [164, 393, 409, 410, 418, 423, 427, 428], "advantag": [390, 411], "advic": 411, "advis": [413, 424], "affect": [27, 49, 175, 291, 383, 401, 409, 417], "affected_paramet": [49, 378, 379, 380, 381, 390, 417], "affili": [408, 418], "afford": 416, "aforement": [193, 418], "after": [165, 199, 304, 372, 373, 378, 379, 380, 381, 385, 395, 401, 408, 416, 423], "afterward": 423, "again": [384, 415, 417, 421, 427], "against": [76, 287, 302, 390, 413, 427], "agent": 391, "agraw": 412, "agre": [408, 413], "agreement": 413, "ai": [83, 144, 340], "aim": 416, "akin": 415, "al": [369, 408, 420], "aldrich": 412, "alex": 412, "alexand": [408, 412], "algorithm": [168, 175, 319, 352, 354, 367, 390, 395, 408, 410, 415, 421], "alia": [135, 177, 420], "alias": 410, "align": [80, 191, 304, 384, 422, 427], "all": [19, 20, 29, 31, 36, 49, 51, 84, 85, 86, 87, 104, 105, 110, 117, 120, 123, 125, 129, 136, 145, 146, 156, 159, 160, 163, 169, 170, 172, 175, 179, 180, 193, 200, 201, 224, 231, 232, 234, 270, 271, 291, 301, 302, 319, 368, 369, 370, 373, 375, 376, 378, 379, 383, 384, 385, 390, 391, 393, 395, 397, 398, 405, 406, 408, 410, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429], "allclos": [375, 376, 391], "alleg": 413, "allow": [17, 30, 40, 47, 51, 105, 110, 115, 133, 138, 164, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 193, 199, 226, 288, 307, 327, 328, 368, 369, 370, 373, 390, 391, 405, 406, 408, 410, 414, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 429], "allow_extra": [105, 110, 115, 191, 193, 199, 204, 328, 395, 410], "allow_miss": [105, 110, 115, 191, 193, 199, 204, 328, 410], "allow_recommending_already_measur": [167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 199, 373, 384, 393, 402, 403, 410, 421], "allow_recommending_pending_experi": [167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 410, 415, 421], "allow_repeated_recommend": [167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 199, 373, 384, 393, 402, 403, 410, 421], "almost": 369, "alon": [410, 413], "along": [344, 413, 420, 427], "alongsid": 413, "alpha": [148, 385], "alphabet": [139, 410], "alreadi": [27, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 199, 373, 390, 399, 408, 410, 414, 415, 421, 422, 424, 425, 427, 429], "also": [53, 80, 138, 231, 233, 234, 237, 241, 255, 257, 259, 261, 288, 302, 304, 319, 320, 321, 368, 375, 376, 384, 385, 387, 388, 390, 395, 398, 399, 401, 405, 406, 408, 410, 411, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429], "alter": [390, 410, 416], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 265, 344, 383, 390, 391, 397, 408, 410, 428, 429], "although": [390, 399, 402, 422, 424], "alwai": [13, 27, 36, 209, 210, 387, 390, 391, 408, 414, 416, 417, 424, 425, 427, 429], "ambigu": [133, 422], "amend": 417, "among": [30, 390, 408, 427], "amount": [292, 347, 355, 391, 405, 406, 415, 420, 429], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 63, 64, 66, 69, 74, 76, 77, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 106, 108, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 212, 214, 216, 220, 222, 224, 226, 231, 233, 234, 237, 238, 241, 244, 255, 257, 259, 261, 263, 264, 271, 273, 279, 291, 300, 302, 304, 307, 313, 317, 325, 326, 327, 329, 332, 333, 334, 343, 346, 348, 354, 355, 368, 370, 371, 373, 380, 381, 383, 384, 387, 388, 391, 395, 397, 401, 402, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427], "analog": [193, 319, 422, 423], "analogi": [158, 421], "analysi": [408, 425], "analyt": [3, 4, 7, 8, 69, 424, 427], "analyz": [408, 411], "angl": 385, "ani": [57, 58, 80, 111, 118, 119, 120, 122, 123, 125, 136, 138, 141, 142, 143, 199, 209, 210, 214, 218, 219, 226, 255, 259, 261, 281, 282, 283, 288, 291, 301, 302, 304, 305, 307, 308, 327, 333, 335, 343, 348, 362, 363, 364, 365, 383, 390, 405, 406, 408, 409, 410, 411, 413, 415, 416, 418, 420, 423, 424, 427], "annot": [304, 383, 413], "anonym": [408, 418], "anoth": [49, 334, 369, 379, 380, 387, 388, 390, 399, 411, 417, 427], "ansatz": 410, "answer": 416, "anti": 326, "anymor": [410, 427], "anyth": 309, "anywai": 425, "anywher": 375, "apach": [408, 413], "apart": [411, 416], "api": [41, 408, 409, 423], "appar": 423, "appdata": 409, "appear": [302, 409, 410, 413, 423], "append": [385, 406], "appendix": 413, "appli": [27, 36, 37, 38, 53, 175, 193, 220, 222, 302, 313, 321, 357, 373, 374, 377, 378, 380, 381, 383, 384, 390, 405, 409, 410, 413, 417, 419, 421, 422, 423, 424, 425, 426, 427], "applic": [348, 408, 411, 413, 420, 421, 424], "approach": [199, 384, 393, 408, 411, 414, 416, 421, 423, 427], "appropri": [43, 44, 102, 199, 393, 411, 413, 422], "approxim": [10, 17], "ar": [6, 12, 14, 27, 30, 34, 36, 37, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 62, 70, 71, 72, 80, 105, 110, 111, 115, 123, 136, 138, 143, 157, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 222, 224, 226, 228, 231, 233, 234, 237, 241, 255, 257, 259, 261, 283, 285, 287, 288, 291, 292, 297, 298, 299, 301, 302, 304, 308, 309, 319, 320, 322, 323, 327, 328, 346, 354, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 383, 384, 385, 388, 390, 391, 393, 395, 397, 398, 401, 402, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429], "arang": [375, 385, 420], "arbitrari": [164, 193, 335, 410, 417, 420, 421, 424, 427, 429], "arbitrarili": [419, 423], "architectur": [268, 410, 425, 427], "ard_num_dim": [85, 86, 87, 90, 92, 94, 95, 96], "area": 385, "arg": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 89, 91, 93, 98, 99, 100, 146, 148, 149, 150, 151, 152, 153, 154, 157, 177, 235, 238, 243, 332, 411], "argu": 390, "argument": [77, 80, 83, 136, 138, 144, 160, 162, 163, 164, 165, 191, 199, 235, 304, 326, 373, 388, 395, 410, 417, 420, 421, 422, 423, 424, 427], "aris": [52, 390, 410, 413, 417, 423, 429], "arithmet": [113, 419], "arizona": 412, "arm": [230, 231, 407, 412], "arm_index": 393, "around": [184, 226, 228, 395, 410, 421, 423, 429], "arr": [281, 282, 283, 344], "arrai": [111, 281, 282, 283, 294, 322, 330, 339, 343, 344, 354, 385, 410, 421, 425], "arrays_to_datafram": [375, 376, 385, 398, 399, 405, 406, 410, 424], "arriv": 408, "artifici": 429, "aryl": [368, 369, 370, 372, 408, 420], "ascend": 395, "ask": [390, 408, 410, 411, 416], "aspect": [371, 375, 376, 399, 415, 418], "assembl": [390, 423], "assembli": 428, "assert": [58, 378, 379, 380, 381, 387, 388, 390, 391, 397, 401, 410, 413, 416, 417, 423], "assess": 424, "assign": [319, 384, 391, 397, 420], "associ": [193, 393, 413, 416, 418, 419, 427], "assum": [22, 41, 236, 304, 328, 368, 369, 370, 373, 375, 376, 378, 379, 380, 381, 387, 388, 390, 393, 395, 398, 399, 401, 408, 413, 417, 420, 423, 425, 426, 429], "assumpt": 424, "assur": 417, "asynchron": [408, 421, 428], "atol": [375, 376], "atompair": 130, "atompairfingerprint": 130, "attach": [22, 304, 383, 384, 385, 413], "attempt": [68, 74, 236, 346, 393, 409, 410, 415, 417, 421], "attent": 165, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 198, 199, 231, 233, 234, 237, 241, 244, 251, 253, 255, 257, 259, 261, 271, 273, 279, 302, 305, 333, 357, 365, 410], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 76, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 113, 115, 118, 119, 120, 122, 123, 125, 127, 128, 130, 132, 133, 134, 136, 138, 141, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 194, 198, 199, 208, 212, 214, 231, 233, 234, 237, 241, 244, 248, 251, 253, 255, 257, 259, 261, 268, 271, 272, 273, 276, 277, 279, 302, 317, 328, 333, 338, 353, 357, 358, 361, 362, 363, 364, 365, 397, 410, 411, 413, 421, 423, 425, 426], "audit": [408, 410, 411], "augment": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 193, 263, 264, 265, 410, 416], "author": 413, "authorship": 413, "auto": [12, 14, 410, 412], "auto_tutori": 340, "autocorr": 130, "autocorrfingerprint": 130, "autodoc": 410, "automat": [27, 108, 175, 241, 327, 367, 385, 398, 409, 410, 411, 419, 421, 422, 427, 428], "avail": [2, 113, 125, 127, 128, 130, 136, 163, 164, 199, 222, 224, 248, 276, 277, 288, 353, 354, 355, 370, 372, 375, 376, 390, 395, 398, 399, 408, 409, 410, 411, 413, 415, 416, 418, 420, 421, 422, 423, 424, 427, 428], "available_acq_funct": 373, "avalon": 130, "avalonfingerprint": 130, "averag": [257, 384, 385, 406, 420, 424], "avoid": [193, 305, 344, 410, 411, 415, 416, 420, 422], "awai": 426, "awar": [390, 405, 406, 414, 423], "ax": [80, 346, 367, 369, 384, 385, 405, 406], "axes3d": [346, 385], "axi": [191, 222, 344, 367, 375, 376, 381, 384, 385, 390, 391, 393, 395, 398, 399, 405, 406, 422], "azim": 385, "azur": 410, "b": [52, 154, 253, 291, 299, 325, 326, 369, 379, 388, 393, 402, 403, 408, 411, 413, 416, 420, 423], "b1": 292, "b2": 292, "back": [0, 401, 411], "backend": 288, "background": [80, 82], "background_data": 80, "backport": 409, "backtest": [220, 221, 227, 368, 369, 370, 384, 404, 407, 408, 410, 421, 424], "backtick": 411, "backward": [101, 107, 176, 177, 193, 410], "bad": [395, 416, 418, 426], "bad_interv": 319, "badg": 410, "bai": 408, "baird": 412, "balanc": [110, 393, 408], "banana": 411, "bandit": [231, 373, 407, 408, 410, 412], "banner": 410, "bar": [80, 387, 388, 390, 401, 402, 403, 408, 410, 425], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 113, 115, 118, 119, 120, 122, 123, 125, 127, 128, 129, 130, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 161, 162, 163, 164, 165, 167, 170, 173, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 193, 194, 198, 199, 212, 214, 216, 231, 233, 234, 235, 236, 237, 241, 243, 244, 248, 251, 253, 255, 257, 259, 261, 265, 267, 271, 273, 276, 277, 279, 294, 295, 296, 297, 298, 322, 326, 333, 346, 353, 354, 357, 367, 372, 373, 384, 385, 387, 389, 393, 407, 408, 410, 413, 414, 417, 418, 420, 421, 422, 423, 425], "base1": 391, "base2": 391, "base_data": 384, "base_kernel": [98, 99, 100], "base_nam": [346, 367, 369, 384, 385, 405, 406], "base_predictor": 263, "base_smil": 384, "basefingerprinttransform": 312, "baselin": [367, 369, 405, 408, 420], "basesequentialmetarecommend": [163, 164], "bashrc": 418, "basi": [94, 408, 413], "basic": [85, 89, 90, 91, 92, 93, 94, 95, 96, 148, 149, 150, 151, 152, 153, 154, 222, 294, 295, 368, 369, 370, 373, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390, 395, 398, 399, 400, 401, 404, 407, 410, 411, 419, 420, 424, 428], "basic_transfer_learn": 406, "basickernel": [89, 90, 91, 92, 93, 94, 95, 96, 410], "batch": [27, 157, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 225, 263, 264, 373, 378, 379, 380, 381, 385, 395, 398, 399, 401, 405, 406, 410, 415, 421, 424], "batch_quant": 410, "batch_shap": [85, 86, 87, 90, 92, 94, 95, 96], "batch_siz": [27, 40, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 222, 226, 228, 367, 368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 383, 384, 385, 387, 388, 391, 393, 395, 398, 399, 401, 402, 405, 406, 408, 410, 415, 416, 418, 424], "batchnr": 395, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 113, 115, 118, 119, 120, 122, 123, 125, 127, 128, 129, 130, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 194, 198, 199, 216, 231, 233, 234, 235, 237, 241, 243, 244, 248, 251, 253, 255, 257, 259, 261, 271, 273, 276, 277, 279, 294, 295, 333, 353, 357, 366, 367, 368, 369, 370, 371, 373, 375, 376, 378, 379, 380, 381, 383, 384, 385, 387, 388, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429], "baybe_cach": 418, "baybe_cache_dir": [410, 418], "baybe_deactivate_polar": [410, 418], "baybe_debug_fake_hosthash": 410, "baybe_debug_fake_userhash": 410, "baybe_numpy_use_single_precis": [341, 410, 418], "baybe_telemetry_en": [408, 418], "baybe_telemetry_endpoint": [410, 418], "baybe_telemetry_host": 410, "baybe_telemetry_hostnam": [410, 418], "baybe_telemetry_usernam": [410, 418], "baybe_telemetry_vpn_check": [410, 418], "baybe_telemetry_vpn_check_timeout": [410, 418], "baybe_torch_use_single_precis": [360, 410, 418], "bayesian": [0, 167, 173, 175, 220, 222, 226, 228, 236, 255, 393, 410, 414, 416, 425, 428], "bayesian_recommend": 385, "bayesianlinearmodel": 388, "bayesianlinearsurrog": [373, 425], "bayesianrecommend": [167, 175, 236, 410, 421], "bayesianridg": 387, "bcw07": 427, "becaus": [72, 133, 193, 199, 228, 308, 383, 384, 390, 406, 411, 414, 416, 417, 418, 419, 420, 423, 424, 427], "becom": [193, 390, 410, 414, 416, 417, 423, 426, 429], "been": [22, 68, 69, 163, 199, 231, 233, 234, 237, 241, 255, 257, 259, 261, 327, 368, 369, 373, 408, 409, 410, 413, 415, 421, 427], "beeswarm": 80, "befor": [68, 165, 222, 231, 233, 234, 237, 241, 255, 257, 259, 261, 304, 367, 370, 373, 379, 384, 408, 410, 411, 418, 420, 422], "begin": [163, 378, 380, 397, 401, 421], "behalf": 413, "behav": [385, 401, 423], "behavior": [175, 408, 410, 418, 419, 421, 422, 427], "behind": [419, 423, 424, 426], "being": [100, 319, 346, 393, 409, 410, 417, 418, 420, 422], "bell": [277, 281, 395, 426], "belong": [383, 423], "below": [165, 265, 283, 380, 383, 384, 390, 411, 413, 414, 416, 417, 419, 423, 425, 426, 427], "benchmark": [408, 410, 412], "benefici": [413, 414, 418], "benefit": [417, 427], "benzo": 427, "bernoulli": [231, 392, 407, 412], "besid": [408, 419, 426], "best": [12, 14, 222, 224, 226, 370, 393, 408, 418, 421], "bet": 416, "beta": [8, 18, 148, 231, 373, 410, 414], "betabernoullimultiarmedbanditsurrog": [373, 393, 410], "betaprior": [231, 410], "better": [10, 319, 369, 410, 416, 417, 420], "between": [30, 49, 133, 164, 191, 199, 251, 326, 383, 385, 390, 393, 395, 399, 405, 406, 408, 410, 411, 415, 416, 417, 418, 420, 421, 422, 423, 426, 427], "beyond": 408, "bias": 420, "bin": 390, "binar": 410, "binari": [273, 401, 409, 410, 423], "binarytarget": [274, 393, 410], "bind": [383, 385, 413], "bit": [410, 420], "black": [220, 424, 427], "blackbox": [366, 367, 407], "blank": 411, "blob": 253, "block": [384, 390, 408, 409, 410, 418, 423], "bodi": 383, "bonilla": 427, "bool": [6, 12, 14, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 81, 82, 105, 110, 111, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 204, 231, 233, 234, 237, 241, 255, 257, 259, 261, 273, 274, 281, 282, 283, 286, 287, 297, 298, 302, 303, 308, 309, 322, 326, 327, 328, 333, 343, 348, 393], "boolean": [30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 82, 118, 119, 120, 122, 123, 125, 132, 133, 136, 160, 162, 163, 164, 165, 328, 373, 418], "boost": [259, 406], "both": [10, 138, 193, 199, 228, 283, 304, 367, 379, 384, 387, 390, 391, 393, 395, 405, 406, 408, 411, 414, 417, 420, 422, 423, 426, 429], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 41, 167, 175, 177, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 375, 376, 385, 399, 405, 406, 410, 418, 421], "botorch_acqf": [22, 384, 385], "botorch_function_wrapp": 410, "botorchrecommend": [167, 177, 373, 378, 379, 380, 381, 384, 385, 387, 388, 393, 395, 399, 401, 402, 403, 408, 410, 415, 416, 421], "bottom": 416, "bound": [8, 18, 30, 132, 138, 154, 191, 193, 199, 204, 264, 279, 280, 298, 304, 328, 333, 334, 367, 373, 375, 376, 385, 391, 395, 397, 398, 399, 405, 406, 410, 420, 423, 426, 428, 429], "boundari": [199, 281, 282, 395], "boundary_onli": [199, 390], "bounded": 410, "bounds_transform_func": 410, "box": [154, 220, 424, 427], "brain": [424, 427], "branch": [408, 411], "break": [236, 423], "brettpho": [368, 369, 370, 372, 373], "briefli": [424, 427], "bring": [408, 410], "bro": 253, "broad": 423, "brute": [175, 421], "bu": [368, 369, 370, 372, 373], "bucket": 390, "budget": 416, "bug": [410, 411], "build": [191, 199, 236, 384, 390, 409, 410, 411, 417, 423, 427, 428, 429], "built": [199, 387, 408, 411, 416, 421], "builtin": 295, "bump": 410, "button": 410, "butyl": [368, 369, 370, 372, 373], "butylphenylphosphin": [368, 369, 370, 372, 373], "butyornitril": [368, 369, 370, 372, 373], "bypass": [138, 384], "byte": [111, 198, 237, 281, 282, 283, 337, 343, 410, 429], "c": [52, 291, 299, 368, 369, 370, 372, 373, 378, 379, 380, 381, 388, 390, 402, 403, 408, 409, 413, 416, 420, 422, 423], "c1": [368, 369, 370, 372, 373, 378, 379, 380, 381, 420], "c1c2": [368, 369, 370, 372, 373], "c1ccccc1": [368, 369, 370, 378, 380], "c1ccoc1": 417, "c2": [368, 369, 370, 372, 373, 378, 380, 381], "c2ccccc2": [368, 369, 370], "c2oc": [368, 369, 370, 372, 373], "c2p": [368, 369, 370, 372, 373], "c3": [368, 369, 370, 372, 373, 378, 380], "c3c": [368, 369, 370], "c3ccccc3": [368, 369, 370, 372, 373], "c4": [368, 369, 370, 378, 380], "c4ccccc4": [368, 369, 370, 372, 373], "c5": [378, 380], "c6": [378, 380], "c_g2_min": 391, "c_g3_max": 391, "c_i": 417, "c_total_sum": 391, "cach": [287, 410, 423, 428], "cached_recommend": 287, "calcul": [287, 344, 375, 385, 405, 418, 420, 422], "calibr": 427, "call": [41, 77, 160, 162, 163, 164, 165, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 287, 288, 304, 322, 368, 369, 370, 383, 388, 390, 391, 402, 403, 408, 409, 410, 414, 416, 417, 418, 420, 423, 424, 427], "callabl": [48, 76, 138, 212, 220, 222, 224, 226, 228, 263, 264, 267, 268, 295, 300, 302, 304, 322, 367, 383, 410, 428], "callable_": 302, "campaign": [80, 222, 225, 226, 228, 319, 321, 371, 372, 380, 382, 385, 393, 403, 405, 406, 407, 408, 410, 414, 415, 417, 419, 420, 422, 423, 424, 425, 427, 428, 429], "campaign1": 424, "campaign2": 424, "campaign_json": 416, "campaign_oh": 369, "campaign_rand": [368, 369, 370], "campaign_recr": 401, "campaign_stop": 384, "campaign_with_hook": 384, "campaignstoppedexcept": 384, "can": [13, 17, 22, 27, 30, 36, 37, 38, 52, 80, 119, 125, 133, 136, 157, 164, 167, 168, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 220, 224, 231, 233, 234, 235, 236, 237, 241, 255, 257, 259, 261, 265, 274, 286, 288, 302, 304, 308, 319, 321, 322, 327, 340, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 383, 384, 385, 387, 388, 390, 391, 393, 395, 397, 398, 399, 402, 405, 406, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429], "canada": 412, "candid": [12, 14, 27, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 199, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 384, 406, 410, 414, 415, 416, 421, 422], "candidates_comp_rep": 384, "cannot": [13, 75, 76, 80, 236, 237, 265, 309, 346, 393, 410, 413, 415, 417, 418, 420, 421, 423, 425, 427], "canon": [311, 423], "capabl": [366, 392, 394, 400, 404, 406, 410, 412, 416, 427], "captur": 420, "cardin": [30, 40, 47, 57, 58, 191, 410, 412], "cardinalityconstraint": [40, 47, 410], "care": [45, 390, 411, 417, 419], "carefulli": 418, "carlo": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 69, 226, 367, 369, 370, 384, 393, 405, 406, 415, 424], "carri": [304, 383, 413], "cartesian": [193, 199, 200, 201, 408, 410, 422], "case": [164, 228, 265, 304, 319, 329, 384, 389, 390, 398, 399, 402, 408, 409, 411, 414, 415, 416, 417, 418, 420, 423, 424, 426, 427, 429], "cast": [41, 410], "cat": 326, "cat_1": 395, "cat_1_22": 395, "cat_1_33": 395, "cat_2": 395, "catch_constant_target": 410, "categor": [27, 122, 123, 127, 199, 206, 327, 408, 410, 420, 422, 426], "categori": [369, 384, 408, 410, 423, 426], "categorical_1": [395, 416], "categorical_2": [395, 416], "categorical_paramet": 423, "categorical_parameter_json": 423, "categorical_parameter_reconstruct": 423, "categoricalencod": [122, 123, 378, 379, 380, 381, 395, 401], "categoricalparamet": [123, 199, 369, 378, 379, 380, 381, 388, 393, 395, 401, 402, 403, 408, 410, 422, 423, 428], "cattr": [211, 212, 214, 403, 409, 410, 411], "cauchi": 150, "caus": [133, 291, 295, 410, 413], "caution": 427, "cc": [368, 369, 370, 372, 373, 378, 380, 381, 390, 420, 427], "cc1": [368, 369, 370, 372, 373, 420], "ccc": [378, 380, 388, 408], "cccc": [368, 369, 370, 372, 373, 378, 380], "ccccc": [378, 380, 402, 403], "cccccc": [378, 380], "cccccccco": [417, 420], "ccccoc": [368, 369, 370, 372, 373], "cco": 390, "ccoccoccn": [402, 403], "cdot": [417, 419], "ceil": 384, "cell": [387, 420, 424, 427], "cell_lin": 427, "center": [281, 283, 333, 395, 416], "central": [410, 416], "certain": [27, 49, 76, 165, 212, 214, 220, 288, 301, 319, 347, 379, 384, 393, 408, 411, 417, 421, 423, 427, 429], "cesium": [368, 369, 370, 372, 373], "ch": 347, "chai": 427, "chain": [34, 160, 162, 163, 164, 165, 295, 417], "challeng": [411, 423], "chanc": 409, "chang": [49, 163, 319, 320, 321, 373, 390, 398, 408, 409, 411, 413, 416, 418, 420, 422, 427], "charact": 413, "characterist": 295, "charg": 413, "check": [27, 118, 119, 120, 122, 123, 125, 132, 133, 136, 287, 301, 303, 306, 307, 308, 309, 327, 333, 342, 398, 399, 401, 408, 410, 411, 418, 422, 423], "checker": 410, "checkout": 411, "chem": [408, 410, 420], "chemic": [313, 369, 372, 390, 410, 412, 417, 420, 427], "cheminformat": [136, 408, 410], "chemistri": [125, 378, 380, 381], "child": [182, 183, 184, 185, 411], "chocol": 411, "choic": [222, 224, 354, 383, 390, 393, 399, 410, 417, 419, 420, 421, 422, 423, 426], "choos": [158, 390, 391, 393, 395, 397, 398, 399, 408, 413, 414, 416, 421, 425, 426], "chose": [398, 423], "chosen": [66, 167, 222, 224, 228, 350, 351, 373, 393, 410, 414, 417, 420, 422], "christoph": 427, "ci": [376, 405, 406, 410, 411], "circular": 420, "circumv": [409, 423], "cl": [45, 108, 209, 213, 265, 297, 298, 303, 308, 335], "claim": 413, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 75, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 197, 198, 199, 212, 214, 215, 216, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 293, 294, 295, 296, 297, 298, 303, 308, 312, 331, 333, 348, 352, 353, 356, 357, 373, 383, 384, 387, 393, 402, 410, 416, 417, 419, 420, 421, 422, 423, 425], "classic": [393, 419], "classifi": 420, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 191, 193, 199, 216, 231, 233, 234, 237, 241, 244, 255, 257, 259, 261, 271, 273, 279, 295, 333, 410], "classvalidationerror": [403, 409], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 118, 119, 120, 122, 123, 125, 132, 133, 136, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 231, 233, 234, 237, 241, 255, 257, 259, 261], "clean": [323, 324, 325, 409, 410, 411], "clear": [340, 427], "click": [393, 420], "clone": 411, "close": [222, 228, 276, 367, 384, 405, 406, 424], "closer": [342, 420], "closest": [287, 327, 343], "closest_el": 410, "closur": [220, 424], "cluster": [182, 183, 184, 185, 373, 410, 412, 428], "clustering_x": 410, "cmap": 385, "cn": [368, 369, 370, 372, 373], "co": 390, "co1": [368, 369, 370], "co2": [368, 369, 370], "co3": [368, 369, 370], "coars": [388, 401, 402, 403, 408], "coc": [388, 402, 403, 408], "cococ": [402, 403], "code": [236, 369, 388, 393, 398, 402, 403, 408, 409, 410, 413, 417, 418, 420, 424, 427, 429], "coeffici": [41, 43, 44, 375, 376, 391, 417], "coerc": 410, "collect": [27, 57, 58, 88, 98, 99, 138, 139, 147, 163, 165, 191, 199, 205, 206, 217, 224, 289, 291, 293, 301, 302, 319, 328, 352, 354, 367, 373, 385, 390, 393, 405, 406, 408, 410, 416, 418], "color": 385, "column": [36, 37, 38, 80, 105, 110, 111, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 222, 224, 226, 228, 291, 292, 320, 322, 323, 324, 325, 326, 328, 329, 357, 369, 372, 378, 379, 380, 381, 384, 390, 395, 401, 405, 406, 410, 416, 422, 423, 424], "column_group": 292, "com": [253, 305, 325, 408, 410], "comb": 390, "combin": [50, 138, 193, 199, 200, 201, 295, 313, 368, 369, 370, 378, 380, 383, 384, 390, 395, 408, 409, 413, 417, 419, 421, 422, 424, 427, 429], "combinatori": 429, "combine_func": 102, "come": [393, 408, 416, 423, 427, 429], "command": 409, "comment": 410, "commerci": 413, "commit": [408, 410, 411], "common": [147, 387, 391, 410, 411, 413, 416, 417, 420, 423], "commonli": 419, "commun": [413, 419, 427], "comp_df": [119, 122, 123, 125, 133, 136, 410], "comp_rep": [199, 385, 387, 410, 422], "comp_rep_bound": [191, 193, 199, 410], "comp_rep_byt": [198, 429], "comp_rep_column": [118, 119, 120, 122, 123, 125, 132, 133, 136, 191, 193, 199, 410], "comp_rep_human_read": [198, 429], "comp_rep_shap": [198, 429], "comp_rep_tensor": [384, 385], "compar": [138, 163, 367, 390, 391, 393, 405, 408, 410, 411, 420, 426], "comparison": [384, 405, 406, 421, 423], "compat": [101, 107, 138, 167, 170, 173, 175, 176, 177, 180, 182, 183, 184, 185, 187, 188, 193, 194, 224, 237, 304, 328, 365, 373, 378, 379, 380, 381, 383, 385, 395, 401, 410, 421], "compens": 410, "compil": [409, 413], "complain": 411, "complaint": 411, "complement": [27, 326], "complet": [385, 390, 415, 417, 419, 423], "complex": [111, 281, 282, 283, 343, 390, 401, 405, 406, 411, 414, 415, 417, 424, 427], "compli": 413, "complianc": 408, "complic": [390, 427], "compon": [62, 390, 391, 411, 414, 416, 417, 418, 423, 427], "compos": [97, 410, 423], "composit": [86, 98, 99, 100], "compositekernel": [98, 99, 100, 410], "compound": 313, "comprehens": [408, 425], "compress": 423, "comput": [22, 27, 73, 80, 82, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 191, 193, 198, 199, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 265, 271, 273, 279, 314, 344, 378, 379, 380, 381, 383, 390, 391, 395, 401, 410, 413, 414, 416, 418, 420, 422, 423, 424, 429], "computation": 175, "concat": [375, 376, 384, 385, 395, 398, 399, 405, 406], "concentr": [148, 149, 368, 369, 370, 372, 373, 378, 383, 384, 417], "concentrati": 378, "concentration_valu": 384, "concept": [291, 390, 419, 420, 423], "concis": 410, "concret": [410, 423], "conda": 410, "condit": [30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 319, 326, 369, 375, 379, 380, 381, 390, 408, 410, 413, 427, 428], "conduct": [27, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 226, 231, 233, 234, 237, 241, 255, 257, 259, 261, 368, 369, 370, 408, 411, 416, 427], "confid": [8, 18, 373], "config": [387, 388, 400, 407, 410, 428], "config_json": 27, "configur": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 71, 72, 157, 164, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 220, 222, 228, 231, 233, 234, 235, 237, 241, 247, 255, 257, 259, 261, 319, 346, 354, 371, 372, 390, 396, 399, 403, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 427, 428, 429], "confirm": 385, "conflict": [408, 411, 419], "conform": [136, 314, 420], "confront": [393, 408], "conjunct": 425, "connect": [53, 319, 410, 418, 420, 426], "consequ": [370, 409, 417, 418, 421, 422, 424], "consequenti": 413, "consid": [8, 18, 27, 30, 31, 32, 33, 34, 37, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 110, 123, 163, 193, 199, 226, 287, 319, 327, 328, 367, 390, 393, 395, 405, 406, 408, 410, 411, 415, 417, 419, 420, 421, 423, 429], "consider": [193, 415], "consist": [158, 198, 385, 411, 413], "consol": 409, "consolid": [410, 421], "consortium": 412, "conspicu": 413, "constant": [257, 265, 282, 395, 410, 411, 420, 422], "constitut": 413, "constrain": [410, 417, 426, 427], "constraint": [27, 30, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 120, 191, 193, 199, 294, 387, 388, 395, 401, 402, 403, 407, 408, 410, 412, 418, 420, 428], "constraint_1": 380, "constraint_2": 380, "constraint_3": 380, "constraints_augment": 193, "constraints_cardin": 191, "constraints_lin_eq": 191, "constraints_lin_ineq": 191, "constraints_nonlin": 191, "constru": 413, "construct": [27, 191, 193, 199, 237, 267, 367, 397, 405, 406, 408, 410, 414, 423, 428], "constructor": [182, 183, 184, 185, 193, 213, 255, 259, 261, 390, 397, 402, 403, 410, 414, 416, 419, 420, 428, 429], "consult": 408, "consum": [163, 383], "consumpt": 418, "cont_ind": 399, "cont_indic": [398, 399], "cont_paramet": 399, "cont_recommend": [167, 399], "contact": [408, 412], "contain": [27, 30, 36, 37, 38, 58, 61, 65, 80, 105, 110, 111, 115, 119, 122, 123, 125, 133, 136, 138, 142, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 198, 200, 201, 205, 220, 222, 224, 226, 231, 233, 234, 237, 241, 255, 257, 259, 261, 271, 273, 279, 281, 282, 283, 291, 292, 304, 314, 319, 321, 326, 333, 344, 346, 348, 354, 369, 370, 384, 385, 391, 393, 399, 405, 406, 409, 410, 411, 413, 416, 417, 421, 422, 423, 424, 429], "content": [138, 163, 193, 224, 320, 355, 410, 413, 423], "context": [160, 162, 163, 164, 165, 220, 235, 351, 383, 393, 397, 405, 406, 410, 416, 420, 423, 424, 427, 429], "contextu": 427, "continu": [10, 13, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 65, 118, 119, 120, 122, 123, 125, 132, 133, 136, 167, 175, 191, 193, 194, 199, 200, 201, 228, 231, 233, 234, 237, 241, 255, 257, 259, 261, 373, 375, 378, 379, 380, 381, 391, 395, 396, 399, 401, 407, 408, 410, 416, 418, 421, 423, 424, 428], "continuous_subspac": 422, "continuouscardinalityconstraint": [57, 191, 410], "continuousconstraint": [33, 41, 191, 410, 417], "continuouslinearconstraint": [191, 375, 376, 391, 410, 428], "continuouslinearequalityconstraint": 410, "continuouslinearinequalityconstraint": 410, "continuousnonlinearconstraint": [40, 191, 410], "continuousparamet": [132, 191, 410], "contract": 413, "contrast": [199, 308, 391, 393], "contribut": [408, 410, 413, 429], "contributor": [408, 413], "contributori": 413, "control": [13, 17, 138, 148, 175, 191, 199, 328, 395, 398, 408, 410, 413, 414, 418, 419, 420, 421, 426], "convei": 423, "conveni": [410, 422, 423], "convent": 193, "convers": [27, 164, 387, 397, 410, 413, 428], "convert": [24, 106, 195, 208, 305, 309, 313, 316, 317, 329, 330, 334, 337, 340, 388, 402, 403, 410, 416, 418, 423, 424], "convert_sklearn": 387, "convert_sklearn_bayesian_ridg": 387, "cooki": 411, "coordin": 354, "copi": [384, 408, 410, 413, 429], "copyright": [408, 413], "core": [27, 191, 193, 194, 199, 226, 228, 231, 233, 234, 235, 237, 241, 248, 255, 257, 259, 261, 373, 408, 410, 426], "coregion": 427, "coretest": [410, 411], "corpu": 420, "correct": [27, 268, 385, 408, 410, 411, 423], "correctli": [390, 399, 410], "correl": [125, 136, 325, 420, 427], "correspond": [22, 27, 40, 105, 110, 115, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 212, 220, 222, 224, 231, 233, 234, 237, 241, 255, 257, 259, 261, 281, 287, 304, 307, 309, 312, 313, 319, 322, 328, 329, 367, 372, 373, 390, 393, 399, 405, 406, 408, 410, 411, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427], "correspondingli": 27, "corrupt": 321, "cost": [369, 393], "costli": [193, 196, 202, 416], "could": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 133, 316, 373, 383, 384, 390, 391, 406, 410, 415, 417, 420, 424, 426, 427], "count": [288, 384, 390, 417], "counterclaim": 413, "counterpart": [304, 422], "coupl": 385, "cours": [405, 406, 411, 423, 427], "cov": [410, 411], "cover": [308, 319], "coverag": [410, 411], "cp": [368, 369, 370], "craft": 424, "crash": [409, 410], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 80, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 191, 193, 199, 200, 201, 216, 224, 231, 233, 234, 235, 237, 241, 244, 249, 255, 257, 259, 261, 271, 273, 279, 319, 322, 333, 346, 348, 354, 372, 383, 384, 385, 390, 391, 399, 400, 407, 408, 409, 410, 411, 417, 418, 423, 424, 425, 426, 428, 429], "create_example_plot": [367, 369, 384, 385, 405, 406], "create_from_config": [387, 388], "create_pi_plot": 385, "creation": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 138, 196, 199, 202, 379, 381, 387, 388, 422, 423, 428], "criteria": 385, "criterion": [384, 414], "critic": 410, "cross": [405, 413], "crucial": [408, 426], "cube": 417, "cuda": 409, "cultur": [420, 427], "curran": 427, "current": [10, 27, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 226, 228, 236, 286, 340, 384, 385, 390, 414, 416, 417, 418, 420, 424, 426, 427, 429], "curv": [281, 385, 395, 417, 426], "custom": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 118, 119, 120, 122, 123, 125, 128, 132, 133, 136, 138, 237, 268, 271, 273, 279, 304, 329, 366, 373, 377, 384, 393, 399, 407, 408, 410, 417, 420, 421, 424, 427, 428, 429], "custom_blackbox": 367, "custom_conversion_funct": 387, "custom_filt": 417, "custom_funct": 378, "customari": 413, "customconstraint": 378, "customdiscreteparamet": [410, 428], "customencod": 125, "customonnxsurrog": [373, 387, 410], "cycl": [163, 408], "cyclic": 163, "d": [22, 52, 111, 291, 299, 344, 354, 385, 388, 402, 403, 405, 406, 408, 413, 422, 427], "d401": 378, "damag": 413, "daniel": 412, "darmstadt": [408, 412, 418], "dashboard": 410, "data": [13, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 64, 80, 82, 110, 115, 125, 133, 136, 157, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 222, 226, 228, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 273, 279, 288, 290, 294, 319, 321, 327, 339, 340, 355, 359, 366, 367, 372, 373, 375, 376, 378, 379, 380, 381, 384, 388, 390, 395, 398, 401, 402, 403, 405, 406, 407, 408, 410, 414, 415, 416, 417, 418, 420, 421, 423, 424, 425, 428, 429], "data_typ": 387, "databas": [27, 395, 408, 423], "dataclass": [383, 393], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 82, 105, 110, 115, 119, 122, 123, 125, 133, 136, 138, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 198, 199, 200, 201, 204, 218, 219, 222, 224, 226, 228, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 273, 279, 287, 291, 292, 313, 314, 355, 367, 368, 372, 373, 378, 379, 380, 381, 384, 385, 387, 388, 390, 391, 395, 398, 401, 405, 406, 410, 415, 416, 417, 420, 428, 429], "datapoint": 410, "dataset": [163, 220, 424], "datatyp": 410, "date": 413, "de": [211, 400, 408, 409, 410, 411, 416, 417, 421, 428], "deactiv": [408, 410, 418], "deal": [370, 415, 420, 424], "debug": 410, "decid": [133, 327, 390, 393, 399, 414], "declar": [49, 53, 58, 185, 379, 411, 417], "decod": 387, "decor": [100, 265, 295, 322, 383, 410, 411, 424], "decorrel": [125, 136, 141, 402, 403, 420], "decreas": [163, 282, 395, 423, 427], "deduc": [375, 376, 398], "dedupl": 410, "deep": 384, "deepcopi": 410, "def": [367, 378, 383, 384, 385, 390, 393, 405, 411, 417, 424], "default": [38, 80, 110, 123, 125, 136, 138, 167, 182, 183, 184, 185, 191, 193, 199, 211, 231, 248, 251, 326, 367, 368, 370, 373, 388, 395, 399, 408, 410, 411, 416, 418, 419, 420, 428], "default_campaign": 367, "default_model": 237, "defaultkernelfactori": [373, 378, 379, 380, 381, 395, 401], "defaultscal": 410, "defend": 413, "defin": [22, 27, 37, 41, 48, 128, 157, 163, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 199, 220, 241, 243, 244, 268, 321, 325, 326, 357, 368, 369, 370, 372, 378, 379, 380, 381, 387, 388, 393, 397, 410, 411, 413, 416, 417, 420, 423, 424, 426], "definit": [191, 199, 308, 391, 408, 410, 413, 419, 422], "degener": [320, 333, 410], "degr": 401, "degre": 423, "degree_c": [387, 388, 401], "deliber": 413, "delici": 411, "deliveri": 420, "demand": [27, 406], "demo": 410, "demonstr": [366, 367, 368, 371, 374, 377, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 396, 400, 401, 404, 405, 406, 410, 419, 422, 423, 427], "denot": 22, "densiti": 385, "depend": [49, 53, 74, 102, 193, 199, 220, 282, 291, 369, 373, 377, 390, 391, 397, 407, 409, 410, 411, 417, 418, 422, 424, 426, 427, 429], "dependenciesconstraint": 410, "deprec": [60, 130, 160, 162, 163, 164, 165, 173, 175, 191, 199, 204, 238, 295, 378, 380, 381], "deprecationwarn": [378, 380, 381, 384], "depth": 422, "deriv": [182, 183, 184, 185, 199, 308, 413, 417, 422], "descend": 282, "describ": [123, 182, 183, 184, 185, 231, 233, 234, 237, 241, 255, 257, 259, 261, 373, 378, 383, 384, 391, 393, 395, 411, 413, 415, 416, 417, 419, 420, 423, 424], "descript": 411, "descriptor": [136, 314, 410, 420, 427], "deseri": [209, 213, 218, 401, 409, 410, 416, 428], "deserialize_datafram": 423, "design": [0, 17, 22, 222, 322, 383, 387, 390, 393, 413, 414, 419, 421, 423], "desir": [102, 110, 113, 394, 395, 407, 408, 410, 414, 416, 418, 419, 421, 423, 426, 429], "desirabilityobject": [27, 395, 408, 410, 423, 425, 428], "desktop": 410, "despit": 410, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 144, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 198, 199, 222, 226, 231, 233, 234, 235, 237, 241, 244, 251, 253, 255, 257, 259, 261, 271, 273, 279, 284, 285, 326, 333, 357, 368, 370, 375, 376, 395, 399, 408, 409, 410, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427], "detect": [294, 327, 409, 411], "determin": [27, 80, 108, 165, 199, 308, 326, 337, 342, 354, 368, 390, 393, 413, 418, 421], "determinist": 354, "detriment": 420, "dev": [408, 410, 411], "develop": [408, 410, 415, 420, 424], "deviat": [6, 265, 387, 410], "df": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 105, 110, 115, 138, 191, 193, 199, 204, 219, 224, 291, 292, 313, 320, 323, 324, 325, 326, 328, 329, 355, 367, 378, 393, 408, 417, 422, 423, 424], "dfa": [291, 292], "di": [368, 369, 370, 372, 373, 412], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 108, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 182, 183, 184, 185, 191, 193, 196, 199, 202, 212, 213, 214, 216, 226, 231, 233, 234, 237, 241, 244, 255, 257, 259, 261, 271, 273, 279, 285, 299, 302, 314, 319, 333, 357, 384, 387, 405, 406, 410], "dict_bas": [368, 369, 370, 372, 373], "dict_ligand": [368, 369, 370, 372, 373], "dict_solv": [368, 369, 370, 372, 373, 378, 379, 380, 381, 390, 417], "dictat": [105, 110, 115, 193, 405, 406], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 191, 193, 199, 212, 214, 216, 226, 231, 233, 234, 237, 241, 244, 255, 257, 259, 261, 265, 271, 273, 279, 299, 302, 319, 333, 368, 369, 370, 372, 420, 424], "diff": 411, "differ": [51, 110, 175, 191, 193, 194, 199, 220, 228, 287, 292, 319, 321, 357, 369, 378, 383, 390, 393, 395, 398, 399, 405, 406, 408, 410, 411, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424, 426, 427], "differenti": [424, 427], "difficult": 427, "digit": 329, "dilemma": 393, "dim": [22, 375, 376, 385, 387, 398, 399, 405, 406], "dimens": [22, 354, 367, 375, 376, 385, 387, 397, 398, 405, 406, 410, 420, 422, 427], "dimension": [111, 118, 119, 120, 122, 123, 125, 132, 133, 136, 251, 322, 354, 367, 405, 406, 410], "dimethylisoxazol": 427, "direct": [368, 369, 370, 372, 408, 413, 420, 429], "directli": [308, 406, 408, 410, 417, 419, 423, 425], "directori": [346, 399, 410], "disabl": [286, 378, 380, 381, 410, 416], "disadvantag": 423, "disappear": 410, "disc_ind": 399, "disc_indic": [398, 399], "disc_paramet": 399, "disc_recommend": [167, 399], "discard": 390, "disclaim": 413, "discourag": 416, "discret": [13, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 65, 118, 119, 120, 122, 123, 125, 132, 133, 136, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 194, 198, 199, 228, 353, 372, 375, 381, 384, 385, 387, 395, 396, 399, 401, 406, 407, 408, 410, 414, 416, 423, 424, 428, 429], "discrete_param": [385, 405, 406], "discrete_spac": [375, 376, 399], "discrete_subspac": 422, "discretecardinalityconstraint": 410, "discreteconstraint": [27, 47, 48, 49, 50, 51, 52, 53, 54, 55, 199, 410, 417], "discretecust": 378, "discretecustomconstraint": [378, 410, 428], "discretedep": 379, "discretedependenciesconstraint": [53, 58, 379, 390, 428], "discreteexcl": 380, "discreteexcludeconstraint": [380, 410, 428], "discretelinkedparametersconstraint": [410, 428], "discretenolabelduplicatesconstraint": [53, 390, 410, 428], "discreteparamet": [122, 125, 133, 136, 199, 410], "discretepermutationinvarianceconstraint": [390, 428], "discreteprod": 381, "discreteproductconstraint": [381, 410, 428], "discretesamplingmethod": [13, 175, 355, 410, 414], "discretesumc": 381, "discretesumconstraint": [375, 381, 390, 410, 428], "discuss": [395, 413, 417, 422, 424], "disjoint": 199, "disk": [410, 428], "dispatch": 101, "displai": [329, 384, 413], "distanc": [133, 287, 327, 354], "distinct": [383, 416, 421], "distinguish": [320, 390, 410, 417, 420, 427], "distribut": [27, 144, 147, 231, 233, 234, 237, 241, 255, 257, 259, 261, 390, 395, 399, 408, 410, 413, 414, 415], "distutil": 309, "div": 387, "divers": 425, "divid": 391, "divis": 344, "dll": 409, "dmac": [368, 369, 370, 372, 373], "dmf": 417, "do": [193, 199, 236, 383, 387, 388, 390, 393, 399, 401, 402, 403, 405, 408, 409, 413, 415, 417, 418, 420, 421, 423, 427, 428, 429], "do_baybe_work": 418, "doc": [83, 144, 295, 378, 380, 381, 408, 410], "doc101": 411, "doc103": 411, "docstr": 410, "doctest": 410, "document": [340, 387, 408, 410, 411, 412, 413, 416, 424], "doe": [26, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 175, 220, 222, 224, 226, 231, 233, 234, 236, 237, 241, 255, 257, 259, 261, 268, 304, 313, 340, 370, 373, 384, 387, 388, 390, 402, 403, 405, 406, 410, 411, 413, 417, 419, 421, 424, 425, 427, 429], "doi": [253, 325], "domain": [231, 233, 234, 237, 241, 255, 257, 259, 261, 367, 408, 422, 424], "done": [27, 326, 370, 372, 378, 379, 380, 381, 387, 388, 395, 401, 410, 414, 417, 418], "doubl": [340, 411, 418], "down": [423, 429], "downsid": 164, "draft": 410, "dramat": 427, "drastic": 420, "draw": [10, 95, 191, 391, 393, 397], "draw_arm": 393, "drawn": [17, 175], "drive": [385, 427], "driven": [319, 414], "driver": 409, "drop": [323, 324, 325, 384, 410, 417], "dry_run": 27, "dtype": [111, 281, 282, 283, 343], "due": [288, 406, 408, 410, 414, 417, 418, 420, 421, 422, 423, 426], "duplic": [53, 143, 294, 299, 410, 417], "dure": [27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 193, 199, 220, 302, 354, 390, 393, 405, 406, 408, 409, 410, 411, 412, 416, 417, 418, 422, 423, 424, 425], "dynam": [393, 410, 423], "d\u00fcbendorf": 412, "e": [17, 22, 27, 30, 49, 51, 52, 65, 80, 81, 125, 138, 165, 193, 199, 220, 288, 294, 297, 298, 314, 319, 326, 327, 333, 362, 368, 369, 370, 388, 390, 391, 393, 408, 409, 410, 411, 414, 415, 417, 418, 420, 421, 422, 423, 424, 427, 429], "e3fp": 130, "e3fpfingerprint": 130, "each": [17, 27, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 105, 110, 115, 138, 157, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 193, 222, 224, 226, 228, 236, 292, 314, 319, 320, 346, 367, 369, 370, 373, 385, 390, 391, 393, 395, 399, 405, 406, 411, 413, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429], "eagerli": 410, "earli": [384, 410], "earlier": [167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 199, 409], "earn": 393, "earned_reward": 393, "easi": [313, 411, 423], "easier": [411, 429], "easiest": [408, 411], "easili": [384, 408, 411, 416, 420, 422, 423, 427], "ecfp": [130, 369, 410, 420], "ecfpfingerprint": 130, "ecosystem": 423, "edbo": [251, 253, 325, 410], "edbokernelfactori": [251, 410], "edit": [408, 411], "editor": 427, "editori": 413, "edwin": 427, "effect": [51, 160, 162, 163, 164, 165, 228, 383, 384, 393, 406, 410, 414, 417, 420, 421, 424, 427, 429], "effici": [199, 390, 408, 410, 422], "effortlessli": 424, "ei": [3, 373], "either": [22, 27, 194, 222, 228, 241, 265, 369, 380, 395, 399, 408, 413, 419, 420, 421, 422, 424], "elabor": 413, "elaps": 383, "elapsedtimeprint": 383, "electron": [412, 413], "electroshap": 130, "electroshapefingerprint": 130, "eleg": [405, 423], "element": [36, 37, 38, 48, 228, 287, 294, 301, 307, 327, 342, 343, 348, 390, 405, 406, 410, 417, 424], "elev": 385, "elif": [398, 399], "elimin": [411, 414], "els": [308, 309, 367, 368, 369, 370, 375, 376, 378, 379, 381, 384, 385, 393, 398, 399, 405, 406], "elsewher": 387, "emd": 412, "emdgroup": [284, 408], "emelin": 412, "emerg": 416, "empir": 393, "emploi": [27, 393, 421], "employe": [408, 418], "empow": 425, "empti": [82, 191, 193, 199, 206, 292, 304, 313, 326, 329, 390, 395, 399, 401, 410, 422], "empty_encod": [193, 199], "emptysearchspaceerror": 206, "emul": [17, 409, 410], "en": [83, 144], "enabl": [164, 286, 287, 368, 369, 370, 390, 405, 408, 409, 410, 416, 417, 418, 419, 421, 423, 424, 426, 427], "encod": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 118, 119, 120, 122, 123, 125, 127, 128, 129, 130, 132, 133, 136, 193, 199, 231, 233, 234, 237, 241, 255, 257, 259, 261, 312, 314, 368, 369, 370, 372, 373, 378, 379, 380, 381, 384, 388, 390, 393, 395, 401, 402, 403, 405, 406, 408, 410, 417, 422, 423, 427], "encompass": 416, "encount": [160, 162, 163, 164, 165, 354, 409, 410, 411, 419], "end": [0, 283, 333, 384, 388, 393, 395, 401, 413, 417, 423], "endeavor": 414, "endpoint": [410, 418], "enforc": [341, 360, 410, 411], "engin": [409, 421, 423, 424, 429], "enhanc": [22, 408], "enlarg": 420, "enough": [191, 423], "ensembl": 263, "ensur": [138, 368, 369, 370, 390, 391, 408, 417, 423, 424], "enter": [67, 199, 422], "entir": [287, 333, 355, 410, 411, 414, 418, 429], "entiti": 413, "entri": [27, 34, 37, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 214, 231, 233, 234, 237, 241, 255, 257, 259, 261, 287, 292, 319, 327, 355, 370, 378, 379, 380, 381, 390, 410, 417, 418, 426, 429], "enum": [113, 127, 128, 129, 130, 194, 248, 276, 277, 353, 410, 423], "enumer": [112, 126, 275, 385, 405, 406, 419], "env": [410, 411], "envar_nam": 418, "environ": [286, 341, 360, 367, 368, 369, 370, 376, 378, 379, 381, 384, 385, 387, 393, 405, 406, 408, 409, 410, 411, 428], "envvar": 284, "envvar_nam": 418, "eq": [378, 390], "equal": [41, 110, 165, 191, 393, 395, 401, 410, 417, 419, 422, 423, 426], "equat": [41, 417, 424], "equidist": 420, "equip": 417, "equival": [17, 30, 53, 376, 397, 414, 417, 424], "erg": 130, "ergfingerprint": 130, "erron": 410, "error": [163, 173, 175, 222, 224, 226, 238, 302, 344, 370, 388, 393, 409, 410, 417, 419, 420, 421], "esian": 408, "especi": 411, "essenti": [416, 421], "establish": [384, 405, 406, 427], "estat": 130, "estatefingerprint": 130, "ester": [368, 369, 370, 372, 373], "estim": [193, 198, 199, 231, 393, 410, 425, 428], "estimate_product_space_s": [193, 199, 429], "estimated_win_r": 393, "estimation_bia": 393, "estimation_vari": 393, "et": [369, 408, 420], "etc": [36, 37, 38, 120, 193, 271, 427], "ethanol": [390, 417], "euclidean": 354, "eval_during_augment": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "eval_during_cr": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "eval_during_model": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "evalu": [22, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 263, 264, 309, 398, 399, 410, 416, 418, 421, 424, 427], "even": [165, 265, 324, 405, 406, 413, 415, 416, 418, 420, 424, 425, 427, 429], "event": [27, 287, 384, 413], "everi": [415, 429], "everyth": [411, 417], "evolv": [385, 411], "exabyt": 429, "exact": [27, 327, 383, 409, 410, 415, 417, 420, 421], "exactli": [105, 110, 115, 193, 390, 410, 415, 416, 422, 423], "exampl": [138, 224, 291, 292, 299, 308, 326, 366, 367, 371, 374, 377, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 396, 397, 400, 404, 405, 406, 409, 410, 411, 412, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429], "example_input_nam": 387, "exceed": 384, "exceedingli": 424, "except": [304, 313, 317, 331, 332, 368, 369, 370, 384, 388, 402, 403, 408, 409, 410, 413], "excepthook": 409, "exceptiongroup": 410, "excess": 429, "exclud": [27, 52, 199, 323, 378, 379, 380, 381, 395, 401, 410, 413, 417], "exclude_list": 325, "exclus": [50, 377, 407, 410, 413, 417, 424], "execut": [27, 60, 222, 304, 367, 369, 409, 410, 411, 413, 418, 423, 424, 427], "exemplari": 416, "exercis": 413, "exhaust": [163, 421], "exist": [100, 193, 287, 295, 304, 390, 409, 410, 411, 414, 416, 417, 423, 427], "exp_rep": [199, 378, 379, 380, 381, 390, 422], "exp_rep_byt": [198, 429], "exp_rep_human_read": [198, 429], "exp_rep_shap": [198, 429], "expect": [3, 4, 9, 11, 12, 14, 48, 235, 243, 304, 322, 373, 379, 385, 387, 390, 391, 393, 403, 410, 411, 416, 417, 419, 420, 423, 424, 426, 429], "expens": [10, 175, 375, 424], "experi": [0, 27, 157, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 220, 222, 231, 233, 234, 237, 241, 255, 257, 259, 261, 368, 369, 370, 372, 373, 398, 399, 410, 414, 416, 417, 419, 420, 421, 426, 427, 428], "experiment": [27, 82, 105, 110, 115, 119, 122, 123, 125, 133, 136, 157, 160, 161, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 193, 198, 199, 220, 231, 233, 234, 237, 241, 255, 257, 259, 261, 271, 273, 279, 319, 321, 378, 379, 380, 381, 385, 395, 401, 408, 410, 414, 415, 417, 419, 420, 422, 423, 424, 426, 427, 428, 429], "explain": [64, 80, 81, 82, 385, 410, 412, 425], "explainer_cl": [80, 82], "explan": [80, 82, 410, 416, 425], "explanation_index": 80, "explicit": [138, 164, 383, 384, 388, 390, 397, 402, 403, 410, 411, 423, 427, 428], "explicitli": [191, 199, 383, 399, 406, 413, 422, 427], "exploit": [8, 17, 18, 393], "explor": [8, 18, 27, 393, 414, 421, 422, 427], "exploratori": 414, "exponenti": 199, "expos": [27, 383, 410], "exposur": 410, "expr": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55], "express": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 408, 410, 413, 417], "extend": [420, 427], "extens": [410, 421], "extra": [369, 409, 410], "extract": [27, 160, 162, 163, 164, 165, 328, 385, 405, 428], "extract_pi": 385, "f": [309, 367, 368, 369, 370, 375, 376, 378, 379, 380, 381, 383, 384, 385, 390, 391, 395, 397, 398, 399, 405, 406, 429], "f1": 424, "f2": 424, "fabian": 412, "face": [231, 233, 234, 237, 241, 255, 257, 259, 261, 391, 393], "facilit": 421, "fact": [17, 385, 390, 417, 419], "factor": [138, 416, 429], "factori": [138, 191, 241, 242, 243, 244, 245, 251, 253, 300, 373, 378, 379, 380, 381, 395, 401, 410], "fail": [399, 403, 409, 410], "failur": [273, 413], "failure_valu": 273, "fairli": 419, "fake": [224, 319, 372, 373, 387, 388, 395, 410, 415, 424, 428], "fall": [165, 384, 416, 426], "fallback": [108, 199, 335, 346, 387, 410, 422], "fals": [6, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 82, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 204, 231, 237, 255, 257, 259, 261, 273, 282, 287, 297, 298, 302, 308, 309, 322, 326, 327, 328, 348, 373, 378, 379, 380, 381, 395, 401, 402, 403, 408, 415, 418], "famili": 417, "familiar": [368, 369, 370, 373, 375, 376, 378, 379, 380, 381, 387, 388, 395, 398, 399, 401], "fang": 412, "fantasi": 10, "farthest": [187, 353, 354, 373, 408, 410, 412, 414, 421], "farthest_point_sampl": 410, "fashion": [281, 283], "fast": [378, 380, 381, 422, 426], "faster": 199, "fault": 77, "faulti": 409, "favicon": 410, "fc": [368, 369, 370], "feasibl": 416, "featur": [80, 95, 136, 325, 408, 409, 411, 417, 425, 427], "fed": 408, "feder": 412, "fee": 413, "feed": [408, 427], "feedback": 412, "feel": 384, "few": [367, 393, 410, 411, 414, 420, 423, 427, 429], "field": [213, 317, 348, 410, 427, 428], "fifti": 413, "fig": 385, "figur": [346, 385], "file": [346, 368, 369, 370, 387, 388, 399, 408, 410, 413, 418, 423, 427], "filenotfounderror": [368, 369, 370, 384], "fill": [27, 224, 385], "filler": 417, "filter": [27, 34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 193, 199, 323, 326, 378, 390, 410, 417, 422, 427, 429], "filter_attribut": 410, "filter_df": [27, 410], "filterwarn": 384, "final": [367, 369, 372, 384, 390, 406], "find": [193, 302, 343, 346, 408, 414, 416, 417, 427], "fine": [388, 401, 402, 403, 408], "finer": [138, 408], "fingerprint": [130, 136, 312, 314, 408, 410, 412, 420], "finish": 415, "finit": [163, 220, 228, 332, 362, 393, 420, 424], "first": [193, 226, 342, 354, 367, 369, 372, 373, 378, 383, 384, 387, 388, 390, 395, 399, 403, 405, 406, 408, 409, 410, 416, 417, 419, 420, 421, 422, 427, 429], "fit": [27, 185, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 355, 357, 368, 369, 370, 378, 379, 380, 381, 387, 395, 401, 410, 413, 417, 420, 425], "fit_gpytorch_ml": 410, "fit_gpytorch_mll_torch": 410, "fitnr": 395, "fitzner": [408, 412], "fix": [220, 244, 384, 385, 390, 393, 398, 399, 411, 416, 420, 424, 427, 429], "flag": [22, 27, 49, 80, 82, 105, 110, 115, 175, 193, 194, 199, 322, 327, 328, 410, 415, 416, 418, 421], "flake8": 410, "flexibl": [383, 397, 410, 423, 424], "flexibli": 421, "float": [8, 13, 18, 38, 41, 43, 44, 89, 90, 91, 92, 93, 94, 95, 96, 100, 102, 110, 111, 125, 132, 133, 136, 141, 142, 148, 149, 150, 151, 152, 153, 154, 175, 198, 199, 222, 226, 231, 265, 273, 274, 281, 282, 283, 288, 316, 319, 320, 321, 325, 333, 337, 339, 340, 342, 343, 344, 359, 362, 363, 364, 383, 385, 387, 393, 395, 410, 411, 428], "float64": 359, "floattensortyp": 387, "fly": [164, 423], "fn": 295, "focu": [8, 18, 416], "focus": [115, 399, 408], "folder": [369, 408, 411, 418, 425], "follow": [160, 162, 163, 164, 165, 193, 222, 224, 226, 368, 369, 370, 373, 375, 376, 378, 379, 380, 381, 383, 384, 388, 393, 395, 399, 402, 403, 405, 406, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427], "footprint": [10, 193], "forbid": 365, "forc": [80, 175, 410, 411, 421], "forest": [260, 261], "forgiv": 426, "fork": 411, "form": [199, 220, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 319, 408, 413, 414, 416, 419, 420, 421, 422, 423, 424, 429], "formal": 391, "format": [41, 285, 329, 334, 337, 387, 388, 401, 402, 408, 409, 410, 411, 416, 418, 423, 424], "format_except": 409, "former": [390, 410], "formul": 427, "formula": 390, "forrest": 410, "found": [75, 138, 191, 199, 302, 312, 340, 343, 346, 384, 390, 395, 408, 409, 411, 416, 417, 421, 427], "foundat": 421, "four": 390, "fourier": 95, "fourth": 417, "fp": [353, 410, 414], "fp_size": [130, 420], "fpsrecommend": [373, 387, 388, 401, 402, 403, 408, 415, 421], "frac": [406, 419], "frac1": 379, "fraction": [13, 90, 316, 384, 414, 417, 418], "fraction1": 379, "fraction_1": 417, "fraction_2": 417, "fraction_3": 417, "frame": [321, 429], "frame1": 379, "frame2": 379, "frame_1": 417, "frame_2": 417, "framea": 379, "framea_a": 379, "frameb": 379, "framework": [416, 420], "free": [411, 413, 418], "freedom": 423, "freeli": 390, "frequenc": 95, "frequent": 393, "fresh": 384, "frictionless": 423, "friendli": 410, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 130, 132, 133, 136, 138, 144, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 216, 224, 226, 228, 231, 233, 234, 237, 241, 244, 249, 253, 255, 257, 259, 261, 265, 271, 273, 279, 282, 283, 304, 308, 309, 313, 321, 322, 323, 325, 333, 344, 346, 355, 367, 368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 383, 384, 385, 387, 388, 390, 391, 393, 395, 397, 398, 399, 400, 401, 403, 405, 406, 407, 409, 411, 413, 414, 415, 417, 419, 420, 421, 424, 426, 427, 428, 429], "from_bound": [191, 410, 422], "from_campaign": 80, "from_config": [27, 402, 403, 416], "from_datafram": [191, 193, 199, 410, 422, 423, 429], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 191, 193, 199, 216, 231, 233, 234, 237, 241, 244, 255, 257, 259, 261, 271, 273, 279, 333, 387], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 191, 193, 199, 216, 231, 233, 234, 237, 241, 244, 255, 257, 259, 261, 271, 273, 279, 333, 387, 388, 401, 416, 423], "from_paramet": [191, 193, 199, 410], "from_preset": 241, "from_product": [191, 193, 199, 367, 368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 383, 384, 385, 387, 388, 390, 391, 395, 397, 398, 399, 401, 402, 403, 405, 406, 408, 410, 417, 422, 423, 424], "from_recommend": 80, "from_record": [423, 424], "from_simplex": [199, 390, 410, 422, 429], "from_surrog": 80, "frozenset": 390, "fsspec": 410, "fulfil": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 384, 390, 391], "full": [22, 191, 340, 366, 407, 410, 416, 420, 427, 428], "full_factori": 191, "full_lik": 385, "full_lookup": [368, 369, 370], "fulli": [390, 408, 410, 418, 424], "fulltest": 411, "func": 411, "func_nam": 405, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 35, 41, 42, 48, 56, 63, 69, 77, 79, 80, 94, 101, 104, 107, 109, 114, 137, 140, 173, 175, 176, 192, 197, 203, 207, 208, 216, 217, 220, 221, 223, 225, 226, 227, 232, 236, 242, 247, 262, 266, 267, 270, 277, 280, 281, 282, 283, 284, 287, 288, 290, 293, 306, 310, 315, 318, 321, 328, 329, 331, 336, 338, 345, 346, 349, 352, 361, 372, 378, 379, 380, 381, 383, 385, 390, 393, 401, 405, 406, 408, 409, 410, 414, 416, 417, 419, 421, 422, 424, 425, 426, 427, 429], "function_nam": [405, 406], "functionalgroup": 130, "functionalgroupsfingerprint": 130, "fundament": [420, 423], "furo": 410, "further": [390, 391, 401, 408, 415, 421, 422, 425, 427, 428], "furthermor": 395, "furyl": [368, 369, 370], "futur": [53, 193, 236, 378, 380, 381, 384, 405, 426], "fuzzi": 287, "fuzzy_row_match": 287, "g": [49, 51, 52, 65, 80, 81, 125, 138, 193, 199, 294, 314, 327, 393, 408, 409, 410, 411, 414, 415, 417, 418, 420, 421, 422, 424, 429], "g1": 391, "g2": 391, "g3": 391, "gain": [199, 416], "gamma": 149, "gammaprior": 410, "garbag": 410, "gather": [165, 405, 406, 414, 427], "gaussian": [83, 182, 233, 239, 240, 241, 242, 246, 247, 248, 250, 251, 252, 253, 281, 373, 395, 410, 417, 421, 427], "gaussian_kd": 385, "gaussian_process": [85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 241, 243, 244, 248, 251, 253, 373, 410], "gaussianmixtureclusteringrecommend": 421, "gaussianprocesspreset": [241, 249], "gaussianprocesssurrog": [249, 373, 378, 379, 380, 381, 385, 395, 401, 402, 403, 410, 425], "gcf": [368, 370], "ge": 376, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 129, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 198, 199, 231, 233, 234, 237, 241, 244, 251, 253, 255, 257, 259, 261, 271, 273, 279, 285, 308, 314, 320, 333, 349, 357, 367, 373, 383, 390, 408, 410, 412, 413, 414, 415, 416, 417, 418, 420, 423, 424, 425, 426, 427, 428, 429], "geom_mean": [102, 110, 113, 395, 419], "geometr": [113, 344, 395, 419], "germani": [408, 412, 418], "get": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 173, 175, 191, 241, 319, 373, 384, 390, 398, 399, 408, 410, 415, 428, 429], "get_candid": [199, 384], "get_cmap": 385, "get_comp_rep_parameter_indic": [193, 410], "get_current_recommend": [160, 162, 163, 164, 165, 410], "get_integration_point": 13, "get_invalid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "get_invalid_polar": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "get_lin": 384, "get_next_recommend": [160, 162, 163, 164, 165, 410], "get_non_meta_recommend": [160, 162, 163, 164, 165, 410], "get_parameters_by_nam": [191, 193, 199], "get_parameters_from_datafram": [191, 199], "get_subclass": 373, "get_surrog": [27, 80, 173, 175, 410, 425], "get_transform_object": 410, "get_transform_paramet": 410, "get_valid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 410], "getawai": 130, "getawayfingerprint": 130, "ghosecrippen": 130, "ghosecrippenfingerprint": 130, "git": [408, 411], "github": [253, 284, 305, 325, 387, 410, 411, 412], "give": [387, 388, 390, 406, 413, 416, 419, 423], "given": [25, 27, 30, 36, 37, 38, 58, 75, 80, 81, 82, 105, 110, 115, 123, 136, 138, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 205, 220, 224, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 265, 276, 288, 292, 297, 298, 302, 303, 304, 307, 308, 311, 312, 316, 319, 322, 328, 333, 334, 342, 344, 347, 348, 354, 357, 378, 379, 380, 381, 384, 390, 393, 395, 399, 405, 406, 416, 422, 424], "glass_transition_tempc": 420, "global": [13, 350, 410, 428, 429], "gmean": 344, "gmm": 182, "go": [291, 390, 408], "goal": [367, 393, 419, 427], "goe": 425, "good": [319, 384, 395, 416, 418, 426], "good_interv": 319, "good_reference_valu": 319, "goodwil": 413, "googl": [410, 411], "govern": 408, "gp": [231, 233, 234, 237, 241, 255, 257, 259, 261, 410], "gpytorch": [83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 144, 146, 148, 149, 150, 151, 152, 153, 154, 410], "gradient": [10, 175, 259, 410, 418, 421], "grant": [410, 413], "granular": [388, 401, 402, 403, 408], "granularity_coar": 401, "granularity_fin": 401, "great": [393, 423], "greater": 165, "greatli": 411, "greedi": [175, 410, 421], "grid": [405, 406], "grid_d": [405, 406], "grossli": 413, "group": [292, 299, 357, 391, 408, 410, 416], "groupbi": [226, 228], "grow": 429, "gt": [381, 390], "gu16": 420, "guarante": [417, 418, 421], "guid": [372, 408, 409, 410, 411, 414, 416, 419, 422, 424, 427], "guidelin": [410, 411, 414], "ha": [27, 49, 68, 69, 80, 163, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 231, 233, 234, 237, 241, 255, 257, 259, 261, 291, 302, 304, 308, 320, 327, 354, 355, 369, 373, 378, 379, 380, 381, 390, 395, 399, 401, 408, 410, 411, 413, 415, 416, 417, 420, 422, 423, 424, 426, 427], "had": [220, 417, 420, 424], "half": [133, 150, 151, 333, 399, 415], "halfcauchyprior": 410, "halfnormalprior": 410, "hamster": 427, "hand": [41, 136, 391, 393, 405, 406, 408, 416, 423], "handl": [80, 120, 222, 224, 265, 331, 378, 379, 393, 395, 410, 416, 419, 429], "happen": [163, 395, 399, 406, 409, 410, 411, 422, 423, 427], "happili": 419, "hard": [410, 427, 429], "harmless": 413, "hartmann": [385, 405, 406], "hasattr": [375, 376, 398, 399], "hash": [285, 408, 418, 420], "hashabledict": 410, "have": [22, 27, 34, 36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 105, 110, 115, 136, 185, 193, 199, 220, 236, 268, 292, 299, 302, 319, 327, 328, 340, 368, 369, 372, 373, 378, 379, 383, 385, 390, 391, 393, 395, 398, 399, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 423, 424, 425, 427, 429], "head": 410, "header": 348, "heart": 427, "heatmap": 80, "help": [393, 423, 424, 427], "helper": [383, 385, 387, 390, 423], "henc": [313, 390, 393, 401, 417, 420, 429], "here": [52, 340, 368, 370, 372, 375, 376, 383, 384, 388, 390, 391, 398, 399, 401, 405, 406, 408, 409, 415, 417, 419, 420, 421, 422, 423, 424, 426, 427], "herebi": 413, "herein": [413, 416], "heurist": 175, "hierarch": 423, "hierarchi": [75, 410, 411, 416, 423], "high": [251, 367, 393, 410, 411, 414, 416, 417, 420, 423], "higher": [8, 18, 136, 393, 409, 417, 421], "highest": [414, 423], "highlight": 427, "hint": 411, "histogram": 288, "histori": 411, "hold": [40, 299, 413, 423], "home": [378, 380, 381], "homepag": [408, 410], "hood": 420, "hook": [45, 108, 199, 208, 212, 304, 407, 409, 410, 411], "hopp": [408, 412], "host": [408, 410, 418], "hostnam": [285, 418], "hot": [127, 369, 393, 408, 410, 420], "how": [50, 222, 224, 354, 367, 368, 370, 371, 372, 373, 374, 377, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 399, 401, 402, 403, 406, 408, 416, 417, 418, 419, 424, 425, 426, 427], "howev": [138, 199, 236, 304, 383, 390, 393, 398, 399, 409, 411, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 427, 429], "hrovatin": 412, "html": [41, 83, 144, 284, 295, 340, 387, 410], "http": [41, 83, 144, 253, 284, 295, 305, 325, 340, 408, 410, 413, 427], "hue": [367, 368, 369, 370, 384, 405, 406], "human": [198, 337, 401, 410, 412, 423], "hybrid": [21, 22, 65, 166, 167, 175, 188, 193, 194, 373, 374, 378, 379, 380, 381, 395, 396, 401, 407, 408, 410, 421, 422], "hybrid_recommend": 399, "hybrid_sampl": [175, 421], "hyperparamet": 373, "hyperrectangl": [191, 422], "hypothesi": [408, 410, 411], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 64, 65, 67, 68, 69, 70, 72, 80, 81, 82, 97, 100, 111, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 206, 220, 222, 224, 226, 228, 231, 233, 234, 235, 236, 237, 241, 251, 255, 257, 259, 261, 265, 268, 276, 281, 282, 283, 286, 287, 288, 292, 295, 297, 298, 302, 304, 305, 307, 308, 309, 312, 313, 319, 320, 321, 322, 326, 327, 328, 329, 332, 333, 340, 342, 343, 346, 348, 354, 355, 362, 367, 368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 383, 384, 385, 387, 388, 390, 391, 393, 395, 398, 399, 401, 402, 403, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429], "ideal": [415, 417, 424], "ident": [138, 291, 292, 420, 423, 427], "identif": 393, "identifi": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 226, 299, 313, 327, 328, 384, 410, 417, 420, 422, 423, 424, 427], "idx_offset": 41, "ignor": [105, 110, 115, 163, 175, 193, 200, 201, 222, 224, 226, 302, 325, 370, 384, 399, 410, 417, 423, 429], "ignore_exampl": 410, "ignore_list": 324, "ii": 413, "iii": 413, "illustr": 397, "iloc": 415, "imag": [393, 410], "imagin": [390, 393], "immedi": [346, 383, 416], "immut": 410, "impact": [369, 406, 418], "imperfect": 321, "implement": [17, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 111, 157, 168, 228, 235, 306, 378, 384, 390, 405, 410, 411, 412, 414, 421, 422, 424, 427], "impli": [390, 408, 413, 417, 420], "implicitli": 423, "import": [74, 80, 110, 224, 384, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429], "impos": [390, 391, 417], "imposs": [408, 418, 423], "improv": [3, 4, 7, 9, 11, 12, 14, 15, 373, 376, 382, 384, 407, 408, 410, 413, 418], "imput": [222, 224, 366, 370, 407, 408], "impute_mod": [222, 224, 226, 370, 424], "inabl": [408, 413], "inaccuraci": 408, "inact": 40, "inc": 427, "incident": 413, "includ": [58, 105, 110, 115, 165, 222, 297, 298, 324, 368, 379, 388, 390, 402, 403, 406, 410, 411, 413, 414, 415, 417, 429], "inclus": 413, "incom": 423, "incompat": [62, 63, 64, 65, 82, 237, 380, 417], "incompatibilityerror": 27, "incompatibleacquisitionfunctionerror": 415, "incomplet": 410, "inconsist": 410, "incorpor": [413, 415, 425, 429], "incorrect": 410, "incorrectli": 410, "increas": [10, 163, 226, 282, 283, 395, 405, 406, 410, 414, 420, 427], "increment": 199, "incur": 413, "indefinit": [163, 222], "indemn": 413, "indemnifi": 413, "indent": 348, "independ": [167, 233, 257, 387, 410, 421, 424], "independentgaussiansurrog": [237, 255, 257, 259, 410], "index": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 193, 226, 291, 292, 326, 327, 387, 388, 395, 399, 401, 410, 420, 422, 424], "indexkernel": 410, "indic": [27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 80, 81, 118, 119, 120, 122, 123, 125, 132, 133, 136, 160, 162, 163, 164, 165, 193, 291, 292, 322, 354, 390, 399, 410, 413, 421, 424, 425], "indirect": [297, 298, 413], "indistinguish": 390, "individu": [49, 50, 98, 99, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 222, 329, 384, 391, 413, 416, 419, 421, 427], "induc": 393, "industri": 427, "ineffici": 199, "inequ": [41, 191, 422], "inf": [378, 379, 380, 381, 401], "infer": [138, 237, 405, 406, 410, 422], "inferencesess": 237, "infin": 142, "infinit": [163, 164, 300, 332, 362, 363, 410, 420], "influenc": [167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188], "influenti": 427, "info": [288, 410], "inform": [22, 120, 271, 328, 368, 369, 370, 385, 390, 398, 399, 406, 408, 410, 411, 413, 415, 418, 420, 422, 427, 428], "infring": 413, "ingest": [199, 222, 420, 421], "ingredi": [390, 391, 417], "inher": [17, 390], "inherit": 411, "init": 267, "initi": [89, 90, 91, 92, 93, 94, 95, 96, 100, 165, 167, 175, 182, 183, 184, 185, 187, 199, 222, 226, 287, 354, 366, 378, 379, 380, 381, 384, 385, 395, 401, 406, 407, 410, 412, 416, 418, 420, 421, 423, 424, 427], "initial_data": [222, 226, 368, 406, 424], "initial_recommend": [165, 373, 384, 385, 387, 388, 393, 401, 402, 403, 408, 421], "initial_recommender_cl": 410, "initial_strategi": 410, "initial_typ": 387, "inject": 423, "inner": [158, 326, 421, 423], "inplac": [369, 405, 406, 429], "input": [36, 37, 38, 111, 119, 122, 123, 125, 133, 136, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 271, 273, 279, 281, 299, 316, 317, 321, 322, 326, 327, 333, 335, 342, 354, 367, 387, 395, 405, 406, 410, 423, 424, 427], "input_dim": 387, "input_label": 322, "inputtransform": 357, "insid": [384, 387, 388, 409, 423], "insight": [80, 384, 408, 410, 412], "inspect": [308, 383, 390], "instabl": 417, "instal": [410, 411, 418, 420, 429], "instanc": [36, 37, 38, 49, 52, 80, 165, 193, 199, 319, 379, 384, 390, 391, 408, 409, 411, 415, 416, 417, 418, 420, 422, 423, 424, 429], "instanti": [237, 384, 416], "instead": [160, 162, 163, 164, 165, 287, 313, 322, 378, 380, 381, 408, 409, 410, 416, 417, 419, 420, 423, 424, 426, 427, 429], "institut": [412, 413], "instruct": [408, 410, 426, 428], "instrument_nam": 288, "int": [10, 13, 17, 27, 30, 40, 41, 47, 80, 85, 86, 87, 90, 92, 93, 94, 95, 96, 111, 127, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 198, 199, 222, 226, 228, 273, 274, 281, 282, 283, 288, 329, 343, 347, 350, 351, 354, 355, 357, 378, 380, 381, 390, 393, 395, 406, 411, 420], "integ": [30, 127, 193, 226, 399, 410, 411, 420], "integr": [13, 410, 411, 414, 416], "intend": [372, 383, 405, 411, 421], "intens": 420, "intention": 413, "interact": [26, 27, 372, 408, 409, 416, 423], "interchang": 390, "interconnect": 416, "interest": [419, 429], "interfac": [157, 235, 243, 383, 385, 410, 413, 416], "intermedi": [185, 354], "intern": [27, 41, 53, 163, 367, 384, 395, 410, 417, 418, 420, 421, 422, 423], "internet": 408, "internship": 412, "interplai": 410, "interpol": [90, 251, 410], "interpret": [193, 220, 316, 388, 390, 402, 403, 406, 418, 422, 424], "interrupt": 60, "intersect": 399, "interv": [132, 279, 281, 282, 283, 395, 410, 416, 420, 423, 426], "intrins": 427, "introduc": [409, 410, 417, 420, 421, 424], "intuit": 416, "invalid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 66, 199, 313, 327, 355, 388, 402, 409, 416, 417, 422], "invalid_config": 403, "invalid_surrogate_model": 388, "invalid_typ": 403, "invari": [49, 52, 53, 291, 292, 417], "invers": [212, 423], "invert": [27, 326], "investig": [220, 424, 425], "invok": [424, 428, 429], "involv": [27, 199, 383, 390, 408, 418, 419, 420, 423, 427], "io": 284, "irrelev": [390, 417], "irrespect": [287, 327], "irrevoc": 413, "is_bound": [333, 410], "is_continu": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 118, 119, 120, 122, 123, 125, 132, 133, 136], "is_degener": 333, "is_discret": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 118, 119, 120, 122, 123, 125, 132, 133, 136], "is_empti": [191, 199, 410], "is_eq": 41, "is_finit": 410, "is_fully_unbound": 333, "is_half_bound": 333, "is_in_rang": [118, 119, 120, 122, 123, 125, 132, 133, 136], "is_left_bound": 333, "is_numer": [118, 119, 120, 122, 123, 125, 132, 133, 136, 410], "is_right_bound": 333, "is_stat": [160, 162, 163, 164, 165, 410], "iso": 387, "isoxazol": 427, "issu": [236, 295, 305, 410, 413, 424, 429], "item": [37, 118, 119, 120, 122, 123, 125, 132, 133, 136, 390, 393, 405, 406, 420], "iter": [27, 132, 163, 164, 193, 199, 222, 236, 279, 300, 321, 334, 368, 378, 379, 380, 381, 384, 385, 393, 405, 406, 408, 410, 414, 416, 420, 421, 424, 425, 429], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 167, 191, 193, 199, 216, 228, 231, 233, 234, 237, 241, 244, 255, 257, 259, 261, 271, 273, 279, 288, 291, 296, 304, 308, 319, 333, 337, 367, 373, 383, 385, 390, 391, 393, 406, 408, 409, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 427, 429], "itself": [383, 405, 409, 427], "j": [369, 408, 420, 427], "jackiepho": [368, 369, 370], "januari": 413, "javadi": 412, "jin": 412, "join": [326, 409], "joint": 416, "jointli": 416, "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 191, 193, 199, 216, 231, 233, 234, 237, 241, 244, 255, 257, 259, 261, 271, 273, 279, 333, 346, 387, 388, 401, 402, 410, 428], "json_str": 423, "juli": 412, "julian": 412, "jump": [410, 427], "jupyt": 387, "just": [393, 411, 423], "k": [133, 183, 354, 367, 368, 369, 370, 372, 373, 375, 376, 384, 390, 397, 398, 399, 410, 421, 429], "karin": 412, "kde": 385, "keep": [48, 136, 191, 199, 384, 410, 411], "kei": [299, 319, 369, 411], "kept": [326, 420, 425], "kernel": [85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 241, 242, 243, 244, 245, 251, 253, 373, 378, 379, 380, 381, 395, 401, 410, 417, 427], "kernel_factori": [85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 241, 243, 244], "kernel_or_factori": 241, "kernelexplain": [80, 82], "kernelfactori": [241, 244, 245, 251, 253, 410], "keyword": [80, 136, 370, 373, 399, 406, 410, 415, 417, 422, 424], "kgaa": [408, 412, 418], "kian": 427, "kickstart": 423, "kind": [175, 408, 410, 413, 417, 420, 421], "kiter": [378, 379, 380, 381, 395], "klekotaroth": 130, "klekotarothfingerprint": 130, "kmean": 373, "kmeansclusteringrecommend": [373, 421], "knob": 408, "know": [393, 402, 408, 409, 423, 427], "knowledg": [10, 408, 410, 427], "known": [417, 427], "koller": 427, "kwarg": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 89, 91, 93, 98, 99, 100, 146, 148, 149, 150, 151, 152, 153, 154, 157, 177, 235, 238, 243, 314, 332], "kwargs_conform": [136, 314, 420], "kwargs_fingerprint": [136, 314, 420], "l0": 30, "l1": 420, "l664": 253, "label": [52, 53, 125, 136, 288, 322, 390, 391, 408, 410, 417, 420, 422, 424], "labelpad": 385, "laggner": 130, "laggnerfingerprint": 130, "lambda": [378, 380, 381, 384, 390, 405, 425], "land": 410, "languag": [295, 391, 408], "larg": [136, 199, 375, 376, 391, 410, 418, 420, 424, 429], "larger": [90, 133, 355, 373, 380, 416, 417, 423, 427], "largest": [354, 393, 414], "last": [163, 393, 411, 416, 421], "last_call_tim": 383, "lastli": 385, "latent": 420, "later": [133, 409, 416, 423], "latest": [164, 408, 411, 416], "latter": [17, 27, 291, 308, 384, 390, 416, 427], "law": [408, 413], "lawsuit": 413, "layer": 130, "layeredfingerprint": 130, "layout": 410, "lazi": [201, 358, 410], "lazili": [410, 418], "lazyfram": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 201], "le": 376, "le_method": 411, "lead": [73, 395, 410, 423], "lean": 411, "learn": [13, 227, 228, 231, 233, 234, 237, 241, 255, 257, 259, 261, 373, 378, 379, 380, 381, 393, 395, 401, 405, 407, 408, 410, 417, 420, 425, 426, 428], "least": [163, 391, 408, 413, 415, 416], "leav": 423, "lee": 412, "left": [70, 71, 154, 222, 320, 327, 333, 379, 410, 419], "left_df": 327, "leftov": 410, "legal": 413, "legend": [368, 370], "len": [379, 384, 385, 390, 391, 393], "length": [91, 163, 164, 231], "lengthi": 416, "lengthscal": [90, 91, 92, 94, 95, 96], "lengthscale_initial_valu": [90, 91, 92, 94, 95, 96], "lengthscale_prior": [90, 91, 92, 94, 95, 96], "leq": 30, "less": [292, 384, 385, 393, 416, 429], "let": [367, 369, 383, 384, 385, 387, 388, 390, 391, 397, 406, 408, 417, 419, 423], "level": [321, 410, 411, 415, 416, 417, 421, 423], "leverag": [384, 416, 421], "li": 420, "liabil": 413, "liabl": 413, "lib": [378, 380, 381, 409], "librari": 409, "licensor": 413, "lie": [27, 231, 233, 234, 237, 241, 255, 257, 259, 261, 319], "liebig": 412, "life": [408, 411, 412, 429], "lifecycl": 416, "ligand": [368, 369, 370, 372, 373, 384, 408, 420], "ligand_data": 384, "ligand_smil": 384, "like": [185, 226, 294, 385, 390, 393, 408, 409, 410, 411, 415, 416, 417, 420, 423, 424, 427, 429], "likelihood": 231, "lime": [80, 81], "limit": [251, 288, 385, 408, 412, 413, 417, 422, 428], "line": [333, 348, 368, 370, 384, 393, 410, 411, 414, 416, 420, 424, 427], "linear": [41, 89, 191, 255, 277, 282, 373, 374, 395, 407, 410, 411, 422, 426], "linear_model": 387, "linear_regressor": 387, "linearkernel": 410, "linearli": [251, 282, 283, 395, 410], "lineplot": [367, 368, 369, 370, 384, 405, 406], "lingo": 130, "lingofingerprint": 130, "link": [51, 409, 410, 413, 420], "linspac": [378, 379, 380, 381, 385, 387, 388, 390, 398, 399, 401, 405, 406, 429], "lint": [408, 410, 411], "linter": [410, 411], "list": [30, 31, 32, 33, 34, 37, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 102, 123, 138, 143, 163, 164, 191, 193, 199, 200, 201, 204, 205, 206, 222, 226, 228, 287, 297, 298, 299, 307, 314, 319, 323, 324, 325, 327, 328, 354, 368, 373, 378, 379, 380, 381, 385, 390, 391, 393, 395, 398, 399, 406, 408, 411, 413, 417, 419, 420, 421, 422, 424], "liter": [80, 102, 163, 222, 224, 226, 321, 354, 411], "literatur": 410, "litig": 413, "littl": 409, "liver": [424, 427], "load": [346, 358, 384, 387, 402, 403, 409, 410], "loc": [152, 153, 368, 370], "local": [409, 411, 418, 428], "locat": [152, 153, 415, 418, 427], "lockfil": 410, "log": [152, 288, 373, 408, 418], "logarithm": [4, 11, 12, 344], "logei": [4, 410], "logic": [158, 319, 322, 367, 410, 417, 421, 424, 429], "lognormalprior": 410, "logo": 410, "long": [416, 423, 424], "longer": 410, "look": [224, 373, 390, 393, 409, 414, 416, 417, 423, 424, 426], "look_up_target": 222, "lookup": [220, 222, 226, 228, 322, 327, 366, 367, 385, 398, 407, 410, 428], "lookup_df": 224, "lookup_test_task": 406, "lookup_training_task": 406, "lookup_valu": [375, 376, 385, 398, 399], "lookup_withmiss": 370, "loop": [220, 222, 228, 378, 379, 380, 381, 384, 395, 410, 415, 424, 429], "loss": 413, "lost": 423, "lot": 397, "low": [251, 393, 409, 410, 420, 423], "lower": [154, 281, 282, 283, 333, 368, 370, 385, 395, 405, 406, 420, 426], "lower_bound": 422, "lst_exclud": 323, "lt": 409, "luxuri": 416, "m": 390, "m1": 409, "mac": 409, "macc": 130, "maccsfingerprint": 130, "machin": [393, 408, 409, 411, 414, 418, 420, 426, 427], "machineri": [17, 175, 409, 411, 427, 429], "made": [74, 199, 222, 354, 370, 408, 409, 413, 417, 418, 424], "magic": 427, "magnitud": [320, 321, 429], "mai": [27, 105, 110, 115, 193, 304, 408, 413, 416, 423, 424], "mail": 413, "main": [26, 27, 408, 410], "maintain": [265, 411], "major": [410, 424], "make": [8, 18, 53, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 263, 264, 265, 295, 320, 322, 368, 370, 373, 375, 390, 391, 408, 409, 411, 413, 416, 417, 420, 423, 427, 429], "make_explainer_for_surrog": 80, "malfunct": 413, "manag": [26, 191, 192, 193, 199, 351, 410, 413, 424], "mandatori": [410, 426], "mani": [355, 390, 398, 399, 408, 416, 420, 423, 426, 427], "manner": 418, "manual": [399, 409, 410, 423], "map": [125, 130, 136, 224, 226, 281, 282, 283, 302, 322, 357, 368, 369, 370, 395, 424, 426], "mapfingerprint": 130, "mapl": [80, 81], "margin": 410, "mark": [413, 421, 427, 428], "markdown": [388, 402, 403, 410], "marker": [367, 368, 369, 370, 384, 405, 406, 410], "markers": [367, 369, 384, 405, 406], "market": 393, "marketplac": 410, "martin": [408, 412], "mask_bad1": 378, "mask_bad2": 378, "mask_bad3": 378, "mask_good": [378, 417], "mass": 148, "master": 253, "match": [27, 76, 119, 122, 123, 125, 133, 136, 138, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 271, 273, 276, 279, 287, 302, 304, 327, 328, 383, 385, 395, 399, 408, 410, 415, 416, 419, 421, 423, 424, 428], "match_attribut": 410, "match_targeta": 426, "match_targetb": 426, "materi": [393, 412, 427], "matern": 90, "maternkernel": 410, "math": [384, 390], "mathemat": 410, "matmin": 409, "matplotlib": [368, 370, 385, 410], "matter": [390, 397, 411, 419], "max": [224, 276, 320, 368, 369, 370, 372, 373, 378, 379, 380, 381, 384, 385, 387, 388, 393, 395, 401, 402, 403, 408, 410, 419, 423, 424, 428], "max_cardin": [30, 40, 47], "max_column": [329, 390], "max_colwidth": 329, "max_nonzero": 199, "max_row": [329, 390], "max_sum": [199, 390, 422], "max_target": 426, "max_yield": [368, 370], "maxim": [6, 276, 372, 385, 393, 395, 408, 410, 426], "maximum": [6, 30, 40, 47, 136, 191, 193, 199, 281, 329, 390, 391, 395, 410, 417, 420, 422], "mc": [393, 415], "md": 410, "me2pph": [368, 369, 370], "mean": [5, 8, 17, 18, 27, 53, 102, 113, 183, 220, 222, 224, 226, 231, 257, 265, 344, 370, 373, 387, 393, 395, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 423, 425, 428], "meaning": 419, "meaningless": [390, 414], "meanpredictionsurrog": [265, 373, 425], "meantim": [411, 417], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 80, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 199, 220, 222, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 271, 273, 279, 287, 319, 327, 368, 369, 370, 373, 375, 376, 378, 379, 380, 381, 383, 384, 385, 395, 398, 399, 401, 408, 410, 411, 414, 415, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428], "mechan": [8, 18, 27, 60, 110, 111, 113, 220, 223, 224, 228, 304, 326, 335, 354, 367, 383, 384, 385, 405, 406, 410, 413, 422, 423, 427, 428], "mechanist": 408, "media": [413, 420, 427], "mediocr": 426, "medium": [388, 401, 408, 413, 420], "medoid": [184, 410, 421], "meet": [319, 413], "mem_estim": 429, "member": [308, 417, 420], "memori": [10, 193, 198, 199, 410, 418, 428], "memorys": [193, 199, 429], "mention": 414, "merchant": 413, "merck": [408, 412, 418], "mere": [413, 419], "merg": 411, "meshgrid": [405, 406], "messag": 384, "meta": [27, 70, 160, 162, 163, 164, 165, 168, 378, 379, 380, 381, 395, 401, 408, 410, 428], "metadata": [27, 191, 199, 285, 410], "metarecommend": [162, 163, 164, 165, 410], "methanol": 390, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 198, 199, 216, 231, 233, 234, 235, 237, 241, 243, 244, 251, 253, 255, 257, 259, 261, 264, 267, 268, 271, 273, 279, 294, 295, 304, 308, 333, 346, 353, 354, 355, 357, 385, 388, 402, 403, 410, 412, 416, 418, 419, 420, 422, 423, 424, 425, 427], "methodtyp": [383, 384, 385], "methyldiphenylphosphin": [368, 369, 370], "methylisoxazol": 427, "metric": [393, 408, 418, 420], "mhfp": 130, "mhfpfingerprint": 130, "micromamba": 410, "midpoint": 426, "might": [49, 53, 136, 193, 369, 373, 375, 379, 399, 406, 409, 415, 416, 417, 418, 422, 424, 427, 429], "mimic": [83, 144, 417], "min": [276, 320, 367, 375, 376, 385, 395, 398, 399, 405, 406, 408, 410, 419, 423, 428], "min_cardin": [30, 40, 47], "min_nonzero": 199, "min_target": 426, "mind": [393, 425], "miniconda": 410, "minim": [6, 276, 395, 405, 406, 410, 422, 426], "minimum": [30, 40, 47, 133, 191, 193, 199], "minor": 410, "mirror": [416, 423], "miss": [27, 222, 224, 370, 410, 411], "mistak": 411, "mix": [228, 390, 391, 408, 417, 420, 423, 427], "mixin": 216, "mixtur": [182, 407, 410, 417, 420, 421, 427, 429], "mobil": 410, "mode": [102, 125, 136, 163, 222, 231, 276, 279, 282, 302, 319, 366, 367, 368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 384, 385, 387, 388, 398, 399, 401, 402, 403, 405, 406, 407, 408, 409, 410, 419, 421, 423, 428], "model": [13, 27, 30, 31, 32, 33, 34, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 66, 68, 80, 82, 83, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 231, 233, 234, 235, 236, 237, 241, 255, 257, 259, 261, 265, 267, 268, 340, 375, 376, 386, 405, 406, 408, 410, 412, 414, 415, 416, 417, 420, 421, 423, 424, 426, 427, 428], "model_cl": 268, "model_cluster_num_parameter_nam": [182, 183, 184, 185], "model_from_config": 387, "model_from_python": 387, "model_init": 267, "model_json": 387, "model_param": [182, 183, 184, 185, 255, 259, 261, 388, 410], "modelnottrainederror": [231, 233, 234, 237, 241, 255, 257, 259, 261], "modif": [409, 413], "modifi": [27, 164, 224, 265, 319, 320, 321, 410, 413, 429], "modul": [0, 1, 28, 78, 83, 103, 116, 134, 144, 155, 158, 168, 171, 178, 189, 207, 208, 220, 229, 239, 246, 269, 272, 289, 338, 358, 361, 408, 409, 410, 411], "modular": 411, "molecul": [51, 136, 313, 390, 420], "molecular": [314, 420], "moment": [228, 251, 411, 426], "monitor": [410, 418], "monkeypatch": 409, "mont": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 69, 226, 367, 369, 370, 384, 393, 405, 406, 415, 424], "monte_carlo_run": [226, 384], "mordr": [130, 136, 368, 369, 370, 372, 373, 379, 384, 388, 390, 402, 403, 408, 410, 417, 420], "mordredcommun": 410, "mordredfingerprint": [130, 420], "more": [8, 10, 18, 53, 58, 71, 136, 163, 164, 191, 193, 199, 206, 222, 265, 284, 287, 308, 348, 370, 373, 385, 390, 391, 405, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 426, 429], "morgan": 420, "morgan_fp": [130, 410], "mors": 130, "morsefingerprint": 130, "most": [199, 222, 371, 393, 408, 411, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 429], "motiv": 410, "move": [410, 423], "mpl_toolkit": 385, "mplot3d": 385, "mqn": 130, "mqnsfingerprint": 130, "mse": 393, "mu": [152, 153], "much": [369, 419, 420], "multi": [230, 231, 407, 410, 412, 415, 427], "multiarmedbandit": 393, "multipl": [36, 110, 225, 226, 321, 368, 369, 370, 379, 390, 393, 408, 410, 415, 417, 419, 426, 427, 428], "multipli": 99, "multitask": 410, "must": [49, 105, 110, 115, 193, 199, 224, 228, 304, 321, 373, 383, 384, 390, 393, 395, 410, 411, 413, 414, 417, 418, 419, 420, 424], "mutual": 424, "my_attribut": 411, "my_valu": 418, "mypi": [295, 305, 408, 410, 411], "mystr": 411, "n": [22, 231, 292, 309, 354, 368, 369, 370, 372, 373, 378, 379, 380, 381, 388, 390, 393, 395, 398, 399, 401], "n_arm": 393, "n_batches_don": 27, "n_cluster": [183, 184], "n_combin": 390, "n_combinations_actu": 390, "n_combinations_expect": 390, "n_compon": 182, "n_doe_iter": [222, 226, 228, 367, 368, 369, 370, 384, 385, 405, 406, 424], "n_duplic": 390, "n_estim": 388, "n_fits_don": 27, "n_interrupted_campaign": 384, "n_iter": [375, 376, 378, 379, 380, 381, 393, 395], "n_mc_iter": [226, 228, 367, 369, 370, 384, 405, 406, 424], "n_mc_run": 393, "n_mc_sampl": 17, "n_permut": 390, "n_pis_ov": 384, "n_pis_over_requir": 384, "n_point": [191, 355], "n_raw_sampl": [175, 410, 421], "n_restart": [175, 410, 421], "n_sampl": 354, "n_task": 193, "n_task_param": 410, "n_wrong_sum": 390, "naiv": [167, 257, 265, 373, 410, 422], "naivehybridrecommend": 410, "naivehybridspacerecommend": [399, 410, 421], "nake": [287, 418], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 40, 58, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 139, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 205, 214, 226, 237, 271, 273, 279, 291, 296, 302, 303, 304, 313, 314, 319, 323, 328, 341, 346, 348, 360, 367, 368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 383, 384, 385, 387, 388, 390, 391, 393, 395, 397, 398, 399, 401, 402, 403, 405, 406, 408, 410, 411, 413, 415, 417, 418, 419, 422, 423, 424, 425, 426, 427, 429], "name_or_abbr": [296, 303], "namedtupl": 393, "namespac": [176, 410, 411], "nan": [27, 142, 231, 362, 364, 365, 395], "nativ": [387, 410], "natur": [259, 369, 411, 417, 421, 423, 426], "navig": [408, 416], "nbase": 314, "nbviewer": 387, "nd": 408, "ndarrai": [111, 281, 282, 283, 322, 330, 333, 344, 354, 385, 393, 410, 424], "ne": 390, "nearli": 426, "necessari": [328, 383, 411, 416, 417, 419, 420, 422, 424], "necessarili": [413, 416, 417, 422, 427], "need": [22, 27, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 228, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 304, 327, 328, 368, 369, 370, 373, 378, 381, 383, 385, 387, 390, 393, 395, 405, 406, 408, 409, 410, 411, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 429], "neg": [13, 410], "negat": [6, 41, 406, 410, 427], "neglig": 413, "neither": [228, 321], "neq": 30, "nest": [348, 416, 428], "neural": 427, "neurip": 427, "never": 380, "nevertheless": [308, 409], "new": [27, 43, 44, 102, 163, 165, 191, 224, 236, 281, 282, 283, 291, 325, 326, 372, 384, 385, 401, 408, 410, 411, 416, 417, 425, 427], "new_rec": 416, "newli": [408, 411, 418, 427], "next": [27, 367, 383, 385, 390, 391, 401, 405, 406, 408, 414, 415, 416, 421, 423], "ngboost": [259, 373, 410], "ngboostmodel": 388, "ngboostsurrog": [373, 388, 425], "nice": [385, 409], "nicknam": 313, "nintern": 395, "no_duplicates_constraint": 390, "no_grad": 385, "no_tl": 405, "nois": [222, 320, 321, 406, 410, 428], "noise_level": 321, "noise_perc": [222, 226, 424], "noise_ratio": 320, "noise_std": [405, 406], "noise_typ": 321, "noisi": [12, 14, 405, 408, 410, 427], "non": [27, 57, 58, 105, 110, 115, 160, 162, 163, 164, 165, 167, 193, 222, 228, 231, 233, 234, 237, 241, 255, 257, 259, 261, 302, 304, 308, 320, 355, 362, 363, 364, 390, 405, 408, 410, 413, 415, 422, 423], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 38, 43, 44, 53, 57, 58, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 100, 102, 110, 115, 119, 132, 133, 138, 141, 142, 143, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 196, 199, 202, 205, 206, 209, 210, 212, 214, 222, 224, 226, 228, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 267, 268, 273, 279, 287, 288, 304, 314, 319, 323, 324, 325, 329, 333, 334, 346, 357, 362, 363, 364, 365, 373, 378, 379, 380, 381, 383, 384, 385, 387, 388, 395, 401, 422, 426, 428], "nonetheless": 427, "nonlinear": [33, 191], "nonpredict": [180, 182, 183, 184, 185, 187, 188], "nonpredictiverecommend": [185, 187, 188, 410], "nonzero": [30, 199, 410], "noqa": [378, 411], "nor": 321, "norecommenderslefterror": [163, 164], "noreturn": 238, "normal": [151, 152, 153, 378, 380, 381, 395, 409, 413, 419, 422], "normaliz": 419, "normalprior": 410, "not_a_param": 388, "notabl": 410, "note": [27, 30, 53, 193, 222, 226, 228, 236, 237, 319, 320, 321, 368, 369, 370, 373, 379, 383, 387, 388, 390, 395, 398, 399, 401, 402, 403, 408, 416, 417, 418, 419, 421, 422, 423, 424, 425, 427], "notebook": 387, "noteworthi": 416, "noth": [13, 27, 30, 38, 40, 41, 47, 72, 110, 123, 136, 165, 167, 173, 175, 182, 183, 184, 185, 191, 193, 199, 231, 241, 255, 259, 261, 279, 413, 420], "notic": [383, 411, 413, 423], "notimplementederror": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 111, 206, 209, 210, 228, 231, 233, 234, 236, 237, 241, 255, 257, 259, 261], "notwithstand": 413, "now": [367, 368, 369, 370, 372, 373, 378, 380, 383, 384, 385, 390, 391, 393, 395, 397, 401, 402, 405, 406, 408, 410, 427, 429], "np": [111, 375, 376, 378, 379, 380, 381, 385, 387, 388, 390, 391, 393, 397, 398, 399, 401, 405, 406, 417, 420, 424, 429], "nrecommend": [372, 373, 395, 398, 399], "nu": 90, "num": [326, 337], "num_disc_1": [395, 416], "num_disc_2": 395, "num_experi": [222, 367, 368, 369, 370, 384, 405, 406], "num_fantasi": 10, "num_parameter_1": 381, "num_parameter_2": 381, "num_parameter_3": 381, "num_parameter_4": 381, "num_parameter_5": 381, "num_parameter_6": 381, "num_sampl": 95, "num_valu": [378, 379, 380, 381, 395, 401, 422], "number": [10, 13, 17, 27, 40, 95, 136, 157, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 222, 226, 228, 231, 329, 333, 337, 349, 354, 355, 368, 369, 370, 375, 376, 378, 379, 380, 381, 385, 390, 393, 398, 405, 406, 408, 409, 410, 414, 416, 417, 418, 419, 420, 422, 423, 424, 429], "numer": [27, 30, 31, 32, 33, 34, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 73, 118, 119, 120, 122, 123, 125, 132, 133, 136, 191, 199, 224, 279, 287, 320, 321, 327, 355, 367, 372, 375, 390, 391, 410, 417, 418, 419, 420, 422, 424, 426], "numerical_measurements_must_be_within_toler": [27, 287, 327, 410, 416], "numerical_onli": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "numericalcontinuousparamet": [41, 191, 367, 375, 376, 391, 397, 399, 406, 422, 424, 428], "numericaldiscreteparamet": [199, 368, 369, 370, 372, 373, 375, 378, 379, 380, 381, 383, 384, 385, 387, 388, 390, 395, 398, 399, 401, 402, 403, 405, 406, 408, 422, 423, 424, 428, 429], "numericaltarget": [224, 367, 368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 384, 385, 387, 388, 395, 398, 399, 401, 402, 403, 405, 406, 408, 410, 419, 423, 424, 428], "numericcontinu": 399, "numparam1": 381, "numparam2": 381, "numparam3": 381, "numparam4": 381, "numparam5": 381, "numparam6": 381, "numpi": [322, 330, 333, 339, 341, 375, 376, 378, 379, 380, 381, 385, 387, 388, 390, 391, 393, 397, 398, 399, 401, 405, 406, 410, 417, 424, 429], "nuniqu": 390, "nyou": [398, 399], "o": [367, 368, 369, 370, 372, 373, 376, 378, 379, 380, 381, 384, 385, 388, 390, 393, 405, 406, 408, 417, 418, 420], "o2": [368, 369, 370], "obj": [141, 142, 143, 210], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 110, 113, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 198, 199, 200, 201, 210, 211, 214, 216, 231, 233, 234, 235, 237, 241, 244, 255, 257, 259, 261, 271, 273, 279, 294, 295, 302, 304, 321, 327, 328, 333, 346, 357, 367, 372, 383, 384, 385, 387, 388, 393, 397, 399, 402, 403, 409, 410, 411, 413, 416, 417, 421, 422, 424, 425, 426, 428, 429], "objective_json": 423, "oblig": 413, "observ": [220, 393, 424, 426], "obsolet": 410, "obtain": [222, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 369, 385, 393, 406, 408, 410, 416, 423, 427], "oc": [368, 369, 370, 372, 373], "oc1": [368, 369, 370], "occur": [52, 411], "occurr": 417, "octanol": [417, 420], "off": [8, 18, 228, 309, 379, 408, 410, 417, 418, 426], "offer": [304, 385, 390, 393, 398, 408, 409, 413, 414, 420, 421, 423, 424, 425, 427, 429], "offset": [41, 93], "offset_initial_valu": 93, "offset_prior": 93, "often": [391, 393, 409, 414, 417, 418, 420, 423, 429], "oftentim": [423, 424], "oh": [122, 127, 369, 379, 388, 393, 395, 401, 402, 403, 408, 422, 423], "ok": 395, "old": 427, "omit": [226, 304, 383, 408, 422, 423], "onc": [226, 384, 420, 424], "one": [17, 27, 58, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 148, 157, 158, 163, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 193, 206, 224, 241, 265, 291, 292, 348, 368, 369, 370, 373, 375, 390, 393, 395, 403, 405, 406, 408, 409, 410, 411, 413, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427], "onehot": 369, "ones": [193, 287, 327, 369, 399, 410, 415, 427], "ongo": [384, 427], "onli": [8, 10, 18, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 80, 90, 105, 110, 115, 136, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 193, 199, 224, 228, 265, 287, 288, 304, 305, 308, 319, 327, 333, 348, 354, 355, 368, 373, 378, 379, 384, 385, 387, 388, 390, 398, 399, 406, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 426, 427, 429], "onlin": 393, "onnx": [236, 237, 340, 386, 408, 410, 425], "onnx_input_nam": [237, 387], "onnx_str": [237, 387], "onto": 411, "open": [408, 411], "opentelemetri": [408, 410, 418], "oper": [38, 41, 50, 212, 265, 322, 338, 375, 376, 380, 381, 390, 391, 409, 410, 415, 417, 421, 423], "operator_convert": 387, "opposit": 417, "opt": [408, 418], "optim": [17, 27, 41, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 220, 222, 226, 228, 231, 233, 234, 237, 241, 255, 257, 259, 261, 319, 369, 371, 372, 375, 376, 384, 385, 390, 393, 395, 399, 410, 412, 414, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427], "optimize_acqf": [41, 175], "optimize_acqf_": 41, "optimize_acqf_discret": 175, "optimize_acqf_mix": 175, "option": [27, 74, 78, 80, 89, 90, 91, 92, 93, 94, 95, 96, 100, 110, 115, 119, 122, 123, 125, 133, 136, 138, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 212, 214, 222, 226, 228, 255, 259, 261, 267, 273, 279, 304, 314, 319, 323, 324, 325, 346, 370, 373, 387, 388, 393, 409, 410, 411, 414, 416, 417, 419, 422, 423, 424, 425, 426, 429], "oracl": 424, "orchestr": [411, 416], "order": [193, 199, 384, 393, 408, 410, 411, 416, 417, 420, 423, 427], "ordin": 426, "org": [41, 253, 295, 325, 387, 408, 413], "organ": 411, "origin": [22, 27, 291, 292, 299, 322, 401, 410, 411, 413, 421, 423, 425], "orthogon": 411, "oserror": 409, "other": [49, 97, 191, 292, 368, 370, 372, 375, 376, 384, 391, 393, 399, 405, 406, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 429], "otherwis": [41, 118, 119, 120, 122, 123, 125, 132, 133, 136, 413, 414, 419, 427], "our": [367, 378, 380, 383, 384, 385, 388, 390, 391, 393, 397, 398, 399, 402, 403, 405, 406, 408, 411, 414, 416, 417, 423, 424], "out": [199, 395, 406, 408, 413, 418, 424, 427], "outcom": [157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 369, 408, 420, 426], "output": [27, 100, 321, 322, 346, 367, 405, 406, 409, 410, 412, 424, 425], "output_label": 322, "outputscal": 100, "outputscale_initial_valu": 100, "outputscale_prior": 100, "outsid": [27, 164, 265, 282, 283, 319, 327, 395, 410, 423], "outstand": 413, "over": [27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 390, 410, 414, 427], "overal": [193, 387, 388, 390, 391, 393, 410, 411, 416, 419, 427], "overlap": [57, 58, 375, 376, 417], "overrid": [212, 214, 383, 410], "overridden": [383, 411], "overview": [408, 423], "overwritten": 399, "own": [167, 367, 391, 408, 409, 410, 411, 413, 417, 420], "owner": 413, "ownership": 413, "p": [367, 368, 369, 370, 372, 373, 375, 376, 383, 385, 398, 405, 406, 411, 425, 429], "p1": [422, 423, 424], "p1_json": 423, "p1_via_json": 423, "p2": [422, 423, 424], "p2_json": 423, "p2_via_json": 423, "p3c4": [368, 369, 370], "p_cont": 422, "p_disc": 422, "p_g1_amount": 391, "p_g2_amount": 391, "p_g3_amount": 391, "p_i": 30, "pack": 423, "packag": [80, 130, 285, 378, 380, 381, 409, 410, 411, 420, 424, 425, 429], "page": [387, 408, 410, 411], "pair": [291, 408, 420], "pam": 184, "pamclusteringrecommend": 421, "panda": [48, 200, 218, 219, 224, 313, 330, 367, 368, 369, 370, 375, 376, 378, 384, 385, 390, 391, 395, 398, 399, 405, 406, 410, 417, 420, 422, 423, 424], "paper": 427, "paper_fil": 427, "parallel": 411, "param": [386, 388, 407], "param1": [422, 424], "param2": [422, 424], "param_bounds_comp": 410, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 61, 71, 80, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 111, 115, 118, 119, 122, 123, 125, 127, 128, 129, 130, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 195, 198, 199, 200, 201, 204, 205, 206, 212, 214, 216, 220, 222, 224, 226, 228, 231, 233, 234, 237, 241, 244, 251, 253, 255, 257, 259, 261, 263, 265, 267, 268, 271, 273, 279, 281, 282, 283, 287, 288, 291, 292, 297, 298, 299, 302, 304, 307, 308, 309, 312, 313, 314, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 337, 342, 343, 344, 346, 348, 350, 351, 354, 355, 357, 367, 372, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 387, 393, 395, 397, 398, 399, 401, 402, 403, 405, 406, 408, 410, 411, 417, 418, 419, 423, 424, 425, 427, 428], "parameter": [148, 149, 150, 151, 152, 153, 154], "parameter_json": 423, "parameter_nam": [191, 193, 199, 399], "parameterencod": [119, 127, 128, 130, 133], "parametr": 417, "parent": 411, "pars": [335, 410], "parser": 410, "part": [13, 22, 36, 65, 167, 168, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 319, 388, 399, 402, 403, 405, 406, 410, 411, 413, 414, 415, 416, 417, 421, 422, 423, 429], "parti": [413, 424], "partial": [22, 384, 428], "particl": 427, "particular": [27, 199, 220, 383, 399, 408, 409, 411, 413, 416, 420, 422, 423, 424], "particularli": [304, 416], "partit": [184, 226, 228, 410, 421, 424], "pass": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 136, 182, 183, 184, 185, 193, 199, 210, 241, 255, 259, 261, 328, 390, 401, 406, 410, 411, 419, 420, 423], "passthrough": [24, 106, 195, 245], "patch": 384, "patent": 413, "path": [346, 369, 390, 410, 411, 418, 429], "pattern": [130, 411, 427], "patternfingerprint": 130, "pd": [27, 224, 291, 292, 326, 367, 368, 369, 370, 375, 376, 378, 384, 385, 390, 391, 395, 398, 399, 405, 406, 410, 417, 420, 422, 423, 424], "pdf": 427, "peek": 423, "pend": [22, 27, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 408, 410, 428], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 410, 415, 421], "per": [222, 368, 369, 370, 373, 390, 395, 398, 405, 406, 410, 420, 422, 424], "percent": [222, 413], "percentag": [175, 287, 321, 373, 378, 379, 380, 381, 390, 395, 401, 406, 421], "perf_count": 383, "perfectli": 423, "perform": [175, 222, 287, 369, 378, 379, 380, 381, 385, 390, 402, 405, 406, 408, 410, 411, 413, 414, 416, 418, 420, 421, 424, 425, 427], "period": 91, "period_length_initial_valu": 91, "period_length_prior": 91, "periodickernel": 410, "perm_inv_constraint": 390, "permiss": [408, 413], "permut": [49, 52, 53, 292, 410, 417], "permutation_invari": 49, "perpetu": 413, "persist": [410, 412, 416, 418, 423, 425], "perspect": 423, "pertain": 413, "pharmacophor": 130, "pharmacophorefingerprint": 130, "phase": [165, 391], "phaseagent1": 391, "phaseagent2": 391, "phcpho": [368, 369, 370, 372, 373], "phenomenon": 416, "philosophi": 423, "physic": 424, "physiochemicalproperti": 130, "physiochemicalpropertiesfingerprint": 130, "pi": [7, 373, 384, 385], "pi_max": 385, "pi_per_iter": 385, "pi_required_fract": 384, "pi_threshold": 384, "pickl": 410, "pictur": 408, "piec": [393, 408, 416, 417], "piecewis": 92, "piecewisepolynomialkernel": 410, "pin": [22, 410], "pin_discret": 22, "pinned_part": 22, "pip": [408, 410, 411, 429], "pipelin": [405, 406, 410, 411], "pival": [368, 369, 370, 372, 373], "pl": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55], "place": [27, 30, 224, 319, 320, 321, 387, 388, 390, 393, 409, 410, 411, 413, 416, 420, 423, 427], "placehold": 294, "plai": [416, 426], "plain": 245, "plainkernelfactori": [85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 241], "plan": [236, 420], "platt": 427, "pleas": [387, 388, 408, 414, 421], "plot": [80, 222, 368, 369, 370, 405, 406, 410, 425, 427], "plot_abegin_convert_pipelin": 340, "plot_ebegin_float_doubl": 340, "plot_typ": 80, "plotting_them": 346, "plt": [368, 370, 385], "plu": [224, 408], "plugin": 410, "pm": [5, 373], "png": [368, 370], "po16": 420, "poetri": 410, "point": [6, 13, 17, 22, 26, 27, 80, 133, 157, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 199, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 339, 340, 352, 353, 354, 355, 359, 368, 372, 373, 384, 391, 398, 399, 405, 406, 408, 410, 412, 414, 415, 416, 421, 422, 428, 429], "points_per_dim": [385, 398, 399, 405, 406], "polar": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 201, 408, 410, 412, 428, 429], "poli": 385, "polici": 393, "polycollect": 385, "polym": 420, "polynomi": [92, 93], "polynomialkernel": 410, "polytop": 410, "popul": 390, "popular": [420, 425], "posit": [80, 304, 354, 410, 419], "posixpath": 346, "possibl": [138, 199, 200, 201, 220, 304, 319, 370, 384, 385, 390, 395, 408, 410, 413, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 429], "post": 420, "post_hook": [304, 383, 384, 385], "posterior": [5, 6, 8, 13, 17, 18, 27, 231, 233, 234, 237, 241, 255, 257, 259, 261, 264, 373, 410, 414, 425], "posterior_mean": [231, 393], "posterior_mod": 231, "posteriorstandarddevi": [393, 414], "postprocess": 313, "potassium": [368, 369, 370, 372, 373], "potenti": [193, 327, 408, 409, 410, 411, 416, 419, 422, 429], "power": [93, 413, 417, 421], "pph3": [368, 369, 370], "pr": [410, 411], "practic": [414, 421], "pre": [138, 163, 244, 386, 409, 410, 411], "pre_hook": [304, 383], "precis": [53, 163, 191, 287, 329, 340, 341, 360, 410, 428], "precomput": 125, "predefin": [346, 416, 421], "predict": [8, 18, 27, 68, 185, 231, 233, 234, 237, 241, 255, 257, 259, 261, 408, 410, 414, 415, 416, 424, 425, 427], "predictor": 263, "prefer": [27, 413, 423], "prefix": 314, "preliminari": 427, "prepar": [385, 411, 413, 429], "preprocess": 410, "presenc": 409, "present": [64, 105, 110, 115, 193, 291, 292, 304, 327, 372, 393, 410, 417, 424, 429], "preset": [241, 248, 251, 253, 410], "pressur": [380, 387, 388, 401, 402, 403, 408, 417], "pretrain": [237, 386, 407], "pretti": 329, "pretty_print_df": [390, 410], "prevent": [209, 210, 304, 409, 410, 411], "previou": [163, 384, 385, 410, 416, 418, 421, 427], "previous": [167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 287, 368, 369, 370, 372, 373, 380, 415], "price": 420, "primari": 416, "primarili": 414, "principl": [390, 393, 425], "print": [224, 329, 348, 368, 369, 370, 372, 373, 375, 376, 380, 383, 387, 388, 390, 391, 393, 397, 398, 399, 401, 402, 403, 408, 410, 422, 429], "print_parameter_names_hook": 383, "printer_inst": 383, "prior": [89, 90, 91, 92, 93, 94, 95, 96, 100, 148, 149, 150, 151, 152, 153, 154, 231, 251, 381, 408, 409, 410], "priori": [417, 423, 427], "privat": [410, 412], "probabilist": 414, "probability_of_improv": 385, "probabilityofimprov": [384, 385], "probabl": [7, 15, 17, 373, 382, 384, 407, 410], "problem": [390, 391, 393, 405, 406, 410, 411, 416, 419, 423], "problemat": [308, 409, 420], "proce": [222, 372, 418], "procedur": [414, 427], "proceed": 427, "process": [27, 83, 239, 240, 241, 242, 246, 247, 248, 250, 251, 252, 253, 326, 354, 373, 383, 390, 393, 405, 406, 410, 411, 414, 415, 416, 417, 418, 420, 423, 427], "prod": 381, "prod_constraint": 381, "prod_i": 419, "produc": [111, 224, 408, 411, 424], "product": [54, 99, 193, 199, 200, 201, 300, 377, 407, 408, 410, 413, 417, 428, 429], "product_paramet": [199, 390, 422], "productkernel": 410, "programmat": 390, "progress": [27, 161, 385, 410], "prohibit": 414, "project": [385, 408, 410, 418], "promin": 413, "promis": [384, 415], "proper": 410, "properli": [22, 395, 409, 422], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 113, 115, 118, 119, 120, 122, 123, 125, 127, 128, 130, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 194, 198, 199, 231, 233, 234, 237, 241, 244, 248, 251, 253, 255, 257, 259, 261, 271, 273, 276, 277, 279, 295, 333, 353, 357, 410, 411, 417], "proport": 406, "propos": 416, "protobuf": 410, "protocol": [156, 157, 235, 243, 308, 410], "prototyp": 412, "provid": [13, 27, 41, 80, 82, 111, 125, 136, 138, 157, 163, 164, 167, 168, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 212, 216, 220, 222, 224, 226, 228, 231, 233, 234, 237, 241, 251, 253, 255, 257, 259, 261, 291, 300, 304, 316, 320, 321, 325, 328, 330, 354, 355, 367, 368, 369, 370, 383, 390, 397, 398, 399, 402, 405, 406, 408, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427], "prune": [12, 14], "prune_baselin": [12, 14], "pstd": [6, 410, 414], "pubchem": 130, "pubchemfingerprint": 130, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 113, 115, 118, 119, 120, 122, 123, 125, 127, 128, 130, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 194, 198, 199, 216, 231, 233, 234, 235, 237, 241, 243, 244, 248, 251, 253, 255, 257, 259, 261, 271, 273, 276, 277, 279, 294, 295, 333, 353, 357, 410, 411], "publicli": 413, "publish": 410, "pull": [393, 410], "pure": [8, 10, 13, 18, 158, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 193, 228, 236, 355, 398, 410, 428], "purerecommend": [160, 162, 163, 164, 165, 167, 173, 180, 410], "purpos": [13, 383, 384, 387, 393, 408, 409, 411, 413, 423, 429], "push": 411, "put": [390, 393, 418, 420], "puzzl": 408, "py": [253, 378, 380, 381, 410, 418], "py310": [378, 380, 381], "py312": 411, "pyarrow": 410, "pydant": 410, "pydoclint": [410, 411], "pydocstyl": 411, "pylint": 410, "pymatgen": 409, "pypi": [408, 410], "pyplot": [368, 370, 385], "pyproject": 410, "pytest": [410, 411], "python": [26, 295, 305, 369, 388, 402, 403, 408, 409, 410, 411, 416, 418, 423], "python3": [378, 380, 381], "python310": 409, "pytorch": 410, "pyupgrad": 410, "q": [92, 263, 264, 373, 415], "qei": [9, 373, 402, 403, 410], "qkg": [10, 410], "qlogei": [11, 373, 410], "qlogexpectedimprov": [373, 378, 379, 380, 381, 395, 401], "qlognei": [12, 410], "qnegintegratedposteriorvari": 414, "qnei": [14, 410], "qnipv": [13, 410, 414], "qpi": [15, 373], "qsimpleregret": 17, "qsr": [16, 410], "qt": 17, "qthompsonsampl": [393, 410], "quadrat": [96, 367], "qualiti": 411, "quantif": 427, "quantifi": [393, 414, 427], "quantiti": [27, 51, 418, 419, 425, 429], "quantum": 125, "qucb": [18, 373, 414], "queri": [158, 168, 220, 222, 224, 408, 416, 418, 424], "question": [411, 416, 427], "qupperconfidencebound": 414, "qvarucb": 410, "r": [368, 369, 370, 372, 373], "radial": 94, "radiu": [130, 410, 420], "rais": [13, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 80, 82, 111, 138, 142, 143, 163, 164, 173, 175, 191, 193, 199, 205, 206, 209, 210, 222, 224, 228, 231, 233, 234, 236, 237, 238, 241, 255, 257, 259, 261, 268, 292, 302, 304, 307, 309, 312, 316, 317, 319, 320, 321, 327, 328, 348, 354, 355, 383, 384, 385, 399, 409, 410, 411, 421], "rand": 387, "random": [13, 95, 191, 193, 222, 224, 226, 260, 261, 319, 353, 354, 355, 367, 368, 369, 370, 373, 384, 385, 387, 391, 393, 406, 408, 410, 414, 420, 421, 424, 429], "random_campaign": 367, "random_forest": [261, 373], "random_se": [222, 226, 384, 424], "randomforestmodel": 388, "randomforestsurrog": [373, 410, 425], "randomli": [188, 367, 369, 414, 421], "randomrecommend": [367, 368, 369, 370, 373, 378, 379, 380, 381, 383, 384, 385, 391, 393, 395, 410, 415, 421], "rang": [118, 119, 120, 122, 123, 125, 132, 133, 136, 271, 319, 320, 367, 375, 376, 378, 379, 380, 381, 385, 390, 393, 395, 397, 398, 399, 406, 408, 417, 422, 423, 424, 426, 429], "rank": 426, "rare": 410, "rastrigin": [375, 376, 398, 399], "rate": [149, 231, 393], "rather": [401, 409, 414, 423], "ration": 96, "ravel": [405, 406], "raw": [175, 423], "rbf": 94, "rbfkernel": 410, "rdf": 130, "rdffingerprint": 130, "rdkit": [130, 378, 380, 381, 410, 417, 420], "rdkit2ddescriptor": [130, 369, 378, 380, 381, 410], "rdkit2ddescriptorsfingerprint": 130, "rdkitfingerprint": 130, "re": [384, 398, 399, 411, 421], "reach": [281, 283, 395], "reachabl": 418, "reactant": 420, "reaction": [369, 372, 408, 417, 420, 427], "reactor": [415, 427], "reactora": 427, "reactorb": 427, "reactorc": 427, "read": [125, 193, 346, 369, 372, 408, 410, 411], "read_excel": [368, 369, 370, 384], "readabl": [198, 329, 337, 401, 410, 412, 413, 423], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 222, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 411, 415], "readm": [410, 411], "reagent": [417, 420], "real": [333, 408, 416, 426], "realist": 424, "realiz": [220, 424], "reason": [38, 182, 183, 184, 185, 199, 369, 398, 410, 413, 414, 415, 417, 418, 420, 424], "reassembl": 423, "rebas": 411, "rec": [378, 379, 380, 381, 395, 415, 416], "rec_finish": 415, "rec_next": 415, "rec_pend": 415, "receiv": [413, 418, 423], "recip": 411, "recipi": 413, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 65, 70, 71, 80, 123, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 199, 220, 222, 235, 236, 287, 319, 321, 367, 368, 369, 370, 371, 375, 376, 378, 379, 380, 381, 383, 384, 385, 391, 393, 395, 402, 403, 405, 406, 407, 408, 410, 411, 414, 418, 420, 424, 425, 427, 428, 429], "recommendation_orig": 401, "recommendation_recr": 401, "recommended_arm_idx": 393, "recommender_with_hook": 384, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 80, 160, 162, 163, 164, 165, 170, 235, 383, 385, 410, 415], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 191, 193, 199, 216, 231, 233, 234, 237, 241, 244, 255, 257, 259, 261, 271, 273, 279, 333, 408, 416, 418, 423], "record": [27, 287, 288, 408, 418, 427], "recreat": [248, 401, 423], "recreate_model": 388, "recurs": [160, 162, 163, 164, 165, 297, 298], "redesign": 410, "redistribut": 413, "reduc": [136, 385, 393, 405, 406, 420], "reduct": 428, "ref": 408, "refactor": 410, "refer": [220, 253, 287, 303, 319, 327, 340, 368, 369, 370, 373, 375, 376, 378, 379, 380, 381, 383, 385, 387, 388, 390, 395, 398, 399, 401, 409, 410, 416, 419, 420, 421, 422, 423, 424, 425, 427], "referenc": 411, "refin": [384, 408, 410, 416], "reflect": [167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 385, 410, 411, 414, 417, 420], "regard": [30, 36, 375, 376, 411, 413], "regim": 410, "regist": [304, 382, 384], "register_custom_architectur": 410, "register_hook": [382, 383, 384, 385, 410], "registr": 410, "regress": 255, "regressor": 387, "regret": [16, 17], "regroup": 410, "regular": [17, 265, 397, 409, 410, 415, 427], "reinstal": 408, "rel": [222, 320, 417, 419], "relat": [51, 105, 110, 112, 115, 126, 193, 211, 275, 290, 399, 405, 406, 408, 410, 416, 417, 418, 427], "relationship": [405, 406, 408, 411, 419, 427], "relative_perc": 321, "releas": [408, 410], "relev": [49, 80, 199, 224, 328, 379, 390, 410, 411, 416, 417, 427, 429], "reli": [409, 410], "reliabl": 420, "remain": [52, 165, 228, 282, 367, 373, 378, 379, 380, 381, 390, 393, 395, 399, 401, 405, 406, 413, 420, 423, 424], "remain_switch": [165, 410], "remaind": 355, "remind": 410, "remot": 411, "remov": [48, 51, 52, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 193, 199, 390, 411, 417, 422], "renam": [369, 405, 406, 410, 411], "render": [80, 387], "reoccur": 427, "reorder": 410, "reorgan": 410, "repeat": [393, 410, 411, 415, 416], "repetit": [226, 373, 384], "rephras": 417, "replac": [398, 399, 410, 411], "replic": 423, "repo": 410, "report": [157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 393, 409], "repositori": [369, 408, 411], "repr": 387, "repres": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 98, 99, 125, 193, 228, 231, 233, 234, 237, 241, 255, 257, 259, 261, 316, 330, 333, 337, 354, 367, 390, 391, 393, 402, 403, 408, 410, 413, 416, 420, 422, 424, 429], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 198, 199, 216, 231, 233, 234, 235, 237, 241, 244, 255, 257, 259, 261, 271, 273, 279, 309, 311, 316, 319, 329, 333, 348, 378, 379, 380, 381, 387, 389, 395, 401, 410, 415, 416, 420, 423, 424, 428, 429], "reproduc": [384, 393, 410, 413, 428], "reproduct": 413, "request": [27, 70, 71, 111, 163, 164, 165, 206, 244, 285, 354, 355, 410, 415, 416], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 40, 41, 47, 69, 165, 199, 268, 304, 372, 383, 384, 387, 391, 393, 395, 398, 402, 408, 409, 410, 411, 413, 415, 416, 417, 419, 420, 422, 423, 424, 426, 427, 429], "rerun": 387, "reserv": [408, 411], "reset_index": 405, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 379, 381, 390, 423], "resolv": 313, "resort": [265, 411, 423, 429], "resource_track": 409, "resp": [194, 370, 399], "respect": [27, 175, 194, 222, 226, 286, 291, 319, 390, 391, 411, 416, 417, 419, 423, 424, 425, 426, 429], "respons": [160, 162, 163, 164, 165, 413, 416, 421], "restart": [163, 175], "restor": 423, "restr": 17, "restrain": 420, "restrict": [193, 199, 220, 226, 228, 378, 391, 410, 424, 427, 428], "result": [8, 10, 18, 27, 136, 199, 222, 319, 326, 368, 369, 370, 372, 387, 388, 390, 391, 393, 395, 397, 405, 406, 408, 410, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 427, 428, 429], "result_baselin": [405, 406], "result_fract": 406, "results_interrupt": 384, "results_uninterrupt": 384, "retain": [413, 417], "retrain": [236, 237, 425], "retriev": [193, 220, 296, 297, 298, 312, 411, 424], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 80, 81, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 105, 106, 108, 110, 111, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 139, 141, 142, 143, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 177, 180, 182, 183, 184, 185, 187, 188, 191, 193, 195, 196, 199, 200, 201, 202, 204, 205, 206, 209, 210, 212, 213, 214, 216, 218, 219, 222, 224, 226, 228, 231, 233, 234, 235, 237, 238, 241, 244, 245, 249, 255, 257, 259, 261, 263, 264, 265, 267, 268, 271, 273, 279, 281, 282, 283, 285, 286, 287, 288, 291, 292, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 342, 343, 344, 346, 347, 348, 354, 355, 357, 362, 363, 364, 365, 367, 378, 384, 385, 387, 390, 393, 405, 410, 416, 417, 424, 425, 429], "return_std": 387, "reus": [165, 410], "reuse_last": 163, "reveal": [385, 391, 406], "review": 411, "revis": [410, 413], "reward": 393, "rework": 410, "rewrit": 410, "rff": 95, "rffkernel": 410, "rh": [41, 43, 44, 375, 376, 391, 417], "right": [41, 154, 327, 333, 368, 370, 379, 393, 408, 409, 411, 413, 417, 419, 420, 426], "right_df": 327, "rihana": 412, "rim": 412, "risk": [409, 413, 416], "roam": 409, "robust": [408, 427], "robustli": 265, "role": [410, 411, 416, 419, 424, 426, 428], "room": [385, 416], "root": [369, 408, 411, 417], "round": [329, 375, 387, 388, 417], "roundtrip": [410, 423], "rout": 423, "row": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 111, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 224, 287, 291, 292, 320, 326, 327, 329, 344, 368, 370, 378, 379, 380, 381, 390, 391, 395, 401, 410, 416, 422, 424], "rowei": 427, "roya": 412, "royalti": 413, "rq": 96, "rqkernel": 410, "ruff": [410, 411], "rule": [383, 410], "run": [222, 226, 368, 369, 370, 384, 385, 405, 406, 408, 409, 410, 411, 416, 423, 424, 429], "run_full_initial_data": 368, "run_impute_mod": 370, "runner": [378, 380, 381], "runtim": [340, 409], "runtimeerror": [27, 163, 383], "rv": 393, "s3": 410, "s41586": [253, 325], "safe": [410, 411, 416], "safeti": 304, "sai": 417, "said": 411, "sake": 390, "same": [51, 165, 199, 205, 224, 231, 233, 234, 237, 241, 255, 257, 259, 261, 299, 373, 384, 387, 388, 390, 393, 401, 409, 415, 417, 418, 423, 424, 427], "sampl": [10, 13, 17, 40, 175, 187, 188, 191, 288, 352, 353, 354, 355, 368, 373, 378, 379, 380, 381, 393, 395, 397, 401, 406, 408, 410, 412, 428], "sample_from_full_factori": [191, 410], "sample_inactive_paramet": 40, "sample_uniform": [191, 397, 410, 424], "sampler": [373, 378, 379, 380, 381, 395, 401], "samples_full_factori": [191, 410], "samples_random": [191, 410], "sampling_algorithm": [353, 414], "sampling_fract": [13, 414], "sampling_method": [13, 414], "sampling_n_point": [13, 414], "sampling_percentag": [175, 421], "satisfi": [36, 37, 38, 199, 375, 376, 390], "save": [346, 368, 370, 387, 410, 424], "savefig": [368, 370], "scalar": [110, 395, 410, 419, 423], "scale": [100, 150, 151, 152, 153, 154, 357, 395, 405, 410, 414, 419], "scalekernel": 410, "scaler": 410, "scatter": 80, "scenario": [228, 367, 368, 369, 370, 384, 390, 405, 406, 415, 417, 419, 427, 428, 429], "scene": [419, 424], "schema": 416, "schembl15068049": [368, 369, 370], "scheme": 410, "scienc": [408, 412], "scientif": [410, 427], "scikit": [130, 408, 410, 412, 420], "scipi": [344, 385, 393, 410], "scope": 367, "screen": [299, 427], "script": [313, 409, 410, 418, 429], "seaborn": [367, 368, 369, 370, 384, 405, 406], "seamlessli": 423, "search": [13, 22, 27, 34, 48, 51, 61, 65, 71, 118, 119, 120, 122, 123, 125, 132, 133, 136, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 203, 222, 226, 228, 231, 233, 234, 237, 241, 255, 257, 259, 261, 287, 327, 328, 367, 370, 372, 374, 377, 378, 379, 380, 381, 383, 384, 385, 393, 395, 396, 401, 406, 410, 412, 415, 416, 417, 418, 423, 424, 428], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 80, 118, 119, 120, 122, 123, 125, 132, 133, 136, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 194, 198, 199, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 367, 369, 372, 383, 384, 385, 387, 388, 390, 391, 393, 397, 401, 402, 403, 405, 407, 408, 410, 416, 417, 418, 420, 422, 423, 424, 429], "searchspace1": 397, "searchspace2": 397, "searchspace3": 397, "searchspace_json": 423, "searchspacetyp": [167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 193, 373, 378, 379, 380, 381, 384, 385, 395, 401, 422], "secfp": 130, "secfpfingerprint": 130, "second": [326, 342, 344, 373, 387, 388, 395, 403, 405, 417, 418], "secondari": [408, 418], "section": [408, 410, 411, 413, 423], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 144, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 198, 199, 222, 226, 228, 231, 233, 234, 235, 237, 241, 244, 251, 253, 255, 257, 259, 261, 271, 273, 279, 284, 302, 308, 321, 326, 333, 357, 368, 369, 370, 375, 376, 383, 384, 388, 391, 399, 408, 411, 416, 418, 419, 420, 421, 423, 424, 428], "seed": [222, 226, 350, 351, 384, 385, 393, 408, 410, 429], "seek": 395, "seem": [340, 403, 409], "seen": 414, "select": [6, 36, 37, 38, 63, 69, 160, 162, 163, 164, 165, 168, 185, 187, 231, 233, 234, 237, 241, 255, 257, 259, 261, 282, 326, 354, 373, 379, 380, 390, 391, 393, 399, 408, 410, 414, 416, 417, 420, 421, 423, 425], "select_recommend": [160, 162, 163, 164, 165, 410], "self": [304, 317, 362, 363, 364, 365, 383, 384, 385, 393, 411], "sell": 413, "semant": [410, 423], "sens": [53, 304, 308, 326, 417, 420], "sent": 413, "separ": [226, 228, 265, 302, 357, 358, 385, 410, 411, 413, 423], "sequenc": [27, 41, 110, 142, 163, 164, 191, 193, 199, 200, 201, 204, 287, 291, 292, 304, 305, 314, 317, 322, 327, 328, 344, 419, 421], "sequenti": [162, 163, 164, 165, 175, 373, 378, 379, 380, 381, 395, 401, 410, 421], "sequential_continu": [175, 421], "sequential_greedy_x": 410, "sequentialgreedyrecommend": 410, "sequentialmetarecommend": [164, 421], "sequentialstrategi": 410, "seri": [27, 36, 37, 38, 48, 119, 122, 123, 125, 133, 136, 271, 273, 279, 378, 390, 410, 417], "serial": [164, 199, 216, 288, 387, 407, 409, 410, 411, 417, 421, 428], "serializ": [408, 417, 421], "serialize_datafram": 423, "serialized_df": 218, "serializetostr": 387, "serialmixin": [20, 27, 31, 36, 87, 105, 120, 146, 160, 191, 193, 199, 234, 244, 271, 273, 279, 333, 410], "serv": [228, 231, 233, 234, 237, 241, 255, 257, 259, 261, 327, 405, 406, 416, 417, 420], "servic": 413, "session": [237, 418, 423], "set": [27, 30, 38, 40, 51, 53, 57, 58, 80, 82, 136, 157, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 222, 226, 248, 286, 319, 325, 326, 346, 350, 351, 368, 369, 370, 371, 373, 378, 380, 383, 388, 389, 390, 391, 393, 395, 399, 408, 410, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 427, 429], "set_box_aspect": 385, "set_dash": 384, "set_random_se": [385, 393, 429], "set_size_inch": [368, 370], "set_x_pend": 22, "set_xlabel": 385, "set_xtick": 385, "set_xticklabel": 385, "set_ylabel": 385, "set_ylim": 385, "set_zlabel": 385, "setpoint": 133, "setup": [222, 384, 417, 424, 429], "sever": [138, 158, 367, 369, 373, 384, 387, 393, 395, 397, 406, 408, 410, 411, 415, 417, 418, 419, 420, 422, 423, 424, 427, 429], "shall": [163, 321, 413, 419], "shap": [80, 408, 410, 412, 425], "shap_valu": 425, "shape": [17, 191, 198, 277, 281, 283, 354, 422, 429], "shapinsight": 410, "shaplei": 80, "share": [410, 413, 427], "shield": [253, 325, 369, 408, 420], "shift": [8, 18, 405], "shifted_hartmann": 405, "ship": [358, 418, 423], "shm": 409, "short": 411, "shortcut": [199, 422, 423], "shorten": [410, 411], "shot": 427, "should": [27, 49, 80, 123, 136, 165, 199, 214, 226, 276, 291, 292, 319, 321, 324, 325, 327, 329, 332, 333, 334, 342, 346, 378, 380, 384, 387, 390, 391, 399, 403, 408, 410, 411, 415, 416, 417, 422, 424, 425, 427, 429], "show": [80, 368, 369, 370, 372, 373, 378, 379, 380, 387, 388, 390, 393, 399, 401, 402, 403, 405, 406, 417], "showcas": 421, "shown": [384, 393, 406, 410], "shrink": 385, "shutdown": 409, "side": [41, 282, 410], "sigma": [151, 152, 153, 154, 281, 395, 412], "signal": [60, 419], "signatur": [76, 268, 302, 304, 385, 410, 411, 417, 423], "significantli": [199, 393, 405, 406], "silenc": 411, "silent": [410, 417], "similar": [164, 409, 417, 418, 420, 421, 422, 423, 427, 429], "similarli": 420, "simpl": [16, 17, 295, 369, 383, 384, 391, 408, 410, 421, 424, 426, 427], "simpler": [411, 423], "simplest": 422, "simplex": [199, 428], "simplex_paramet": [199, 390, 422], "simpli": [308, 383, 384, 411, 417, 420, 421, 422, 423, 426, 427], "simplic": 304, "simplifi": 411, "simul": [72, 321, 380, 385, 408, 410, 427, 428], "simulate_experi": [226, 228, 424], "simulate_scenario": [228, 367, 368, 369, 370, 384, 405, 406, 424], "simulate_transfer_learn": [405, 424], "simulationresult": 393, "simultan": 419, "sinc": [53, 193, 236, 304, 368, 375, 376, 388, 398, 401, 402, 403, 405, 411, 414, 415, 416, 417, 418, 419, 423, 424, 425, 427], "singer": 427, "singl": [17, 27, 36, 49, 80, 102, 115, 191, 193, 199, 222, 271, 273, 279, 333, 341, 348, 354, 360, 368, 369, 370, 379, 384, 390, 395, 405, 406, 408, 410, 417, 418, 419, 420, 422, 427, 428], "single_lin": 348, "singledispatch": 335, "singletargetobject": [27, 271, 273, 279, 368, 369, 370, 372, 373, 378, 379, 380, 381, 384, 387, 388, 401, 402, 403, 408, 410, 425, 428], "site": [378, 380, 381, 409], "situat": [378, 380, 390, 409, 411, 415, 417, 419, 420, 423, 424, 427], "six": [390, 391], "size": [17, 85, 86, 87, 90, 92, 94, 95, 96, 163, 165, 193, 198, 199, 288, 337, 385, 387, 393, 398, 399, 405, 406, 416, 423, 424, 427, 429], "sk": 387, "skeleton": 410, "skfp": 130, "skicit": 410, "skin": 424, "skip": [196, 202, 410, 416], "skl2onnx": 387, "sklearn": [185, 340, 387, 409], "sklearnclusteringrecommend": [182, 183, 184, 410, 415], "slightli": [220, 369, 390, 424], "slot": [389, 393, 407, 410, 417], "slot1_amount": 390, "slot1_label": 390, "slot2_amount": 390, "slot2_label": 390, "slot3_amount": 390, "slot3_label": 390, "slow": [378, 380, 381, 422], "slowest": 410, "small": [289, 293, 375, 390, 405, 406, 410, 414, 420], "smaller": [27, 393, 416, 427], "smallest": [191, 422], "smart": 408, "smartli": 390, "smile": [136, 311, 313, 314, 408, 420], "smoke": 410, "smoke_test": [346, 367, 368, 369, 370, 376, 378, 379, 381, 384, 385, 393, 405, 406], "smooth": [90, 92, 154], "smoothedboxprior": 410, "smoother": 90, "sn": [367, 368, 369, 370, 384, 405, 406], "snippet": 418, "so": [27, 222, 236, 326, 370, 384, 390, 393, 398, 399, 408, 409, 417, 418, 419, 420, 421, 423, 426], "softwar": [408, 413], "sola": 412, "sole": 413, "solut": [416, 422, 423, 427], "solv": [236, 379, 380, 390, 393], "solv_rdkit2ddesc": 380, "solvent": [368, 369, 370, 372, 373, 378, 379, 380, 381, 384, 388, 390, 391, 402, 403, 408, 417, 420], "solvent1": [390, 391], "solvent2": [390, 391], "solvent3": 390, "solvent4": 390, "solvent5": 390, "solvent8": 390, "solvent9": 390, "solvent_1": 417, "solvent_2": 417, "solvent_3": 417, "solvent_data": 384, "solvent_encoding1": 417, "solvent_encoding2": 417, "solvent_mordred_enc": 417, "solvent_rdkit2dd": [378, 381], "solvent_rdkit_enc": 417, "solvent_smil": 384, "solver": 424, "some": [49, 327, 340, 368, 369, 370, 373, 378, 379, 380, 381, 384, 385, 387, 388, 390, 391, 397, 398, 399, 401, 406, 415, 417, 418, 420, 421, 423, 424, 425, 429], "someth": 403, "sometim": [417, 424], "somewhat": 418, "somewher": 416, "soon": [408, 416, 421], "sophist": [410, 423], "sort": 139, "sourabh": 412, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 105, 106, 108, 110, 111, 113, 115, 118, 119, 120, 122, 123, 125, 127, 128, 129, 130, 132, 133, 136, 138, 139, 141, 142, 143, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 177, 180, 182, 183, 184, 185, 187, 188, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 209, 210, 212, 213, 214, 216, 218, 219, 222, 224, 226, 228, 231, 233, 234, 235, 237, 238, 241, 243, 244, 245, 248, 249, 251, 253, 255, 257, 259, 261, 263, 264, 265, 267, 268, 271, 273, 276, 277, 279, 281, 282, 283, 285, 286, 287, 288, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 342, 343, 344, 346, 347, 348, 350, 351, 353, 354, 355, 357, 365, 408, 409, 410, 411, 413], "space": [10, 13, 21, 22, 27, 34, 41, 48, 51, 61, 65, 67, 71, 118, 119, 120, 122, 123, 125, 132, 133, 136, 157, 166, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 202, 203, 222, 226, 228, 231, 233, 234, 237, 241, 255, 257, 259, 261, 287, 327, 354, 367, 370, 372, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 393, 395, 396, 398, 401, 406, 407, 410, 412, 415, 416, 417, 418, 420, 423, 424, 428], "span": [118, 119, 120, 122, 123, 125, 132, 133, 136, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 287, 383, 393, 397], "speak": 427, "spec": [196, 202, 213], "special": [165, 408, 409, 413, 414, 427, 429], "specif": [83, 138, 144, 185, 193, 196, 209, 226, 265, 296, 383, 384, 398, 408, 411, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 49, 75, 82, 125, 136, 138, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 212, 213, 222, 224, 226, 235, 281, 282, 283, 291, 303, 312, 319, 322, 328, 354, 355, 369, 373, 375, 387, 388, 393, 395, 405, 408, 409, 410, 414, 416, 417, 419, 420, 421, 422, 423, 424, 426, 427], "speed": [199, 378, 380, 381, 405, 406, 418, 422], "speed_fast": 422, "speed_norm": 422, "speed_slow": 422, "speedup": 427, "spell": 411, "spellcheck": 410, "sphinx": [410, 411], "split": [167, 415], "sporad": 410, "spread": 426, "sqrt": 417, "squar": [393, 417], "squash": 411, "stabil": [410, 418], "stabl": [83, 144, 284], "stage": [416, 417, 423], "stand": 410, "standard": [6, 265, 387, 410, 420], "star": 390, "start": [222, 367, 383, 384, 385, 391, 393, 409, 410, 415, 420, 421, 423, 424, 427], "startup": 410, "stat": [285, 385, 391, 393], "state": [160, 162, 163, 164, 165, 384, 390, 410, 413, 416], "stateless": [393, 410], "statement": [329, 398, 408, 413], "static": [193, 199, 241, 408, 411, 427], "statist": [288, 406, 408, 418], "statu": 416, "std_threshold": 265, "stem": [409, 427], "step": [196, 202, 222, 390, 393, 408, 411, 416, 419, 423, 425], "sterl": 412, "steven": 369, "still": [138, 199, 319, 384, 393, 415, 417, 418, 420, 427, 429], "stop": [382, 407, 410, 411], "stop_on_pi": 384, "stoppag": 413, "storag": [416, 418, 423], "store": [22, 120, 265, 271, 385, 390, 393, 408, 410, 416, 429], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 111, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 173, 175, 182, 183, 184, 185, 191, 193, 198, 199, 212, 216, 226, 228, 231, 233, 234, 237, 241, 244, 255, 257, 259, 261, 271, 273, 274, 279, 281, 282, 283, 285, 288, 291, 292, 296, 302, 303, 309, 311, 313, 314, 316, 319, 322, 324, 325, 329, 333, 337, 343, 346, 347, 348, 388, 393, 402, 403, 405, 406], "straightforward": [426, 427], "strategi": [13, 175, 193, 220, 367, 393, 410], "stream": [300, 418], "streamingsequentialmetarecommend": [163, 421], "streamingsequentialstrategi": 410, "streamlin": 411, "streamlit": [408, 410], "streibel": 412, "strict": 302, "strictli": [388, 402, 403], "stride": 375, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 135, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 191, 193, 199, 216, 231, 233, 234, 237, 241, 244, 255, 257, 259, 261, 271, 273, 279, 309, 313, 314, 316, 317, 324, 333, 348, 387, 401, 410, 416, 417, 420, 426, 428], "strip": [222, 370, 415], "strong": 410, "strongli": 416, "strtobool": [410, 418], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 45, 108, 212, 408, 409, 410, 411, 412, 416, 420, 423], "studi": [158, 408, 421, 428], "style": [102, 405, 410, 411], "sub": [185, 410, 423], "subclass": [75, 212, 296, 298, 308, 373, 410, 411, 421, 423], "subfold": 418, "subgraph": 420, "subgroup": 391, "subject": 413, "sublicens": 413, "submiss": [410, 413], "submit": [22, 285, 287, 408, 411, 413], "subpackag": [410, 411, 424], "subselectioncondit": [379, 380, 410, 428], "subsequ": [165, 193, 199, 226, 313, 413, 416, 423, 425], "subset": [27, 105, 110, 115, 136, 193, 299, 328, 354, 416, 417], "subspac": [22, 167, 175, 190, 191, 193, 195, 197, 199, 375, 378, 379, 380, 381, 395, 397, 399, 401, 410, 421, 423, 428, 429], "subspace_json": 423, "subspacecontinu": [27, 118, 132, 193, 195, 397, 410, 422], "subspacediscret": [27, 119, 122, 123, 125, 133, 136, 193, 195, 198, 378, 379, 380, 381, 390, 395, 401, 410, 422, 423, 429], "substanc": [130, 136, 312, 369, 372, 378, 380, 381, 391, 410, 417, 420, 427], "substance_12": 417, "substance_3": 417, "substance_43": 417, "substance_data": 410, "substance_encod": 369, "substanceencod": [136, 312, 314, 378, 379, 380, 381, 410, 420], "substanceparamet": [368, 369, 370, 372, 373, 378, 379, 380, 381, 384, 388, 390, 402, 403, 408, 410, 417, 418, 422, 428], "substanti": [136, 429], "substrat": 427, "subtyp": 423, "success": [273, 354, 393, 423], "success_valu": 273, "suffic": 411, "suffici": [384, 422, 423], "suggest": 424, "suit": 411, "suitabl": [185, 199, 222, 309, 411, 414, 416, 420, 424, 425, 427], "sum": [55, 98, 199, 367, 377, 378, 379, 380, 384, 390, 391, 393, 407, 417, 419, 422], "sum_": [417, 419], "sum_constraint": 390, "sum_constraint_1": 381, "sum_constraint_2": 381, "sum_toler": 390, "summar": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 118, 119, 120, 122, 123, 125, 132, 133, 136, 271, 273, 279], "summari": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 118, 119, 120, 122, 123, 125, 132, 133, 136, 271, 273, 279, 410, 411], "superior": 414, "supersed": 413, "support": [10, 80, 164, 228, 231, 233, 234, 237, 241, 255, 257, 259, 261, 340, 373, 378, 379, 380, 381, 384, 385, 387, 390, 395, 401, 410, 411, 412, 413, 417, 420, 421, 422, 424, 425], "supports_transfer_learn": [231, 233, 234, 237, 241, 255, 257, 259, 261, 425], "suppos": [287, 417], "sure": [390, 397, 408, 411], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 66, 80, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 173, 175, 182, 183, 184, 185, 231, 233, 235, 237, 241, 243, 244, 248, 251, 253, 255, 257, 259, 261, 378, 379, 380, 381, 385, 393, 395, 401, 407, 408, 410, 412, 417, 420, 421, 427, 428], "surrogate_model": [173, 175, 373, 385, 387, 388, 393, 402, 403, 410], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 80, 173, 175, 234, 410], "svg": 346, "sw": 379, "swiss": 412, "switch": [49, 161, 164, 165, 265, 373, 378, 379, 380, 381, 393, 395, 401, 408, 410, 417, 421], "switch1": 379, "switch2": 379, "switch2_left": 379, "switch2_right": 379, "switch_1": 417, "switch_2": 417, "switch_aft": [165, 402, 403, 421], "switzerland": 412, "sy": 409, "symmetri": 417, "syntax": [408, 410], "synthet": [375, 376, 385, 405, 406], "system": [369, 393, 408, 409, 413, 418, 424, 427], "t": [263, 264, 301, 309, 368, 369, 370, 372, 373, 380, 385, 405, 406, 423, 424], "t1": [423, 424], "t2": 423, "t3": 423, "t_1": 419, "t_2": 419, "t_3": 419, "t_i": 419, "tabl": [329, 410, 417], "tabular": 424, "tag": [408, 410, 423], "tailor": 416, "take": [45, 90, 119, 133, 138, 231, 233, 234, 237, 241, 251, 255, 257, 259, 261, 274, 383, 390, 410, 415, 416, 417, 419, 420, 421, 427], "taken": [163, 384, 410, 416, 419], "tantamount": 414, "target": [27, 67, 102, 105, 106, 110, 114, 115, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 199, 220, 222, 223, 224, 231, 233, 234, 237, 241, 255, 257, 259, 261, 265, 273, 276, 277, 279, 304, 319, 322, 328, 342, 343, 349, 367, 368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 384, 385, 387, 388, 393, 398, 399, 401, 402, 403, 405, 406, 407, 408, 410, 415, 416, 418, 423, 424, 425, 428], "target_1": [379, 380, 381, 395, 419, 426], "target_2": [395, 419, 426], "target_3": [395, 419], "target_3a": 426, "target_3b": 426, "target_cumbest": [367, 405, 406], "target_max": 416, "target_transform": 395, "targetmod": [279, 423, 426], "targetnam": 222, "targettransform": [279, 410, 426], "task": [123, 193, 228, 231, 233, 234, 237, 241, 255, 257, 259, 261, 271, 273, 279, 393, 410, 416, 421, 423, 424, 427], "task_idx": [193, 410], "task_param": [405, 406, 424], "task_paramet": 423, "task_parameter_json": 423, "task_parameter_reconstruct": 423, "taskparamet": [206, 405, 406, 410, 423, 424, 428], "tb": 429, "technic": [199, 415, 424, 427], "techniqu": [185, 421], "technologi": 412, "telemetri": [410, 412, 428], "tell": 286, "temp": [378, 380, 412], "temp_c": [368, 369, 370, 384], "temperatur": [368, 370, 372, 373, 378, 380, 383, 387, 388, 401, 417, 420, 422, 427], "temperature_resolut": 378, "temperature_valu": 384, "temporari": [101, 107, 176, 193, 351, 384, 410, 418, 423], "temporarili": [410, 429], "temporary_se": 429, "tempt": 427, "tenac": 410, "tend": 385, "tensor": [22, 41, 231, 263, 264, 322, 330, 333, 357, 359, 405, 410], "term": [93, 220, 384, 393, 411, 413, 416, 422, 423, 424, 427], "termin": [384, 385, 409, 413], "terminologi": 428, "tert": [368, 369, 370, 372, 373], "test": [199, 222, 237, 319, 393, 405, 406, 408, 409, 410, 411, 416, 424, 429], "test_funct": [375, 376, 385, 398, 399, 405, 406], "test_scenario": [368, 370], "testabl": [72, 222], "testfunct": [375, 376, 398, 399], "testfunctionclass": [375, 376, 398, 399], "text": [30, 347, 387, 413, 417, 418, 419], "th": [292, 417], "than": [27, 58, 71, 133, 163, 164, 165, 191, 193, 206, 292, 308, 348, 355, 369, 380, 384, 391, 414, 417, 418, 420, 423], "thei": [138, 158, 168, 282, 324, 328, 373, 381, 384, 390, 393, 397, 410, 411, 415, 416, 417, 420, 421, 422, 423, 426, 427, 429], "them": [34, 251, 320, 346, 373, 408, 409, 410, 411, 415, 417, 418, 420, 421, 423, 427], "theme": [346, 410], "theori": 413, "therebi": 199, "therefor": [165, 231, 233, 234, 237, 241, 255, 257, 259, 261, 373, 409, 416, 423, 427], "therein": 410, "thereof": 413, "thf": 417, "thi": [10, 13, 17, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 220, 224, 226, 228, 231, 233, 234, 235, 236, 237, 241, 251, 255, 257, 259, 261, 265, 288, 291, 304, 305, 308, 313, 319, 321, 323, 325, 327, 329, 346, 367, 383, 384, 385, 387, 388, 390, 391, 393, 397, 401, 402, 403, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429], "think": [393, 420], "third": [395, 413, 424], "thompson": [17, 412], "thomson": 17, "those": [138, 165, 167, 220, 354, 373, 409, 413, 417, 424], "though": 427, "three": [369, 390, 391, 395, 408, 416, 417, 419, 421, 422, 427], "threshold": [38, 125, 136, 165, 265, 325, 375, 380, 381, 384, 390, 410, 417, 420], "thresholdcondit": [54, 55, 375, 380, 381, 390, 428], "through": [27, 193, 281, 291, 319, 328, 388, 390, 393, 395, 408, 410, 411, 413, 417, 423, 424, 428], "throughout": 165, "throw": [313, 417, 420], "thrown": [224, 370, 384, 402, 409, 419], "thu": [175, 304, 328, 368, 369, 375, 376, 378, 379, 380, 381, 387, 388, 390, 393, 395, 398, 399, 401, 409, 411, 416, 418, 420, 421, 423, 424, 427, 429], "tick": 385, "time": [10, 175, 288, 355, 376, 383, 390, 393, 408, 410, 415, 416, 417, 420, 423, 424, 429], "timeout": [410, 418], "timer": 383, "titl": 413, "tl": 405, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 41, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 384, 385, 410], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 191, 193, 199, 216, 231, 233, 234, 237, 241, 244, 255, 257, 259, 261, 271, 273, 279, 333], "to_factori": [85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100], "to_fram": 367, "to_gpytorch": [85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 146, 148, 149, 150, 151, 152, 153, 154, 410], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 191, 193, 199, 216, 231, 233, 234, 237, 241, 244, 255, 257, 259, 261, 271, 273, 279, 333, 387, 388, 401, 416, 423], "to_keep": 326, "to_ndarrai": 333, "to_object": [271, 273, 279, 367, 375, 376, 385, 393, 398, 399, 405, 406, 419, 424], "to_polar": [36, 37, 38], "to_searchspac": [118, 119, 120, 122, 123, 125, 132, 133, 136, 191, 199, 393, 397, 410], "to_subspac": [118, 119, 122, 123, 125, 132, 133, 136, 410], "to_tensor": [333, 384, 385, 387, 410], "to_tupl": 333, "togeth": [34, 62, 292, 373, 393, 399, 408, 410], "toggl": 27, "toggle_discrete_candid": [27, 410], "toler": [27, 38, 133, 199, 287, 327, 368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 384, 387, 388, 390, 395, 398, 399, 401, 402, 403, 408, 410, 417, 420], "tolist": 375, "toluen": 420, "toml": 410, "too": [375, 424, 427], "tool": [310, 410, 423], "toolbox": 408, "top": [410, 411], "topic": 416, "topolog": 420, "topologicaltors": 130, "topologicaltorsionfingerprint": 130, "torch": [322, 333, 384, 385, 387, 405, 410], "toronto": 412, "tort": 413, "total": [164, 165, 354, 390, 391, 393, 422], "total_bas": 391, "total_phase_ag": 391, "toward": [8, 18, 148, 319, 417], "tox": [378, 380, 381, 408, 410, 411], "tracebackexcept": 409, "track": [157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 199, 384, 413], "trade": [8, 18, 413], "trademark": 413, "tradit": [369, 389, 390, 407, 408, 410], "train": [68, 80, 157, 163, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 228, 231, 233, 234, 235, 236, 237, 241, 255, 257, 259, 261, 265, 386, 405, 406, 410, 424], "train_i": 387, "train_x": 387, "training_funct": 406, "trajectori": [220, 367, 384, 393, 424], "transfer": [227, 228, 231, 233, 234, 237, 241, 255, 257, 259, 261, 373, 378, 379, 380, 381, 395, 401, 405, 407, 408, 410, 413, 420, 425, 428], "transform": [27, 68, 105, 110, 115, 119, 120, 122, 123, 125, 133, 136, 191, 193, 199, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 271, 273, 277, 279, 314, 322, 328, 333, 334, 357, 378, 379, 380, 381, 401, 410, 413, 418, 420, 425, 426], "transform_rep_exp2comp": 410, "transit": 410, "translat": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 410, 413, 420], "transmiss": 423, "transmit": 288, "travers": 410, "treasur": 428, "treat": [136, 369, 408, 417, 420, 426, 429], "tree": 410, "tremend": 369, "trend": 427, "tri": 422, "triangl": 283, "triangular": [277, 283, 395, 426], "tricyclohexylphosphin": [368, 369, 370], "trigger": [163, 291, 384, 388, 393, 410, 411, 415, 419, 423], "trivial": [244, 257, 419, 420], "true": [6, 12, 14, 27, 30, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 193, 199, 241, 273, 282, 287, 297, 298, 302, 308, 309, 326, 327, 348, 369, 373, 375, 376, 378, 379, 380, 381, 385, 387, 388, 390, 393, 395, 398, 399, 401, 402, 403, 405, 406, 410, 416, 417, 418, 420, 423], "truncat": [408, 418], "trust": [387, 418], "truth": 309, "truthi": 418, "try": [319, 368, 369, 370, 384, 387, 388, 403, 409, 410, 429], "tune": 408, "tupl": [27, 37, 41, 85, 86, 87, 90, 92, 94, 95, 96, 98, 99, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 139, 191, 193, 198, 199, 264, 291, 302, 305, 317, 319, 330, 333, 337, 357], "turn": [191, 199, 337, 397, 408, 409, 410, 417, 418], "turnaround": 424, "twice": 419, "two": [30, 51, 57, 58, 111, 165, 175, 220, 292, 295, 322, 342, 354, 367, 368, 370, 373, 383, 390, 393, 395, 399, 405, 406, 408, 410, 411, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 426], "twofold": 393, "twophasemetarecommend": [368, 370, 373, 378, 379, 380, 381, 384, 385, 387, 388, 393, 395, 399, 401, 402, 403, 408, 410, 421], "twophasestrategi": 410, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 80, 81, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 106, 108, 110, 111, 115, 118, 119, 120, 122, 123, 125, 132, 133, 135, 136, 138, 139, 141, 142, 143, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 177, 180, 182, 183, 184, 185, 187, 188, 191, 193, 194, 195, 196, 199, 200, 201, 202, 204, 205, 206, 209, 210, 212, 213, 214, 216, 218, 219, 222, 224, 226, 228, 231, 233, 234, 235, 237, 238, 241, 244, 245, 249, 255, 257, 259, 261, 263, 264, 265, 267, 268, 271, 273, 274, 279, 281, 282, 283, 285, 286, 287, 288, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 333, 334, 335, 337, 339, 340, 342, 343, 344, 346, 347, 348, 354, 355, 357, 359, 362, 363, 364, 365, 369, 378, 379, 380, 381, 383, 384, 385, 387, 388, 390, 391, 393, 395, 401, 402, 403, 408, 410, 411, 413, 414, 417, 419, 420, 421, 422, 427, 428], "typealia": 274, "typeerror": [27, 80, 82, 222, 237, 304, 319, 320, 355, 384, 385], "typeguard": 301, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 165, 191, 193, 199, 204, 212, 213, 216, 231, 233, 234, 237, 241, 244, 255, 257, 259, 261, 264, 271, 273, 279, 298, 299, 300, 301, 317, 322, 328, 333], "typic": [13, 304, 348, 369, 408, 415, 416, 420, 423, 429], "typing_extens": 411, "typo": [410, 411], "u": [17, 367, 368, 369, 370, 383, 385, 390, 391, 393, 397, 406, 408, 414, 417, 419], "ucb": [8, 373, 410, 414, 423], "ultim": 411, "ultra": [402, 403], "un": 410, "unabl": 387, "unavail": 410, "unawar": 415, "unbound": [333, 383], "uncaught": 410, "uncertainti": [13, 373, 428], "uncharacter": 427, "uncorrel": [325, 427], "undefin": 231, "under": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 288, 328, 381, 385, 393, 408, 409, 413, 415, 420], "underflow": 73, "underli": [27, 51, 384, 393, 408, 416, 421, 423], "underscor": 410, "understand": [408, 427], "undesir": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 417, 420, 429], "undo": 409, "unequ": 381, "unevenli": 420, "unfinish": 415, "unfortun": 427, "unhandl": 410, "uniform": [191, 231, 320, 321, 410], "uniformli": 354, "uniniti": 308, "uninstal": [74, 408], "unintend": [77, 304, 410, 411], "unintention": 429, "union": [111, 222, 226, 281, 282, 283, 343, 399, 413, 422], "uniqu": [52, 138, 390, 410, 420], "unit": [198, 337], "unknown": [164, 354, 367, 393, 410, 425, 427], "unlabel": 322, "unless": [408, 411, 413, 418, 420, 423], "unlik": [12, 14, 390, 429], "unlock": 428, "unmaintain": 410, "unmatch": 302, "unmatchedattributeerror": 302, "unmeasur": [222, 370], "unnecessari": [410, 416], "unpromis": 384, "unreach": 410, "unrealist": 424, "unrecogn": 319, "unrestrict": 304, "unsaf": 410, "unspecifi": [410, 423], "unsqueez": [384, 385], "unstructur": [214, 423], "unstructure_bas": 212, "unsupport": [191, 224], "until": [160, 162, 163, 164, 165, 222, 393, 408, 424], "untouch": 320, "untransform": [27, 425], "unusedobjectwarn": [384, 410], "unveil": 406, "unwant": 34, "up": [27, 199, 222, 224, 367, 368, 369, 370, 371, 378, 380, 383, 385, 389, 390, 391, 399, 405, 406, 408, 409, 410, 414, 417, 429], "updat": [27, 369, 372, 410, 411, 415], "upgrad": 410, "upon": [167, 244, 409, 410, 411, 417, 422, 425, 427], "upper": [8, 18, 154, 193, 199, 281, 282, 283, 333, 373, 385, 395, 405, 406, 410, 426, 429], "upper_bound": [378, 379, 380, 381, 401, 422], "upperconfidencebound": [414, 423], "upstream": 411, "url": [418, 427], "us": [13, 17, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 62, 65, 80, 90, 110, 111, 125, 130, 133, 136, 138, 157, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 191, 193, 199, 200, 201, 213, 222, 224, 226, 231, 233, 234, 237, 238, 241, 255, 257, 259, 261, 277, 287, 288, 294, 304, 305, 313, 314, 319, 321, 322, 327, 335, 339, 340, 346, 354, 359, 367, 375, 376, 382, 383, 384, 385, 386, 389, 390, 391, 397, 401, 402, 403, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 426, 427, 428, 429], "usa": 412, "usabl": [308, 409, 410, 420, 423], "usag": [336, 408, 410, 417, 418, 421], "use_comp_rep": [80, 82], "use_torch": [322, 375, 376, 385, 398, 399, 405, 406], "user": [48, 49, 60, 69, 77, 125, 128, 199, 231, 233, 234, 237, 241, 255, 257, 259, 261, 268, 285, 321, 327, 372, 373, 378, 395, 403, 408, 409, 410, 411, 416, 417, 418, 419, 420, 422, 423, 424, 427], "userguid": 284, "usernam": [285, 410, 418], "userwarn": 409, "uses_shap_explain": 80, "usort": 410, "usr": 130, "usrcat": 130, "usrcatfingerprint": 130, "usrfingerprint": 130, "usual": [222, 368, 369, 370, 402, 409, 420], "util": [175, 191, 199, 287, 294, 295, 333, 353, 357, 367, 369, 372, 373, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390, 393, 395, 398, 399, 405, 406, 408, 410, 414, 415, 419, 420, 421, 423, 424, 425, 427, 428], "uv": 410, "v": 427, "val": [45, 108, 309, 405], "val_from_param1": 53, "val_from_param2": 53, "valid": [27, 30, 31, 32, 33, 34, 37, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 138, 193, 196, 199, 202, 237, 327, 378, 400, 402, 407, 409, 410, 411, 416, 417, 424], "validate_compat": 237, "validate_config": [27, 403, 410, 416], "valu": [6, 8, 18, 22, 27, 30, 36, 37, 38, 41, 49, 51, 67, 80, 89, 90, 91, 92, 93, 94, 95, 96, 100, 105, 110, 111, 115, 119, 122, 123, 125, 127, 128, 130, 133, 136, 138, 141, 142, 143, 165, 182, 183, 184, 185, 191, 193, 199, 200, 201, 220, 222, 224, 226, 231, 233, 234, 237, 241, 255, 257, 259, 261, 273, 274, 276, 281, 282, 283, 288, 291, 299, 302, 309, 316, 319, 320, 321, 324, 327, 328, 329, 333, 335, 342, 343, 344, 362, 363, 364, 365, 368, 369, 370, 372, 373, 375, 378, 379, 380, 381, 383, 384, 385, 387, 388, 390, 393, 395, 398, 399, 401, 402, 403, 405, 406, 408, 410, 411, 414, 416, 417, 418, 419, 420, 426, 427, 428, 429], "valuabl": [421, 424], "valueerror": [13, 27, 57, 58, 80, 82, 111, 138, 142, 143, 191, 193, 199, 205, 222, 224, 231, 233, 234, 237, 241, 255, 257, 259, 261, 268, 292, 302, 307, 309, 312, 316, 319, 321, 327, 328, 348, 354, 355, 388, 399, 409], "var": [393, 428], "vari": [27, 199, 369, 419], "variabl": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 118, 119, 120, 122, 123, 125, 132, 133, 136, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 231, 233, 234, 237, 241, 255, 257, 259, 261, 271, 286, 288, 341, 346, 360, 398, 408, 410, 411, 417, 420, 421, 423], "varianc": [8, 13, 18, 89, 257, 323, 410, 414], "variance_initial_valu": 89, "variance_prior": 89, "variant": [373, 405, 427], "varieti": [398, 411, 423, 424], "variou": [333, 390, 396, 410, 415, 421, 424], "varucb": 410, "vector": [30, 387, 412], "vendor": 420, "verbal": 413, "verbos": [388, 410], "veri": [378, 380, 395, 415, 418, 420, 429], "verifi": [308, 375, 378, 379, 380, 381, 390, 391, 397, 399, 401, 408, 411], "versa": [405, 427], "versatil": 421, "version": [193, 285, 340, 378, 380, 381, 390, 393, 397, 405, 406, 408, 409, 410, 411, 413, 423], "vert": 385, "via": [13, 17, 26, 27, 80, 165, 175, 187, 231, 233, 234, 235, 237, 241, 255, 257, 259, 261, 287, 296, 304, 319, 326, 327, 370, 376, 383, 384, 387, 397, 408, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427], "via_init": 423, "via_json": 423, "viabl": [71, 395], "vice": [405, 427], "view": [191, 199, 385, 422], "view_init": 385, "violat": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "viridi": 385, "virtual": 411, "visibl": 410, "visual": [369, 405, 406, 426], "volum": 427, "vpn": [408, 418], "vsa": 130, "vsafingerprint": 130, "vulner": [410, 411], "w_i": 419, "wa": [13, 63, 66, 67, 74, 77, 138, 165, 199, 231, 233, 234, 237, 241, 255, 257, 259, 261, 316, 319, 355, 369, 409, 410, 411, 413, 418, 420, 423, 427], "wai": [193, 383, 390, 391, 396, 397, 405, 408, 415, 418, 420, 422, 423, 424, 426, 427, 429], "wall": 10, "want": [48, 373, 378, 390, 393, 399, 406, 408, 411, 417, 418, 420, 421, 423, 426], "warn": [59, 305, 378, 380, 381, 384, 398, 399, 410, 411], "warranti": [408, 413], "watch": 383, "water": [378, 379, 380, 381, 390, 417, 420], "we": [22, 220, 367, 368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 383, 384, 385, 387, 388, 390, 391, 393, 395, 397, 398, 399, 401, 402, 403, 405, 406, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425, 426, 427, 428, 429], "web": 411, "weber": 412, "weight": [102, 110, 111, 344, 395, 419, 423], "weight_kdalton": 420, "welcom": 411, "well": [285, 346, 373, 384, 389, 411, 416, 417, 420, 424], "were": [167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 319, 370, 373, 406, 409, 410, 415, 417, 418, 420, 422], "what": [138, 163, 193, 220, 319, 357, 367, 387, 395, 403, 411, 414, 416, 420, 427, 428], "whatsnew": 295, "when": [27, 49, 133, 163, 164, 165, 173, 175, 193, 199, 231, 233, 234, 237, 238, 241, 255, 257, 259, 261, 268, 302, 304, 308, 319, 322, 348, 355, 373, 378, 379, 381, 383, 388, 390, 391, 393, 395, 408, 409, 410, 411, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 429], "whenev": [22, 163, 319, 423], "where": [17, 22, 30, 34, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 157, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 220, 228, 231, 233, 234, 237, 241, 255, 257, 259, 261, 291, 319, 354, 368, 369, 370, 373, 378, 380, 390, 393, 408, 409, 410, 411, 413, 415, 416, 417, 419, 420, 422, 423, 424, 426, 427], "wherea": 423, "wherev": [413, 415], "whether": [22, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 118, 119, 120, 122, 123, 125, 132, 133, 136, 175, 191, 199, 231, 233, 234, 237, 241, 255, 257, 259, 261, 286, 321, 327, 333, 390, 410, 413, 416, 418, 421, 426], "which": [13, 27, 36, 37, 38, 77, 80, 105, 110, 115, 123, 138, 157, 158, 160, 162, 163, 164, 165, 167, 170, 173, 175, 180, 182, 183, 184, 185, 187, 188, 193, 199, 226, 228, 231, 233, 234, 237, 241, 255, 257, 259, 261, 265, 287, 288, 304, 308, 319, 321, 325, 327, 329, 342, 343, 346, 357, 367, 369, 373, 376, 383, 384, 390, 391, 393, 397, 398, 399, 403, 405, 406, 408, 409, 410, 411, 413, 414, 416, 417, 420, 422, 423, 424, 425, 426, 427, 429], "while": [193, 196, 202, 384, 393, 395, 406, 409, 413, 414, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427], "whilst": 319, "whim": 130, "whimfingerprint": 130, "whole": 413, "whom": 413, "whose": [111, 138, 193, 224, 299, 302, 322, 367, 383, 390, 415, 424], "wide": 424, "wider": 426, "width": 329, "wieczorek": 412, "william": 427, "willing": 416, "win": [231, 393], "win_rat": 393, "window": [410, 418], "winerror": 409, "wise": 344, "wish": 423, "within": [27, 118, 119, 120, 122, 123, 125, 132, 133, 136, 287, 327, 397, 413, 417, 418, 420, 425, 427, 428, 429], "without": [164, 405, 406, 408, 410, 413, 415, 416, 417, 418, 420, 424, 427, 429], "work": [22, 262, 291, 322, 378, 380, 381, 384, 395, 401, 403, 408, 410, 411, 412, 413, 417, 418, 419, 421, 423, 424], "workaround": [409, 410], "workflow": [387, 408, 416, 421, 423, 428], "world": [408, 416], "worldwid": 413, "worst": [222, 224, 226, 370], "would": [52, 73, 138, 220, 222, 228, 236, 383, 390, 393, 408, 411, 415, 417, 418, 420, 421, 422, 423, 424, 427, 429], "wrap": [85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 241, 245, 263, 264, 304, 408, 410, 419], "wrapper": [1, 21, 226, 228, 237, 305, 405, 406, 408, 421], "write": [408, 409, 413, 423], "written": [398, 399, 411, 413], "wrong": [403, 410], "wrongli": 409, "www": [408, 413], "x": [22, 106, 195, 222, 224, 245, 301, 305, 317, 330, 342, 357, 367, 368, 369, 370, 378, 379, 380, 381, 384, 385, 390, 395, 401, 405, 406, 408, 410, 422, 425], "x0": 422, "x1": 422, "x2": 422, "x_": [367, 375, 376, 397, 398, 399], "x_1": [375, 376, 397, 398, 399, 417], "x_2": [375, 376, 397, 398, 399, 417], "x_3": [375, 376, 397, 398, 399, 417], "x_4": [375, 376, 397, 398, 399], "x_5": 399, "x_6": 399, "x_i": 417, "x_pend": 22, "xlsx": [368, 369, 370, 384], "xpho": [368, 369, 370], "xxxx": 409, "xylen": [368, 369, 370, 372, 373], "y": [253, 309, 325, 342, 367, 368, 369, 370, 384, 385, 387, 390, 405, 406, 408, 427], "ye": 309, "year": 427, "yet": [22, 410, 415, 421], "yield": [6, 90, 368, 369, 370, 372, 373, 378, 384, 387, 388, 390, 399, 401, 402, 403, 408, 410, 414, 419, 423], "yield_cumbest": [368, 369, 370, 384], "yml": 410, "you": [27, 48, 369, 373, 375, 383, 388, 390, 393, 398, 399, 402, 408, 409, 411, 413, 414, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 429], "your": [369, 383, 390, 393, 399, 408, 409, 410, 411, 413, 416, 418, 420, 423, 424, 425, 426, 427, 429], "your_branch_nam": 411, "yourself": 393, "z": [385, 408], "zdir": 385, "zero": [8, 18, 148, 323, 390, 393, 427], "zip": [384, 385], "\u00b5fmt": 410, "\u0161o\u0161i\u0107": [408, 412]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedImprovement", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "SHAPInsight", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objective", "baybe.objective.Objective", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.deprecation", "baybe.objectives.deprecation.structure_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.single", "SingleTargetObjective", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "Surrogate", "SurrogateProtocol", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "classproperty", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.plotting", "baybe.utils.plotting.create_example_plots", "baybe.utils.plotting.indent", "baybe.utils.plotting.to_string", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 411, "0": 410, "01": 410, "02": 410, "03": 410, "04": 410, "05": 410, "06": 410, "07": 410, "08": 410, "09": 410, "1": 410, "10": 410, "11": 410, "12": 410, "13": 410, "14": 410, "15": 410, "16": 410, "17": 410, "19": 410, "2": 410, "2022": 410, "2023": 410, "2024": 410, "21": 410, "23": 410, "24": 410, "27": 410, "28": 410, "29": 410, "3": 410, "4": 410, "5": 410, "6": 410, "7": 410, "8": 410, "9": 410, "A": 408, "The": [393, 402, 408, 423, 424, 427], "abbrevi": 423, "acqf": 2, "acquisit": [1, 2, 19, 21, 23, 24, 25, 373, 415], "acquisitionfunct": 20, "action": 427, "activ": 414, "ad": [372, 410, 415, 416, 427, 429], "add_fake_measur": 319, "add_noise_to_perturb_degenerate_row": 320, "add_parameter_nois": 321, "addendum": 395, "addit": [390, 421], "additivekernel": 98, "advanc": [408, 425], "altern": 423, "amount": 390, "an": 393, "arm": [392, 393], "arm64": 409, "arrai": 424, "arrays_to_datafram": 322, "assembli": 423, "asynchron": 415, "attr": 411, "augment": [290, 291, 292], "automat": 423, "avail": [373, 425], "avx": 409, "back": 408, "backtest": [366, 405], "bandit": [230, 392, 393], "base": [19, 29, 84, 104, 106, 117, 145, 156, 159, 169, 172, 179, 232, 270, 368, 369, 370, 375, 376, 390, 391, 399, 424], "basesequentialmetarecommend": 162, "basic": [88, 147, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 371, 372, 416, 418, 423], "basickernel": 85, "batch": 416, "batchify_ensemble_predictor": 263, "batchify_mean_var_predict": 264, "batteri": 408, "bayb": [0, 1, 2, 19, 21, 23, 24, 25, 26, 28, 29, 35, 39, 42, 43, 44, 45, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 88, 97, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 114, 116, 117, 121, 124, 126, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 155, 156, 158, 159, 161, 166, 168, 169, 171, 172, 174, 176, 177, 178, 179, 181, 186, 189, 190, 192, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 236, 238, 239, 240, 242, 245, 246, 247, 249, 250, 252, 254, 256, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 372, 408, 411], "bayesian": [171, 172, 174, 176, 177, 408, 421], "bayesianlinearsurrog": 255, "bayesianrecommend": 173, "bell_transform": 281, "bernoulli": 393, "betabernoullimultiarmedbanditsurrog": 231, "betaprior": 148, "binari": [272, 274], "binarytarget": 273, "black": [367, 393], "block_deserialization_hook": 209, "block_serialization_hook": 210, "boolean": [306, 307, 308, 309], "both": 401, "botorch": [174, 398], "botorchrecommend": 175, "bound": [383, 419, 422], "box": [367, 393], "break": 410, "build": [393, 422], "bytes_to_human_read": 337, "cach": [416, 418], "callabl": [375, 376, 399, 424], "campaign": [26, 27, 367, 368, 369, 370, 373, 375, 376, 378, 379, 381, 384, 387, 388, 395, 398, 399, 401, 402, 416], "cardinalityconstraint": 30, "case": 393, "catch_constant_target": 265, "categor": 121, "categoricalencod": 127, "categoricalparamet": [122, 420], "chang": 410, "changelog": 410, "check_if_in": 307, "chemic": 408, "chemistri": [310, 311, 312, 313, 314], "choicevalu": 274, "class": 411, "classproperti": 295, "clone": 408, "closer_el": 342, "closest_el": 343, "cluster": [181, 421], "code": 411, "columntransform": 357, "compar": 401, "compon": 383, "composit": 97, "compositekernel": 86, "condit": [35, 36, 417], "config": [402, 403, 416], "configur": [387, 388, 402, 423], "constraint": [28, 29, 31, 35, 39, 42, 43, 44, 45, 46, 56, 57, 58, 374, 375, 376, 377, 378, 379, 380, 381, 390, 391, 417, 422, 429], "construct": [368, 369, 370, 375, 376, 390, 398, 399, 419, 422], "constructor": [422, 423], "continu": [39, 190, 374, 376, 390, 397, 414, 417, 420, 422, 427, 429], "continuouscardinalityconstraint": 40, "continuousconstraint": 32, "continuouslinearconstraint": [41, 417], "continuouslinearequalityconstraint": 43, "continuouslinearinequalityconstraint": 44, "continuousnonlinearconstraint": 33, "continuousparamet": 118, "contribut": 411, "contributor": 412, "conveni": 419, "convent": 411, "convers": [315, 316, 317, 419, 423], "convert": [211, 387], "convert_acqf": 24, "convert_bound": 334, "copi": 423, "core": [192, 195, 196, 208, 209, 210, 211, 212, 213, 214, 221, 222, 240, 247, 249], "cpu": 409, "creat": [367, 368, 369, 370, 373, 375, 376, 378, 379, 380, 381, 387, 388, 395, 397, 398, 401, 402, 405, 406, 416, 422], "create_example_plot": 346, "creation": [368, 369, 370, 390, 391, 416, 429], "current": 425, "custom": [124, 236, 238, 367, 378, 382, 383, 386, 387, 388, 425], "customdiscreteparamet": [125, 420], "customencod": 128, "customonnxsurrog": 237, "data": [368, 369, 370, 422, 427], "datafram": [318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 375, 376, 399, 422, 423, 424], "de": [401, 423], "default": [250, 422, 423], "defaultkernelfactori": 251, "defin": [367, 375, 376, 383, 384, 385, 395, 398, 399, 403, 405, 406, 408], "definit": 384, "depend": [379, 408, 420], "deprec": [42, 43, 44, 45, 107, 108, 410], "deprecationerror": 60, "descript": 395, "deseri": 423, "deserialize_datafram": 218, "design": [408, 411], "desir": [109, 111], "desirabilityobject": [110, 419], "develop": 411, "df_apply_dependency_augment": 291, "df_apply_permutation_augment": 292, "df_drop_single_value_column": 323, "df_drop_string_column": 324, "df_uncorrelated_featur": 325, "dictionari": [402, 403], "differ": 373, "dimens": 399, "discret": [46, 197, 200, 201, 202, 377, 378, 379, 380, 390, 398, 417, 420, 421, 422], "discretecardinalityconstraint": 47, "discreteconstraint": 34, "discretecustomconstraint": [48, 417], "discretedependenciesconstraint": [49, 417], "discreteexcludeconstraint": [50, 417], "discretelinkedparametersconstraint": [51, 417], "discretenolabelduplicatesconstraint": [52, 417], "discreteparamet": 119, "discretepermutationinvarianceconstraint": [53, 417], "discreteproductconstraint": [54, 417], "discretesamplingmethod": 353, "discretesumconstraint": [55, 417], "discuss": 393, "disk": 418, "do": 424, "docstr": 411, "document": 388, "dtypefloatnumpi": 339, "dtypefloatonnx": 340, "dtypefloattorch": 359, "dummi": 294, "duplic": 390, "dure": 429, "edbo": 252, "edbokernelfactori": 253, "effici": 429, "emptysearchspaceerror": 61, "encod": 420, "end": 408, "enum": [112, 126, 275], "environ": 418, "equival": 423, "estim": 429, "exampl": [368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 387, 388, 395, 398, 399, 401, 402, 403, 407, 408], "except": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "exceptiongroup": 409, "exclus": [380, 381], "expect": 427, "expectedimprov": 3, "experi": [378, 379, 380, 381, 387, 388, 395, 401, 408, 415, 424], "experiment": [416, 418], "expir": 410, "explicit": 422, "extend": 411, "extract": 425, "fake": 429, "farthest_point_sampl": 354, "featur": 418, "field": 423, "file": [402, 403], "filter_df": 326, "find_subclass": 296, "finite_float": 362, "fix": [409, 410], "float": 418, "fpsrecommend": 187, "fraction_to_float": 316, "from": [402, 408, 410, 416, 422, 423], "full": [368, 369, 370, 422], "function": [367, 368, 369, 370, 373, 375, 376, 384, 395, 398, 399, 411, 415], "further": 416, "fuzzy_row_match": 327, "gammaprior": 149, "gaussian_process": [239, 240, 242, 245, 246, 247, 249, 250, 252], "gaussianmixtureclusteringrecommend": 182, "gaussianprocesspreset": 248, "gaussianprocesssurrog": 241, "gener": [405, 406, 411, 421], "geom_mean": 344, "get": [372, 416], "get_base_structure_hook": 212, "get_baseclass": 297, "get_canonical_smil": 311, "get_fingerprint_class": 312, "get_model_params_valid": 267, "get_parameters_from_datafram": 138, "get_subclass": 298, "get_transform_object": 328, "get_transform_paramet": 204, "get_user_detail": 285, "github": 408, "global": 414, "group_duplicate_valu": 299, "guid": 428, "halfcauchyprior": 150, "halfnormalprior": 151, "hilberts_factori": 300, "hook": [382, 383, 384, 385], "hybrid": [375, 399, 417], "imaginari": 393, "implicit": 419, "import": [367, 368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 383, 385, 387, 388, 390, 391, 393, 395, 397, 398, 399, 401, 402, 403, 405, 406], "improv": 385, "includ": 408, "inclus": 368, "incompatibilityerror": 62, "incompatibleacquisitionfunctionerror": 63, "incompatibleexplainererror": 64, "incompatiblesearchspaceerror": 65, "incomplet": 370, "incorpor": 381, "indent": 347, "independentgaussiansurrog": 233, "index": 408, "indic": 408, "infiniteintervalerror": 332, "influenc": 429, "inform": [416, 421], "initi": [368, 373], "insight": [78, 79, 81, 82], "instal": [408, 409], "instanc": 383, "instead": [387, 388], "instruct": 418, "internet": 418, "interrupt": 384, "interv": [331, 332, 333, 334, 335], "invalidsurrogatemodelerror": 66, "invalidtargetvalueerror": 67, "invari": 390, "invok": 423, "irrelev": 427, "is_abstract": 308, "is_all_inst": 301, "is_en": 286, "is_shap_explain": 81, "issu": [408, 409], "iter": [375, 376, 387, 388, 395], "json": [416, 423], "kernel": [83, 84, 87, 88, 97], "kernel_factori": [242, 245], "kernelfactori": 243, "kmeansclusteringrecommend": 183, "known": [408, 409], "leak": 409, "learn": [404, 406, 414, 424, 427], "licens": [408, 413], "limit": [425, 426], "linear": [254, 376], "linear_transform": 282, "linearkernel": 89, "link": 388, "local": [408, 414], "logexpectedimprov": 4, "lognormalprior": 152, "look_up_target": 224, "lookup": [223, 224, 368, 369, 370, 375, 376, 384, 399, 405, 406, 424], "loop": [367, 368, 369, 370, 405, 406, 408], "maco": 409, "maintain": [408, 412], "make_explainer_for_surrog": 82, "make_gp_from_preset": 249, "mandatori": 419, "manual": [378, 379, 380, 381], "mark": 415, "match": 426, "match_attribut": 302, "maternkernel": 90, "max": 426, "mean": 424, "meanpredictionsurrog": 257, "measur": [372, 387, 388, 416, 429], "mechan": [368, 369, 370, 424], "memori": [336, 337, 429], "memorys": 198, "meta": [158, 159, 161, 421], "metarecommend": 160, "method": [383, 411, 414], "min": 426, "miss": 424, "mixin": 215, "mixtur": [389, 390, 391], "mode": [395, 426], "model": [373, 387, 388, 390, 391, 393, 425], "modelnottrainederror": 68, "monitor": 385, "monkeypatch": [383, 384, 385], "multi": [392, 393, 394, 395], "multipl": 424, "naiv": [166, 256], "naivehybridspacerecommend": 167, "name": 420, "name_to_smil": 313, "necessari": [368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 387, 388, 395, 398, 399, 401, 402, 403], "nest": 423, "ngboost": 258, "ngboostsurrog": 259, "nois": 429, "nomcacquisitionfunctionerror": 69, "non_inf_float": 363, "non_nan_float": 364, "none": 424, "nonpredict": [178, 179, 181, 186], "nonpredictiverecommend": 180, "nonstring_to_tupl": 317, "norecommenderslefterror": 70, "normalprior": 153, "notenoughpointslefterror": 71, "nothingtosimulateerror": 72, "numer": [131, 278, 338, 339, 340, 341, 342, 343, 344], "numericalcontinuousparamet": [132, 420], "numericaldiscreteparamet": [133, 420], "numericaltarget": [279, 426], "numericalunderflowerror": 73, "object": [101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 368, 369, 370, 373, 375, 376, 378, 379, 380, 381, 395, 398, 401, 405, 406, 408, 419, 423], "onli": 418, "onnx": 387, "optim": [367, 405, 406, 408, 416, 429], "option": [408, 420, 421], "optionalimporterror": 74, "order": 390, "other": 373, "output": [387, 388], "overrid": 411, "packag": [408, 418], "pamclusteringrecommend": 184, "parallel": 416, "paramet": [116, 117, 120, 121, 124, 126, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143, 368, 369, 370, 373, 388, 390, 391, 416, 420, 422, 429], "parameter_cartesian_prod_panda": 200, "parameter_cartesian_prod_polar": 201, "parameterencod": 129, "partial": [21, 415], "partialacquisitionfunct": 22, "pass": 388, "pend": 415, "perform": [368, 395, 398, 399], "periodickernel": 91, "permut": 390, "piecewisepolynomialkernel": 92, "plainkernelfactori": 244, "plot": [345, 346, 347, 348, 367, 384, 385], "point": 418, "polar": [409, 418], "polynomialkernel": 93, "posteriormean": 5, "posteriorstandarddevi": 6, "pre": 387, "precis": 418, "preset": [246, 247, 249, 250, 252], "pretrain": 387, "pretty_print_df": 329, "print": [378, 379, 381, 395], "prior": [144, 145, 146, 147], "probabilityofimprov": 7, "probabl": 385, "problem": [367, 384, 409], "product": [381, 422], "productkernel": 99, "pull": 411, "pure": [168, 169, 171, 172, 174, 176, 177, 178, 179, 181, 186, 414, 421], "purerecommend": 170, "pycharm": 409, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedimprov": 12, "qnegintegratedposteriorvari": 13, "qnoisyexpectedimprov": 14, "qprobabilityofimprov": 15, "qsimpleregret": 16, "qthompsonsampl": 17, "quick": 408, "qupperconfidencebound": 18, "random": [349, 350, 351], "random_forest": 260, "randomforestsurrog": 261, "randomrecommend": 188, "rbfkernel": 94, "recommend": [155, 156, 158, 159, 161, 166, 168, 169, 171, 172, 174, 176, 177, 178, 179, 181, 186, 372, 373, 387, 388, 398, 399, 401, 415, 416, 421], "recommenderprotocol": 157, "reduct": 414, "refers_to": 303, "regist": 383, "register_custom_architectur": 238, "register_hook": 304, "relat": 409, "remov": 410, "represent": [390, 391, 422], "reproduc": 429, "request": 411, "restrict": 422, "result": [367, 384, 385, 415], "rffkernel": 95, "role": 427, "rqkernel": 96, "run": [367, 375, 376, 393], "sampl": [186, 414, 421], "sample_numerical_df": 355, "sampling_algorithm": [352, 354, 355], "scalar": [111, 113, 425], "scale": 356, "scalekernel": 100, "scenario": [225, 226, 424], "scope": 418, "search": [390, 391, 397, 405, 408, 414, 421, 422, 429], "searchspac": [189, 190, 192, 193, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 368, 370, 373, 375, 376, 378, 379, 380, 381, 395, 396, 398, 399, 406], "searchspacetyp": 194, "see": 427, "select_constructor_hook": 213, "semaphor": 409, "sequenti": [161, 416], "sequential_greedi": [176, 177], "sequentialgreedyrecommend": 177, "sequentialmetarecommend": 163, "serial": [207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 400, 401, 416, 423], "serialize_datafram": 219, "serialmixin": 216, "set": [367, 384, 385, 397, 405, 406], "set_random_se": 350, "setup": [372, 378, 379, 380, 381, 387, 388, 390, 391, 393, 395, 401], "shap": [79, 81, 82], "shapinsight": 80, "signatur": 383, "simplex": [390, 422], "simul": [220, 221, 222, 223, 224, 225, 226, 227, 228, 367, 368, 369, 370, 384, 393, 405, 406, 424], "simulate_experi": 222, "simulate_scenario": 226, "simulate_transfer_learn": 228, "singl": [114, 424], "singletargetobject": [115, 419], "sklearnclusteringrecommend": 185, "slot": [390, 391], "smile": 135, "smiles_to_fingerprint_featur": 314, "smoothedboxprior": 154, "some": [375, 376, 395], "sort_paramet": 139, "space": [390, 391, 397, 399, 405, 408, 414, 421, 422, 429], "span": 390, "stage": 387, "start": 408, "stop": 384, "str_to_acqf": 25, "strategi": [373, 408], "streamingsequentialmetarecommend": 164, "string": [402, 423], "strtobool": 309, "structure_constraint": 45, "structure_object": 108, "studi": 425, "sub": 414, "subselectioncondit": [37, 417], "subspac": 422, "subspacecontinu": 191, "subspacediscret": 199, "substanc": [134, 135, 390, 408], "substanceencod": 130, "substanceparamet": [136, 420], "suggest": 409, "suitabl": 373, "sum": 381, "support": [409, 415], "surrog": [229, 230, 232, 234, 236, 238, 239, 240, 242, 245, 246, 247, 249, 250, 252, 254, 256, 258, 260, 262, 263, 264, 265, 266, 267, 268, 373, 386, 387, 388, 425], "surrogateprotocol": 235, "synchron": 411, "synthet": [398, 399], "tabl": [368, 369, 370, 405, 406, 408], "target": [269, 270, 271, 272, 274, 275, 278, 280, 281, 282, 283, 383, 394, 395, 419, 426, 429], "targetmod": 276, "targettransform": 277, "task": [405, 406], "taskparamet": [123, 420, 427], "technologi": 427, "telemetri": [284, 285, 286, 287, 288, 408, 418], "telemetry_record_recommended_measurement_percentag": 287, "telemetry_record_valu": 288, "temporary_se": 351, "terminologi": [390, 423, 424, 427], "test": [375, 376, 398, 399], "theoret": 390, "thi": [368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 381, 395, 398, 399], "thresholdcondit": [38, 417], "through": 427, "to_kernel_factori": 245, "to_object": 106, "to_searchspac": 195, "to_str": 348, "to_tensor": 330, "to_tupl": 305, "toler": 416, "tool": 411, "torch": [358, 359, 360, 409], "tradit": 391, "train": 387, "transfer": [404, 406, 424, 427], "transfer_learn": [227, 228], "transform": [280, 281, 282, 283, 395], "treasur": 427, "triangular_transform": 283, "trigger": [383, 385], "two": 403, "twophasemetarecommend": 165, "type": 423, "uncertainti": 414, "unidentifiedsubclasserror": 75, "uninstal": 418, "uninterrupt": 384, "unlock": 427, "unmatchedattributeerror": 76, "unreleas": 410, "unstructure_bas": 214, "unusedobjectwarn": 77, "upperconfidencebound": 8, "us": [368, 369, 370, 372, 373, 378, 379, 380, 381, 387, 388, 393, 395, 398, 399, 422, 423, 424, 425], "use_fallback_constructor_hook": 335, "user": 428, "util": [23, 24, 25, 137, 138, 139, 217, 218, 219, 262, 263, 264, 265, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 429], "v": [383, 390, 409, 416], "valid": [56, 57, 58, 140, 141, 142, 143, 203, 204, 205, 206, 266, 267, 268, 361, 362, 363, 364, 365, 388, 403], "validate_cardinality_constraints_are_nonoverlap": 57, "validate_constraint": 58, "validate_custom_architecture_cl": 268, "validate_decorrel": 141, "validate_is_finit": 142, "validate_not_nan": 365, "validate_paramet": 206, "validate_parameter_nam": 205, "validate_searchspace_from_config": 196, "validate_simplex_subspace_from_config": 202, "validate_unique_valu": 143, "valu": [422, 423, 424], "variabl": 418, "varname_numpy_use_single_precis": 341, "varname_torch_use_single_precis": 360, "verif": [378, 379, 380, 381, 390, 391, 403], "verifi": 376, "we": 424, "what": 424, "window": 409, "within": 422, "without": 409, "workflow": [411, 415], "wrap": [375, 376, 399], "write": 411}})