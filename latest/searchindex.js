Search.setIndex({"alltitles": {"Acquisition function": [[370, "acquisition-function"]], "AcquisitionFunction": [[20, null]], "Active Learning": [[410, null]], "Added": [[406, "added"], [406, "id3"], [406, "id6"], [406, "id11"], [406, "id17"], [406, "id26"], [406, "id32"], [406, "id36"], [406, "id43"], [406, "id48"], [406, "id54"], [406, "id60"], [406, "id64"], [406, "id68"], [406, "id72"], [406, "id77"], [406, "id81"], [406, "id84"], [406, "id88"], [406, "id92"], [406, "id96"], [406, "id99"], [406, "id103"], [406, "id107"], [406, "id111"], [406, "id115"], [406, "id121"], [406, "id124"]], "Addendum: Description of transformation functions": [[390, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[425, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[423, null]], "Adding Partial Results": [[411, "adding-partial-results"]], "Adding measurements": [[412, "adding-measurements"]], "Additional Options for Discrete Search Spaces": [[417, null]], "AdditiveKernel": [[92, null]], "Advanced Example: Chemical Substances": [[404, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[388, "an-imaginary-use-case"]], "Asynchronous Workflows": [[411, null]], "Automatic field conversion": [[419, "automatic-field-conversion"]], "Available Models": [[421, "available-models"]], "Available recommenders suitable for initial recommendation": [[370, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[370, "available-surrogate-models"]], "Backtesting": [[360, null], [401, null]], "Basic Instructions": [[414, "basic-instructions"]], "Basic creation": [[412, "basic-creation"]], "Basic example for using BayBE": [[369, null]], "Basic string assembly": [[419, "basic-string-assembly"]], "BasicKernel": [[79, null]], "Basics": [[368, null], [412, "basics"]], "Batch optimization": [[412, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[404, null]], "Bayesian Recommenders": [[417, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[248, null]], "BayesianRecommender": [[166, null]], "Bernoulli Multi Armed Bandit": [[388, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[224, null]], "BetaPrior": [[142, null]], "BinaryTarget": [[266, null]], "BotorchRecommender": [[168, null]], "Bound methods": [[381, "bound-methods"]], "Breaking Changes": [[406, "breaking-changes"], [406, "id16"]], "Building from the Product of Parameter Values": [[418, "building-from-the-product-of-parameter-values"], [418, "id2"]], "Building the Model": [[388, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[405, "cpus-without-avx-support-installation-of-polars"]], "Caching of recommendations": [[412, "caching-of-recommendations"]], "Campaign": [[27, null]], "Campaign Stopping": [[382, null]], "Campaigns": [[412, null]], "CardinalityConstraint": [[30, null]], "CategoricalEncoding": [[121, null]], "CategoricalParameter": [[116, null], [416, "categoricalparameter"]], "Changed": [[406, "changed"], [406, "id7"], [406, "id12"], [406, "id18"], [406, "id23"], [406, "id27"], [406, "id33"], [406, "id37"], [406, "id40"], [406, "id44"], [406, "id49"], [406, "id55"], [406, "id61"], [406, "id65"], [406, "id69"], [406, "id73"], [406, "id78"], [406, "id82"], [406, "id85"], [406, "id89"], [406, "id93"], [406, "id97"], [406, "id100"], [406, "id104"], [406, "id108"], [406, "id112"], [406, "id116"]], "Changelog": [[406, null]], "Clustering Recommenders": [[417, "clustering-recommenders"]], "Code Design": [[407, "code-design"]], "ColumnTransformer": [[351, null]], "Comparing recommendations in both objects": [[397, "comparing-recommendations-in-both-objects"]], "CompositeKernel": [[80, null]], "Condition": [[36, null]], "Conditions": [[413, "conditions"]], "Constraint": [[31, null]], "Constraints": [[413, null]], "Constraints Continuous": [[371, null]], "Constraints Discrete": [[374, null]], "Construct the campaign and run some iterations": [[372, "construct-the-campaign-and-run-some-iterations"], [373, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[418, "constructing-full-search-spaces"]], "Constructing a campaign and performing the simulation loop": [[367, "constructing-a-campaign-and-performing-the-simulation-loop"]], "Constructing campaigns": [[361, "constructing-campaigns"]], "Constructing campaigns for the simulation loop": [[362, "constructing-campaigns-for-the-simulation-loop"], [363, "constructing-campaigns-for-the-simulation-loop"], [364, "constructing-campaigns-for-the-simulation-loop"], [365, "constructing-campaigns-for-the-simulation-loop"], [366, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[418, "constructing-from-a-dataframe"], [418, "id1"], [418, "id3"]], "Constructing hybrid recommenders": [[395, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[392, "constructing-the-campaign-and-performing-a-recommendation"], [393, "constructing-the-campaign-and-performing-a-recommendation"], [394, "constructing-the-campaign-and-performing-a-recommendation"], [395, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[365, "constructing-the-hybrid-searchspace"], [395, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[413, "continuous-constraints"]], "Continuous Constraints in Single Precision": [[414, null]], "Continuous Parameters": [[416, "continuous-parameters"]], "Continuous Subspaces": [[418, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[40, null]], "ContinuousConstraint": [[32, null]], "ContinuousLinearConstraint": [[41, null], [413, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[33, null]], "ContinuousParameter": [[112, null]], "Contributing to BayBE": [[407, null]], "Contributors": [[408, null], [408, "id1"]], "Convenience construction and implicit conversion": [[415, null]], "Conventions for attrs classes": [[407, "conventions-for-attrs-classes"]], "Convert model to onnx": [[385, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[385, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[386, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[385, "create-campaign"]], "Creating a Simplex-Bound Discrete Subspace": [[418, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign": [[412, "creating-a-campaign"]], "Creating a campaign from the configuration file": [[398, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[375, "creating-and-printing-the-campaign"], [376, "creating-and-printing-the-campaign"], [378, "creating-and-printing-the-campaign"], [379, "creating-and-printing-the-campaign"], [390, "creating-and-printing-the-campaign"]], "Creating multiple target object": [[367, "creating-multiple-target-object"]], "Creating the Objective": [[364, "creating-the-objective"]], "Creating the Optimization Objective": [[401, "creating-the-optimization-objective"], [402, "creating-the-optimization-objective"]], "Creating the Search Space": [[401, "creating-the-search-space"]], "Creating the Searchspace": [[402, "creating-the-searchspace"]], "Creating the campaign": [[370, "creating-the-campaign"], [386, "creating-the-campaign"], [397, "creating-the-campaign"]], "Creating the constraint": [[375, "creating-the-constraint"], [377, "creating-the-constraint"], [378, "creating-the-constraint"]], "Creating the constraints": [[376, "creating-the-constraints"], [379, "creating-the-constraints"]], "Creating the objective": [[390, "creating-the-objective"]], "Creating the objective object": [[367, "creating-the-objective-object"]], "Creating the recommender object": [[370, "creating-the-recommender-object"]], "Creating the searchspace": [[367, "creating-the-searchspace"]], "Creating the searchspace and the objective": [[361, "creating-the-searchspace-and-the-objective"], [362, "creating-the-searchspace-and-the-objective"], [363, "creating-the-searchspace-and-the-objective"], [366, "creating-the-searchspace-and-the-objective"], [372, "creating-the-searchspace-and-the-objective"], [373, "creating-the-searchspace-and-the-objective"], [375, "creating-the-searchspace-and-the-objective"], [376, "creating-the-searchspace-and-the-objective"], [377, "creating-the-searchspace-and-the-objective"], [378, "creating-the-searchspace-and-the-objective"], [379, "creating-the-searchspace-and-the-objective"], [392, "creating-the-searchspace-and-the-objective"], [393, "creating-the-searchspace-and-the-objective"], [394, "creating-the-searchspace-and-the-objective"]], "Creation from a JSON config": [[412, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[421, null]], "Custom Hooks": [[380, null]], "Custom Surrogates": [[384, null]], "CustomDiscreteParameter": [[119, null], [416, "customdiscreteparameter"]], "CustomEncoding": [[122, null]], "CustomONNXSurrogate": [[230, null]], "Dataframe deserialization": [[419, "dataframe-deserialization"]], "DefaultKernelFactory": [[244, null]], "Defining config dictionaries": [[399, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[382, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[383, "defining-the-hook"]], "Defining the Hooks": [[381, "defining-the-hooks"]], "Defining the Optimization Objective": [[404, "defining-the-optimization-objective"]], "Defining the Search Space": [[404, "defining-the-search-space"]], "Defining the Tasks": [[401, "defining-the-tasks"], [402, "defining-the-tasks"]], "Defining the custom test function": [[393, "defining-the-custom-test-function"]], "Defining the targets": [[390, "defining-the-targets"]], "Defining the test function": [[361, "defining-the-test-function"], [362, "defining-the-test-function"], [367, "defining-the-test-function"], [372, "defining-the-test-function"], [373, "defining-the-test-function"], [392, "defining-the-test-function"], [394, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[395, "defining-the-test-function-and-the-hybrid-dimensions"]], "Defining the test function.": [[365, "defining-the-test-function"]], "Deprecations": [[406, "deprecations"], [406, "id9"], [406, "id14"], [406, "id21"], [406, "id30"], [406, "id46"], [406, "id52"], [406, "id58"], [406, "id75"]], "Deserialization from configuration strings": [[419, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[104, null], [415, "desirabilityobjective"]], "Developer Tools": [[407, "developer-tools"]], "Discrete Constraints": [[413, "discrete-constraints"]], "Discrete Parameters": [[416, "discrete-parameters"]], "Discrete Subspaces": [[418, "discrete-subspaces"]], "DiscreteCardinalityConstraint": [[47, null]], "DiscreteConstraint": [[34, null]], "DiscreteCustomConstraint": [[48, null], [413, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[49, null], [413, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[50, null], [413, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[51, null], [413, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[52, null], [413, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[113, null]], "DiscretePermutationInvarianceConstraint": [[53, null], [413, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[54, null]], "DiscreteSamplingMethod": [[347, null]], "DiscreteSumConstraint": [[55, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[413, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[388, "discussion"]], "Disk Caching": [[414, "disk-caching"]], "Dummy": [[287, null]], "EDBOKernelFactory": [[246, null]], "Efficient Search Space Creation": [[425, null]], "Environment Variables": [[414, null]], "Equivalent copies": [[419, null]], "Estimation with Constraints": [[425, null]], "Example Searchspace and objective parameters": [[370, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[372, null]], "Example for creating campaigns from configs": [[398, null]], "Example for custom parameter passing in surrogate models": [[386, null]], "Example for full simulation loop using a custom analytical test function": [[362, null]], "Example for full simulation loop using a custom analytical test function in a hybrid": [[365, null]], "Example for full simulation loop using a table-based lookup mechanism": [[364, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[366, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[363, null]], "Example for full simulation loop using the multi target mode for custom analytic": [[367, null]], "Example for linear constraints in a continuous searchspace": [[373, null]], "Example for surrogate model with a custom pretrained model": [[385, null]], "Example for the serialization of a campaign": [[397, null]], "Example for using a custom BoTorch test function in a continuous searchspace": [[393, null]], "Example for using a mixture use case in a discrete searchspace": [[378, null]], "Example for using a synthetic BoTorch test function in a continuous searchspace": [[392, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[394, null]], "Example for using custom constraints in discrete searchspaces": [[375, null]], "Example for using dependency constraints in discrete searchspaces": [[376, null]], "Example for using different strategies": [[370, null]], "Example for using exclusion constraints in discrete searchspaces": [[377, null]], "Example for using exclusion constraints incorporating sums and products": [[379, null]], "Example for using synthetic test functions in hybrid spaces": [[395, null]], "Example for using the multi target mode for the objective": [[390, null]], "Example for validation of a config file": [[399, null]], "Examples": [[403, null]], "Expectations": [[423, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[385, "experiment-setup"], [386, "experiment-setup"]], "Experiment setup": [[375, "experiment-setup"], [376, "experiment-setup"], [377, "experiment-setup"], [378, "experiment-setup"], [379, "experiment-setup"], [397, "experiment-setup"]], "Experiment setup and creating the searchspace": [[390, "experiment-setup-and-creating-the-searchspace"]], "Expired Deprecations (from 0.6.*)": [[406, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[406, "expired-deprecations-from-0-7"]], "Extending BayBE\u2019s Functionality": [[407, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[421, "extracting-the-model-for-advanced-study"]], "FPSRecommender": [[180, null]], "Fixed": [[406, "fixed"], [406, "id4"], [406, "id8"], [406, "id13"], [406, "id20"], [406, "id24"], [406, "id29"], [406, "id34"], [406, "id38"], [406, "id45"], [406, "id50"], [406, "id56"], [406, "id62"], [406, "id70"], [406, "id74"], [406, "id79"], [406, "id86"], [406, "id90"], [406, "id94"], [406, "id101"], [406, "id105"], [406, "id109"], [406, "id113"], [406, "id117"], [406, "id119"], [406, "id122"]], "Floating Point Precision": [[414, "floating-point-precision"]], "From GitHub": [[404, "from-github"]], "From Local Clone": [[404, "from-local-clone"]], "From Package Index": [[404, "from-package-index"]], "From the Default Constructor": [[418, "from-the-default-constructor"]], "Further information": [[412, "further-information"]], "GammaPrior": [[143, null]], "GaussianMixtureClusteringRecommender": [[175, null]], "GaussianProcessPreset": [[241, null]], "GaussianProcessSurrogate": [[234, null]], "General Information": [[417, "general-information"]], "General Workflow": [[407, "general-workflow"]], "Generating Lookup Tables": [[401, "generating-lookup-tables"], [402, "generating-lookup-tables"]], "Getting a recommendation and adding measurements": [[369, "getting-a-recommendation-and-adding-measurements"]], "Getting recommendations": [[412, "getting-recommendations"]], "Global Uncertainty Reduction": [[410, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[144, null]], "HalfNormalPrior": [[145, null]], "Hook instance vs. target instance": [[381, null]], "Hybrid constraints": [[413, null]], "Imports": [[361, "imports"], [381, "imports"], [383, "imports"], [388, "imports"], [401, "imports"], [402, "imports"]], "Inclusion of initial data": [[363, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[226, null]], "Indices and Tables": [[404, "indices-and-tables"]], "Influence of Continuous Parameters": [[425, null]], "Installation Related Issues": [[405, "installation-related-issues"]], "Interval": [[327, null]], "Invoking alternative constructors": [[419, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[385, "iterate-with-recommendations-and-measurements"], [386, "iterate-with-recommendations-and-measurements"]], "JSON de-/serialization": [[419, "json-de-serialization"]], "KMeansClusteringRecommender": [[176, null]], "Kernel": [[81, null]], "KernelFactory": [[236, null]], "Known Issues": [[405, null]], "License": [[409, null]], "Limitations": [[422, "limitations"]], "LinearKernel": [[83, null]], "Links for documentation": [[386, "links-for-documentation"]], "Local Uncertainty Reduction": [[410, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[146, null]], "Lookup functionality and data creation": [[363, "lookup-functionality-and-data-creation"], [364, "lookup-functionality-and-data-creation"], [366, "lookup-functionality-and-data-creation"]], "MATCH mode": [[422, "match-mode"]], "MIN and MAX mode": [[422, "min-and-max-mode"]], "Maintainers": [[408, "maintainers"]], "Mandatory target bounds": [[415, null]], "Manual verification of the constraint": [[375, "manual-verification-of-the-constraint"], [378, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[376, "manual-verification-of-the-constraints"], [377, "manual-verification-of-the-constraints"], [379, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[411, "marking-experiments-as-pending"]], "MaternKernel": [[84, null]], "MeanPredictionSurrogate": [[250, null]], "Memory During Optimization": [[425, null]], "MemorySize": [[191, null]], "Meta Recommenders": [[417, "meta-recommenders"]], "MetaRecommender": [[154, null]], "Metadata": [[418, "metadata"]], "Method overrides": [[407, "method-overrides"]], "Model Outputs": [[385, "model-outputs"], [386, "model-outputs"]], "Monitoring the Probability of Improvement": [[383, null]], "Monkeypatching": [[381, "monkeypatching"], [382, null], [383, "monkeypatching"]], "Multi Target": [[389, null]], "Multi-Armed Bandit": [[387, null]], "NGBoostSurrogate": [[252, null]], "NaiveHybridSpaceRecommender": [[160, null]], "Necessary imports": [[385, "necessary-imports"], [386, "necessary-imports"], [393, "necessary-imports"], [397, "necessary-imports"], [398, "necessary-imports"], [399, "necessary-imports"]], "Necessary imports for this example": [[362, "necessary-imports-for-this-example"], [363, "necessary-imports-for-this-example"], [364, "necessary-imports-for-this-example"], [365, "necessary-imports-for-this-example"], [366, "necessary-imports-for-this-example"], [367, "necessary-imports-for-this-example"], [369, "necessary-imports-for-this-example"], [370, "necessary-imports-for-this-example"], [372, "necessary-imports-for-this-example"], [373, "necessary-imports-for-this-example"], [375, "necessary-imports-for-this-example"], [376, "necessary-imports-for-this-example"], [377, "necessary-imports-for-this-example"], [378, "necessary-imports-for-this-example"], [379, "necessary-imports-for-this-example"], [390, "necessary-imports-for-this-example"], [392, "necessary-imports-for-this-example"], [394, "necessary-imports-for-this-example"], [395, "necessary-imports-for-this-example"]], "Nesting objects": [[419, "nesting-objects"]], "NonPredictiveRecommender": [[173, null]], "NormalPrior": [[147, null]], "NumericalContinuousParameter": [[126, null], [416, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[127, null], [416, "numericaldiscreteparameter"]], "NumericalTarget": [[272, null], [422, "numericaltarget"]], "Objective": [[99, null], [415, null]], "Optional Dependencies": [[404, "optional-dependencies"]], "Optional dependency": [[416, null]], "Optional: Defining the Optimization Strategy": [[404, "optional-defining-the-optimization-strategy"]], "Other parameters": [[370, "other-parameters"]], "PAMClusteringRecommender": [[177, null]], "Parameter": [[114, null]], "Parameter encoding": [[416, null]], "Parameter names": [[416, null]], "Parameter tolerances": [[412, null]], "ParameterEncoding": [[123, null]], "Parameters": [[416, null]], "Parameters for a full simulation loop": [[361, "parameters-for-a-full-simulation-loop"], [362, "parameters-for-a-full-simulation-loop"], [363, "parameters-for-a-full-simulation-loop"], [364, "parameters-for-a-full-simulation-loop"], [365, "parameters-for-a-full-simulation-loop"], [366, "parameters-for-a-full-simulation-loop"], [367, "parameters-for-a-full-simulation-loop"]], "PartialAcquisitionFunction": [[22, null]], "Performing some iterations": [[390, "performing-some-iterations"]], "Performing the simulation loop": [[361, "performing-the-simulation-loop"], [362, "performing-the-simulation-loop"], [363, "performing-the-simulation-loop"]], "PeriodicKernel": [[85, null]], "PiecewisePolynomialKernel": [[86, null]], "PlainKernelFactory": [[237, null]], "Plotting the Results": [[382, "plotting-the-results"], [383, "plotting-the-results"]], "Polars": [[414, "polars"]], "PolynomialKernel": [[87, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Prior": [[140, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[382, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[93, null]], "Pure Recommenders": [[417, "pure-recommenders"]], "PureRecommender": [[163, null]], "Purely Continuous Search Spaces": [[410, null]], "PyCharm vs. exceptiongroup": [[405, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[88, null]], "RFFKernel": [[89, null]], "RQKernel": [[90, null]], "RandomForestSurrogate": [[254, null]], "RandomRecommender": [[181, null]], "RecommenderProtocol": [[151, null]], "Recommenders": [[417, null]], "Registering Custom Hooks": [[381, null]], "Removed": [[406, "removed"], [406, "id19"], [406, "id28"], [406, "id41"], [406, "id51"], [406, "id57"], [406, "id66"]], "Representation of Data within Discrete Subspaces": [[418, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[425, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[418, "restricting-search-spaces-using-constraints"]], "Running the Simulation": [[388, "running-the-simulation"]], "SKLearnClusteringRecommender": [[178, null]], "Sampling Recommenders": [[417, "sampling-recommenders"]], "Scalarizer": [[107, null]], "ScaleKernel": [[94, null]], "Search Space Memory Estimation": [[425, "search-space-memory-estimation"]], "Search Spaces": [[418, null]], "SearchSpace": [[186, null]], "SearchSpaceType": [[187, null]], "Searchspaces": [[391, null]], "Seeing Transfer Learning in Action": [[423, "seeing-transfer-learning-in-action"]], "Sequential vs. parallel experimentation": [[412, null]], "SequentialMetaRecommender": [[156, null]], "SerialMixin": [[209, null]], "Serialization": [[396, null], [412, "serialization"], [419, null]], "Serialization and de-serialization": [[397, "serialization-and-de-serialization"]], "Settings": [[382, "settings"], [383, "settings"], [401, "settings"], [402, "settings"]], "Setup": [[369, "setup"], [388, "setup"]], "Signature components": [[381, null]], "Simulating Multiple Scenarios": [[420, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[420, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[420, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[382, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[382, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[420, null]], "Simulation Loop": [[401, "simulation-loop"], [402, "simulation-loop"]], "Simulation loop using a BoTorch test function": [[361, null]], "SingleTargetObjective": [[109, null], [415, "singletargetobjective"]], "SmoothedBoxPrior": [[148, null]], "StreamingSequentialMetaRecommender": [[157, null]], "Sub-Sampling Method": [[410, null]], "SubSelectionCondition": [[37, null], [413, "subselectioncondition"]], "SubspaceContinuous": [[184, null]], "SubspaceDiscrete": [[192, null]], "SubstanceEncoding": [[124, null]], "SubstanceParameter": [[130, null], [416, "substanceparameter"]], "Suggested Fix": [[405, null], [405, null], [405, null], [405, null]], "Supported Acquisition Functions": [[411, null]], "Supported Recommenders": [[411, null]], "Surrogate": [[227, null]], "SurrogateProtocol": [[228, null]], "Surrogates": [[421, null]], "Synchronizing Pull Requests": [[407, "synchronizing-pull-requests"]], "Target": [[264, null]], "TargetMode": [[269, null]], "TargetTransformation": [[270, null]], "Targets": [[422, null]], "TaskParameter": [[117, null], [416, "taskparameter"]], "Technology": [[423, null]], "Telemetry": [[414, "telemetry"]], "Telemetry Scope": [[414, null]], "Terminology": [[419, null], [423, null]], "Terminology Continued": [[423, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[420, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[388, "the-black-box-model"]], "The Lookup Functionality": [[420, "the-lookup-functionality"]], "The Optimization Loop": [[404, "the-optimization-loop"]], "The Role of the TaskParameter": [[423, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[398, "the-configuration-dictionary-as-a-string"]], "The type field": [[419, "the-type-field"]], "ThresholdCondition": [[38, null], [413, "thresholdcondition"]], "Transfer Learning": [[400, null], [402, null], [423, null]], "Triggering the Hook": [[383, "triggering-the-hook"]], "Triggering the Hooks": [[381, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[158, null]], "Uninstalling Internet Packages": [[414, null]], "Unlocking Data Treasures Through Transfer Learning": [[423, "unlocking-data-treasures-through-transfer-learning"]], "UpperConfidenceBound": [[8, null]], "User Guide": [[424, null]], "Using Custom Models": [[421, "using-custom-models"]], "Using Explicit Bounds": [[418, "using-explicit-bounds"]], "Using a Callable": [[420, "using-a-callable"]], "Using a Dataframe": [[420, "using-a-dataframe"]], "Using abbreviations": [[419, "using-abbreviations"]], "Using configuration instead": [[385, "using-configuration-instead"], [386, "using-configuration-instead"]], "Using default values": [[419, "using-default-values"]], "Utilities": [[425, null]], "Validation of model parameters": [[386, "validation-of-model-parameters"]], "Verification of the two dictionaries": [[399, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[373, "verify-the-constraints"]], "Windows \u2013 Torch Problems": [[405, "windows-torch-problems"]], "Writing Docstrings": [[407, "writing-docstrings"]], "Writing classes": [[407, "writing-classes"]], "[0.1.0] - 2022-10-01": [[406, "id123"]], "[0.10.0] - 2024-08-02": [[406, "id15"]], "[0.11.0] - 2024-09-09": [[406, "id10"]], "[0.11.1] - 2024-10-01": [[406, "id5"]], "[0.11.2] - 2024-10-11": [[406, "id2"]], "[0.11.3] - 2024-11-06": [[406, "id1"]], "[0.2.0] - 2022-11-10": [[406, "id120"]], "[0.2.1] - 2022-12-01": [[406, "id118"]], "[0.2.2] - 2023-01-13": [[406, "id114"]], "[0.2.3] - 2023-03-14": [[406, "id110"]], "[0.2.4] - 2023-03-24": [[406, "id106"]], "[0.3.0] - 2023-06-27": [[406, "id102"]], "[0.3.1] - 2023-07-17": [[406, "id98"]], "[0.3.2] - 2023-07-24": [[406, "id95"]], "[0.4.0] - 2023-08-16": [[406, "id91"]], "[0.4.1] - 2023-08-23": [[406, "id87"]], "[0.4.2] - 2023-08-29": [[406, "id83"]], "[0.5.0] - 2023-09-15": [[406, "id80"]], "[0.5.1] - 2023-10-19": [[406, "id76"]], "[0.6.0] - 2023-11-17": [[406, "id71"]], "[0.6.1] - 2023-11-27": [[406, "id67"]], "[0.7.0] - 2023-12-04": [[406, "id63"]], "[0.7.1] - 2023-12-07": [[406, "id59"]], "[0.7.2] - 2024-01-24": [[406, "id53"]], "[0.7.3] - 2024-02-09": [[406, "id47"]], "[0.7.4] - 2024-02-28": [[406, "id42"]], "[0.8.0] - 2024-02-29": [[406, "id39"]], "[0.8.1] - 2024-03-11": [[406, "id35"]], "[0.8.2] - 2024-03-27": [[406, "id31"]], "[0.9.0] - 2024-05-21": [[406, "id25"]], "[0.9.1] - 2024-06-04": [[406, "id22"]], "[Unreleased]": [[406, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[19, null]], "baybe.acquisition.partial": [[21, null]], "baybe.acquisition.utils": [[23, null]], "baybe.acquisition.utils.convert_acqf": [[24, null]], "baybe.acquisition.utils.str_to_acqf": [[25, null]], "baybe.campaign": [[26, null]], "baybe.constraints": [[28, null]], "baybe.constraints.base": [[29, null]], "baybe.constraints.conditions": [[35, null]], "baybe.constraints.continuous": [[39, null]], "baybe.constraints.deprecation": [[42, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[43, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[44, null]], "baybe.constraints.deprecation.structure_constraints": [[45, null]], "baybe.constraints.discrete": [[46, null]], "baybe.constraints.validation": [[56, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[57, null]], "baybe.constraints.validation.validate_constraints": [[58, null]], "baybe.exceptions": [[59, null]], "baybe.exceptions.DeprecationError": [[60, null]], "baybe.exceptions.EmptySearchSpaceError": [[61, null]], "baybe.exceptions.IncompatibilityError": [[62, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[63, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[64, null]], "baybe.exceptions.InvalidSurrogateModelError": [[65, null]], "baybe.exceptions.InvalidTargetValueError": [[66, null]], "baybe.exceptions.ModelNotTrainedError": [[67, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[68, null]], "baybe.exceptions.NoRecommendersLeftError": [[69, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[70, null]], "baybe.exceptions.NothingToSimulateError": [[71, null]], "baybe.exceptions.NumericalUnderflowError": [[72, null]], "baybe.exceptions.OptionalImportError": [[73, null]], "baybe.exceptions.UnidentifiedSubclassError": [[74, null]], "baybe.exceptions.UnmatchedAttributeError": [[75, null]], "baybe.exceptions.UnusedObjectWarning": [[76, null]], "baybe.kernels": [[77, null]], "baybe.kernels.base": [[78, null]], "baybe.kernels.basic": [[82, null]], "baybe.kernels.composite": [[91, null]], "baybe.objective": [[95, null]], "baybe.objective.Objective": [[96, null]], "baybe.objectives": [[97, null]], "baybe.objectives.base": [[98, null]], "baybe.objectives.base.to_objective": [[100, null]], "baybe.objectives.deprecation": [[101, null]], "baybe.objectives.deprecation.structure_objective": [[102, null]], "baybe.objectives.desirability": [[103, null]], "baybe.objectives.desirability.scalarize": [[105, null]], "baybe.objectives.enum": [[106, null]], "baybe.objectives.single": [[108, null]], "baybe.parameters": [[110, null]], "baybe.parameters.base": [[111, null]], "baybe.parameters.categorical": [[115, null]], "baybe.parameters.custom": [[118, null]], "baybe.parameters.enum": [[120, null]], "baybe.parameters.numerical": [[125, null]], "baybe.parameters.substance": [[128, null]], "baybe.parameters.substance.Smiles": [[129, null]], "baybe.parameters.utils": [[131, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[132, null]], "baybe.parameters.utils.sort_parameters": [[133, null]], "baybe.parameters.validation": [[134, null]], "baybe.parameters.validation.validate_decorrelation": [[135, null]], "baybe.parameters.validation.validate_is_finite": [[136, null]], "baybe.parameters.validation.validate_unique_values": [[137, null]], "baybe.priors": [[138, null]], "baybe.priors.base": [[139, null]], "baybe.priors.basic": [[141, null]], "baybe.recommenders": [[149, null]], "baybe.recommenders.base": [[150, null]], "baybe.recommenders.meta": [[152, null]], "baybe.recommenders.meta.base": [[153, null]], "baybe.recommenders.meta.sequential": [[155, null]], "baybe.recommenders.naive": [[159, null]], "baybe.recommenders.pure": [[161, null]], "baybe.recommenders.pure.base": [[162, null]], "baybe.recommenders.pure.bayesian": [[164, null]], "baybe.recommenders.pure.bayesian.base": [[165, null]], "baybe.recommenders.pure.bayesian.botorch": [[167, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[169, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[170, null]], "baybe.recommenders.pure.nonpredictive": [[171, null]], "baybe.recommenders.pure.nonpredictive.base": [[172, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[174, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[179, null]], "baybe.searchspace": [[182, null]], "baybe.searchspace.continuous": [[183, null]], "baybe.searchspace.core": [[185, null]], "baybe.searchspace.core.to_searchspace": [[188, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[189, null]], "baybe.searchspace.discrete": [[190, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[193, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[194, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[195, null]], "baybe.searchspace.validation": [[196, null]], "baybe.searchspace.validation.get_transform_parameters": [[197, null]], "baybe.searchspace.validation.validate_parameter_names": [[198, null]], "baybe.searchspace.validation.validate_parameters": [[199, null]], "baybe.serialization": [[200, null]], "baybe.serialization.core": [[201, null]], "baybe.serialization.core.block_deserialization_hook": [[202, null]], "baybe.serialization.core.block_serialization_hook": [[203, null]], "baybe.serialization.core.converter": [[204, null]], "baybe.serialization.core.get_base_structure_hook": [[205, null]], "baybe.serialization.core.select_constructor_hook": [[206, null]], "baybe.serialization.core.unstructure_base": [[207, null]], "baybe.serialization.mixin": [[208, null]], "baybe.serialization.utils": [[210, null]], "baybe.serialization.utils.deserialize_dataframe": [[211, null]], "baybe.serialization.utils.serialize_dataframe": [[212, null]], "baybe.simulation": [[213, null]], "baybe.simulation.core": [[214, null]], "baybe.simulation.core.simulate_experiment": [[215, null]], "baybe.simulation.lookup": [[216, null]], "baybe.simulation.lookup.look_up_targets": [[217, null]], "baybe.simulation.scenarios": [[218, null]], "baybe.simulation.scenarios.simulate_scenarios": [[219, null]], "baybe.simulation.transfer_learning": [[220, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[221, null]], "baybe.surrogates": [[222, null]], "baybe.surrogates.bandit": [[223, null]], "baybe.surrogates.base": [[225, null]], "baybe.surrogates.custom": [[229, null]], "baybe.surrogates.custom.register_custom_architecture": [[231, null]], "baybe.surrogates.gaussian_process": [[232, null]], "baybe.surrogates.gaussian_process.core": [[233, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[235, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[238, null]], "baybe.surrogates.gaussian_process.presets": [[239, null]], "baybe.surrogates.gaussian_process.presets.core": [[240, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[242, null]], "baybe.surrogates.gaussian_process.presets.default": [[243, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[245, null]], "baybe.surrogates.linear": [[247, null]], "baybe.surrogates.naive": [[249, null]], "baybe.surrogates.ngboost": [[251, null]], "baybe.surrogates.random_forest": [[253, null]], "baybe.surrogates.utils": [[255, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[256, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[257, null]], "baybe.surrogates.utils.catch_constant_targets": [[258, null]], "baybe.surrogates.validation": [[259, null]], "baybe.surrogates.validation.get_model_params_validator": [[260, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[261, null]], "baybe.targets": [[262, null]], "baybe.targets.base": [[263, null]], "baybe.targets.binary": [[265, null]], "baybe.targets.binary.ChoiceValue": [[267, null]], "baybe.targets.enum": [[268, null]], "baybe.targets.numerical": [[271, null]], "baybe.targets.transforms": [[273, null]], "baybe.targets.transforms.bell_transform": [[274, null]], "baybe.targets.transforms.linear_transform": [[275, null]], "baybe.targets.transforms.triangular_transform": [[276, null]], "baybe.telemetry": [[277, null]], "baybe.telemetry.get_user_details": [[278, null]], "baybe.telemetry.is_enabled": [[279, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[280, null]], "baybe.telemetry.telemetry_record_value": [[281, null]], "baybe.utils": [[282, null]], "baybe.utils.augmentation": [[283, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[284, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[285, null]], "baybe.utils.basic": [[286, null]], "baybe.utils.basic.find_subclass": [[289, null]], "baybe.utils.basic.get_baseclasses": [[290, null]], "baybe.utils.basic.get_subclasses": [[291, null]], "baybe.utils.basic.group_duplicate_values": [[292, null]], "baybe.utils.basic.hilberts_factory": [[293, null]], "baybe.utils.basic.match_attributes": [[294, null]], "baybe.utils.basic.refers_to": [[295, null]], "baybe.utils.basic.register_hooks": [[296, null]], "baybe.utils.basic.to_tuple": [[297, null]], "baybe.utils.boolean": [[298, null]], "baybe.utils.boolean.check_if_in": [[299, null]], "baybe.utils.boolean.is_abstract": [[300, null]], "baybe.utils.boolean.strtobool": [[301, null]], "baybe.utils.botorch_wrapper": [[302, null]], "baybe.utils.botorch_wrapper.botorch_function_wrapper": [[303, null]], "baybe.utils.chemistry": [[304, null]], "baybe.utils.chemistry.get_canonical_smiles": [[305, null]], "baybe.utils.chemistry.is_valid_smiles": [[306, null]], "baybe.utils.chemistry.name_to_smiles": [[307, null]], "baybe.utils.chemistry.smiles_to_fp_features": [[308, null]], "baybe.utils.chemistry.smiles_to_molecules": [[309, null]], "baybe.utils.chemistry.smiles_to_mordred_features": [[310, null]], "baybe.utils.chemistry.smiles_to_rdkit_features": [[311, null]], "baybe.utils.conversion": [[312, null]], "baybe.utils.conversion.fraction_to_float": [[313, null]], "baybe.utils.conversion.nonstring_to_tuple": [[314, null]], "baybe.utils.dataframe": [[315, null]], "baybe.utils.dataframe.add_fake_measurements": [[316, null]], "baybe.utils.dataframe.add_parameter_noise": [[317, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[318, null]], "baybe.utils.dataframe.df_drop_string_columns": [[319, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[320, null]], "baybe.utils.dataframe.fuzzy_row_match": [[321, null]], "baybe.utils.dataframe.get_transform_objects": [[322, null]], "baybe.utils.dataframe.pretty_print_df": [[323, null]], "baybe.utils.dataframe.to_tensor": [[324, null]], "baybe.utils.interval": [[325, null]], "baybe.utils.interval.InfiniteIntervalError": [[326, null]], "baybe.utils.interval.convert_bounds": [[328, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[329, null]], "baybe.utils.memory": [[330, null]], "baybe.utils.memory.bytes_to_human_readable": [[331, null]], "baybe.utils.numerical": [[332, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[333, null]], "baybe.utils.numerical.DTypeFloatONNX": [[334, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[335, null]], "baybe.utils.numerical.closer_element": [[336, null]], "baybe.utils.numerical.closest_element": [[337, null]], "baybe.utils.numerical.geom_mean": [[338, null]], "baybe.utils.plotting": [[339, null]], "baybe.utils.plotting.create_example_plots": [[340, null]], "baybe.utils.plotting.indent": [[341, null]], "baybe.utils.plotting.to_string": [[342, null]], "baybe.utils.random": [[343, null]], "baybe.utils.random.set_random_seed": [[344, null]], "baybe.utils.random.temporary_seed": [[345, null]], "baybe.utils.sampling_algorithms": [[346, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[348, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[349, null]], "baybe.utils.scaling": [[350, null]], "baybe.utils.torch": [[352, null]], "baybe.utils.torch.DTypeFloatTorch": [[353, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[354, null]], "baybe.utils.validation": [[355, null]], "baybe.utils.validation.finite_float": [[356, null]], "baybe.utils.validation.non_inf_float": [[357, null]], "baybe.utils.validation.non_nan_float": [[358, null]], "baybe.utils.validation.validate_not_nan": [[359, null]], "classproperty": [[288, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[405, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNoisyExpectedImprovement": [[12, null]], "qNegIntegratedPosteriorVariance": [[13, null]], "qNoisyExpectedImprovement": [[14, null]], "qProbabilityOfImprovement": [[15, null]], "qSimpleRegret": [[16, null]], "qThompsonSampling": [[17, null]], "qUpperConfidenceBound": [[18, null]], "\u201cPre-training\u201d stage": [[385, "pre-training-stage"]], "\u26a1 Quick Start": [[404, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[404, "maintainers"]], "\ud83d\udcbb Installation": [[404, "installation"]], "\ud83d\udcc4 License": [[404, "license"]], "\ud83d\udce1 Telemetry": [[404, "telemetry"]], "\ud83d\udee0\ufe0f Known Issues": [[404, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objective", "_autosummary/baybe.objective.Objective", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.deprecation", "_autosummary/baybe.objectives.deprecation.structure_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.botorch_wrapper", "_autosummary/baybe.utils.botorch_wrapper.botorch_function_wrapper", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.is_valid_smiles", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fp_features", "_autosummary/baybe.utils.chemistry.smiles_to_molecules", "_autosummary/baybe.utils.chemistry.smiles_to_mordred_features", "_autosummary/baybe.utils.chemistry.smiles_to_rdkit_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.plotting", "_autosummary/baybe.utils.plotting.create_example_plots", "_autosummary/baybe.utils.plotting.indent", "_autosummary/baybe.utils.plotting.to_string", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "examples/Backtesting/Backtesting", "examples/Backtesting/botorch_analytical", "examples/Backtesting/custom_analytical", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/hybrid", "examples/Backtesting/impute_mode", "examples/Backtesting/multi_target", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/mixture_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space_botorch_function", "examples/Searchspaces/continuous_space_custom_function", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objective.rst", "_autosummary/baybe.objective.Objective.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.deprecation.rst", "_autosummary/baybe.objectives.deprecation.structure_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.botorch_wrapper.rst", "_autosummary/baybe.utils.botorch_wrapper.botorch_function_wrapper.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.is_valid_smiles.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fp_features.rst", "_autosummary/baybe.utils.chemistry.smiles_to_molecules.rst", "_autosummary/baybe.utils.chemistry.smiles_to_mordred_features.rst", "_autosummary/baybe.utils.chemistry.smiles_to_rdkit_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.plotting.rst", "_autosummary/baybe.utils.plotting.create_example_plots.rst", "_autosummary/baybe.utils.plotting.indent.rst", "_autosummary/baybe.utils.plotting.to_string.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/botorch_analytical.md", "examples/Backtesting/custom_analytical.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/hybrid.md", "examples/Backtesting/impute_mode.md", "examples/Backtesting/multi_target.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/mixture_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space_botorch_function.md", "examples/Searchspaces/continuous_space_custom_function.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[60, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[61, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[62, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[64, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[65, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[66, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[67, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[68, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[69, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[70, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[71, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[72, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[73, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[74, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[75, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[76, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[79, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[80, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[81, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[83, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[84, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[85, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[87, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[88, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[89, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[90, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[92, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[93, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[94, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[99, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[104, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[109, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[112, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[113, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[114, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[116, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[117, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[130, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[140, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[142, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[143, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[144, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[145, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[146, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[147, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[148, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[151, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[163, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[173, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[180, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[181, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[186, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[191, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[227, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[228, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[236, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[237, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[244, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[246, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[264, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[266, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[272, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[288, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[287, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[326, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[327, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[351, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[60, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[61, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[62, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[64, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[65, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[66, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[67, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[68, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[69, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[70, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[71, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[72, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[73, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[74, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[75, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[76, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[121, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[122, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[124, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[326, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[148, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[20, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function_cls", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function_cls", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[20, "baybe.acquisition.base.AcquisitionFunction", false]], "active_values (baybe.parameters.categorical.taskparameter attribute)": [[117, "baybe.parameters.categorical.TaskParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[316, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.add_measurements", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[317, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[92, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender attribute)": [[163, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[173, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[180, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[181, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender attribute)": [[163, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[173, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[180, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[181, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender attribute)": [[163, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[173, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[180, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[181, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[142, "baybe.priors.basic.BetaPrior.alpha", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[148, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[94, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[92, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[93, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basickernel (class in baybe.kernels.base)": [[79, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[256, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[257, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[241, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[19, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[21, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[23, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[26, "module-baybe.campaign", false]], "baybe.constraints": [[28, "module-baybe.constraints", false]], "baybe.constraints.base": [[29, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[35, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[39, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[42, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[46, "module-baybe.constraints.discrete", false]], "baybe.constraints.validation": [[56, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[59, "module-baybe.exceptions", false]], "baybe.kernels": [[77, "module-baybe.kernels", false]], "baybe.kernels.base": [[78, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[82, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[91, "module-baybe.kernels.composite", false]], "baybe.objective": [[95, "module-baybe.objective", false]], "baybe.objectives": [[97, "module-baybe.objectives", false]], "baybe.objectives.base": [[98, "module-baybe.objectives.base", false]], "baybe.objectives.deprecation": [[101, "module-baybe.objectives.deprecation", false]], "baybe.objectives.desirability": [[103, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[106, "module-baybe.objectives.enum", false]], "baybe.objectives.single": [[108, "module-baybe.objectives.single", false]], "baybe.parameters": [[110, "module-baybe.parameters", false]], "baybe.parameters.base": [[111, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[115, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[118, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[120, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[125, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[128, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[131, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[134, "module-baybe.parameters.validation", false]], "baybe.priors": [[138, "module-baybe.priors", false]], "baybe.priors.base": [[139, "module-baybe.priors.base", false]], "baybe.priors.basic": [[141, "module-baybe.priors.basic", false]], "baybe.recommenders": [[149, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[150, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[152, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[153, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[155, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[159, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[161, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[162, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[164, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[165, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[167, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[169, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[171, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[172, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[174, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[179, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[182, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[183, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[185, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[190, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[196, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[200, "module-baybe.serialization", false]], "baybe.serialization.core": [[201, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[208, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[210, "module-baybe.serialization.utils", false]], "baybe.simulation": [[213, "module-baybe.simulation", false]], "baybe.simulation.core": [[214, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[216, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[218, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[220, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[222, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[223, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[225, "module-baybe.surrogates.base", false]], "baybe.surrogates.custom": [[229, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[232, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[233, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[235, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[239, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[240, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[243, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[245, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[247, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[249, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[251, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[253, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[255, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[259, "module-baybe.surrogates.validation", false]], "baybe.targets": [[262, "module-baybe.targets", false]], "baybe.targets.base": [[263, "module-baybe.targets.base", false]], "baybe.targets.binary": [[265, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[268, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[271, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[273, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[277, "module-baybe.telemetry", false]], "baybe.utils": [[282, "module-baybe.utils", false]], "baybe.utils.augmentation": [[283, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[286, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[298, "module-baybe.utils.boolean", false]], "baybe.utils.botorch_wrapper": [[302, "module-baybe.utils.botorch_wrapper", false]], "baybe.utils.chemistry": [[304, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[312, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[315, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[325, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[330, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[332, "module-baybe.utils.numerical", false]], "baybe.utils.plotting": [[339, "module-baybe.utils.plotting", false]], "baybe.utils.random": [[343, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[346, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[350, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[352, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[355, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[270, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[274, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[142, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[142, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[266, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[202, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[203, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorch_function_wrapper() (in module baybe.utils.botorch_wrapper)": [[303, "baybe.utils.botorch_wrapper.botorch_function_wrapper", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[272, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[331, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[27, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[30, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[258, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[121, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[116, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[327, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[299, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[267, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[288, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[336, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[337, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[351, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[113, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[116, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[117, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[130, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[191, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[112, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[113, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[114, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[116, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[117, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[130, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[191, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[191, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[163, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[173, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[180, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[181, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[80, "baybe.kernels.base.CompositeKernel", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[143, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[36, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[31, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[327, "baybe.utils.interval.Interval.contains", false]], "contains_mordred (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.contains_mordred", false]], "contains_rdkit (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.contains_rdkit", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[186, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[187, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[32, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[43, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[44, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[112, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[24, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[328, "baybe.utils.interval.convert_bounds", false]], "converter (in module baybe.serialization.core)": [[204, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[327, "baybe.utils.interval.Interval.create", false]], "create_example_plots() (in module baybe.utils.plotting)": [[340, "baybe.utils.plotting.create_example_plots", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[122, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[119, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[122, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[130, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[130, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_iterator() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.default_iterator", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[244, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[60, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[211, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[104, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[284, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[285, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[318, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[319, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[320, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[186, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[187, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[113, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[347, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[333, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[334, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[353, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[287, "baybe.utils.basic.Dummy", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[246, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[187, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[61, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[113, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[116, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[117, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[130, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[186, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[191, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[191, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[191, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[266, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[348, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "find_subclass() (in module baybe.utils.basic)": [[289, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[356, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[227, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[228, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[351, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[347, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[180, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[313, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_config() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[186, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[20, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[30, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[31, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[32, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[34, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[36, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[38, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[79, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[80, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[81, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[83, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[84, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[85, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[87, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[88, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[89, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[90, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[92, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[93, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[94, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[99, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[104, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[109, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[112, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[113, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[114, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[116, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[117, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[130, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[140, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[142, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[143, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[144, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[145, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[146, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[147, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[148, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[186, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[209, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[227, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[237, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[264, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[266, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[272, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[327, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[20, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[30, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[31, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[32, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[34, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[36, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[38, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[79, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[80, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[81, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[83, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[84, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[85, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[87, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[88, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[89, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[90, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[92, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[93, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[94, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[99, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[104, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[109, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[112, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[113, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[114, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[116, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[117, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[130, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[140, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[142, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[143, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[144, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[145, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[146, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[147, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[148, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[186, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[209, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[227, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[237, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[264, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[266, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[272, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[327, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[186, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[186, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[321, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[143, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[241, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[107, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[338, "baybe.utils.numerical.geom_mean", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[205, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[290, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[305, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[186, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[260, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[186, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[132, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[291, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[322, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[197, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[278, "baybe.telemetry.get_user_details", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[292, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[144, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[145, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[293, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[187, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "incompatibilityerror": [[62, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatiblesearchspaceerror": [[64, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "indent() (in module baybe.utils.plotting)": [[341, "baybe.utils.plotting.indent", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infiniteintervalerror": [[326, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[121, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[327, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[65, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[66, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[300, "baybe.utils.boolean.is_abstract", false]], "is_bounded (baybe.utils.interval.interval property)": [[327, "baybe.utils.interval.Interval.is_bounded", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[30, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[31, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[32, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[34, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[112, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[113, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[114, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[116, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[117, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[130, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[327, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[30, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[31, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[32, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[34, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[112, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[113, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[114, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[116, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[117, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[130, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[279, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[327, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[327, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[112, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[113, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[114, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[116, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[117, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[130, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[327, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[112, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[113, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[114, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[116, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[117, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[130, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[327, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_valid_smiles() (in module baybe.utils.chemistry)": [[306, "baybe.utils.chemistry.is_valid_smiles", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[237, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[81, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[236, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[84, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[85, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[88, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[89, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[90, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[84, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[85, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[88, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[89, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[90, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[270, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[275, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[83, "baybe.kernels.basic.LinearKernel", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[146, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[147, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[146, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[217, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[327, "baybe.utils.interval.Interval.lower", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[242, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[351, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "mark_as_measured() (baybe.searchspace.discrete.subspacediscrete method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.mark_as_measured", false]], "match (baybe.targets.enum.targetmode attribute)": [[269, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[294, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[84, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[269, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[107, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[191, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete attribute)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[154, "baybe.recommenders.meta.base.MetaRecommender", false]], "min (baybe.targets.enum.targetmode attribute)": [[269, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[272, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[67, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [19, "module-baybe.acquisition.base", false], [21, "module-baybe.acquisition.partial", false], [23, "module-baybe.acquisition.utils", false], [26, "module-baybe.campaign", false], [28, "module-baybe.constraints", false], [29, "module-baybe.constraints.base", false], [35, "module-baybe.constraints.conditions", false], [39, "module-baybe.constraints.continuous", false], [42, "module-baybe.constraints.deprecation", false], [46, "module-baybe.constraints.discrete", false], [56, "module-baybe.constraints.validation", false], [59, "module-baybe.exceptions", false], [77, "module-baybe.kernels", false], [78, "module-baybe.kernels.base", false], [82, "module-baybe.kernels.basic", false], [91, "module-baybe.kernels.composite", false], [95, "module-baybe.objective", false], [97, "module-baybe.objectives", false], [98, "module-baybe.objectives.base", false], [101, "module-baybe.objectives.deprecation", false], [103, "module-baybe.objectives.desirability", false], [106, "module-baybe.objectives.enum", false], [108, "module-baybe.objectives.single", false], [110, "module-baybe.parameters", false], [111, "module-baybe.parameters.base", false], [115, "module-baybe.parameters.categorical", false], [118, "module-baybe.parameters.custom", false], [120, "module-baybe.parameters.enum", false], [125, "module-baybe.parameters.numerical", false], [128, "module-baybe.parameters.substance", false], [131, "module-baybe.parameters.utils", false], [134, "module-baybe.parameters.validation", false], [138, "module-baybe.priors", false], [139, "module-baybe.priors.base", false], [141, "module-baybe.priors.basic", false], [149, "module-baybe.recommenders", false], [150, "module-baybe.recommenders.base", false], [152, "module-baybe.recommenders.meta", false], [153, "module-baybe.recommenders.meta.base", false], [155, "module-baybe.recommenders.meta.sequential", false], [159, "module-baybe.recommenders.naive", false], [161, "module-baybe.recommenders.pure", false], [162, "module-baybe.recommenders.pure.base", false], [164, "module-baybe.recommenders.pure.bayesian", false], [165, "module-baybe.recommenders.pure.bayesian.base", false], [167, "module-baybe.recommenders.pure.bayesian.botorch", false], [169, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [171, "module-baybe.recommenders.pure.nonpredictive", false], [172, "module-baybe.recommenders.pure.nonpredictive.base", false], [174, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [179, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [182, "module-baybe.searchspace", false], [183, "module-baybe.searchspace.continuous", false], [185, "module-baybe.searchspace.core", false], [190, "module-baybe.searchspace.discrete", false], [196, "module-baybe.searchspace.validation", false], [200, "module-baybe.serialization", false], [201, "module-baybe.serialization.core", false], [208, "module-baybe.serialization.mixin", false], [210, "module-baybe.serialization.utils", false], [213, "module-baybe.simulation", false], [214, "module-baybe.simulation.core", false], [216, "module-baybe.simulation.lookup", false], [218, "module-baybe.simulation.scenarios", false], [220, "module-baybe.simulation.transfer_learning", false], [222, "module-baybe.surrogates", false], [223, "module-baybe.surrogates.bandit", false], [225, "module-baybe.surrogates.base", false], [229, "module-baybe.surrogates.custom", false], [232, "module-baybe.surrogates.gaussian_process", false], [233, "module-baybe.surrogates.gaussian_process.core", false], [235, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [239, "module-baybe.surrogates.gaussian_process.presets", false], [240, "module-baybe.surrogates.gaussian_process.presets.core", false], [243, "module-baybe.surrogates.gaussian_process.presets.default", false], [245, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [247, "module-baybe.surrogates.linear", false], [249, "module-baybe.surrogates.naive", false], [251, "module-baybe.surrogates.ngboost", false], [253, "module-baybe.surrogates.random_forest", false], [255, "module-baybe.surrogates.utils", false], [259, "module-baybe.surrogates.validation", false], [262, "module-baybe.targets", false], [263, "module-baybe.targets.base", false], [265, "module-baybe.targets.binary", false], [268, "module-baybe.targets.enum", false], [271, "module-baybe.targets.numerical", false], [273, "module-baybe.targets.transforms", false], [277, "module-baybe.telemetry", false], [282, "module-baybe.utils", false], [283, "module-baybe.utils.augmentation", false], [286, "module-baybe.utils.basic", false], [298, "module-baybe.utils.boolean", false], [302, "module-baybe.utils.botorch_wrapper", false], [304, "module-baybe.utils.chemistry", false], [312, "module-baybe.utils.conversion", false], [315, "module-baybe.utils.dataframe", false], [325, "module-baybe.utils.interval", false], [330, "module-baybe.utils.memory", false], [332, "module-baybe.utils.numerical", false], [339, "module-baybe.utils.plotting", false], [343, "module-baybe.utils.random", false], [346, "module-baybe.utils.sampling_algorithms", false], [350, "module-baybe.utils.scaling", false], [352, "module-baybe.utils.torch", false], [355, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.n_fits_done", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[112, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[113, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[114, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[116, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[117, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[130, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[264, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[266, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[272, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[307, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[68, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "non_inf_float() (in module baybe.utils.validation)": [[357, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[358, "baybe.utils.validation.non_nan_float", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[173, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[314, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[69, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[147, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[70, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[71, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[84, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[89, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[272, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[72, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[99, "baybe.objectives.base.Objective", false]], "objective() (in module baybe.objective)": [[96, "baybe.objective.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[87, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[87, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[121, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[73, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[94, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[94, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[114, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[193, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[194, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameterencoding (class in baybe.parameters.enum)": [[123, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[85, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[85, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[85, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[237, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "polynomialkernel (class in baybe.kernels.basic)": [[87, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[227, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[87, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[323, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[140, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[93, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[163, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[347, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[181, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[143, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[88, "baybe.kernels.basic.RBFKernel", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "recommend() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[151, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[163, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[173, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[180, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[181, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[151, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "refers_to() (in module baybe.utils.basic)": [[295, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[231, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[296, "baybe.utils.basic.register_hooks", false]], "rffkernel (class in baybe.kernels.basic)": [[89, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[90, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[349, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[105, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[104, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[107, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[144, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[145, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[146, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[147, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[94, "baybe.kernels.composite.ScaleKernel", false]], "searchspace (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[186, "baybe.searchspace.core.SearchSpace", false]], "searchspacetype (class in baybe.searchspace.core)": [[187, "baybe.searchspace.core.SearchSpaceType", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[206, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[37, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[170, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[212, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[209, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[344, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[148, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[215, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[219, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[221, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[109, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[129, "baybe.parameters.substance.Smiles", false]], "smiles_to_fp_features() (in module baybe.utils.chemistry)": [[308, "baybe.utils.chemistry.smiles_to_fp_features", false]], "smiles_to_molecules() (in module baybe.utils.chemistry)": [[309, "baybe.utils.chemistry.smiles_to_molecules", false]], "smiles_to_mordred_features() (in module baybe.utils.chemistry)": [[310, "baybe.utils.chemistry.smiles_to_mordred_features", false]], "smiles_to_rdkit_features() (in module baybe.utils.chemistry)": [[311, "baybe.utils.chemistry.smiles_to_rdkit_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[148, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[133, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[25, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[301, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[45, "baybe.constraints.deprecation.structure_constraints", false]], "structure_objective() (in module baybe.objectives.deprecation)": [[102, "baybe.objectives.deprecation.structure_objective", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[37, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[184, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[124, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[130, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[266, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[112, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[113, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[114, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[116, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[117, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[130, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[264, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[266, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[272, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[227, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[227, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[228, "baybe.surrogates.base.SurrogateProtocol", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[264, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[269, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[99, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[104, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[109, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[270, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[117, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[280, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[281, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[345, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[38, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[227, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[228, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[79, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[80, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[81, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[83, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[84, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[85, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[87, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[88, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[89, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[90, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[92, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[93, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[94, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[99, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[104, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[109, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[112, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[113, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[114, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[116, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[117, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[130, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[140, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[142, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[143, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[144, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[145, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[146, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[147, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[148, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[186, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[209, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[227, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[237, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[264, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[266, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[272, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[327, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[79, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[80, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[81, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[83, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[84, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[85, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[87, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[88, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[89, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[90, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[92, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[93, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[94, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[79, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[80, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[81, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[83, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[84, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[85, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[87, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[88, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[89, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[90, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[92, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[93, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[94, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[140, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[142, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[143, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[144, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[145, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[146, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[147, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[148, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[79, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[80, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[81, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[83, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[84, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[85, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[87, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[88, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[89, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[90, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[92, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[93, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[94, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[99, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[104, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[109, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[112, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[113, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[114, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[116, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[117, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[130, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[140, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[142, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[143, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[144, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[145, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[146, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[147, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[148, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[186, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[209, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[227, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[237, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[264, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[266, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[272, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[327, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[238, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[327, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[264, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[266, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[272, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[100, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[112, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[113, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[114, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[116, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[117, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[130, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[188, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.plotting)": [[342, "baybe.utils.plotting.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[112, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[113, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[116, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[117, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[130, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[327, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[324, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[327, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[297, "baybe.utils.basic.to_tuple", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "transform() (baybe.objectives.base.objective method)": [[99, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[104, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[109, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[113, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[116, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[117, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[130, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[186, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[264, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[266, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[272, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[351, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[272, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[270, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[276, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[74, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[75, "baybe.exceptions.UnmatchedAttributeError", false]], "unstructure_base() (in module baybe.serialization.core)": [[207, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[76, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[327, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[329, "baybe.utils.interval.use_fallback_constructor_hook", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[57, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[58, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[261, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[135, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[136, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[359, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[198, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[199, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[189, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[195, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[137, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[113, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[116, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[117, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[130, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[83, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[83, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[335, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[354, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[104, "baybe.objectives.desirability.DesirabilityObjective.weights", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [26, 0, 0, "-", "campaign"], [28, 0, 0, "-", "constraints"], [59, 0, 0, "-", "exceptions"], [77, 0, 0, "-", "kernels"], [95, 0, 0, "-", "objective"], [97, 0, 0, "-", "objectives"], [110, 0, 0, "-", "parameters"], [138, 0, 0, "-", "priors"], [149, 0, 0, "-", "recommenders"], [182, 0, 0, "-", "searchspace"], [200, 0, 0, "-", "serialization"], [213, 0, 0, "-", "simulation"], [222, 0, 0, "-", "surrogates"], [262, 0, 0, "-", "targets"], [277, 0, 0, "-", "telemetry"], [282, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [19, 0, 0, "-", "base"], [21, 0, 0, "-", "partial"], [23, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNoisyExpectedImprovement"], [13, 1, 1, "", "qNegIntegratedPosteriorVariance"], [14, 1, 1, "", "qNoisyExpectedImprovement"], [15, 1, 1, "", "qProbabilityOfImprovement"], [16, 1, 1, "", "qSimpleRegret"], [17, 1, 1, "", "qThompsonSampling"], [18, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 2, 1, "", "get_integration_points"], [13, 3, 1, "", "sampling_fraction"], [13, 3, 1, "", "sampling_method"], [13, 3, 1, "", "sampling_n_points"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "n_mc_samples"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 3, 1, "", "beta"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.base": [[20, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.partial": [[22, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "botorch_acqf"], [22, 3, 1, "", "pin_discrete"], [22, 3, 1, "", "pinned_part"], [22, 2, 1, "", "set_X_pending"]], "baybe.acquisition.utils": [[24, 4, 1, "", "convert_acqf"], [25, 4, 1, "", "str_to_acqf"]], "baybe.campaign": [[27, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "add_measurements"], [27, 2, 1, "", "from_config"], [27, 2, 1, "", "from_dict"], [27, 2, 1, "", "from_json"], [27, 2, 1, "", "get_surrogate"], [27, 5, 1, "", "measurements"], [27, 3, 1, "", "n_batches_done"], [27, 3, 1, "", "n_fits_done"], [27, 3, 1, "", "objective"], [27, 5, 1, "", "parameters"], [27, 2, 1, "", "posterior"], [27, 2, 1, "", "recommend"], [27, 3, 1, "", "recommender"], [27, 3, 1, "", "searchspace"], [27, 5, 1, "", "targets"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_json"], [27, 2, 1, "", "validate_config"]], "baybe.constraints": [[29, 0, 0, "-", "base"], [35, 0, 0, "-", "conditions"], [39, 0, 0, "-", "continuous"], [42, 0, 0, "-", "deprecation"], [46, 0, 0, "-", "discrete"], [56, 0, 0, "-", "validation"]], "baybe.constraints.base": [[30, 1, 1, "", "CardinalityConstraint"], [31, 1, 1, "", "Constraint"], [32, 1, 1, "", "ContinuousConstraint"], [33, 1, 1, "", "ContinuousNonlinearConstraint"], [34, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[30, 2, 1, "", "__init__"], [30, 3, 1, "", "eval_during_augmentation"], [30, 3, 1, "", "eval_during_creation"], [30, 3, 1, "", "eval_during_modeling"], [30, 2, 1, "", "from_dict"], [30, 2, 1, "", "from_json"], [30, 5, 1, "", "is_continuous"], [30, 5, 1, "", "is_discrete"], [30, 3, 1, "", "max_cardinality"], [30, 3, 1, "", "min_cardinality"], [30, 3, 1, "", "numerical_only"], [30, 3, 1, "", "parameters"], [30, 2, 1, "", "summary"], [30, 2, 1, "", "to_dict"], [30, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "eval_during_augmentation"], [31, 3, 1, "", "eval_during_creation"], [31, 3, 1, "", "eval_during_modeling"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 5, 1, "", "is_continuous"], [31, 5, 1, "", "is_discrete"], [31, 3, 1, "", "numerical_only"], [31, 3, 1, "", "parameters"], [31, 2, 1, "", "summary"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint": [[32, 2, 1, "", "__init__"], [32, 3, 1, "", "eval_during_augmentation"], [32, 3, 1, "", "eval_during_creation"], [32, 3, 1, "", "eval_during_modeling"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "from_json"], [32, 5, 1, "", "is_continuous"], [32, 5, 1, "", "is_discrete"], [32, 3, 1, "", "numerical_only"], [32, 3, 1, "", "parameters"], [32, 2, 1, "", "summary"], [32, 2, 1, "", "to_dict"], [32, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "eval_during_augmentation"], [33, 3, 1, "", "eval_during_creation"], [33, 3, 1, "", "eval_during_modeling"], [33, 2, 1, "", "from_dict"], [33, 2, 1, "", "from_json"], [33, 5, 1, "", "is_continuous"], [33, 5, 1, "", "is_discrete"], [33, 3, 1, "", "numerical_only"], [33, 3, 1, "", "parameters"], [33, 2, 1, "", "summary"], [33, 2, 1, "", "to_dict"], [33, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 2, 1, "", "get_invalid"], [34, 2, 1, "", "get_invalid_polars"], [34, 5, 1, "", "is_continuous"], [34, 5, 1, "", "is_discrete"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.conditions": [[36, 1, 1, "", "Condition"], [37, 1, 1, "", "SubSelectionCondition"], [38, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[36, 2, 1, "", "evaluate"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"], [36, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "evaluate"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 5, 1, "", "selection"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"], [37, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.ThresholdCondition": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "evaluate"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 3, 1, "", "operator"], [38, 3, 1, "", "threshold"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"], [38, 2, 1, "", "to_polars"], [38, 3, 1, "", "tolerance"]], "baybe.constraints.continuous": [[40, 1, 1, "", "ContinuousCardinalityConstraint"], [41, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[40, 2, 1, "", "__init__"], [40, 3, 1, "", "eval_during_augmentation"], [40, 3, 1, "", "eval_during_creation"], [40, 3, 1, "", "eval_during_modeling"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 5, 1, "", "is_continuous"], [40, 5, 1, "", "is_discrete"], [40, 3, 1, "", "max_cardinality"], [40, 3, 1, "", "min_cardinality"], [40, 3, 1, "", "numerical_only"], [40, 3, 1, "", "parameters"], [40, 2, 1, "", "sample_inactive_parameters"], [40, 2, 1, "", "summary"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[41, 2, 1, "", "__init__"], [41, 3, 1, "", "coefficients"], [41, 3, 1, "", "eval_during_augmentation"], [41, 3, 1, "", "eval_during_creation"], [41, 3, 1, "", "eval_during_modeling"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 5, 1, "", "is_continuous"], [41, 5, 1, "", "is_discrete"], [41, 5, 1, "", "is_eq"], [41, 3, 1, "", "numerical_only"], [41, 3, 1, "", "operator"], [41, 3, 1, "", "parameters"], [41, 3, 1, "", "rhs"], [41, 2, 1, "", "summary"], [41, 2, 1, "", "to_botorch"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"]], "baybe.constraints.deprecation": [[43, 4, 1, "", "ContinuousLinearEqualityConstraint"], [44, 4, 1, "", "ContinuousLinearInequalityConstraint"], [45, 4, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[47, 1, 1, "", "DiscreteCardinalityConstraint"], [48, 1, 1, "", "DiscreteCustomConstraint"], [49, 1, 1, "", "DiscreteDependenciesConstraint"], [50, 1, 1, "", "DiscreteExcludeConstraint"], [51, 1, 1, "", "DiscreteLinkedParametersConstraint"], [52, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [53, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [54, 1, 1, "", "DiscreteProductConstraint"], [55, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[47, 2, 1, "", "__init__"], [47, 3, 1, "", "eval_during_augmentation"], [47, 3, 1, "", "eval_during_creation"], [47, 3, 1, "", "eval_during_modeling"], [47, 2, 1, "", "from_dict"], [47, 2, 1, "", "from_json"], [47, 2, 1, "", "get_invalid"], [47, 2, 1, "", "get_invalid_polars"], [47, 5, 1, "", "is_continuous"], [47, 5, 1, "", "is_discrete"], [47, 3, 1, "", "max_cardinality"], [47, 3, 1, "", "min_cardinality"], [47, 3, 1, "", "numerical_only"], [47, 3, 1, "", "parameters"], [47, 2, 1, "", "summary"], [47, 2, 1, "", "to_dict"], [47, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[48, 2, 1, "", "__init__"], [48, 3, 1, "", "eval_during_augmentation"], [48, 3, 1, "", "eval_during_creation"], [48, 3, 1, "", "eval_during_modeling"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "from_json"], [48, 2, 1, "", "get_invalid"], [48, 2, 1, "", "get_invalid_polars"], [48, 5, 1, "", "is_continuous"], [48, 5, 1, "", "is_discrete"], [48, 3, 1, "", "numerical_only"], [48, 3, 1, "", "parameters"], [48, 2, 1, "", "summary"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_json"], [48, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[49, 2, 1, "", "__init__"], [49, 3, 1, "", "affected_parameters"], [49, 3, 1, "", "conditions"], [49, 3, 1, "", "eval_during_augmentation"], [49, 3, 1, "", "eval_during_creation"], [49, 3, 1, "", "eval_during_modeling"], [49, 2, 1, "", "from_dict"], [49, 2, 1, "", "from_json"], [49, 2, 1, "", "get_invalid"], [49, 2, 1, "", "get_invalid_polars"], [49, 5, 1, "", "is_continuous"], [49, 5, 1, "", "is_discrete"], [49, 3, 1, "", "numerical_only"], [49, 3, 1, "", "parameters"], [49, 3, 1, "", "permutation_invariant"], [49, 2, 1, "", "summary"], [49, 2, 1, "", "to_dict"], [49, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[50, 2, 1, "", "__init__"], [50, 3, 1, "", "combiner"], [50, 3, 1, "", "conditions"], [50, 3, 1, "", "eval_during_augmentation"], [50, 3, 1, "", "eval_during_creation"], [50, 3, 1, "", "eval_during_modeling"], [50, 2, 1, "", "from_dict"], [50, 2, 1, "", "from_json"], [50, 2, 1, "", "get_invalid"], [50, 2, 1, "", "get_invalid_polars"], [50, 5, 1, "", "is_continuous"], [50, 5, 1, "", "is_discrete"], [50, 3, 1, "", "numerical_only"], [50, 3, 1, "", "parameters"], [50, 2, 1, "", "summary"], [50, 2, 1, "", "to_dict"], [50, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 5, 1, "", "is_continuous"], [51, 5, 1, "", "is_discrete"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 5, 1, "", "is_continuous"], [52, 5, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "dependencies"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 5, 1, "", "is_continuous"], [53, 5, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "condition"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 5, 1, "", "is_continuous"], [54, 5, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "condition"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 5, 1, "", "is_continuous"], [55, 5, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.validation": [[57, 4, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [58, 4, 1, "", "validate_constraints"]], "baybe.exceptions": [[60, 6, 1, "", "DeprecationError"], [61, 6, 1, "", "EmptySearchSpaceError"], [62, 6, 1, "", "IncompatibilityError"], [63, 6, 1, "", "IncompatibleAcquisitionFunctionError"], [64, 6, 1, "", "IncompatibleSearchSpaceError"], [65, 6, 1, "", "InvalidSurrogateModelError"], [66, 6, 1, "", "InvalidTargetValueError"], [67, 6, 1, "", "ModelNotTrainedError"], [68, 6, 1, "", "NoMCAcquisitionFunctionError"], [69, 6, 1, "", "NoRecommendersLeftError"], [70, 6, 1, "", "NotEnoughPointsLeftError"], [71, 6, 1, "", "NothingToSimulateError"], [72, 6, 1, "", "NumericalUnderflowError"], [73, 6, 1, "", "OptionalImportError"], [74, 6, 1, "", "UnidentifiedSubclassError"], [75, 6, 1, "", "UnmatchedAttributeError"], [76, 6, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.kernels": [[78, 0, 0, "-", "base"], [82, 0, 0, "-", "basic"], [91, 0, 0, "-", "composite"]], "baybe.kernels.base": [[79, 1, 1, "", "BasicKernel"], [80, 1, 1, "", "CompositeKernel"], [81, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "from_dict"], [79, 2, 1, "", "from_json"], [79, 2, 1, "", "to_dict"], [79, 2, 1, "", "to_factory"], [79, 2, 1, "", "to_gpytorch"], [79, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "from_dict"], [80, 2, 1, "", "from_json"], [80, 2, 1, "", "to_dict"], [80, 2, 1, "", "to_factory"], [80, 2, 1, "", "to_gpytorch"], [80, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "from_dict"], [81, 2, 1, "", "from_json"], [81, 2, 1, "", "to_dict"], [81, 2, 1, "", "to_factory"], [81, 2, 1, "", "to_gpytorch"], [81, 2, 1, "", "to_json"]], "baybe.kernels.basic": [[83, 1, 1, "", "LinearKernel"], [84, 1, 1, "", "MaternKernel"], [85, 1, 1, "", "PeriodicKernel"], [86, 1, 1, "", "PiecewisePolynomialKernel"], [87, 1, 1, "", "PolynomialKernel"], [88, 1, 1, "", "RBFKernel"], [89, 1, 1, "", "RFFKernel"], [90, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "from_dict"], [83, 2, 1, "", "from_json"], [83, 2, 1, "", "to_dict"], [83, 2, 1, "", "to_factory"], [83, 2, 1, "", "to_gpytorch"], [83, 2, 1, "", "to_json"], [83, 3, 1, "", "variance_initial_value"], [83, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.MaternKernel": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "from_dict"], [84, 2, 1, "", "from_json"], [84, 3, 1, "", "lengthscale_initial_value"], [84, 3, 1, "", "lengthscale_prior"], [84, 3, 1, "", "nu"], [84, 2, 1, "", "to_dict"], [84, 2, 1, "", "to_factory"], [84, 2, 1, "", "to_gpytorch"], [84, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "from_dict"], [85, 2, 1, "", "from_json"], [85, 3, 1, "", "lengthscale_initial_value"], [85, 3, 1, "", "lengthscale_prior"], [85, 3, 1, "", "period_length_initial_value"], [85, 3, 1, "", "period_length_prior"], [85, 2, 1, "", "to_dict"], [85, 2, 1, "", "to_factory"], [85, 2, 1, "", "to_gpytorch"], [85, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "from_dict"], [86, 2, 1, "", "from_json"], [86, 3, 1, "", "lengthscale_initial_value"], [86, 3, 1, "", "lengthscale_prior"], [86, 3, 1, "", "q"], [86, 2, 1, "", "to_dict"], [86, 2, 1, "", "to_factory"], [86, 2, 1, "", "to_gpytorch"], [86, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "from_dict"], [87, 2, 1, "", "from_json"], [87, 3, 1, "", "offset_initial_value"], [87, 3, 1, "", "offset_prior"], [87, 3, 1, "", "power"], [87, 2, 1, "", "to_dict"], [87, 2, 1, "", "to_factory"], [87, 2, 1, "", "to_gpytorch"], [87, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "from_dict"], [88, 2, 1, "", "from_json"], [88, 3, 1, "", "lengthscale_initial_value"], [88, 3, 1, "", "lengthscale_prior"], [88, 2, 1, "", "to_dict"], [88, 2, 1, "", "to_factory"], [88, 2, 1, "", "to_gpytorch"], [88, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "from_dict"], [89, 2, 1, "", "from_json"], [89, 3, 1, "", "lengthscale_initial_value"], [89, 3, 1, "", "lengthscale_prior"], [89, 3, 1, "", "num_samples"], [89, 2, 1, "", "to_dict"], [89, 2, 1, "", "to_factory"], [89, 2, 1, "", "to_gpytorch"], [89, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "from_dict"], [90, 2, 1, "", "from_json"], [90, 3, 1, "", "lengthscale_initial_value"], [90, 3, 1, "", "lengthscale_prior"], [90, 2, 1, "", "to_dict"], [90, 2, 1, "", "to_factory"], [90, 2, 1, "", "to_gpytorch"], [90, 2, 1, "", "to_json"]], "baybe.kernels.composite": [[92, 1, 1, "", "AdditiveKernel"], [93, 1, 1, "", "ProductKernel"], [94, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[92, 2, 1, "", "__init__"], [92, 3, 1, "", "base_kernels"], [92, 2, 1, "", "from_dict"], [92, 2, 1, "", "from_json"], [92, 2, 1, "", "to_dict"], [92, 2, 1, "", "to_factory"], [92, 2, 1, "", "to_gpytorch"], [92, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel": [[93, 2, 1, "", "__init__"], [93, 3, 1, "", "base_kernels"], [93, 2, 1, "", "from_dict"], [93, 2, 1, "", "from_json"], [93, 2, 1, "", "to_dict"], [93, 2, 1, "", "to_factory"], [93, 2, 1, "", "to_gpytorch"], [93, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel": [[94, 2, 1, "", "__init__"], [94, 3, 1, "", "base_kernel"], [94, 2, 1, "", "from_dict"], [94, 2, 1, "", "from_json"], [94, 3, 1, "", "outputscale_initial_value"], [94, 3, 1, "", "outputscale_prior"], [94, 2, 1, "", "to_dict"], [94, 2, 1, "", "to_factory"], [94, 2, 1, "", "to_gpytorch"], [94, 2, 1, "", "to_json"]], "baybe.objective": [[96, 4, 1, "", "Objective"]], "baybe.objectives": [[98, 0, 0, "-", "base"], [101, 0, 0, "-", "deprecation"], [103, 0, 0, "-", "desirability"], [106, 0, 0, "-", "enum"], [108, 0, 0, "-", "single"]], "baybe.objectives.base": [[99, 1, 1, "", "Objective"], [100, 4, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "from_dict"], [99, 2, 1, "", "from_json"], [99, 5, 1, "", "targets"], [99, 2, 1, "", "to_dict"], [99, 2, 1, "", "to_json"], [99, 2, 1, "", "transform"]], "baybe.objectives.deprecation": [[102, 4, 1, "", "structure_objective"]], "baybe.objectives.desirability": [[104, 1, 1, "", "DesirabilityObjective"], [105, 4, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "from_dict"], [104, 2, 1, "", "from_json"], [104, 3, 1, "", "scalarizer"], [104, 5, 1, "", "targets"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "to_json"], [104, 2, 1, "", "transform"], [104, 3, 1, "", "weights"]], "baybe.objectives.enum": [[107, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[107, 3, 1, "", "GEOM_MEAN"], [107, 3, 1, "", "MEAN"]], "baybe.objectives.single": [[109, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 5, 1, "", "targets"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_json"], [109, 2, 1, "", "transform"]], "baybe.parameters": [[111, 0, 0, "-", "base"], [115, 0, 0, "-", "categorical"], [118, 0, 0, "-", "custom"], [120, 0, 0, "-", "enum"], [125, 0, 0, "-", "numerical"], [128, 0, 0, "-", "substance"], [131, 0, 0, "-", "utils"], [134, 0, 0, "-", "validation"]], "baybe.parameters.base": [[112, 1, 1, "", "ContinuousParameter"], [113, 1, 1, "", "DiscreteParameter"], [114, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[112, 2, 1, "", "__init__"], [112, 5, 1, "", "comp_rep_columns"], [112, 2, 1, "", "from_dict"], [112, 2, 1, "", "from_json"], [112, 5, 1, "", "is_continuous"], [112, 5, 1, "", "is_discrete"], [112, 2, 1, "", "is_in_range"], [112, 3, 1, "", "is_numerical"], [112, 3, 1, "", "name"], [112, 2, 1, "", "summary"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_json"], [112, 2, 1, "", "to_searchspace"], [112, 2, 1, "", "to_subspace"]], "baybe.parameters.base.DiscreteParameter": [[113, 2, 1, "", "__init__"], [113, 5, 1, "", "comp_df"], [113, 5, 1, "", "comp_rep_columns"], [113, 3, 1, "", "encoding"], [113, 2, 1, "", "from_dict"], [113, 2, 1, "", "from_json"], [113, 5, 1, "", "is_continuous"], [113, 5, 1, "", "is_discrete"], [113, 2, 1, "", "is_in_range"], [113, 3, 1, "", "is_numerical"], [113, 3, 1, "", "name"], [113, 2, 1, "", "summary"], [113, 2, 1, "", "to_dict"], [113, 2, 1, "", "to_json"], [113, 2, 1, "", "to_searchspace"], [113, 2, 1, "", "to_subspace"], [113, 2, 1, "", "transform"], [113, 5, 1, "", "values"]], "baybe.parameters.base.Parameter": [[114, 2, 1, "", "__init__"], [114, 5, 1, "", "comp_rep_columns"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 5, 1, "", "is_continuous"], [114, 5, 1, "", "is_discrete"], [114, 2, 1, "", "is_in_range"], [114, 3, 1, "", "is_numerical"], [114, 3, 1, "", "name"], [114, 2, 1, "", "summary"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_json"], [114, 2, 1, "", "to_searchspace"]], "baybe.parameters.categorical": [[116, 1, 1, "", "CategoricalParameter"], [117, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[116, 2, 1, "", "__init__"], [116, 5, 1, "", "comp_df"], [116, 5, 1, "", "comp_rep_columns"], [116, 3, 1, "", "encoding"], [116, 2, 1, "", "from_dict"], [116, 2, 1, "", "from_json"], [116, 5, 1, "", "is_continuous"], [116, 5, 1, "", "is_discrete"], [116, 2, 1, "", "is_in_range"], [116, 3, 1, "", "is_numerical"], [116, 3, 1, "", "name"], [116, 2, 1, "", "summary"], [116, 2, 1, "", "to_dict"], [116, 2, 1, "", "to_json"], [116, 2, 1, "", "to_searchspace"], [116, 2, 1, "", "to_subspace"], [116, 2, 1, "", "transform"], [116, 5, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter": [[117, 2, 1, "", "__init__"], [117, 3, 1, "", "active_values"], [117, 5, 1, "", "comp_df"], [117, 5, 1, "", "comp_rep_columns"], [117, 3, 1, "", "encoding"], [117, 2, 1, "", "from_dict"], [117, 2, 1, "", "from_json"], [117, 5, 1, "", "is_continuous"], [117, 5, 1, "", "is_discrete"], [117, 2, 1, "", "is_in_range"], [117, 3, 1, "", "is_numerical"], [117, 3, 1, "", "name"], [117, 2, 1, "", "summary"], [117, 2, 1, "", "to_dict"], [117, 2, 1, "", "to_json"], [117, 2, 1, "", "to_searchspace"], [117, 2, 1, "", "to_subspace"], [117, 2, 1, "", "transform"], [117, 5, 1, "", "values"]], "baybe.parameters.custom": [[119, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[119, 2, 1, "", "__init__"], [119, 5, 1, "", "comp_df"], [119, 5, 1, "", "comp_rep_columns"], [119, 3, 1, "", "data"], [119, 3, 1, "", "decorrelate"], [119, 3, 1, "", "encoding"], [119, 2, 1, "", "from_dict"], [119, 2, 1, "", "from_json"], [119, 5, 1, "", "is_continuous"], [119, 5, 1, "", "is_discrete"], [119, 2, 1, "", "is_in_range"], [119, 3, 1, "", "is_numerical"], [119, 3, 1, "", "name"], [119, 2, 1, "", "summary"], [119, 2, 1, "", "to_dict"], [119, 2, 1, "", "to_json"], [119, 2, 1, "", "to_searchspace"], [119, 2, 1, "", "to_subspace"], [119, 2, 1, "", "transform"], [119, 5, 1, "", "values"]], "baybe.parameters.enum": [[121, 1, 1, "", "CategoricalEncoding"], [122, 1, 1, "", "CustomEncoding"], [123, 1, 1, "", "ParameterEncoding"], [124, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[121, 3, 1, "", "INT"], [121, 3, 1, "", "OHE"], [121, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[122, 3, 1, "", "CUSTOM"], [122, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[124, 3, 1, "", "MORDRED"], [124, 3, 1, "", "MORGAN_FP"], [124, 3, 1, "", "RDKIT"], [124, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[126, 1, 1, "", "NumericalContinuousParameter"], [127, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[126, 2, 1, "", "__init__"], [126, 3, 1, "", "bounds"], [126, 5, 1, "", "comp_rep_columns"], [126, 2, 1, "", "from_dict"], [126, 2, 1, "", "from_json"], [126, 5, 1, "", "is_continuous"], [126, 5, 1, "", "is_discrete"], [126, 2, 1, "", "is_in_range"], [126, 3, 1, "", "is_numerical"], [126, 3, 1, "", "name"], [126, 2, 1, "", "summary"], [126, 2, 1, "", "to_dict"], [126, 2, 1, "", "to_json"], [126, 2, 1, "", "to_searchspace"], [126, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[127, 2, 1, "", "__init__"], [127, 5, 1, "", "comp_df"], [127, 5, 1, "", "comp_rep_columns"], [127, 3, 1, "", "encoding"], [127, 2, 1, "", "from_dict"], [127, 2, 1, "", "from_json"], [127, 5, 1, "", "is_continuous"], [127, 5, 1, "", "is_discrete"], [127, 2, 1, "", "is_in_range"], [127, 3, 1, "", "is_numerical"], [127, 3, 1, "", "name"], [127, 2, 1, "", "summary"], [127, 2, 1, "", "to_dict"], [127, 2, 1, "", "to_json"], [127, 2, 1, "", "to_searchspace"], [127, 2, 1, "", "to_subspace"], [127, 3, 1, "", "tolerance"], [127, 2, 1, "", "transform"], [127, 5, 1, "", "values"]], "baybe.parameters.substance": [[129, 3, 1, "", "Smiles"], [130, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[130, 2, 1, "", "__init__"], [130, 5, 1, "", "comp_df"], [130, 5, 1, "", "comp_rep_columns"], [130, 3, 1, "", "data"], [130, 3, 1, "", "decorrelate"], [130, 3, 1, "", "encoding"], [130, 2, 1, "", "from_dict"], [130, 2, 1, "", "from_json"], [130, 5, 1, "", "is_continuous"], [130, 5, 1, "", "is_discrete"], [130, 2, 1, "", "is_in_range"], [130, 3, 1, "", "is_numerical"], [130, 3, 1, "", "name"], [130, 2, 1, "", "summary"], [130, 2, 1, "", "to_dict"], [130, 2, 1, "", "to_json"], [130, 2, 1, "", "to_searchspace"], [130, 2, 1, "", "to_subspace"], [130, 2, 1, "", "transform"], [130, 5, 1, "", "values"]], "baybe.parameters.utils": [[132, 4, 1, "", "get_parameters_from_dataframe"], [133, 4, 1, "", "sort_parameters"]], "baybe.parameters.validation": [[135, 4, 1, "", "validate_decorrelation"], [136, 4, 1, "", "validate_is_finite"], [137, 4, 1, "", "validate_unique_values"]], "baybe.priors": [[139, 0, 0, "-", "base"], [141, 0, 0, "-", "basic"]], "baybe.priors.base": [[140, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "from_dict"], [140, 2, 1, "", "from_json"], [140, 2, 1, "", "to_dict"], [140, 2, 1, "", "to_gpytorch"], [140, 2, 1, "", "to_json"]], "baybe.priors.basic": [[142, 1, 1, "", "BetaPrior"], [143, 1, 1, "", "GammaPrior"], [144, 1, 1, "", "HalfCauchyPrior"], [145, 1, 1, "", "HalfNormalPrior"], [146, 1, 1, "", "LogNormalPrior"], [147, 1, 1, "", "NormalPrior"], [148, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[142, 2, 1, "", "__init__"], [142, 3, 1, "", "alpha"], [142, 3, 1, "", "beta"], [142, 2, 1, "", "from_dict"], [142, 2, 1, "", "from_json"], [142, 2, 1, "", "to_dict"], [142, 2, 1, "", "to_gpytorch"], [142, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior": [[143, 2, 1, "", "__init__"], [143, 3, 1, "", "concentration"], [143, 2, 1, "", "from_dict"], [143, 2, 1, "", "from_json"], [143, 3, 1, "", "rate"], [143, 2, 1, "", "to_dict"], [143, 2, 1, "", "to_gpytorch"], [143, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "from_dict"], [144, 2, 1, "", "from_json"], [144, 3, 1, "", "scale"], [144, 2, 1, "", "to_dict"], [144, 2, 1, "", "to_gpytorch"], [144, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "from_dict"], [145, 2, 1, "", "from_json"], [145, 3, 1, "", "scale"], [145, 2, 1, "", "to_dict"], [145, 2, 1, "", "to_gpytorch"], [145, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "from_dict"], [146, 2, 1, "", "from_json"], [146, 3, 1, "", "loc"], [146, 3, 1, "", "scale"], [146, 2, 1, "", "to_dict"], [146, 2, 1, "", "to_gpytorch"], [146, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "from_dict"], [147, 2, 1, "", "from_json"], [147, 3, 1, "", "loc"], [147, 3, 1, "", "scale"], [147, 2, 1, "", "to_dict"], [147, 2, 1, "", "to_gpytorch"], [147, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior": [[148, 2, 1, "", "__init__"], [148, 3, 1, "", "a"], [148, 3, 1, "", "b"], [148, 2, 1, "", "from_dict"], [148, 2, 1, "", "from_json"], [148, 3, 1, "", "sigma"], [148, 2, 1, "", "to_dict"], [148, 2, 1, "", "to_gpytorch"], [148, 2, 1, "", "to_json"]], "baybe.recommenders": [[150, 0, 0, "-", "base"], [152, 0, 0, "-", "meta"], [159, 0, 0, "-", "naive"], [161, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[151, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "recommend"]], "baybe.recommenders.meta": [[153, 0, 0, "-", "base"], [155, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[154, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "from_dict"], [154, 2, 1, "", "from_json"], [154, 2, 1, "", "get_current_recommender"], [154, 2, 1, "", "get_next_recommender"], [154, 2, 1, "", "recommend"], [154, 2, 1, "", "select_recommender"], [154, 2, 1, "", "to_dict"], [154, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential": [[156, 1, 1, "", "SequentialMetaRecommender"], [157, 1, 1, "", "StreamingSequentialMetaRecommender"], [158, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "from_dict"], [156, 2, 1, "", "from_json"], [156, 2, 1, "", "get_current_recommender"], [156, 2, 1, "", "get_next_recommender"], [156, 3, 1, "", "mode"], [156, 2, 1, "", "recommend"], [156, 3, 1, "", "recommenders"], [156, 2, 1, "", "select_recommender"], [156, 2, 1, "", "to_dict"], [156, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "default_iterator"], [157, 2, 1, "", "from_dict"], [157, 2, 1, "", "from_json"], [157, 2, 1, "", "get_current_recommender"], [157, 2, 1, "", "get_next_recommender"], [157, 2, 1, "", "recommend"], [157, 3, 1, "", "recommenders"], [157, 2, 1, "", "select_recommender"], [157, 2, 1, "", "to_dict"], [157, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "from_dict"], [158, 2, 1, "", "from_json"], [158, 2, 1, "", "get_current_recommender"], [158, 2, 1, "", "get_next_recommender"], [158, 3, 1, "", "initial_recommender"], [158, 2, 1, "", "recommend"], [158, 3, 1, "", "recommender"], [158, 2, 1, "", "select_recommender"], [158, 3, 1, "", "switch_after"], [158, 2, 1, "", "to_dict"], [158, 2, 1, "", "to_json"]], "baybe.recommenders.naive": [[160, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[160, 2, 1, "", "__init__"], [160, 3, 1, "", "allow_recommending_already_measured"], [160, 3, 1, "", "allow_recommending_pending_experiments"], [160, 3, 1, "", "allow_repeated_recommendations"], [160, 3, 1, "", "compatibility"], [160, 3, 1, "", "cont_recommender"], [160, 3, 1, "", "disc_recommender"], [160, 2, 1, "", "recommend"]], "baybe.recommenders.pure": [[162, 0, 0, "-", "base"], [164, 0, 0, "-", "bayesian"], [171, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[163, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[163, 2, 1, "", "__init__"], [163, 3, 1, "", "allow_recommending_already_measured"], [163, 3, 1, "", "allow_recommending_pending_experiments"], [163, 3, 1, "", "allow_repeated_recommendations"], [163, 3, 1, "", "compatibility"], [163, 2, 1, "", "recommend"]], "baybe.recommenders.pure.bayesian": [[165, 0, 0, "-", "base"], [167, 0, 0, "-", "botorch"], [169, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[166, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[166, 2, 1, "", "__init__"], [166, 3, 1, "", "acquisition_function"], [166, 3, 1, "", "acquisition_function_cls"], [166, 3, 1, "", "allow_recommending_already_measured"], [166, 3, 1, "", "allow_recommending_pending_experiments"], [166, 3, 1, "", "allow_repeated_recommendations"], [166, 3, 1, "", "compatibility"], [166, 2, 1, "", "get_surrogate"], [166, 2, 1, "", "recommend"], [166, 5, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch": [[168, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[168, 2, 1, "", "__init__"], [168, 3, 1, "", "acquisition_function"], [168, 3, 1, "", "acquisition_function_cls"], [168, 3, 1, "", "allow_recommending_already_measured"], [168, 3, 1, "", "allow_recommending_pending_experiments"], [168, 3, 1, "", "allow_repeated_recommendations"], [168, 3, 1, "", "compatibility"], [168, 2, 1, "", "get_surrogate"], [168, 3, 1, "", "hybrid_sampler"], [168, 3, 1, "", "n_raw_samples"], [168, 3, 1, "", "n_restarts"], [168, 2, 1, "", "recommend"], [168, 3, 1, "", "sampling_percentage"], [168, 3, 1, "", "sequential_continuous"], [168, 5, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[170, 4, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[172, 0, 0, "-", "base"], [174, 0, 0, "-", "clustering"], [179, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[173, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[173, 2, 1, "", "__init__"], [173, 3, 1, "", "allow_recommending_already_measured"], [173, 3, 1, "", "allow_recommending_pending_experiments"], [173, 3, 1, "", "allow_repeated_recommendations"], [173, 3, 1, "", "compatibility"], [173, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering": [[175, 1, 1, "", "GaussianMixtureClusteringRecommender"], [176, 1, 1, "", "KMeansClusteringRecommender"], [177, 1, 1, "", "PAMClusteringRecommender"], [178, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[175, 2, 1, "", "__init__"], [175, 3, 1, "", "allow_recommending_already_measured"], [175, 3, 1, "", "allow_recommending_pending_experiments"], [175, 3, 1, "", "allow_repeated_recommendations"], [175, 3, 1, "", "compatibility"], [175, 3, 1, "", "model_cluster_num_parameter_name"], [175, 3, 1, "", "model_params"], [175, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[176, 2, 1, "", "__init__"], [176, 3, 1, "", "allow_recommending_already_measured"], [176, 3, 1, "", "allow_recommending_pending_experiments"], [176, 3, 1, "", "allow_repeated_recommendations"], [176, 3, 1, "", "compatibility"], [176, 3, 1, "", "model_cluster_num_parameter_name"], [176, 3, 1, "", "model_params"], [176, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[177, 2, 1, "", "__init__"], [177, 3, 1, "", "allow_recommending_already_measured"], [177, 3, 1, "", "allow_recommending_pending_experiments"], [177, 3, 1, "", "allow_repeated_recommendations"], [177, 3, 1, "", "compatibility"], [177, 3, 1, "", "model_cluster_num_parameter_name"], [177, 3, 1, "", "model_params"], [177, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[178, 2, 1, "", "__init__"], [178, 3, 1, "", "allow_recommending_already_measured"], [178, 3, 1, "", "allow_recommending_pending_experiments"], [178, 3, 1, "", "allow_repeated_recommendations"], [178, 3, 1, "", "compatibility"], [178, 3, 1, "", "model_cluster_num_parameter_name"], [178, 3, 1, "", "model_params"], [178, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling": [[180, 1, 1, "", "FPSRecommender"], [181, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[180, 2, 1, "", "__init__"], [180, 3, 1, "", "allow_recommending_already_measured"], [180, 3, 1, "", "allow_recommending_pending_experiments"], [180, 3, 1, "", "allow_repeated_recommendations"], [180, 3, 1, "", "compatibility"], [180, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[181, 2, 1, "", "__init__"], [181, 3, 1, "", "allow_recommending_already_measured"], [181, 3, 1, "", "allow_recommending_pending_experiments"], [181, 3, 1, "", "allow_repeated_recommendations"], [181, 3, 1, "", "compatibility"], [181, 2, 1, "", "recommend"]], "baybe.searchspace": [[183, 0, 0, "-", "continuous"], [185, 0, 0, "-", "core"], [190, 0, 0, "-", "discrete"], [196, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[184, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[184, 2, 1, "", "__init__"], [184, 5, 1, "", "comp_rep_bounds"], [184, 5, 1, "", "comp_rep_columns"], [184, 5, 1, "", "constraints_cardinality"], [184, 3, 1, "", "constraints_lin_eq"], [184, 3, 1, "", "constraints_lin_ineq"], [184, 3, 1, "", "constraints_nonlin"], [184, 2, 1, "", "empty"], [184, 2, 1, "", "from_bounds"], [184, 2, 1, "", "from_dataframe"], [184, 2, 1, "", "from_dict"], [184, 2, 1, "", "from_json"], [184, 2, 1, "", "from_parameter"], [184, 2, 1, "", "from_product"], [184, 5, 1, "", "full_factorial"], [184, 2, 1, "", "get_parameters_by_name"], [184, 5, 1, "", "is_empty"], [184, 5, 1, "", "parameter_names"], [184, 3, 1, "", "parameters"], [184, 2, 1, "", "sample_from_full_factorial"], [184, 2, 1, "", "sample_uniform"], [184, 2, 1, "", "samples_full_factorial"], [184, 2, 1, "", "samples_random"], [184, 2, 1, "", "to_dict"], [184, 2, 1, "", "to_json"], [184, 2, 1, "", "to_searchspace"], [184, 2, 1, "", "transform"]], "baybe.searchspace.core": [[186, 1, 1, "", "SearchSpace"], [187, 1, 1, "", "SearchSpaceType"], [188, 4, 1, "", "to_searchspace"], [189, 4, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[186, 2, 1, "", "__init__"], [186, 5, 1, "", "comp_rep_bounds"], [186, 5, 1, "", "comp_rep_columns"], [186, 5, 1, "", "constraints"], [186, 5, 1, "", "constraints_augmentable"], [186, 5, 1, "", "contains_mordred"], [186, 5, 1, "", "contains_rdkit"], [186, 3, 1, "", "continuous"], [186, 3, 1, "", "discrete"], [186, 2, 1, "", "estimate_product_space_size"], [186, 2, 1, "", "from_dataframe"], [186, 2, 1, "", "from_dict"], [186, 2, 1, "", "from_json"], [186, 2, 1, "", "from_parameter"], [186, 2, 1, "", "from_product"], [186, 2, 1, "", "get_comp_rep_parameter_indices"], [186, 2, 1, "", "get_parameters_by_name"], [186, 5, 1, "", "n_tasks"], [186, 5, 1, "", "parameter_names"], [186, 5, 1, "", "parameters"], [186, 5, 1, "", "task_idx"], [186, 2, 1, "", "to_dict"], [186, 2, 1, "", "to_json"], [186, 2, 1, "", "transform"], [186, 5, 1, "", "type"]], "baybe.searchspace.core.SearchSpaceType": [[187, 3, 1, "", "CONTINUOUS"], [187, 3, 1, "", "DISCRETE"], [187, 3, 1, "", "EITHER"], [187, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[191, 1, 1, "", "MemorySize"], [192, 1, 1, "", "SubspaceDiscrete"], [193, 4, 1, "", "parameter_cartesian_prod_pandas"], [194, 4, 1, "", "parameter_cartesian_prod_polars"], [195, 4, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[191, 2, 1, "", "__init__"], [191, 3, 1, "", "comp_rep_bytes"], [191, 5, 1, "", "comp_rep_human_readable"], [191, 3, 1, "", "comp_rep_shape"], [191, 3, 1, "", "exp_rep_bytes"], [191, 5, 1, "", "exp_rep_human_readable"], [191, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[192, 2, 1, "", "__init__"], [192, 3, 1, "", "comp_rep"], [192, 5, 1, "", "comp_rep_bounds"], [192, 5, 1, "", "comp_rep_columns"], [192, 3, 1, "", "constraints"], [192, 2, 1, "", "empty"], [192, 3, 1, "", "empty_encoding"], [192, 2, 1, "", "estimate_product_space_size"], [192, 3, 1, "", "exp_rep"], [192, 2, 1, "", "from_dataframe"], [192, 2, 1, "", "from_dict"], [192, 2, 1, "", "from_json"], [192, 2, 1, "", "from_parameter"], [192, 2, 1, "", "from_product"], [192, 2, 1, "", "from_simplex"], [192, 2, 1, "", "get_candidates"], [192, 2, 1, "", "get_parameters_by_name"], [192, 5, 1, "", "is_empty"], [192, 2, 1, "", "mark_as_measured"], [192, 3, 1, "", "metadata"], [192, 5, 1, "", "parameter_names"], [192, 3, 1, "", "parameters"], [192, 2, 1, "", "to_dict"], [192, 2, 1, "", "to_json"], [192, 2, 1, "", "to_searchspace"], [192, 2, 1, "", "transform"]], "baybe.searchspace.validation": [[197, 4, 1, "", "get_transform_parameters"], [198, 4, 1, "", "validate_parameter_names"], [199, 4, 1, "", "validate_parameters"]], "baybe.serialization": [[201, 0, 0, "-", "core"], [208, 0, 0, "-", "mixin"], [210, 0, 0, "-", "utils"]], "baybe.serialization.core": [[202, 4, 1, "", "block_deserialization_hook"], [203, 4, 1, "", "block_serialization_hook"], [204, 7, 1, "", "converter"], [205, 4, 1, "", "get_base_structure_hook"], [206, 4, 1, "", "select_constructor_hook"], [207, 4, 1, "", "unstructure_base"]], "baybe.serialization.mixin": [[209, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[209, 2, 1, "", "from_dict"], [209, 2, 1, "", "from_json"], [209, 2, 1, "", "to_dict"], [209, 2, 1, "", "to_json"]], "baybe.serialization.utils": [[211, 4, 1, "", "deserialize_dataframe"], [212, 4, 1, "", "serialize_dataframe"]], "baybe.simulation": [[214, 0, 0, "-", "core"], [216, 0, 0, "-", "lookup"], [218, 0, 0, "-", "scenarios"], [220, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[215, 4, 1, "", "simulate_experiment"]], "baybe.simulation.lookup": [[217, 4, 1, "", "look_up_targets"]], "baybe.simulation.scenarios": [[219, 4, 1, "", "simulate_scenarios"]], "baybe.simulation.transfer_learning": [[221, 4, 1, "", "simulate_transfer_learning"]], "baybe.surrogates": [[223, 0, 0, "-", "bandit"], [225, 0, 0, "-", "base"], [229, 0, 0, "-", "custom"], [232, 0, 0, "-", "gaussian_process"], [247, 0, 0, "-", "linear"], [249, 0, 0, "-", "naive"], [251, 0, 0, "-", "ngboost"], [253, 0, 0, "-", "random_forest"], [255, 0, 0, "-", "utils"], [259, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[224, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[224, 2, 1, "", "__init__"], [224, 2, 1, "", "fit"], [224, 2, 1, "", "from_dict"], [224, 2, 1, "", "from_json"], [224, 2, 1, "", "posterior"], [224, 2, 1, "", "posterior_means"], [224, 2, 1, "", "posterior_modes"], [224, 3, 1, "", "prior"], [224, 3, 1, "", "supports_transfer_learning"], [224, 2, 1, "", "to_botorch"], [224, 2, 1, "", "to_dict"], [224, 2, 1, "", "to_json"]], "baybe.surrogates.base": [[226, 1, 1, "", "IndependentGaussianSurrogate"], [227, 1, 1, "", "Surrogate"], [228, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[226, 2, 1, "", "__init__"], [226, 2, 1, "", "fit"], [226, 2, 1, "", "from_dict"], [226, 2, 1, "", "from_json"], [226, 2, 1, "", "posterior"], [226, 3, 1, "", "supports_transfer_learning"], [226, 2, 1, "", "to_botorch"], [226, 2, 1, "", "to_dict"], [226, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate": [[227, 2, 1, "", "__init__"], [227, 2, 1, "", "fit"], [227, 2, 1, "", "from_dict"], [227, 2, 1, "", "from_json"], [227, 2, 1, "", "posterior"], [227, 3, 1, "", "supports_transfer_learning"], [227, 2, 1, "", "to_botorch"], [227, 2, 1, "", "to_dict"], [227, 2, 1, "", "to_json"]], "baybe.surrogates.base.SurrogateProtocol": [[228, 2, 1, "", "__init__"], [228, 2, 1, "", "fit"], [228, 2, 1, "", "to_botorch"]], "baybe.surrogates.custom": [[230, 1, 1, "", "CustomONNXSurrogate"], [231, 4, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[230, 2, 1, "", "__init__"], [230, 2, 1, "", "default_model"], [230, 2, 1, "", "fit"], [230, 2, 1, "", "from_dict"], [230, 2, 1, "", "from_json"], [230, 3, 1, "", "onnx_input_name"], [230, 3, 1, "", "onnx_str"], [230, 2, 1, "", "posterior"], [230, 3, 1, "", "supports_transfer_learning"], [230, 2, 1, "", "to_botorch"], [230, 2, 1, "", "to_dict"], [230, 2, 1, "", "to_json"], [230, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.gaussian_process": [[233, 0, 0, "-", "core"], [235, 0, 0, "-", "kernel_factory"], [239, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[234, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[234, 2, 1, "", "__init__"], [234, 2, 1, "", "fit"], [234, 2, 1, "", "from_dict"], [234, 2, 1, "", "from_json"], [234, 2, 1, "", "from_preset"], [234, 3, 1, "", "kernel_factory"], [234, 2, 1, "", "posterior"], [234, 3, 1, "", "supports_transfer_learning"], [234, 2, 1, "", "to_botorch"], [234, 2, 1, "", "to_dict"], [234, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory": [[236, 1, 1, "", "KernelFactory"], [237, 1, 1, "", "PlainKernelFactory"], [238, 4, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[236, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[237, 2, 1, "", "__init__"], [237, 2, 1, "", "from_dict"], [237, 2, 1, "", "from_json"], [237, 3, 1, "", "kernel"], [237, 2, 1, "", "to_dict"], [237, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.presets": [[240, 0, 0, "-", "core"], [243, 0, 0, "-", "default"], [245, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[241, 1, 1, "", "GaussianProcessPreset"], [242, 4, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[241, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[244, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[244, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[246, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[246, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[248, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[248, 2, 1, "", "__init__"], [248, 2, 1, "", "fit"], [248, 2, 1, "", "from_dict"], [248, 2, 1, "", "from_json"], [248, 3, 1, "", "model_params"], [248, 2, 1, "", "posterior"], [248, 3, 1, "", "supports_transfer_learning"], [248, 2, 1, "", "to_botorch"], [248, 2, 1, "", "to_dict"], [248, 2, 1, "", "to_json"]], "baybe.surrogates.naive": [[250, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[250, 2, 1, "", "__init__"], [250, 2, 1, "", "fit"], [250, 2, 1, "", "from_dict"], [250, 2, 1, "", "from_json"], [250, 2, 1, "", "posterior"], [250, 3, 1, "", "supports_transfer_learning"], [250, 2, 1, "", "to_botorch"], [250, 2, 1, "", "to_dict"], [250, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost": [[252, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[252, 2, 1, "", "__init__"], [252, 2, 1, "", "fit"], [252, 2, 1, "", "from_dict"], [252, 2, 1, "", "from_json"], [252, 3, 1, "", "model_params"], [252, 2, 1, "", "posterior"], [252, 3, 1, "", "supports_transfer_learning"], [252, 2, 1, "", "to_botorch"], [252, 2, 1, "", "to_dict"], [252, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest": [[254, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[254, 2, 1, "", "__init__"], [254, 2, 1, "", "fit"], [254, 2, 1, "", "from_dict"], [254, 2, 1, "", "from_json"], [254, 3, 1, "", "model_params"], [254, 2, 1, "", "posterior"], [254, 3, 1, "", "supports_transfer_learning"], [254, 2, 1, "", "to_botorch"], [254, 2, 1, "", "to_dict"], [254, 2, 1, "", "to_json"]], "baybe.surrogates.utils": [[256, 4, 1, "", "batchify_ensemble_predictor"], [257, 4, 1, "", "batchify_mean_var_prediction"], [258, 4, 1, "", "catch_constant_targets"]], "baybe.surrogates.validation": [[260, 4, 1, "", "get_model_params_validator"], [261, 4, 1, "", "validate_custom_architecture_cls"]], "baybe.targets": [[263, 0, 0, "-", "base"], [265, 0, 0, "-", "binary"], [268, 0, 0, "-", "enum"], [271, 0, 0, "-", "numerical"], [273, 0, 0, "-", "transforms"]], "baybe.targets.base": [[264, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[264, 2, 1, "", "__init__"], [264, 2, 1, "", "from_dict"], [264, 2, 1, "", "from_json"], [264, 3, 1, "", "name"], [264, 2, 1, "", "summary"], [264, 2, 1, "", "to_dict"], [264, 2, 1, "", "to_json"], [264, 2, 1, "", "to_objective"], [264, 2, 1, "", "transform"]], "baybe.targets.binary": [[266, 1, 1, "", "BinaryTarget"], [267, 7, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[266, 2, 1, "", "__init__"], [266, 3, 1, "", "failure_value"], [266, 2, 1, "", "from_dict"], [266, 2, 1, "", "from_json"], [266, 3, 1, "", "name"], [266, 3, 1, "", "success_value"], [266, 2, 1, "", "summary"], [266, 2, 1, "", "to_dict"], [266, 2, 1, "", "to_json"], [266, 2, 1, "", "to_objective"], [266, 2, 1, "", "transform"]], "baybe.targets.enum": [[269, 1, 1, "", "TargetMode"], [270, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[269, 3, 1, "", "MATCH"], [269, 3, 1, "", "MAX"], [269, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[270, 3, 1, "", "BELL"], [270, 3, 1, "", "LINEAR"], [270, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[272, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[272, 2, 1, "", "__init__"], [272, 3, 1, "", "bounds"], [272, 2, 1, "", "from_dict"], [272, 2, 1, "", "from_json"], [272, 3, 1, "", "mode"], [272, 3, 1, "", "name"], [272, 2, 1, "", "summary"], [272, 2, 1, "", "to_dict"], [272, 2, 1, "", "to_json"], [272, 2, 1, "", "to_objective"], [272, 2, 1, "", "transform"], [272, 3, 1, "", "transformation"]], "baybe.targets.transforms": [[274, 4, 1, "", "bell_transform"], [275, 4, 1, "", "linear_transform"], [276, 4, 1, "", "triangular_transform"]], "baybe.telemetry": [[278, 4, 1, "", "get_user_details"], [279, 4, 1, "", "is_enabled"], [280, 4, 1, "", "telemetry_record_recommended_measurement_percentage"], [281, 4, 1, "", "telemetry_record_value"]], "baybe.utils": [[283, 0, 0, "-", "augmentation"], [286, 0, 0, "-", "basic"], [298, 0, 0, "-", "boolean"], [302, 0, 0, "-", "botorch_wrapper"], [304, 0, 0, "-", "chemistry"], [312, 0, 0, "-", "conversion"], [315, 0, 0, "-", "dataframe"], [325, 0, 0, "-", "interval"], [330, 0, 0, "-", "memory"], [332, 0, 0, "-", "numerical"], [339, 0, 0, "-", "plotting"], [343, 0, 0, "-", "random"], [346, 0, 0, "-", "sampling_algorithms"], [350, 0, 0, "-", "scaling"], [352, 0, 0, "-", "torch"], [355, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[284, 4, 1, "", "df_apply_dependency_augmentation"], [285, 4, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.basic": [[287, 1, 1, "", "Dummy"], [288, 1, 1, "", "classproperty"], [289, 4, 1, "", "find_subclass"], [290, 4, 1, "", "get_baseclasses"], [291, 4, 1, "", "get_subclasses"], [292, 4, 1, "", "group_duplicate_values"], [293, 4, 1, "", "hilberts_factory"], [294, 4, 1, "", "match_attributes"], [295, 4, 1, "", "refers_to"], [296, 4, 1, "", "register_hooks"], [297, 4, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[287, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[288, 2, 1, "", "__init__"]], "baybe.utils.boolean": [[299, 4, 1, "", "check_if_in"], [300, 4, 1, "", "is_abstract"], [301, 4, 1, "", "strtobool"]], "baybe.utils.botorch_wrapper": [[303, 4, 1, "", "botorch_function_wrapper"]], "baybe.utils.chemistry": [[305, 4, 1, "", "get_canonical_smiles"], [306, 4, 1, "", "is_valid_smiles"], [307, 4, 1, "", "name_to_smiles"], [308, 4, 1, "", "smiles_to_fp_features"], [309, 4, 1, "", "smiles_to_molecules"], [310, 4, 1, "", "smiles_to_mordred_features"], [311, 4, 1, "", "smiles_to_rdkit_features"]], "baybe.utils.conversion": [[313, 4, 1, "", "fraction_to_float"], [314, 4, 1, "", "nonstring_to_tuple"]], "baybe.utils.dataframe": [[316, 4, 1, "", "add_fake_measurements"], [317, 4, 1, "", "add_parameter_noise"], [318, 4, 1, "", "df_drop_single_value_columns"], [319, 4, 1, "", "df_drop_string_columns"], [320, 4, 1, "", "df_uncorrelated_features"], [321, 4, 1, "", "fuzzy_row_match"], [322, 4, 1, "", "get_transform_objects"], [323, 4, 1, "", "pretty_print_df"], [324, 4, 1, "", "to_tensor"]], "baybe.utils.interval": [[326, 6, 1, "", "InfiniteIntervalError"], [327, 1, 1, "", "Interval"], [328, 4, 1, "", "convert_bounds"], [329, 4, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[326, 2, 1, "", "__init__"], [326, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[327, 2, 1, "", "__init__"], [327, 5, 1, "", "center"], [327, 2, 1, "", "contains"], [327, 2, 1, "", "create"], [327, 2, 1, "", "from_dict"], [327, 2, 1, "", "from_json"], [327, 5, 1, "", "is_bounded"], [327, 5, 1, "", "is_degenerate"], [327, 5, 1, "", "is_fully_unbounded"], [327, 5, 1, "", "is_half_bounded"], [327, 5, 1, "", "is_left_bounded"], [327, 5, 1, "", "is_right_bounded"], [327, 3, 1, "", "lower"], [327, 2, 1, "", "to_dict"], [327, 2, 1, "", "to_json"], [327, 2, 1, "", "to_ndarray"], [327, 2, 1, "", "to_tensor"], [327, 2, 1, "", "to_tuple"], [327, 3, 1, "", "upper"]], "baybe.utils.memory": [[331, 4, 1, "", "bytes_to_human_readable"]], "baybe.utils.numerical": [[333, 3, 1, "", "DTypeFloatNumpy"], [334, 3, 1, "", "DTypeFloatONNX"], [335, 7, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [336, 4, 1, "", "closer_element"], [337, 4, 1, "", "closest_element"], [338, 4, 1, "", "geom_mean"]], "baybe.utils.plotting": [[340, 4, 1, "", "create_example_plots"], [341, 4, 1, "", "indent"], [342, 4, 1, "", "to_string"]], "baybe.utils.random": [[344, 4, 1, "", "set_random_seed"], [345, 4, 1, "", "temporary_seed"]], "baybe.utils.sampling_algorithms": [[347, 1, 1, "", "DiscreteSamplingMethod"], [348, 4, 1, "", "farthest_point_sampling"], [349, 4, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[347, 3, 1, "", "FPS"], [347, 3, 1, "", "Random"]], "baybe.utils.scaling": [[351, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[351, 2, 1, "", "__init__"], [351, 2, 1, "", "fit"], [351, 3, 1, "", "mapping"], [351, 2, 1, "", "transform"]], "baybe.utils.torch": [[353, 7, 1, "", "DTypeFloatTorch"], [354, 7, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[356, 4, 1, "", "finite_float"], [357, 4, 1, "", "non_inf_float"], [358, 4, 1, "", "non_nan_float"], [359, 4, 1, "", "validate_not_nan"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception", "7": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 168, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 293, 324, 327, 360, 364, 373, 377, 381, 382, 385, 386, 387, 388, 389, 392, 396, 400, 401, 402, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423], "0": [8, 18, 30, 40, 41, 47, 84, 119, 127, 130, 148, 168, 192, 215, 217, 274, 275, 276, 284, 285, 301, 317, 320, 334, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 388, 390, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 409, 410, 413, 415, 416, 418, 419, 422, 425], "00": [395, 418], "000": [377, 378, 397], "001": 413, "0015224920000491693": 381, "001963": 393, "005": [363, 364, 366, 369, 370, 378], "005890": 369, "01": [148, 361, 362, 365, 367, 372, 373, 379, 382, 394, 395, 402], "018915": 390, "02": [364, 402], "020": 378, "021": [246, 320], "030640": 395, "03213": [246, 320], "042071": 370, "05": 402, "053253": 394, "057": [363, 364, 366, 369, 370, 381], "06": [192, 258], "063682": 395, "07": 379, "078": 379, "08": 402, "080762": 393, "091": 378, "09653736976391157": 388, "098614": 395, "099388": 390, "0f": 382, "0min": [364, 378, 386, 398], "1": [22, 27, 40, 84, 105, 119, 130, 156, 158, 168, 184, 215, 217, 219, 221, 274, 275, 276, 281, 284, 285, 292, 301, 317, 334, 338, 348, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 388, 390, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 405, 409, 412, 413, 415, 416, 418, 419, 420, 422, 425], "10": [168, 217, 246, 320, 361, 362, 364, 367, 375, 376, 377, 379, 382, 385, 386, 388, 390, 397, 398, 399, 401, 402, 404, 411, 416, 425], "100": [367, 370, 375, 376, 377, 378, 379, 382, 385, 386, 390, 397, 402, 415, 416, 422, 425], "102": 394, "1024": [308, 416], "1038": [246, 320], "104": 390, "105": [363, 364, 366, 369, 370, 381, 390, 418], "109485": 390, "11": [288, 364, 405], "111": [395, 397], "1147": 377, "1148": 377, "1149": 377, "1150": 377, "12": [378, 394, 395, 407, 418], "120": [363, 364, 366, 369, 370, 375, 377, 381, 416], "120000": 394, "126": 405, "1268824": [363, 364, 366], "128": 10, "13": [401, 418], "1337": [382, 383, 425], "138842": 390, "14": 418, "140": 395, "14448993259018328": 388, "145120": 390, "1454": 406, "15": [217, 361, 369, 370, 377, 378, 401, 402, 404, 412, 418], "150": [375, 379, 413], "1500": 416, "151": [377, 390], "153": [363, 364, 366, 369, 370, 381], "153726": 393, "16": [323, 334, 367, 395, 398], "167916": 390, "177": 397, "18": [378, 390, 412], "180": 375, "188": 397, "188539": 392, "191": 370, "192": 377, "1e": [192, 258], "2": [8, 18, 84, 86, 105, 217, 284, 285, 292, 316, 338, 348, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 377, 378, 379, 382, 383, 385, 386, 388, 390, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 409, 412, 413, 415, 416, 418, 419, 420, 422], "20": [130, 217, 363, 364, 366, 367, 382, 383, 390, 406, 416, 423, 425], "200": [364, 375, 377, 385, 386, 388, 397], "2004": 409, "2007": 423, "201": 394, "2021": 364, "2022": 404, "2024": 404, "208": 370, "21": 385, "22": 390, "220": 390, "221": 406, "234": 390, "238685": 390, "24": [362, 365, 376, 418], "241": 416, "242": 394, "245": 390, "25": [378, 382, 401, 418], "250": 410, "26": [370, 395, 418], "269973": 393, "27": 418, "277": 390, "278": 390, "279": 390, "280": 390, "287": 370, "29": 404, "2d": 416, "3": [217, 284, 285, 288, 292, 323, 341, 361, 362, 363, 364, 365, 366, 367, 370, 373, 375, 376, 377, 378, 379, 381, 383, 386, 388, 390, 392, 393, 394, 395, 397, 398, 401, 402, 404, 405, 407, 409, 412, 413, 416, 418, 419, 422, 423], "30": [361, 367, 369, 379, 383, 416], "3078f3": 406, "31": [367, 375, 378], "32": [376, 378, 398, 416], "327618": 370, "33": [376, 378, 390, 394], "330457": 390, "34": [376, 378], "349506": 369, "35": [364, 376], "352501": 393, "36": [378, 390], "362": 369, "368": 369, "375147": 390, "376076": 394, "382768": 370, "39": 416, "3d": 383, "4": [284, 285, 308, 323, 361, 362, 364, 365, 367, 372, 373, 375, 376, 377, 378, 379, 383, 388, 390, 392, 393, 394, 395, 404, 409, 412, 413, 416, 418], "40": [390, 415, 416], "41": 390, "411495": 392, "412": 379, "42": [377, 388, 390], "43": 390, "431395": 395, "443588": 395, "447": 375, "448": 375, "449": 375, "45": [390, 422], "450": 375, "464243": 390, "478926": 390, "485901": 392, "494885": 392, "5": [84, 130, 284, 285, 362, 363, 365, 366, 367, 372, 375, 376, 377, 378, 379, 382, 385, 386, 390, 393, 394, 395, 397, 398, 399, 401, 402, 404, 409, 410, 411, 412, 413, 416, 418, 423, 425], "50": [378, 379, 386, 388, 401, 402, 409, 410, 416, 418, 422], "500": [383, 416], "502140": 393, "504634": 395, "506166": 390, "5066666666666667": 388, "51": 390, "511": 367, "512063": 390, "512531": 392, "520595": 390, "523505": 390, "53": [390, 392], "5313": 297, "536009": 390, "537945": 395, "54": [390, 404], "542629": 390, "544589": 390, "547693": 392, "55": [390, 422], "56": 390, "577069": 395, "59": [375, 377, 379, 404], "590": 364, "6": [284, 285, 323, 363, 364, 365, 366, 375, 376, 377, 378, 379, 388, 390, 395, 397, 409, 413, 418], "60": [390, 415], "62": 388, "64": 168, "644457": 392, "65": 388, "650726": 390, "654005": 390, "662233": 392, "66368270ffd51418ec58bd793f2d9b1b": 423, "67": 392, "672965": 390, "675341": 393, "675672": 392, "676476": 390, "68": 390, "685211": 392, "686437": 390, "687852": 393, "69": [363, 364, 366], "7": [130, 284, 285, 320, 376, 379, 383, 390, 401, 409, 416, 418], "702144": 390, "706667": 394, "71": [390, 416], "720908": 395, "726510": 390, "727160": 390, "731235": 392, "732100": 390, "739207": 390, "745": 425, "75": [378, 390, 418], "752329": 392, "753797": 390, "761932": 392, "778": 397, "79": 404, "7gz": 416, "7hf": 416, "8": [285, 362, 363, 365, 366, 375, 377, 379, 388, 390, 393, 404, 409, 413], "80": 413, "83": 390, "8389": 297, "8417": 297, "844802": 390, "846507": 392, "85": [390, 397], "857": 377, "861": 379, "862": 379, "863": 379, "864": 379, "87": 397, "871282": 395, "879581": 393, "879883": 390, "88": 397, "8859": 385, "889": 397, "89": [364, 390, 394, 397], "890808": 392, "8jq": 416, "9": [375, 377, 379, 383, 390, 409, 412, 418, 419], "90": [363, 364, 366, 369, 370, 381, 397, 418], "910556": 393, "917804": 390, "919405": 393, "921691": 393, "93": 390, "935624": 390, "938860": 393, "946340": 390, "95": [390, 392], "959824": 395, "96": 364, "975988": 395, "984633": 390, "986956": 390, "993438": 393, "993959": 393, "999": 413, "A": [0, 8, 18, 22, 34, 36, 37, 38, 40, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 64, 66, 67, 68, 69, 72, 74, 76, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 102, 104, 105, 109, 113, 116, 117, 119, 127, 130, 132, 141, 142, 143, 144, 145, 146, 147, 148, 151, 156, 157, 158, 160, 163, 166, 168, 170, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 193, 194, 209, 210, 215, 217, 219, 221, 224, 226, 227, 230, 234, 236, 237, 244, 246, 248, 250, 252, 254, 260, 264, 266, 272, 274, 275, 276, 284, 288, 290, 291, 292, 294, 302, 303, 316, 320, 322, 331, 338, 346, 348, 351, 376, 386, 388, 390, 398, 399, 405, 406, 407, 409, 413, 416, 417, 418, 419, 420, 422, 423], "AND": [50, 377, 409, 413], "AS": [404, 409], "And": 385, "As": [362, 363, 364, 366, 383, 388, 390, 401, 402, 404, 405, 406, 413, 417, 418, 420], "At": 422, "But": 422, "By": [104, 117, 132, 192, 300, 407, 414, 417, 418], "FOR": 409, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 138, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 215, 221, 224, 226, 227, 228, 230, 234, 237, 244, 246, 248, 250, 252, 254, 264, 266, 272, 277, 296, 321, 327, 340, 351, 361, 362, 363, 364, 365, 366, 367, 369, 370, 376, 381, 382, 383, 388, 390, 393, 395, 401, 402, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425], "If": [6, 13, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 99, 104, 105, 109, 132, 136, 137, 156, 157, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 198, 199, 215, 217, 219, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 275, 280, 285, 290, 291, 294, 296, 299, 301, 309, 310, 311, 313, 316, 317, 320, 321, 322, 340, 342, 348, 349, 370, 372, 382, 394, 395, 398, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 421, 422, 423, 425], "In": [27, 41, 53, 154, 156, 157, 158, 168, 186, 213, 215, 294, 323, 362, 363, 364, 366, 367, 369, 382, 383, 385, 388, 390, 393, 394, 395, 398, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425], "It": [22, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 213, 229, 250, 316, 363, 367, 369, 370, 376, 386, 388, 390, 393, 394, 395, 397, 398, 399, 401, 404, 411, 412, 413, 414, 416, 417, 418, 420, 425], "Its": [217, 385], "No": [378, 406], "Not": [409, 413], "OF": [404, 409], "OR": [404, 409], "Of": [370, 380, 403, 419], "On": [385, 388], "One": [121, 363, 366, 404], "Or": 414, "Such": [370, 413, 420], "That": [186, 217, 224, 226, 227, 230, 234, 248, 250, 252, 254, 275, 362, 370, 375, 393, 407, 418, 420, 423], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 105, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 138, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 204, 205, 207, 209, 213, 215, 217, 219, 224, 226, 227, 228, 230, 234, 237, 248, 250, 252, 254, 256, 258, 260, 261, 264, 266, 269, 272, 274, 275, 276, 278, 280, 281, 284, 285, 288, 290, 291, 292, 294, 296, 299, 300, 301, 303, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 331, 336, 337, 338, 340, 342, 344, 345, 348, 349, 362, 363, 364, 365, 366, 367, 370, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 390, 393, 394, 395, 399, 401, 402, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 421, 422, 424, 425], "Their": 370, "Then": 383, "There": [71, 258, 334, 404, 405, 407, 411, 418], "These": [278, 360, 362, 364, 365, 366, 367, 368, 371, 374, 380, 384, 387, 389, 391, 393, 396, 400, 407, 411, 413, 414, 416, 418], "To": [362, 363, 370, 382, 383, 388, 397, 401, 402, 404, 405, 407, 411, 412, 414, 416, 420], "Will": 410, "With": [316, 382, 383, 388, 401, 402, 404, 411, 413, 416, 419], "_": [136, 137, 189, 195, 202, 340, 382, 402], "________________________________________________________________________________": [364, 378, 386, 398], "_______________________________________smiles_to_mordred_featur": [364, 378, 386, 398], "__class__": [381, 388], "__excepthook__": 405, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 224, 226, 227, 228, 230, 234, 236, 237, 244, 246, 248, 250, 252, 254, 264, 266, 272, 287, 288, 326, 327, 351, 418, 419], "__name__": [381, 388], "__new__": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 121, 122, 124, 326], "__str__": 406, "__version__": 406, "_c": 291, "_cumbest": 215, "_default_my_attribut": 407, "_fit": 261, "_iterbest": 215, "_measur": 215, "_n_last_measur": 156, "_nbase": [308, 310, 311], "_nestedsequ": [105, 274, 275, 276, 337], "_no_tl": 401, "_option": 406, "_posterior": 261, "_smiles_to_mordred_featur": [364, 378, 386, 398], "_step": 156, "_supportsarrai": [105, 274, 275, 276, 337], "_surrogate_model": [382, 383], "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 197, 205, 206, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 292, 293, 314, 322, 327], "_target": 406, "_tparamet": 132, "_tsurrog": 257, "_u": 292, "_validate_my_attribut": 407, "a1": 285, "a2": 285, "ab": [378, 379], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 289, 295, 406, 424], "abc": [20, 30, 31, 32, 33, 34, 36, 79, 80, 81, 99, 113, 114, 140, 154, 163, 166, 173, 178, 226, 227, 264, 300], "abil": [410, 423], "abl": [383, 405, 411, 413, 416, 419, 425], "about": [22, 27, 114, 130, 264, 281, 363, 364, 366, 392, 393, 394, 395, 404, 406, 407, 416, 418], "abov": [258, 276, 300, 320, 370, 377, 379, 381, 382, 404, 407, 409, 410, 411, 412, 413, 414, 416, 419, 423], "absenc": 415, "absolut": [127, 317, 404], "abstract": [20, 30, 31, 32, 33, 34, 36, 79, 80, 81, 99, 112, 113, 114, 140, 154, 163, 166, 173, 227, 264, 290, 291, 300, 406, 413, 423], "abstractli": 388, "acceler": [404, 406, 408, 423], "accept": [27, 156, 234, 303, 321, 382, 383, 393, 406, 409, 415, 416, 420, 422], "access": [184, 192, 224, 226, 227, 230, 234, 248, 250, 252, 254, 363, 364, 366, 375, 381, 402, 406, 413, 419], "accord": [40, 152, 306, 410, 413, 414, 417, 425], "accordingli": [168, 412, 419], "account": 411, "accumul": [142, 388, 423], "accur": 412, "acet": [363, 364, 366, 369, 370], "achiev": [17, 192, 383, 388, 404, 407, 410, 412, 413], "ack": 404, "acq_funct": 370, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 382, 383, 388], "acqf1": 419, "acqf2": 419, "acqf_valu": 382, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 63, 68, 166, 168, 375, 376, 377, 378, 379, 382, 383, 388, 390, 397, 404, 406, 410, 417, 419, 421], "acquisition_funct": [166, 168, 362, 370, 388, 398, 399, 406], "acquisition_function_cl": [166, 168, 406], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 22, 24, 25, 166, 168, 388, 419], "across": [388, 401, 411, 417, 423], "act": [406, 409, 413], "action": [17, 381, 388, 406, 424], "activ": [13, 30, 117, 158, 382, 383, 388, 404, 405, 406, 407, 413, 414, 415, 417, 423, 424, 425], "active_dim": [79, 80, 81, 84, 86, 88, 89, 90], "active_valu": [117, 401, 402, 423], "actual": [156, 186, 213, 365, 378, 393, 394, 406, 418, 420, 423, 425], "ad": [27, 192, 280, 284, 316, 348, 407, 410, 414, 415, 416, 421, 422, 424], "adapt": [246, 301, 320], "add": [27, 207, 217, 316, 370, 385, 386, 390, 392, 393, 394, 395, 401, 404, 409, 411, 412, 413, 418, 423, 425], "add_collection3d": 383, "add_fake_measur": [369, 370, 375, 376, 377, 378, 379, 385, 386, 390, 406, 411, 425], "add_fake_result": 406, "add_measur": [27, 369, 370, 372, 373, 375, 376, 377, 378, 379, 383, 385, 386, 388, 390, 392, 393, 394, 395, 404, 406, 411, 412, 414], "add_parameter_nois": [406, 425], "add_subplot": 383, "addendum": 409, "addit": [27, 99, 104, 109, 156, 168, 186, 207, 215, 217, 219, 317, 362, 363, 364, 365, 366, 367, 370, 392, 393, 394, 395, 402, 404, 406, 408, 409, 412, 413, 414, 415, 416, 418, 419, 420, 423, 425], "addition": [381, 404], "additivekernel": 406, "adher": [406, 407], "adjust": [362, 364, 370, 394, 406], "adopt": 370, "adrian": [404, 408], "advanc": [388, 405, 406, 414, 419, 423, 424], "advantag": 407, "advic": 407, "advis": [409, 418, 420], "affect": [49, 168, 284, 381, 397, 405, 413], "affected_paramet": [49, 375, 376, 377, 378, 379, 413], "affili": [404, 414], "afford": 412, "aforement": 186, "after": [158, 192, 296, 369, 370, 375, 376, 377, 378, 379, 383, 390, 397, 404, 412, 419], "afterward": 419, "again": [382, 411, 413, 417, 423], "against": [75, 280, 294, 409, 423], "agraw": 408, "agre": [365, 404, 409], "agreement": 409, "ai": [77, 138, 334], "aim": 412, "akin": 411, "al": [364, 404, 416], "aldrich": 408, "alex": 408, "alexand": [404, 408], "algorithm": [161, 168, 316, 346, 348, 390, 404, 406, 411, 417], "alia": [129, 170], "alias": 406, "align": [184, 296, 382, 418, 423], "all": [19, 20, 29, 31, 36, 49, 51, 78, 79, 80, 81, 98, 99, 104, 111, 114, 117, 119, 123, 130, 139, 140, 150, 153, 154, 156, 162, 163, 165, 168, 172, 173, 186, 193, 194, 217, 224, 225, 227, 263, 264, 284, 294, 316, 363, 364, 366, 370, 372, 373, 375, 376, 381, 382, 383, 388, 390, 392, 394, 401, 402, 404, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425], "allclos": [372, 373], "alleg": 409, "allow": [17, 30, 40, 47, 51, 99, 104, 109, 127, 132, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 192, 219, 281, 299, 321, 322, 363, 364, 366, 370, 401, 402, 404, 406, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 425], "allow_extra": [99, 104, 109, 184, 186, 192, 197, 322, 390, 406], "allow_miss": [99, 104, 109, 184, 186, 192, 197, 322, 406], "allow_recommending_already_measur": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 192, 370, 382, 388, 398, 399, 406, 417], "allow_recommending_pending_experi": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 406, 411, 417], "allow_repeated_recommend": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 192, 370, 382, 388, 398, 399, 406, 417], "almost": 364, "alon": [406, 409], "along": [338, 409, 416, 423], "alongsid": 409, "alpha": [142, 383], "alphabet": [133, 406], "alreadi": [27, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 192, 370, 395, 404, 406, 410, 411, 417, 418, 421, 423, 425], "also": [53, 132, 224, 226, 227, 230, 234, 248, 250, 252, 254, 281, 294, 296, 316, 317, 362, 363, 372, 373, 378, 382, 383, 385, 386, 390, 392, 394, 395, 397, 401, 402, 404, 406, 407, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425], "alter": [406, 412], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 258, 338, 381, 404, 406, 424, 425], "although": [395, 398, 418, 420], "alwai": [13, 27, 36, 202, 203, 385, 404, 410, 412, 413, 420, 421, 423, 425], "ambigu": [127, 418], "amend": 413, "among": [30, 404, 423], "amount": [285, 341, 349, 393, 401, 402, 411, 416, 425], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 63, 65, 68, 73, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 100, 102, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 205, 207, 209, 213, 215, 217, 219, 224, 226, 227, 230, 231, 234, 237, 248, 250, 252, 254, 256, 257, 264, 266, 272, 284, 293, 294, 296, 299, 307, 314, 320, 321, 323, 326, 327, 328, 337, 340, 342, 348, 349, 363, 366, 368, 370, 377, 378, 379, 381, 382, 385, 386, 390, 392, 393, 394, 395, 397, 398, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423], "analog": [186, 316, 418, 419], "analogi": [152, 417], "analysi": 421, "analyt": [3, 4, 7, 8, 68, 360, 393, 403, 420, 423], "analyz": 407, "angl": 383, "ani": [57, 58, 105, 112, 113, 114, 116, 117, 119, 130, 132, 135, 136, 137, 186, 192, 202, 203, 207, 211, 212, 219, 248, 252, 254, 274, 275, 276, 281, 284, 294, 296, 297, 299, 300, 321, 327, 329, 337, 342, 356, 357, 358, 359, 381, 401, 402, 404, 405, 406, 407, 409, 411, 412, 414, 416, 419, 420, 423], "annot": [296, 381, 409], "anonym": [404, 414], "anoth": [49, 328, 364, 376, 377, 385, 386, 395, 407, 413, 423], "ansatz": 406, "answer": 412, "anymor": 423, "anyth": 301, "anywai": 421, "anywher": 372, "apach": [404, 409], "apart": [407, 412], "api": [41, 303, 404, 405, 419], "appar": 419, "appdata": 405, "appear": [294, 405, 406, 409, 419], "append": [372, 373, 383, 392, 393, 394, 395, 402], "appendix": 409, "appli": [27, 36, 37, 38, 53, 168, 186, 213, 215, 294, 307, 317, 351, 370, 371, 374, 375, 377, 378, 379, 381, 382, 383, 401, 402, 405, 406, 409, 413, 415, 417, 418, 419, 420, 421, 422, 423], "applic": [342, 404, 407, 409, 416, 417, 420], "approach": [192, 382, 388, 404, 407, 410, 412, 417, 419, 423], "appropri": [43, 44, 96, 192, 388, 407, 409], "approxim": [10, 17], "ar": [6, 12, 14, 27, 30, 34, 36, 37, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 62, 69, 70, 71, 99, 104, 105, 109, 117, 130, 132, 137, 151, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 215, 217, 219, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 276, 278, 280, 281, 284, 285, 290, 291, 292, 294, 296, 300, 301, 316, 318, 321, 322, 340, 348, 362, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 386, 388, 390, 392, 394, 397, 398, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425], "arang": [372, 383, 416], "arbitrari": [157, 186, 329, 393, 406, 413, 416, 417, 420, 423, 425], "arbitrarili": [415, 419], "architectur": [261, 406, 421, 423], "ard_num_dim": [79, 80, 81, 84, 86, 88, 89, 90], "area": 383, "arg": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 83, 85, 87, 92, 93, 94, 140, 142, 143, 144, 145, 146, 147, 148, 151, 170, 228, 231, 236, 326, 407], "argument": [76, 77, 132, 138, 154, 156, 157, 158, 184, 192, 228, 296, 370, 386, 390, 406, 413, 418, 419, 420, 423], "aris": [52, 409, 413, 419, 425], "arithmet": [107, 415], "arizona": 408, "arm": [223, 224, 403, 408], "arm_index": 388, "around": [177, 219, 221, 390, 406, 417, 419, 425], "arr": [274, 275, 276, 338], "arrai": [105, 274, 275, 276, 287, 324, 333, 337, 338, 348, 383, 406, 417, 421], "arriv": 404, "artifici": 425, "aryl": [363, 364, 366, 369, 404, 416], "ascend": 390, "ask": [404, 406, 407, 412], "aspect": [368, 372, 373, 392, 395, 411, 414], "assembl": 419, "assembli": 424, "assert": [58, 375, 376, 377, 378, 379, 385, 386, 397, 406, 409, 412, 413, 419], "assess": 420, "assign": [316, 382, 416], "associ": [186, 388, 409, 412, 414, 415, 423], "assum": [22, 41, 229, 296, 322, 361, 362, 363, 364, 365, 366, 367, 370, 372, 373, 375, 376, 377, 378, 379, 385, 386, 388, 390, 392, 393, 394, 395, 397, 404, 409, 413, 416, 419, 421, 422, 425], "assumpt": 420, "assur": 413, "asynchron": [404, 417, 424], "atol": [372, 373], "attach": [22, 296, 381, 382, 383, 409], "attempt": [67, 73, 229, 340, 388, 405, 406, 411, 413, 417], "attent": 158, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 224, 226, 227, 230, 234, 237, 244, 246, 248, 250, 252, 254, 264, 266, 272, 294, 297, 327, 351, 359, 406], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 75, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 107, 109, 112, 113, 114, 116, 117, 119, 121, 122, 124, 126, 127, 128, 130, 132, 135, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 187, 191, 192, 201, 205, 207, 224, 226, 227, 230, 234, 237, 241, 244, 246, 248, 250, 252, 254, 261, 264, 265, 266, 269, 270, 272, 294, 314, 322, 327, 332, 347, 351, 352, 355, 356, 357, 358, 359, 406, 407, 409, 417, 419, 421, 422], "audit": [404, 406, 407], "augment": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 186, 256, 257, 258, 406, 412], "author": 409, "authorship": 409, "auto": [12, 14, 406, 408], "auto_tutori": 334, "autodoc": 406, "automat": [27, 102, 168, 234, 321, 383, 394, 405, 406, 407, 415, 417, 418, 423, 424], "avail": [2, 107, 119, 121, 122, 124, 130, 154, 156, 157, 158, 192, 215, 217, 241, 269, 270, 281, 347, 348, 349, 365, 366, 369, 372, 373, 390, 392, 394, 395, 404, 405, 406, 407, 409, 411, 412, 416, 417, 418, 419, 420, 423, 424], "available_acq_funct": 370, "averag": [250, 382, 383, 402, 416, 420], "avoid": [186, 297, 338, 406, 407, 411, 412, 416, 418], "awai": 422, "awar": [401, 402, 410, 419], "ax": [340, 361, 364, 382, 383, 401, 402], "axes3d": [340, 383], "axi": [184, 215, 338, 378, 379, 382, 383, 388, 390, 401, 402, 418], "azim": 383, "azur": 406, "b": [52, 148, 246, 284, 292, 320, 364, 376, 386, 388, 398, 399, 404, 407, 409, 412, 416, 419], "b1": 285, "b2": 285, "back": [0, 397, 407], "backend": 281, "backport": 405, "backtest": [213, 214, 220, 363, 364, 366, 370, 382, 400, 403, 404, 406, 417, 420], "backtick": 407, "backward": [95, 101, 169, 170, 186, 406], "bad": [390, 412, 414, 422], "bad_interv": 316, "badg": 406, "bai": 404, "baird": 408, "balanc": [104, 388, 404], "banana": 407, "bandit": [224, 370, 403, 404, 406, 408], "banner": 406, "bar": [385, 386, 397, 398, 399, 404, 406, 421], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 107, 109, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 160, 163, 166, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 191, 192, 205, 207, 209, 224, 226, 227, 228, 229, 230, 234, 236, 237, 241, 244, 246, 248, 250, 252, 254, 258, 260, 264, 266, 269, 270, 272, 287, 288, 289, 290, 291, 327, 340, 347, 348, 351, 369, 370, 382, 383, 385, 388, 404, 406, 409, 410, 414, 416, 417, 419, 421], "base_data": 382, "base_kernel": [92, 93, 94], "base_nam": [340, 361, 364, 382, 383, 401, 402], "base_predictor": 256, "base_smil": 382, "baselin": [364, 401, 404, 416], "bashrc": 414, "basi": [88, 404, 409], "basic": [79, 83, 84, 85, 86, 87, 88, 89, 90, 142, 143, 144, 145, 146, 147, 148, 215, 287, 288, 361, 362, 363, 364, 365, 366, 367, 370, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 390, 392, 393, 394, 395, 396, 397, 400, 403, 406, 407, 415, 416, 420, 424], "basic_transfer_learn": 402, "basickernel": [83, 84, 85, 86, 87, 88, 89, 90, 406], "batch": [27, 151, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 218, 256, 257, 370, 375, 376, 377, 378, 379, 383, 390, 392, 393, 394, 395, 397, 401, 402, 406, 411, 417, 420], "batch_quant": 406, "batch_shap": [79, 80, 81, 84, 86, 88, 89, 90], "batch_siz": [27, 40, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 215, 219, 221, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 388, 390, 392, 393, 394, 395, 397, 398, 401, 402, 404, 406, 411, 412, 414, 420], "batchnr": 390, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 107, 109, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 187, 191, 192, 209, 224, 226, 227, 228, 230, 234, 236, 237, 241, 244, 246, 248, 250, 252, 254, 264, 266, 269, 270, 272, 287, 288, 327, 347, 351, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425], "baybe_cach": 414, "baybe_cache_dir": [406, 414], "baybe_deactivate_polar": 414, "baybe_debug_fake_hosthash": 406, "baybe_debug_fake_userhash": 406, "baybe_numpy_use_single_precis": [335, 406, 414], "baybe_telemetry_en": [404, 414], "baybe_telemetry_endpoint": [406, 414], "baybe_telemetry_host": 406, "baybe_telemetry_hostnam": [406, 414], "baybe_telemetry_usernam": [406, 414], "baybe_telemetry_vpn_check": [406, 414], "baybe_telemetry_vpn_check_timeout": [406, 414], "baybe_torch_use_single_precis": [354, 406, 414], "bayesian": [0, 160, 166, 168, 213, 215, 219, 221, 229, 248, 388, 406, 410, 412, 421, 424], "bayesian_recommend": 383, "bayesianlinearmodel": 386, "bayesianlinearsurrog": [370, 421], "bayesianrecommend": [160, 168, 229, 406, 417], "bayesianridg": 385, "bcw07": 423, "becaus": [71, 127, 186, 192, 221, 300, 381, 382, 402, 407, 410, 412, 413, 414, 415, 416, 419, 423], "becom": [186, 410, 412, 413, 419, 422, 425], "been": [22, 67, 68, 154, 156, 157, 158, 192, 224, 226, 227, 230, 234, 248, 250, 252, 254, 321, 363, 364, 370, 404, 405, 406, 409, 411, 417, 420, 423], "befor": [67, 158, 215, 224, 226, 227, 230, 234, 248, 250, 252, 254, 296, 366, 370, 376, 382, 404, 406, 407, 414, 416, 418, 420], "begin": [156, 375, 377, 397, 417], "behalf": 409, "behav": [383, 397, 419], "behavior": [168, 365, 406, 414, 415, 417, 418, 420, 423], "behind": [415, 419, 422], "being": [94, 316, 340, 388, 405, 413, 414, 416, 418], "bell": [270, 274, 390, 422], "belong": [381, 419], "below": [258, 276, 377, 381, 382, 407, 409, 410, 412, 413, 415, 419, 421, 422, 423], "benchmark": 404, "benefici": [409, 410, 414], "benefit": [413, 423], "benzo": 423, "bernoulli": [224, 387, 403, 408], "besid": [404, 415, 422], "best": [12, 14, 215, 217, 219, 366, 388, 404, 414, 417, 420], "bet": 412, "beta": [8, 18, 142, 224, 370, 406, 410], "betabernoullimultiarmedbanditsurrog": [370, 388, 406], "betaprior": [224, 406], "better": [10, 316, 364, 406, 412, 413, 416], "between": [30, 49, 127, 157, 184, 192, 244, 365, 381, 383, 388, 390, 395, 401, 402, 404, 406, 407, 411, 412, 413, 414, 416, 417, 418, 419, 422, 423], "beyond": 404, "bias": 416, "binar": 406, "binari": [266, 397, 405, 406, 419], "binarytarget": [267, 388, 406], "bind": [381, 383, 409], "bit": [308, 416], "black": [213, 420, 423], "blank": 407, "blob": 246, "block": [382, 404, 405, 406, 414, 419], "bodi": 381, "bonilla": 423, "bool": [6, 12, 14, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 99, 104, 105, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 197, 224, 226, 227, 230, 234, 248, 250, 252, 254, 266, 267, 274, 275, 276, 279, 280, 290, 291, 294, 295, 300, 301, 306, 310, 311, 321, 322, 327, 337, 342, 388], "boolean": [30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130, 322, 370, 414], "boost": [252, 402], "both": [10, 132, 186, 192, 221, 276, 296, 376, 382, 385, 388, 390, 401, 402, 404, 407, 410, 413, 416, 418, 419, 422, 425], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 41, 160, 168, 170, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 302, 303, 360, 362, 372, 373, 383, 391, 395, 401, 402, 403, 406, 414, 417], "botorch_acqf": [22, 382, 383], "botorch_analyt": 361, "botorch_function_wrapp": [361, 372, 373, 383, 392, 394, 395, 401, 402], "botorch_wrapp": [361, 372, 373, 383, 392, 394, 395, 401, 402], "botorchrecommend": [160, 170, 362, 365, 370, 375, 376, 377, 378, 379, 382, 383, 385, 386, 388, 390, 395, 397, 398, 399, 404, 406, 411, 412, 417], "bottom": 412, "bound": [8, 18, 30, 126, 132, 148, 184, 186, 192, 197, 257, 272, 273, 291, 296, 322, 327, 328, 361, 362, 365, 367, 370, 372, 373, 383, 390, 392, 393, 394, 395, 401, 402, 406, 416, 419, 422, 424, 425], "boundari": [192, 274, 275, 390], "boundary_onli": 192, "bounded": 406, "bounds_transform_func": 406, "box": [148, 213, 420, 423], "brain": [420, 423], "branch": [404, 407], "break": [229, 419], "brettpho": [363, 364, 366, 369, 370], "briefli": [420, 423], "bring": [404, 406], "bro": 246, "broad": 419, "brute": [168, 417], "bu": [363, 364, 366, 369, 370], "budget": 412, "bug": [406, 407], "build": [184, 192, 229, 382, 405, 406, 407, 413, 419, 423, 424, 425], "built": [192, 385, 404, 407, 412, 417], "builtin": 288, "bump": 406, "button": 406, "butyl": [363, 364, 366, 369, 370], "butylphenylphosphin": [363, 364, 366, 369, 370], "butyornitril": [363, 364, 366, 369, 370], "bypass": [132, 382], "byte": [105, 191, 230, 274, 275, 276, 331, 337, 406, 425], "c": [52, 284, 292, 363, 364, 366, 369, 370, 375, 376, 377, 378, 379, 386, 398, 399, 404, 405, 409, 412, 416, 419], "c1": [363, 364, 366, 369, 370, 375, 376, 377, 378, 379, 416], "c1c2": [363, 364, 366, 369, 370], "c1ccccc1": [363, 364, 366, 375, 377], "c1ccoc1": 413, "c2": [363, 364, 366, 369, 370, 375, 377, 378, 379], "c2ccccc2": [363, 364, 366], "c2oc": [363, 364, 366, 369, 370], "c2p": [363, 364, 366, 369, 370], "c3": [363, 364, 366, 369, 370, 375, 377, 378], "c3c": [363, 364, 366], "c3ccccc3": [363, 364, 366, 369, 370], "c4": [363, 364, 366, 375, 377], "c4ccccc": 364, "c4ccccc4": [363, 364, 366, 369, 370], "c5": [375, 377], "c6": [375, 377], "c_i": 413, "cach": [280, 406, 419, 424], "cached_recommend": 280, "calcul": [280, 338, 362, 365, 367, 372, 378, 383, 392, 393, 394, 395, 401, 414, 416, 418], "calibr": 423, "call": [41, 76, 154, 156, 157, 158, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 280, 281, 296, 362, 363, 364, 365, 366, 378, 381, 386, 398, 399, 404, 405, 406, 410, 412, 413, 414, 416, 419, 420, 423], "callabl": [48, 75, 132, 205, 213, 215, 217, 219, 221, 256, 257, 260, 261, 288, 293, 294, 296, 381, 406, 424], "callable_": 294, "callback": 420, "campaign": [215, 218, 219, 221, 316, 317, 368, 369, 377, 380, 383, 388, 399, 401, 402, 403, 404, 406, 410, 411, 413, 415, 416, 418, 419, 420, 421, 423, 424, 425], "campaign1": 420, "campaign2": 420, "campaign_json": 412, "campaign_oh": 364, "campaign_rand": [363, 364, 366], "campaign_recr": 397, "campaign_stop": 382, "campaign_with_hook": 382, "campaignstoppedexcept": 382, "can": [13, 17, 22, 30, 36, 37, 38, 52, 113, 119, 127, 130, 151, 160, 161, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 213, 217, 224, 226, 227, 228, 229, 230, 234, 248, 250, 252, 254, 258, 267, 279, 281, 294, 296, 300, 316, 317, 321, 334, 361, 362, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 381, 382, 383, 385, 386, 388, 390, 392, 393, 394, 395, 398, 401, 402, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425], "canada": 408, "candid": [12, 14, 27, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 192, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 382, 402, 406, 410, 411, 412, 417, 418], "candidates_comp_rep": 382, "cannot": [13, 74, 75, 229, 230, 258, 301, 340, 388, 406, 409, 411, 413, 414, 416, 417, 419, 421, 423], "canon": [305, 419], "capabl": [360, 387, 389, 396, 400, 402, 406, 412, 423], "captur": 416, "cardin": [30, 40, 47, 57, 58, 184, 406, 408], "cardinalityconstraint": [40, 47, 406], "care": [45, 407, 413, 415], "carefulli": 414, "carlo": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 68, 219, 361, 362, 364, 365, 366, 367, 382, 388, 401, 402, 411, 420], "carri": [296, 381, 409], "cartesian": [186, 192, 193, 194, 404, 406, 418], "case": [154, 156, 157, 158, 221, 258, 296, 316, 323, 362, 382, 394, 395, 398, 404, 405, 407, 410, 411, 412, 413, 414, 416, 419, 420, 422, 423, 425], "cast": [41, 406, 414], "cat_1": 390, "cat_1_22": 390, "cat_1_33": 390, "cat_2": 390, "catch_constant_target": 406, "categor": [27, 116, 117, 121, 192, 199, 321, 404, 406, 416, 418, 422], "categori": [364, 382, 404, 406, 419, 422], "categorical": [375, 376, 377, 379, 390, 397], "categorical_1": [390, 412], "categorical_2": [390, 412], "categorical_paramet": 419, "categorical_parameter_json": 419, "categorical_parameter_reconstruct": 419, "categoricalencod": [116, 117], "categoricalp": [375, 376, 377, 379, 390, 397], "categoricalparamet": [117, 192, 364, 375, 376, 377, 379, 386, 388, 390, 397, 398, 399, 404, 406, 418, 419, 424], "cattr": [204, 205, 207, 399, 405, 406, 407], "cauchi": 144, "caus": [127, 284, 288, 406, 409], "caution": 423, "cc": [363, 364, 366, 369, 370, 375, 377, 378, 379, 416, 423], "cc1": [363, 364, 366, 369, 370, 416], "ccc": [375, 377, 378, 386, 404], "cccc": [363, 364, 366, 369, 370, 375, 377], "ccccc": [375, 377, 398, 399], "cccccc": [375, 377], "cccccccco": [413, 416], "ccccoc": [363, 364, 366, 369, 370], "ccoccoccn": [398, 399], "cdot": [413, 415], "ceil": 382, "cell": [385, 416, 420, 423], "cell_lin": 423, "center": [274, 276, 327, 390, 412], "central": [406, 412], "certain": [49, 75, 158, 205, 207, 213, 281, 316, 341, 376, 382, 388, 404, 407, 413, 417, 418, 419, 423, 425], "cesium": [363, 364, 366, 369, 370], "ch": 341, "chai": 423, "chain": [34, 288, 413], "challeng": [407, 419], "chanc": 405, "chang": [49, 156, 316, 317, 370, 394, 404, 405, 407, 409, 412, 414, 418, 423], "charact": 409, "characterist": 288, "charg": 409, "check": [27, 112, 113, 114, 116, 117, 119, 126, 127, 130, 280, 295, 298, 299, 300, 301, 321, 327, 336, 394, 395, 397, 404, 406, 407, 414, 418, 419], "checker": 406, "checkout": 407, "chem": [404, 406, 416], "chemic": [124, 307, 309, 310, 311, 364, 369, 406, 408, 413, 416, 423], "cheminformat": [130, 404, 406], "chemistri": [119, 364, 378, 386, 398], "child": [175, 176, 177, 178, 407], "chocol": 407, "choic": [215, 217, 348, 381, 388, 395, 406, 413, 415, 416, 417, 418, 419, 420, 422], "choos": [152, 361, 388, 390, 392, 394, 395, 404, 409, 410, 412, 417, 420, 421, 422], "chose": [394, 419], "chosen": [65, 160, 215, 217, 221, 344, 345, 370, 378, 388, 406, 410, 413, 416, 418], "christoph": 423, "ci": [373, 401, 402, 406, 407], "circumv": [405, 419], "cl": [45, 102, 202, 206, 258, 290, 291, 295, 300, 329], "claim": 409, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 205, 207, 208, 209, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 286, 287, 288, 289, 290, 291, 295, 300, 302, 308, 325, 327, 342, 346, 347, 350, 351, 370, 381, 382, 385, 388, 398, 406, 412, 413, 415, 417, 418, 419, 421], "classic": [388, 415], "classifi": 416, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 288, 327, 406], "classvalidationerror": [399, 405], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 224, 226, 227, 230, 234, 248, 250, 252, 254], "clean": [318, 319, 320, 405, 406, 407], "clear": [334, 423], "click": 388, "clone": 407, "close": [215, 221, 269, 382, 401, 402, 420], "closer": [336, 416], "closest": [280, 321, 337], "closest_el": 406, "closur": [213, 420], "cluster": [175, 176, 177, 178, 370, 406, 408, 424], "clustering_x": 406, "cmap": 383, "cn": [363, 364, 366, 369, 370], "co1": [363, 364, 366], "co2": [363, 364, 366], "co3": [363, 364, 366], "coars": [386, 397, 398, 399, 404], "coc": [386, 398, 399, 404], "cococ": [398, 399], "code": [229, 364, 365, 386, 388, 394, 398, 399, 404, 405, 406, 409, 413, 414, 416, 423, 425], "coeffici": [41, 43, 44, 372, 373, 413], "coerc": 406, "collect": [27, 57, 58, 82, 92, 93, 132, 133, 141, 156, 158, 184, 192, 198, 199, 210, 217, 282, 284, 286, 294, 316, 322, 346, 348, 367, 370, 383, 388, 401, 402, 404, 406, 412, 414], "color": 383, "column": [36, 37, 38, 99, 104, 105, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 215, 217, 219, 221, 284, 285, 310, 311, 318, 319, 320, 322, 323, 351, 364, 369, 375, 376, 377, 378, 379, 382, 390, 392, 393, 394, 395, 397, 401, 402, 406, 412, 418, 419, 420], "column_group": 285, "com": [246, 297, 320, 404, 406], "comb": 378, "combin": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 132, 186, 192, 193, 194, 288, 307, 363, 364, 366, 375, 377, 378, 381, 382, 390, 404, 405, 409, 413, 415, 417, 418, 420, 423, 425], "combinatori": 425, "combine_func": 96, "come": [388, 404, 412, 419, 423, 425], "command": 405, "comment": 406, "commerci": 409, "commit": [404, 406, 407], "common": [141, 362, 385, 406, 407, 409, 412, 413, 416, 419], "commonli": 415, "commun": [409, 415, 416, 423], "comp_df": [113, 116, 117, 119, 127, 130, 406], "comp_rep": [192, 383, 385, 406, 418], "comp_rep_bound": [184, 186, 192, 406], "comp_rep_byt": [191, 425], "comp_rep_column": [112, 113, 114, 116, 117, 119, 126, 127, 130, 184, 186, 192, 406], "comp_rep_human_read": [191, 425], "comp_rep_shap": [191, 425], "comp_rep_tensor": [382, 383], "compar": [132, 156, 365, 388, 401, 404, 406, 407, 416, 422], "comparison": [382, 401, 402, 417, 419], "compat": [95, 101, 132, 160, 163, 166, 168, 169, 170, 173, 175, 176, 177, 178, 180, 181, 186, 187, 217, 230, 296, 322, 359, 370, 375, 376, 377, 378, 379, 381, 383, 390, 397, 406, 417], "compens": 406, "compil": [405, 409], "complain": 407, "complaint": 407, "complet": [383, 411, 413, 415, 419], "complex": [105, 274, 275, 276, 337, 397, 401, 402, 407, 410, 411, 413, 423], "compli": 409, "complianc": 404, "complic": 423, "compon": [62, 407, 410, 412, 413, 414, 419, 423], "compos": [91, 419], "composit": [80, 92, 93, 94], "compositekernel": [92, 93, 94, 406], "compound": 307, "comprehens": [404, 421], "compress": 419, "comput": [22, 27, 72, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 184, 186, 191, 192, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 258, 264, 266, 272, 308, 310, 311, 338, 375, 376, 377, 378, 379, 381, 390, 397, 406, 409, 410, 412, 414, 418, 419, 425], "computation": 168, "concat": [382, 390, 401, 402], "concaten": 365, "concentr": [142, 143, 363, 364, 366, 369, 370, 375, 381, 382, 413], "concentrati": 375, "concentration_valu": 382, "concept": [284, 415, 416, 419], "concis": 406, "concret": [406, 419], "conda": 406, "condit": [30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 316, 364, 372, 376, 377, 378, 379, 404, 406, 409, 423, 424], "conduct": [27, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 219, 224, 226, 227, 230, 234, 248, 250, 252, 254, 361, 362, 363, 364, 365, 366, 367, 404, 407, 412, 423], "confid": [8, 18, 370], "config": [385, 386, 396, 403, 406, 424], "config_json": 27, "configur": [27, 70, 71, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 213, 215, 221, 224, 226, 227, 228, 230, 234, 240, 248, 250, 252, 254, 316, 340, 348, 368, 369, 391, 395, 399, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425], "confirm": 383, "conflict": [404, 407, 415], "confront": [388, 404], "conjunct": 421, "connect": [53, 316, 406, 414, 422], "consecut": [154, 156, 157, 158], "consequ": [157, 366, 405, 413, 417, 418, 420], "consequenti": 409, "consid": [8, 18, 27, 30, 31, 32, 33, 34, 37, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 104, 117, 156, 186, 192, 219, 280, 316, 321, 322, 388, 390, 401, 402, 404, 406, 407, 411, 413, 415, 416, 417, 419, 425], "consider": [186, 411], "consist": [152, 191, 383, 407, 409], "consol": 405, "consolid": [406, 417], "consortium": 408, "conspicu": 409, "constant": [250, 258, 275, 390, 406, 407, 416, 418], "constitut": 409, "constrain": [406, 413, 422, 423], "constraint": [30, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 114, 184, 186, 192, 287, 385, 386, 390, 397, 398, 399, 403, 404, 406, 408, 416, 424], "constraint_1": 377, "constraint_2": 377, "constraint_3": 377, "constraints_augment": 186, "constraints_cardin": 184, "constraints_lin_eq": 184, "constraints_lin_ineq": 184, "constraints_nonlin": 184, "constru": 409, "construct": [27, 184, 186, 192, 230, 260, 401, 402, 404, 406, 410, 419, 424], "constructor": [175, 176, 177, 178, 186, 206, 248, 252, 254, 398, 399, 406, 410, 412, 415, 424, 425], "consult": 404, "consum": [156, 381], "consumpt": 414, "cont_ind": [365, 395], "cont_indic": [365, 392, 394, 395], "cont_paramet": [365, 395], "cont_recommend": [160, 395], "contact": [404, 408], "contain": [27, 30, 36, 37, 38, 58, 61, 64, 99, 104, 105, 109, 113, 116, 117, 119, 127, 130, 132, 136, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 193, 194, 198, 213, 215, 217, 219, 224, 226, 227, 230, 234, 248, 250, 252, 254, 264, 266, 272, 274, 275, 276, 284, 285, 296, 308, 310, 311, 316, 317, 327, 338, 340, 342, 348, 364, 365, 366, 382, 383, 388, 395, 401, 402, 405, 406, 407, 409, 412, 413, 417, 418, 419, 420, 425], "contains_mordr": 186, "contains_rdkit": 186, "content": [132, 156, 186, 217, 349, 406, 409, 419], "context": [154, 156, 157, 158, 213, 228, 345, 381, 388, 401, 402, 406, 412, 416, 419, 420, 423, 425], "contextu": 423, "continu": [10, 13, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 64, 112, 113, 114, 116, 117, 119, 126, 127, 130, 160, 168, 184, 186, 187, 192, 193, 194, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 365, 370, 372, 375, 376, 377, 378, 379, 390, 391, 395, 397, 403, 404, 406, 412, 417, 419, 424], "continuous_subspac": 418, "continuouscardinalityconstraint": [57, 184, 406], "continuousconstraint": [33, 41, 184, 413, 414], "continuouslinearconstraint": [184, 372, 373, 406, 424], "continuouslinearequalityconstraint": 406, "continuouslinearinequalityconstraint": 406, "continuousnonlinearconstraint": [40, 184, 406], "continuousparamet": [126, 184, 406], "contract": 409, "contrast": [192, 300, 388], "contribut": [404, 406, 409, 425], "contributor": [404, 409], "contributori": 409, "control": [13, 17, 132, 142, 168, 184, 192, 322, 362, 365, 390, 394, 404, 406, 409, 410, 414, 415, 416, 417, 422], "convei": 419, "conveni": [406, 418, 419], "convent": 186, "convers": [27, 157, 385, 406, 409, 424], "convert": [24, 100, 188, 201, 297, 301, 307, 309, 313, 314, 323, 324, 328, 331, 334, 386, 398, 399, 406, 412, 414, 419], "convert_sklearn": 385, "convert_sklearn_bayesian_ridg": 385, "cooki": 407, "coordin": 348, "copi": [382, 404, 406, 409, 425], "copyright": [404, 409], "core": [27, 184, 186, 187, 192, 219, 221, 224, 226, 227, 228, 230, 234, 241, 248, 250, 252, 254, 370, 406, 422], "coregion": 423, "coretest": [406, 407], "corpu": 416, "correct": [261, 383, 404, 406, 407, 419], "correctli": [395, 406], "correl": [119, 130, 320, 416, 423], "correspond": [22, 27, 40, 99, 104, 109, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 205, 213, 215, 217, 224, 226, 227, 230, 234, 248, 250, 252, 254, 274, 280, 296, 299, 301, 307, 309, 316, 322, 323, 369, 370, 388, 395, 401, 402, 404, 406, 407, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423], "corrupt": 317, "cost": [364, 388], "costli": [186, 189, 195, 412], "could": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 127, 313, 370, 381, 382, 402, 406, 411, 413, 416, 420, 422, 423], "count": [281, 382, 413], "counterclaim": 409, "counterpart": [296, 418], "coupl": 383, "cours": [401, 402, 407, 419, 423], "cov": [406, 407], "cover": [300, 316], "coverag": [406, 407], "cp": [363, 364, 366], "crash": [405, 406], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 193, 194, 209, 217, 224, 226, 227, 228, 230, 234, 237, 242, 248, 250, 252, 254, 264, 266, 272, 316, 327, 340, 342, 348, 365, 369, 381, 382, 383, 395, 396, 403, 404, 405, 406, 407, 413, 414, 419, 420, 421, 422, 424, 425], "create_example_plot": [361, 364, 382, 383, 401, 402], "create_from_config": [385, 386], "create_pi_plot": 383, "creation": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 132, 189, 192, 195, 365, 376, 378, 379, 385, 386, 393, 418, 419, 424], "criteria": 383, "criterion": [382, 410], "critic": 406, "cross": [401, 409], "crucial": 422, "cube": 413, "cuda": 405, "cultur": [416, 423], "curran": 423, "current": [10, 27, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 219, 221, 229, 279, 334, 382, 383, 410, 412, 413, 414, 416, 420, 422, 423, 425], "curv": [274, 383, 390, 413, 422], "custom": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 112, 113, 114, 116, 117, 119, 122, 126, 127, 130, 132, 230, 261, 264, 266, 272, 296, 323, 360, 370, 374, 382, 388, 391, 395, 403, 404, 406, 413, 416, 417, 423, 424, 425], "custom_analyt": [365, 367], "custom_conversion_funct": 385, "custom_filt": 413, "custom_funct": 375, "customari": 409, "customconstraint": 375, "customdiscreteparamet": [406, 424], "customencod": 119, "customonnxsurrog": [370, 385, 406], "customparamet": 416, "cycl": [156, 404], "cyclic": 156, "d": [22, 52, 105, 284, 292, 338, 348, 383, 386, 398, 399, 401, 402, 404, 409, 423], "d401": 375, "damag": 409, "daniel": 408, "darmstadt": [404, 408, 414], "dashboard": 406, "data": [13, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 104, 109, 119, 127, 130, 151, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 215, 219, 221, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 266, 272, 281, 283, 287, 308, 316, 317, 321, 333, 334, 349, 353, 360, 361, 362, 365, 369, 370, 372, 373, 375, 376, 377, 378, 379, 382, 386, 390, 392, 394, 397, 398, 399, 401, 402, 403, 404, 406, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 424, 425], "data_typ": 385, "databas": [27, 390, 404, 419], "dataclass": [381, 388], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 99, 104, 109, 113, 116, 117, 119, 127, 130, 132, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 193, 194, 197, 211, 212, 215, 217, 219, 221, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 266, 272, 280, 284, 285, 307, 308, 310, 311, 349, 363, 369, 370, 375, 376, 377, 378, 379, 382, 383, 385, 386, 390, 397, 401, 402, 406, 411, 412, 413, 416, 424, 425], "datapoint": 406, "dataset": [156, 213, 420], "datatyp": 406, "date": 409, "de": [204, 396, 404, 405, 406, 407, 412, 413, 417, 424], "deactiv": [404, 406, 414], "deal": [366, 411, 416], "debug": 406, "decid": [127, 321, 388, 395, 410], "declar": [49, 53, 58, 178, 376, 407, 413], "decod": 385, "decor": [94, 258, 288, 381, 406, 407], "decorrel": [119, 130, 135, 398, 399, 416], "decreas": [156, 275, 390, 419, 423], "deduc": [372, 373, 392, 394], "dedupl": 406, "deep": 382, "deepcopi": 406, "def": [362, 365, 367, 375, 381, 382, 383, 388, 393, 401, 407, 413], "default": [38, 104, 117, 119, 130, 132, 160, 175, 176, 177, 178, 184, 186, 192, 204, 224, 241, 244, 363, 366, 370, 386, 390, 395, 404, 406, 407, 412, 414, 415, 416, 424], "default_iter": 157, "default_model": 230, "defaultkernelfactori": [370, 375, 376, 377, 378, 379, 390, 397], "defaultscal": 406, "defend": 409, "defin": [22, 27, 37, 41, 48, 122, 151, 156, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 192, 213, 234, 236, 237, 261, 317, 320, 351, 363, 364, 366, 369, 370, 375, 376, 377, 379, 385, 386, 388, 406, 407, 409, 412, 413, 416, 418, 419, 420, 422], "definit": [184, 192, 300, 404, 406, 409, 415], "degener": [327, 406], "degr": 397, "degre": 419, "degree_c": [385, 386, 397], "deliber": 409, "delici": 407, "deliveri": 416, "demand": 402, "demo": 406, "demonstr": [360, 363, 365, 368, 371, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 391, 396, 397, 400, 401, 402, 406, 415, 418, 419, 423], "denot": [22, 365, 378], "densiti": 383, "depend": [49, 53, 73, 96, 186, 192, 213, 275, 284, 364, 370, 374, 378, 403, 405, 406, 407, 413, 414, 418, 420, 422, 423, 425], "dependenciesconstraint": 406, "deprec": [60, 166, 168, 184, 197, 231, 288, 364, 375, 377, 379], "deprecationwarn": 382, "depth": 418, "deriv": [175, 176, 177, 178, 192, 300, 409, 413, 418], "descend": 275, "describ": [117, 175, 176, 177, 178, 224, 226, 227, 230, 234, 248, 250, 252, 254, 370, 375, 381, 382, 388, 390, 407, 409, 411, 412, 413, 415, 416, 419, 420], "descript": 407, "descriptor": [124, 130, 308, 310, 311, 406, 416, 423], "deseri": [202, 206, 211, 397, 405, 406, 412, 424], "deserialize_datafram": 419, "design": [0, 17, 22, 215, 381, 385, 388, 409, 410, 415, 417, 419], "desir": [96, 104, 107, 367, 389, 390, 403, 404, 406, 410, 412, 414, 415, 417, 419, 422, 425], "desirabilityobject": [27, 367, 390, 404, 406, 419, 421, 424], "desktop": 406, "despit": 406, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 138, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 215, 219, 224, 226, 227, 228, 230, 234, 237, 244, 246, 248, 250, 252, 254, 264, 266, 272, 277, 278, 303, 327, 351, 361, 362, 363, 365, 366, 367, 370, 372, 373, 390, 392, 395, 404, 405, 406, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423], "detect": [287, 321, 405, 407], "determin": [27, 102, 192, 300, 331, 336, 348, 363, 388, 409, 414, 417], "determinist": 348, "detriment": 416, "dev": [404, 406, 407], "develop": [404, 406, 411, 416], "deviat": [6, 258, 385, 406], "df": [99, 104, 109, 132, 184, 186, 192, 197, 212, 217, 284, 285, 307, 318, 319, 320, 322, 323, 349, 375, 388, 404, 413, 418, 419], "dfa": [284, 285], "di": [363, 364, 366, 369, 370, 408], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 102, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 175, 176, 177, 178, 184, 186, 189, 192, 195, 205, 206, 207, 209, 219, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 278, 292, 294, 316, 327, 351, 382, 385, 401, 402, 406], "dict_bas": [363, 364, 366, 369, 370], "dict_ligand": [363, 364, 366, 369, 370], "dict_solv": [363, 364, 366, 369, 370, 375, 376, 377, 378, 379, 413], "dictat": [99, 104, 109, 186, 401, 402], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 205, 207, 209, 219, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 258, 264, 266, 272, 292, 294, 316, 327, 362, 363, 364, 365, 366, 369, 416, 420], "diff": 407, "differ": [51, 104, 168, 184, 186, 187, 192, 213, 221, 280, 285, 316, 317, 351, 364, 365, 367, 375, 381, 388, 390, 394, 395, 401, 402, 404, 406, 407, 409, 411, 412, 413, 415, 416, 417, 418, 419, 420, 422, 423], "differenti": [420, 423], "difficult": 423, "digit": 323, "dilemma": 388, "dim": [22, 361, 372, 373, 383, 385, 392, 394, 395, 401, 402], "dimens": [22, 348, 361, 362, 365, 367, 372, 373, 383, 385, 392, 393, 394, 401, 402, 406, 416, 418, 423], "dimension": [105, 112, 113, 114, 116, 117, 119, 126, 127, 130, 244, 348, 365, 393, 401, 402, 406], "dimethylisoxazol": 423, "direct": [363, 364, 366, 369, 404, 409, 416, 425], "directli": [300, 402, 404, 406, 413, 415, 419, 421], "directori": [340, 395, 406], "disabl": [279, 406, 412], "disadvantag": 419, "disappear": 406, "disc_ind": [365, 395], "disc_indic": [365, 392, 394, 395], "disc_paramet": [365, 395], "disc_recommend": [160, 395], "disclaim": 409, "discourag": 412, "discret": [13, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 64, 112, 113, 114, 116, 117, 119, 126, 127, 130, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 187, 191, 192, 221, 347, 361, 362, 365, 367, 369, 372, 379, 382, 383, 385, 390, 391, 395, 397, 402, 403, 404, 406, 410, 412, 419, 420, 424, 425], "discrete_param": [383, 401, 402], "discrete_spac": [361, 372, 373, 392, 395], "discrete_subspac": 418, "discretecardinalityconstraint": 406, "discreteconstraint": [47, 48, 49, 50, 51, 52, 53, 54, 55, 192, 413], "discretecust": 375, "discretecustomconstraint": [375, 406, 424], "discretedep": 376, "discretedependenciesconstraint": [53, 58, 376, 378, 424], "discreteexcl": 377, "discreteexcludeconstraint": [377, 406, 424], "discretelinkedparametersconstraint": [406, 424], "discretenola": 378, "discretenolabelduplicatesconstraint": [53, 378, 406, 424], "discreteparamet": [116, 119, 127, 130, 192, 406], "discreteperm": 378, "discretepermutationinvarianceconstraint": [378, 424], "discreteprod": 379, "discreteproductconstraint": [379, 406, 424], "discretesamplingmethod": [13, 168, 349, 406, 410], "discretesumc": [378, 379], "discretesumconstraint": [372, 378, 379, 406, 424], "discuss": [390, 409, 413, 418, 420], "disjoint": 192, "disk": [406, 424], "dispatch": 95, "displai": [323, 362, 382, 409], "distanc": [127, 280, 321, 348], "distinct": [381, 412, 417], "distinguish": [406, 413, 416, 423], "distribut": [27, 138, 141, 224, 226, 227, 230, 234, 248, 250, 252, 254, 390, 395, 404, 406, 409, 410, 411], "distutil": 301, "div": 385, "divers": 421, "divis": 338, "dll": 405, "dmac": [363, 364, 366, 369, 370], "dmf": 413, "do": [186, 192, 229, 365, 378, 381, 385, 386, 388, 395, 397, 398, 399, 401, 404, 405, 409, 411, 413, 414, 416, 417, 419, 423, 424, 425], "do_baybe_work": 414, "doc": [77, 138, 288, 404, 406], "doc101": 407, "doc103": 407, "docstr": 406, "doctest": 406, "document": [334, 385, 404, 406, 407, 408, 409, 412, 420], "doe": [26, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 168, 213, 215, 217, 219, 224, 226, 227, 229, 230, 234, 248, 250, 252, 254, 261, 296, 307, 309, 334, 366, 370, 382, 385, 386, 393, 398, 399, 401, 402, 406, 407, 409, 413, 415, 417, 420, 421, 423, 425], "doi": [246, 320], "domain": [224, 226, 227, 230, 234, 248, 250, 252, 254, 404, 418], "done": [27, 366, 369, 375, 376, 377, 378, 379, 385, 386, 390, 394, 397, 406, 410, 413, 414], "dont_recommend": [375, 376, 377, 378, 379, 390, 397, 418], "doubl": [334, 407, 414], "down": [419, 425], "downsid": 157, "draft": 406, "dramat": 423, "drastic": 416, "draw": [10, 89, 184, 388], "draw_arm": 388, "drawn": [17, 168], "drive": [383, 423], "driven": [316, 410], "driver": 405, "drop": [310, 311, 318, 319, 320, 382, 406, 413], "dropna": [310, 311], "dtype": [105, 274, 275, 276, 308, 337], "due": [281, 378, 402, 404, 406, 410, 413, 414, 416, 417, 418, 419, 422], "duplic": [53, 137, 287, 292, 378, 406, 413], "dure": [27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 186, 192, 213, 294, 348, 367, 388, 401, 402, 404, 405, 406, 407, 408, 412, 413, 414, 418, 419, 420, 421], "dynam": [388, 419], "e": [17, 22, 27, 30, 49, 51, 52, 64, 119, 132, 158, 186, 192, 213, 281, 287, 290, 291, 308, 310, 311, 316, 321, 327, 356, 363, 364, 366, 386, 388, 404, 405, 406, 407, 410, 411, 413, 414, 416, 417, 418, 419, 420, 423, 425], "each": [17, 27, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 99, 104, 109, 132, 151, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 215, 217, 219, 221, 229, 285, 308, 310, 311, 316, 340, 364, 365, 366, 370, 383, 388, 390, 395, 401, 402, 407, 409, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 425], "eagerli": 406, "earli": [382, 406], "earlier": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 192, 405], "earn": 388, "earned_reward": 388, "easi": [307, 407, 419], "easier": [407, 425], "easiest": [404, 407], "easili": [382, 407, 412, 416, 418, 419, 423], "ecosystem": 419, "edbo": [244, 246, 320, 406], "edbokernelfactori": [244, 406], "edit": [404, 407], "editor": 423, "editori": 409, "edwin": 423, "effect": [51, 221, 381, 382, 388, 402, 410, 413, 416, 417, 420, 423, 425], "effici": [192, 404, 406, 418], "ei": [3, 361, 362, 370], "either": [22, 187, 215, 221, 234, 258, 364, 365, 377, 390, 393, 395, 404, 409, 415, 417, 418, 420], "elabor": 409, "elaps": 381, "elapsedtimeprint": 381, "electron": [408, 409], "eleg": [401, 419], "element": [36, 37, 38, 48, 192, 221, 280, 287, 299, 321, 336, 337, 342, 401, 402, 406, 413], "elev": 383, "elif": [392, 394, 395], "elimin": [407, 410], "els": [300, 301, 306, 361, 362, 363, 364, 365, 366, 367, 372, 373, 375, 376, 378, 379, 382, 383, 388, 392, 394, 395, 401, 402], "elsewher": 385, "emd": 408, "emdgroup": [277, 404], "emelin": 408, "emerg": 412, "empir": 388, "emploi": [27, 388, 417], "employe": [404, 414], "empow": 421, "empti": [184, 186, 192, 199, 285, 296, 307, 323, 365, 390, 395, 397, 406, 418], "empty_encod": [186, 192], "emptysearchspaceerror": 199, "emul": [17, 405, 406], "en": [77, 138], "enabl": [279, 280, 362, 363, 364, 365, 366, 401, 404, 405, 406, 412, 413, 415, 417, 419, 420, 422, 423], "encod": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 126, 127, 130, 186, 192, 224, 226, 227, 230, 234, 248, 250, 252, 254, 363, 364, 366, 369, 370, 375, 376, 377, 378, 379, 382, 386, 388, 390, 397, 398, 399, 401, 402, 404, 406, 413, 418, 419, 423], "encompass": 412, "encount": [348, 405, 406, 407, 415], "end": [0, 276, 327, 382, 386, 388, 390, 397, 409, 413, 419], "endeavor": 410, "endpoint": [406, 414], "enforc": [335, 354, 406, 407], "engin": [405, 417, 419, 425], "enhanc": [22, 404], "enlarg": 416, "enough": [184, 419], "ensembl": 256, "ensur": [132, 363, 364, 366, 404, 413, 419], "enter": [66, 192, 418], "entir": [280, 327, 349, 406, 407, 410, 414, 425], "entiti": 409, "entri": [27, 34, 37, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 207, 224, 226, 227, 230, 234, 248, 250, 252, 254, 280, 285, 316, 321, 349, 366, 375, 376, 377, 378, 379, 406, 413, 414, 422, 425], "enum": [107, 121, 122, 123, 124, 187, 241, 269, 270, 347, 406, 419], "enumer": [106, 120, 268, 383, 401, 402, 415], "env": [406, 407], "envar_nam": 414, "environ": [279, 335, 354, 361, 362, 363, 364, 365, 366, 367, 373, 375, 376, 378, 379, 382, 383, 385, 388, 401, 402, 404, 405, 406, 407, 424], "envvar": 277, "envvar_nam": 414, "eq": [375, 378], "equal": [41, 104, 158, 184, 388, 390, 397, 406, 413, 415, 418, 419, 422], "equat": [41, 413, 420], "equidist": 416, "equip": 413, "equival": [17, 30, 53, 373, 410, 413], "error": [156, 166, 168, 215, 217, 219, 231, 294, 338, 366, 386, 388, 405, 406, 413, 415, 416, 417, 420], "esian": 404, "especi": 407, "essenti": [412, 417], "establish": [382, 401, 402, 423], "ester": [363, 364, 366, 369, 370], "estim": [186, 191, 192, 224, 388, 406, 421, 424], "estimate_product_space_s": [186, 192, 425], "estimated_win_r": 388, "estimation_bia": 388, "estimation_vari": 388, "et": [364, 404, 416], "etc": [36, 37, 38, 114, 186, 264, 423], "ethanol": 413, "euclidean": 348, "eval_during_augment": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "eval_during_cr": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "eval_during_model": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "evalu": [22, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 256, 257, 301, 392, 393, 394, 395, 406, 412, 414, 417, 423], "even": [258, 319, 401, 402, 409, 411, 412, 416, 420, 421, 423, 425], "event": [27, 280, 382, 409], "everi": [411, 425], "everyth": [407, 413], "evolv": [383, 407], "exabyt": 425, "exact": [27, 321, 381, 405, 406, 411, 413, 416, 417], "exactli": [99, 104, 109, 186, 406, 411, 412, 418, 419], "exampl": [132, 217, 284, 285, 292, 300, 360, 361, 368, 371, 374, 380, 381, 382, 383, 384, 387, 388, 389, 391, 396, 400, 401, 402, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425], "example_input_nam": 385, "exceed": 382, "except": [296, 307, 314, 325, 326, 363, 364, 366, 382, 386, 398, 399, 404, 405, 406, 409], "excepthook": 405, "exceptiongroup": 406, "excess": 425, "exclud": [52, 192, 318, 377, 406, 409, 413], "exclude_list": 320, "exclus": [50, 374, 403, 409, 413, 420], "execut": [27, 60, 215, 296, 364, 405, 406, 407, 409, 414, 419, 420, 423], "exemplari": 412, "exercis": 409, "exhaust": [156, 417], "exist": [94, 186, 280, 288, 296, 405, 406, 407, 410, 412, 413, 419, 423], "exp": 378, "exp_rep": [192, 375, 376, 377, 378, 379, 418], "exp_rep_byt": [191, 425], "exp_rep_human_read": [191, 425], "exp_rep_shap": [191, 425], "expect": [3, 4, 9, 11, 12, 14, 48, 228, 236, 296, 362, 370, 376, 383, 385, 388, 399, 406, 407, 412, 413, 415, 416, 419, 420, 422, 425], "expens": [10, 168, 372], "experi": [0, 27, 151, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 213, 215, 224, 226, 227, 230, 234, 248, 250, 252, 254, 361, 362, 363, 364, 365, 366, 367, 369, 370, 392, 393, 394, 395, 406, 410, 412, 413, 415, 416, 417, 422, 423, 424], "experiment": [27, 99, 104, 109, 113, 116, 117, 119, 127, 130, 151, 154, 155, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 191, 192, 213, 224, 226, 227, 230, 234, 248, 250, 252, 254, 264, 266, 272, 316, 317, 375, 376, 377, 378, 379, 383, 390, 397, 404, 406, 410, 411, 413, 414, 415, 416, 418, 419, 420, 422, 423, 425], "explain": [370, 383, 406, 421], "explan": [412, 421], "explicit": [132, 157, 378, 381, 382, 386, 398, 399, 406, 407, 414, 419, 423, 424], "explicitli": [184, 192, 381, 395, 402, 409, 423], "exploit": [8, 17, 18, 388], "explor": [8, 18, 27, 365, 388, 410, 417, 418, 423], "exploratori": 410, "exponenti": 192, "expos": [27, 381, 406], "exposur": 406, "expr": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55], "express": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 404, 406, 409, 413], "extend": 423, "extens": [406, 417], "extra": [364, 405, 406], "extract": [322, 383, 401, 424], "extract_pi": 383, "f": [301, 361, 362, 363, 364, 365, 366, 367, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 390, 392, 393, 394, 395, 401, 402, 425], "f1": 420, "f2": 420, "face": [224, 226, 227, 230, 234, 248, 250, 252, 254, 388], "facilit": 417, "fact": [17, 383, 413, 415], "factor": [132, 412, 425], "factori": [132, 184, 234, 235, 236, 237, 238, 244, 246, 293, 370, 375, 376, 377, 378, 379, 390, 397, 406], "fail": [395, 399, 405, 406], "failur": [266, 409], "failure_valu": 266, "fairli": 415, "fake": [217, 316, 369, 370, 385, 386, 390, 406, 411, 420, 424], "fall": [382, 412, 422], "fallback": [102, 192, 329, 340, 385, 406, 418], "fals": [6, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 197, 224, 230, 248, 250, 252, 254, 266, 275, 280, 290, 291, 294, 300, 301, 306, 321, 322, 342, 370, 375, 376, 377, 378, 379, 390, 397, 398, 399, 404, 411, 414], "famili": 413, "familiar": [361, 362, 363, 364, 365, 366, 367, 370, 372, 373, 375, 376, 377, 378, 379, 385, 386, 390, 392, 393, 394, 395, 397], "fang": 408, "fantasi": 10, "farthest": [180, 347, 348, 370, 404, 406, 408, 410, 417], "farthest_point_sampl": 406, "fashion": [274, 276], "fast": [375, 377, 379, 418, 422], "faster": 192, "fault": 76, "faulti": 405, "favicon": 406, "fc": [363, 364, 366], "feasibl": 412, "featur": [89, 130, 320, 405, 407, 413, 421, 423], "fed": 404, "fee": 409, "feed": [404, 423], "feedback": 408, "feel": 382, "few": [388, 406, 407, 410, 419, 423, 425], "field": [206, 314, 342, 406, 418, 423, 424], "fifti": 409, "fig": 383, "figur": [340, 383], "file": [340, 363, 364, 366, 385, 386, 395, 404, 406, 409, 414, 419, 423], "filenotfounderror": [363, 364, 366, 382], "fill": [27, 217, 383], "filler": 413, "filter": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 186, 192, 318, 375, 413, 418, 423, 425], "filter_attribut": 406, "filterwarn": 382, "final": [364, 369, 382, 402], "find": [186, 294, 337, 340, 404, 410, 412, 413, 423], "fine": [386, 397, 398, 399, 404], "finer": [132, 404], "fingerprint": [124, 308, 416], "finish": 411, "finit": [156, 213, 221, 326, 356, 388, 416, 420], "first": [186, 219, 336, 348, 364, 367, 369, 370, 375, 381, 382, 385, 386, 390, 395, 399, 401, 402, 404, 405, 406, 412, 413, 415, 416, 417, 418, 423, 425], "fit": [27, 178, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 349, 351, 363, 364, 366, 375, 376, 377, 378, 379, 385, 390, 397, 406, 409, 413, 416, 421], "fit_gpytorch_ml": 406, "fit_gpytorch_mll_torch": 406, "fitnr": 390, "fitzner": [404, 408], "fix": [213, 237, 382, 383, 388, 392, 393, 394, 395, 407, 412, 416, 420, 423, 425], "flag": [22, 27, 49, 99, 104, 109, 168, 186, 187, 192, 321, 322, 406, 411, 412, 414, 417], "flake8": 406, "flexibl": [381, 406, 419], "flexibli": 417, "float": [8, 13, 18, 38, 41, 43, 44, 83, 84, 85, 86, 87, 88, 89, 90, 94, 96, 104, 105, 119, 126, 127, 130, 135, 136, 142, 143, 144, 145, 146, 147, 148, 168, 191, 192, 215, 219, 224, 258, 266, 267, 274, 275, 276, 281, 308, 313, 316, 317, 320, 327, 331, 333, 334, 336, 337, 338, 353, 356, 357, 358, 362, 365, 367, 381, 383, 385, 388, 390, 393, 401, 406, 407, 420, 424], "float64": 353, "floattensortyp": 385, "fly": 419, "fn": 288, "focu": [8, 18, 412], "focus": [109, 395, 404], "folder": [364, 404, 407, 414, 421], "follow": [186, 215, 217, 219, 362, 363, 364, 365, 366, 370, 372, 373, 375, 376, 377, 378, 379, 381, 382, 386, 388, 390, 395, 398, 399, 401, 402, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423], "footprint": [10, 186], "forbid": 359, "forc": [168, 406, 407, 417], "forest": [253, 254], "forgiv": 422, "fork": 407, "form": [192, 213, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 316, 404, 409, 410, 412, 415, 416, 417, 418, 419, 420, 425], "format": [41, 278, 303, 323, 328, 331, 385, 386, 397, 398, 404, 405, 406, 407, 412, 414, 419], "format_except": 405, "former": 406, "formul": 423, "forrest": 406, "found": [74, 132, 184, 192, 294, 334, 337, 340, 362, 382, 390, 404, 405, 407, 412, 413, 417, 423], "foundat": 417, "fourier": 89, "fourth": 413, "fp": [347, 365, 406, 410], "fpsrecommend": [370, 385, 386, 397, 398, 399, 404, 411, 417], "frac": [378, 402, 415], "frac1": [376, 378], "frac2": 378, "frac3": 378, "fraction": [13, 84, 313, 378, 382, 410, 413, 414], "fraction1": [376, 378], "fraction2": 378, "fraction3": 378, "fraction_1": 413, "fraction_2": 413, "fraction_3": 413, "frame": [317, 425], "frame1": 376, "frame2": 376, "frame_1": 413, "frame_2": 413, "framea": 376, "framea_a": 376, "frameb": 376, "framework": [412, 416], "free": [407, 409, 414], "freedom": 419, "frequenc": 89, "frequent": 388, "fresh": 382, "frictionless": 419, "friendli": 406, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 138, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 209, 217, 219, 221, 224, 226, 227, 230, 234, 237, 242, 246, 248, 250, 252, 254, 258, 264, 266, 272, 275, 276, 296, 300, 301, 303, 307, 317, 318, 320, 327, 338, 340, 349, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 388, 390, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 405, 407, 409, 410, 411, 413, 415, 416, 417, 420, 422, 423, 424, 425], "from_bound": [184, 406, 418], "from_config": [27, 398, 399, 412], "from_datafram": [184, 186, 192, 406, 418, 419, 425], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 327, 385], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 327, 385, 386, 397, 412, 419], "from_paramet": [184, 186, 192, 406], "from_preset": 234, "from_product": [184, 186, 192, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 390, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 406, 413, 418, 419, 420], "from_record": 419, "from_simplex": [192, 406, 418, 425], "frozenset": 378, "fsspec": 406, "fulfil": 382, "full": [22, 184, 334, 360, 403, 406, 412, 423, 424], "full_factori": 184, "full_lik": 383, "full_lookup": [363, 364, 366], "fulli": [404, 406, 420], "fulltest": 407, "func": 407, "func_nam": 401, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 35, 41, 42, 48, 56, 63, 68, 76, 88, 95, 98, 101, 103, 108, 131, 134, 166, 168, 169, 185, 190, 196, 200, 201, 209, 210, 213, 214, 216, 218, 219, 220, 225, 229, 235, 240, 255, 259, 260, 263, 270, 273, 274, 275, 276, 277, 280, 281, 283, 286, 298, 302, 303, 304, 312, 315, 317, 322, 323, 325, 330, 332, 339, 340, 343, 346, 355, 369, 375, 376, 377, 378, 379, 381, 383, 388, 391, 397, 401, 402, 403, 404, 405, 406, 410, 412, 413, 415, 417, 418, 421, 422, 423, 424, 425], "function_nam": [401, 402], "fundament": [416, 419], "furo": 406, "further": [362, 365, 367, 397, 404, 411, 417, 418, 420, 421, 423, 424], "furthermor": [390, 392, 393, 394, 395], "furyl": [363, 364, 366], "futur": [53, 186, 229, 382, 401, 422], "fuzzi": 280, "fuzzy_row_match": [192, 280], "g": [49, 51, 52, 64, 119, 132, 186, 192, 287, 308, 310, 311, 321, 388, 404, 405, 406, 407, 410, 411, 413, 414, 416, 417, 418, 420, 425], "gain": [192, 412], "gamma": 143, "gammaprior": 406, "garbag": 406, "gather": [158, 401, 402, 410, 423], "gaussian": [77, 175, 226, 232, 233, 234, 235, 239, 240, 241, 243, 244, 245, 246, 274, 370, 390, 406, 413, 417, 423], "gaussian_kd": 383, "gaussian_process": [79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 234, 236, 237, 241, 244, 246, 370, 406], "gaussianmixtureclusteringrecommend": 417, "gaussianprocesspreset": [234, 242], "gaussianprocesssurrog": [242, 370, 375, 376, 377, 378, 379, 383, 390, 397, 398, 399, 406, 421], "gcf": [362, 363, 365, 366], "ge": 373, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 123, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 224, 226, 227, 230, 234, 237, 244, 246, 248, 250, 252, 254, 264, 266, 272, 278, 300, 327, 343, 351, 367, 370, 381, 404, 406, 408, 409, 410, 411, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425], "geom_mean": [96, 104, 107, 390, 415], "geometr": [107, 338, 390, 415], "germani": [404, 408, 414], "get": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 154, 156, 157, 158, 166, 168, 184, 234, 316, 370, 382, 392, 393, 394, 395, 404, 406, 411, 424, 425], "get_candid": [192, 382], "get_cmap": 383, "get_comp_rep_parameter_indic": [186, 406], "get_current_recommend": [154, 156, 157, 158], "get_integration_point": 13, "get_invalid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "get_invalid_polar": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "get_lin": 382, "get_next_recommend": [154, 156, 157, 158], "get_parameters_by_nam": [184, 186, 192], "get_parameters_from_datafram": [184, 192], "get_subclass": 370, "get_surrog": [27, 166, 168, 406, 421], "get_transform_object": 406, "get_transform_paramet": 406, "git": [404, 407], "github": [246, 277, 297, 320, 385, 406, 407, 408], "give": [385, 386, 402, 409, 412, 415, 419], "given": [25, 27, 30, 36, 37, 38, 58, 74, 99, 104, 109, 117, 130, 132, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 198, 213, 217, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 258, 269, 281, 285, 290, 291, 294, 295, 296, 299, 300, 305, 309, 313, 316, 322, 327, 328, 336, 338, 341, 342, 348, 351, 375, 376, 377, 378, 379, 382, 388, 390, 395, 401, 402, 412, 418, 420], "glass_transition_tempc": 416, "global": [13, 344, 406, 424, 425], "gmean": 338, "gmm": 175, "go": [284, 404], "goal": [365, 388, 415, 423], "goe": 421, "good": [316, 382, 390, 412, 414, 422], "good_interv": 316, "good_reference_valu": 316, "goodwil": 409, "googl": [406, 407], "govern": 404, "gp": [224, 226, 227, 230, 234, 248, 250, 252, 254, 406], "gpytorch": [77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 138, 140, 142, 143, 144, 145, 146, 147, 148, 406], "gradient": [10, 168, 252, 406, 414, 417], "grant": 409, "granular": [386, 397, 398, 399, 404], "granularity_coar": 397, "granularity_fin": 397, "great": [388, 419], "greater": 158, "greatli": 407, "greedi": [168, 361, 362, 365, 406, 417], "grid": [401, 402], "grid_d": [401, 402], "grossli": 409, "group": [285, 292, 351, 404, 406, 412], "groupbi": [219, 221], "grow": 425, "gt": [378, 379], "gu16": 416, "guarante": [413, 417], "guid": [369, 404, 405, 406, 407, 410, 412, 415, 418, 420, 423], "guidelin": [406, 407, 410], "ha": [27, 49, 67, 68, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 224, 226, 227, 230, 234, 248, 250, 252, 254, 284, 294, 296, 300, 321, 348, 349, 364, 370, 376, 390, 395, 404, 406, 407, 409, 411, 412, 413, 416, 418, 419, 420, 422, 423], "had": [213, 413, 416, 420], "half": [127, 144, 145, 327, 395, 411], "halfcauchyprior": 406, "halfnormalprior": 406, "hamster": 423, "hand": [41, 130, 388, 401, 402, 404, 412, 419], "handl": [114, 215, 217, 258, 325, 367, 375, 376, 388, 390, 406, 412, 415, 420, 425], "happen": [156, 390, 395, 402, 405, 406, 407, 418, 419, 423], "happili": 415, "hard": [406, 423, 425], "harmless": 409, "hartman": 401, "hartmann": [383, 401, 402], "hasattr": [361, 372, 373, 392, 394, 395], "hash": [278, 404, 414], "hashabledict": 406, "have": [22, 27, 34, 36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 99, 104, 109, 130, 178, 186, 192, 213, 229, 261, 285, 292, 294, 308, 316, 321, 322, 334, 362, 363, 364, 369, 370, 375, 376, 378, 381, 383, 388, 390, 394, 395, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 419, 420, 421, 423, 425], "he": 370, "head": 406, "header": 342, "heart": 423, "help": [388, 419, 423], "helper": [381, 383, 385, 419], "henc": [307, 388, 397, 413, 416, 425], "here": [52, 334, 362, 363, 365, 366, 367, 369, 372, 373, 378, 381, 382, 386, 392, 393, 394, 395, 397, 401, 402, 404, 405, 411, 413, 415, 416, 417, 418, 419, 420, 422, 423], "herebi": 409, "herein": [409, 412], "heurist": 168, "hierarch": 419, "hierarchi": [74, 406, 407, 412, 419], "high": [244, 388, 406, 407, 410, 412, 413, 416, 419], "higher": [8, 18, 130, 388, 405, 413, 417], "highest": [410, 419], "highlight": [404, 423], "hint": 407, "histogram": 281, "histori": 407, "hold": [40, 292, 409, 419], "homepag": [404, 406], "hood": 416, "hook": [45, 102, 192, 201, 205, 296, 403, 405, 406, 407], "hopp": [404, 408], "host": [404, 406, 414], "hostnam": [278, 414], "hot": [121, 364, 388, 404, 406, 416], "how": [50, 215, 217, 348, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 380, 382, 383, 384, 385, 386, 388, 393, 395, 397, 398, 399, 402, 404, 412, 413, 414, 415, 420, 421, 422, 423], "howev": [132, 192, 229, 296, 361, 378, 381, 388, 392, 394, 395, 405, 407, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 423, 425], "html": [41, 77, 138, 277, 288, 303, 334, 385, 406], "http": [41, 77, 138, 246, 277, 288, 297, 303, 320, 334, 404, 406, 409, 423], "hue": [361, 362, 363, 364, 365, 366, 382, 401, 402], "human": [191, 331, 397, 406, 408, 419], "hybrid": [21, 22, 64, 159, 160, 168, 181, 186, 187, 360, 370, 371, 375, 376, 377, 378, 379, 390, 391, 397, 403, 404, 406, 417, 418], "hybrid_recommend": 395, "hybrid_sampl": [168, 365, 370, 417], "hyperparamet": 370, "hyperrectangl": [184, 418], "hypothesi": [404, 406, 407], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 64, 66, 67, 68, 69, 71, 91, 94, 105, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 199, 213, 215, 217, 219, 221, 224, 226, 227, 228, 229, 230, 234, 244, 248, 250, 252, 254, 258, 261, 269, 274, 275, 276, 279, 280, 281, 285, 288, 290, 291, 294, 296, 297, 299, 300, 301, 306, 307, 316, 317, 321, 322, 323, 326, 327, 334, 336, 337, 340, 342, 348, 349, 356, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 378, 381, 382, 383, 385, 386, 388, 390, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425], "ideal": [411, 413], "ident": [132, 284, 285, 416, 419, 423], "identif": 388, "identifi": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 219, 292, 307, 321, 322, 382, 406, 413, 416, 419, 420, 423], "idx_offset": 41, "ignor": [99, 104, 109, 156, 168, 186, 193, 194, 215, 217, 219, 294, 320, 366, 382, 395, 406, 413, 419, 420, 425], "ignore_exampl": 406, "ignore_list": 319, "ii": 409, "iii": 409, "iloc": 411, "imag": [388, 406], "imagin": 388, "immedi": [340, 381, 412], "immut": 406, "impact": [364, 402, 414], "imperfect": 317, "implement": [17, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 105, 151, 161, 221, 228, 298, 375, 382, 393, 401, 406, 407, 408, 410, 417, 418, 423], "impli": [404, 409, 413, 416], "implicitli": 419, "import": [73, 104, 217, 382, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425], "importantli": 365, "impos": [378, 413, 420], "imposs": [404, 414, 419], "improv": [3, 4, 7, 9, 11, 12, 14, 15, 370, 373, 380, 382, 403, 404, 406, 409, 414], "imput": [215, 217, 360, 366, 403, 404, 420], "impute_mod": [215, 217, 219, 366, 420], "inabl": [404, 409], "inaccuraci": 404, "inact": 40, "inc": 423, "incident": 409, "includ": [58, 99, 104, 109, 158, 215, 290, 291, 319, 363, 376, 378, 386, 398, 399, 402, 404, 406, 407, 409, 410, 411, 413, 425], "inclus": 409, "incom": 419, "incompat": [62, 63, 64, 230, 377, 413], "incompatibilityerror": 27, "incompatibleacquisitionfunctionerror": 411, "incomplet": 406, "inconsist": 406, "incorpor": [409, 411, 421, 425], "incorrectli": 406, "increas": [10, 156, 219, 275, 276, 390, 401, 402, 406, 410, 416, 423], "increment": 192, "incur": 409, "indefinit": [156, 215], "indemn": 409, "indemnifi": 409, "indent": 342, "independ": [160, 226, 250, 385, 406, 417, 420], "independentgaussiansurrog": [230, 248, 250, 252, 406], "index": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 186, 219, 284, 285, 321, 372, 373, 385, 386, 390, 392, 393, 394, 395, 397, 406, 416, 418], "indexkernel": 406, "indic": [27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 76, 112, 113, 114, 116, 117, 119, 126, 127, 130, 186, 284, 285, 348, 365, 395, 406, 409, 417, 421], "indirect": [290, 291, 409], "individu": [49, 50, 92, 93, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 215, 323, 382, 409, 412, 415, 417, 423], "induc": 388, "industri": 423, "ineffici": 192, "inequ": [41, 184, 418], "inf": [375, 376, 377, 378, 379, 397], "infer": [132, 230, 401, 402, 406, 418], "inferencesess": 230, "infin": 136, "infinit": [156, 157, 293, 326, 356, 357, 406, 416], "influenc": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 418], "influenti": 423, "info": [281, 406], "inform": [22, 114, 264, 322, 363, 364, 366, 383, 392, 393, 394, 395, 402, 404, 406, 407, 409, 411, 414, 416, 418, 423, 424], "infring": 409, "ingest": [192, 215, 416, 417], "ingredi": 413, "inher": 17, "inherit": 407, "init": 260, "initi": [83, 84, 85, 86, 87, 88, 89, 90, 94, 157, 158, 160, 168, 175, 176, 177, 178, 180, 192, 215, 219, 280, 348, 360, 365, 375, 376, 377, 378, 379, 382, 383, 390, 397, 402, 403, 406, 408, 412, 414, 416, 417, 419, 420, 423], "initial_data": [215, 219, 363, 402, 420], "initial_recommend": [158, 370, 382, 383, 385, 386, 388, 397, 398, 399, 404, 417], "initial_recommender_cl": 406, "initial_strategi": 406, "initial_typ": 385, "inject": 419, "inner": [152, 417, 419], "inplac": [364, 401, 402, 425], "input": [36, 37, 38, 105, 113, 116, 117, 119, 127, 130, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 264, 266, 272, 274, 292, 313, 314, 317, 321, 327, 329, 336, 348, 385, 390, 393, 401, 402, 406, 419, 420, 423], "input_dim": 385, "inputtransform": 351, "insid": [382, 385, 386, 405, 419], "insight": 382, "inspect": [300, 381], "instabl": 413, "instal": [406, 407, 414, 416, 425], "instanc": [36, 37, 38, 49, 52, 154, 156, 157, 158, 186, 192, 316, 376, 382, 404, 405, 407, 411, 412, 413, 414, 416, 418, 419, 420, 425], "instanti": [230, 382, 412], "instead": [156, 280, 307, 404, 405, 406, 412, 413, 415, 416, 419, 420, 422, 423, 425], "institut": [408, 409], "instruct": [404, 406, 422, 424], "instrument_nam": 281, "int": [10, 13, 17, 27, 30, 40, 41, 47, 79, 80, 81, 84, 86, 87, 88, 89, 90, 105, 121, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 215, 219, 221, 266, 267, 274, 275, 276, 281, 308, 323, 337, 341, 344, 345, 348, 349, 351, 375, 377, 379, 388, 390, 402, 407, 416], "integ": [30, 121, 186, 219, 395, 406, 407, 416], "integr": [13, 406, 407, 410, 412], "intend": [369, 378, 381, 401, 407, 417, 418], "intens": 416, "intention": 409, "interact": [26, 27, 369, 404, 405, 412, 419], "interconnect": 412, "interest": [415, 425], "interfac": [151, 228, 236, 381, 383, 406, 409, 412], "intermedi": [178, 348], "intern": [27, 41, 53, 156, 382, 390, 406, 413, 414, 416, 417, 418, 419], "internet": 404, "internship": 408, "interpol": [84, 244, 406], "interpret": [186, 213, 313, 386, 392, 393, 394, 395, 398, 399, 402, 414, 418, 420], "interrupt": 60, "intersect": [365, 395], "interv": [126, 272, 274, 275, 276, 390, 406, 412, 416, 419, 422], "intrins": 423, "introduc": [405, 406, 413, 416, 417, 420], "intuit": 412, "invalid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 65, 192, 307, 321, 349, 386, 398, 405, 412, 413, 418], "invalid_config": 399, "invalid_surrogate_model": 386, "invalid_typ": 399, "invari": [49, 52, 53, 284, 285, 378, 413], "invers": [205, 419], "investig": [213, 420, 421], "invok": [424, 425], "involv": [27, 192, 381, 404, 414, 415, 416, 418, 419, 423], "io": 277, "irrelev": 413, "irrespect": [280, 321], "irrevoc": 409, "is_bound": [327, 406], "is_continu": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130], "is_degener": 327, "is_discret": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130], "is_empti": [184, 192, 406], "is_eq": 41, "is_finit": 406, "is_fully_unbound": 327, "is_half_bound": 327, "is_in_rang": [112, 113, 114, 116, 117, 119, 126, 127, 130], "is_left_bound": 327, "is_numer": [112, 113, 114, 116, 117, 119, 126, 127, 130, 406], "is_right_bound": 327, "iso": 385, "isoxazol": 423, "issu": [229, 288, 297, 406, 409, 425], "item": [37, 112, 113, 114, 116, 117, 119, 126, 127, 130, 388, 401, 402, 416], "iter": [27, 126, 156, 157, 186, 192, 215, 229, 272, 293, 317, 328, 362, 363, 367, 375, 376, 377, 378, 379, 382, 383, 388, 392, 393, 394, 395, 401, 402, 404, 406, 410, 412, 416, 417, 420, 421, 425], "iterrow": [372, 373, 392, 393, 394, 395], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 160, 184, 186, 192, 209, 221, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 281, 284, 289, 296, 300, 316, 327, 331, 370, 381, 383, 388, 402, 404, 405, 407, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 423, 425], "itself": [381, 401, 405, 423], "j": [364, 404, 416, 423], "jackiepho": [363, 364, 366], "januari": 409, "javadi": 408, "jin": 408, "join": [378, 405], "joint": 412, "jointli": 412, "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 327, 340, 385, 386, 397, 398, 406, 424], "json_str": 419, "juli": 408, "julian": 408, "jump": [406, 423], "jupyt": 385, "just": [388, 407, 419], "k": [127, 176, 348, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 382, 392, 393, 394, 395, 406, 417, 425], "kde": 383, "keep": [48, 130, 184, 192, 365, 382, 406, 407, 418], "kei": [292, 316, 364, 407], "kept": [416, 421], "kernel": [79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 234, 235, 236, 237, 238, 244, 246, 370, 375, 376, 377, 378, 379, 390, 397, 406, 413, 423], "kernel_factori": [79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 234, 236, 237], "kernel_or_factori": 234, "kernelfactori": [234, 237, 238, 244, 246, 406], "keyword": [365, 366, 370, 395, 402, 406, 411, 413, 417, 418, 420], "kgaa": [404, 408, 414], "kian": 423, "kickstart": 419, "kind": [168, 404, 406, 409, 413, 416, 417], "kiter": [375, 376, 377, 378, 379, 390], "kmean": 370, "kmeansclusteringrecommend": [370, 417], "knob": 404, "know": [365, 388, 393, 398, 404, 405, 419, 423], "knowledg": [10, 404, 406, 423], "known": [413, 423], "koller": 423, "kwarg": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 83, 85, 87, 92, 93, 94, 140, 142, 143, 144, 145, 146, 147, 148, 151, 170, 228, 231, 236, 326], "l0": 30, "l1": 416, "l664": 246, "label": [52, 53, 119, 130, 281, 378, 404, 406, 413, 416, 418, 420], "labelpad": 383, "lambda": [375, 377, 378, 379, 382, 383, 401, 421], "land": 406, "languag": [288, 404], "larg": [130, 192, 372, 373, 392, 406, 414, 416, 425], "larger": [84, 127, 349, 370, 377, 412, 413, 419, 423], "largest": [348, 388, 410], "last": [27, 156, 388, 407, 412, 417], "last_call_tim": 381, "lastli": 383, "latent": 416, "later": [127, 394, 405, 412, 419], "latest": [404, 407, 412], "latter": [17, 284, 300, 382, 412, 423], "law": [404, 409], "lawsuit": 409, "layout": 406, "lazi": [194, 352, 406], "lazili": [406, 414], "lazyfram": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 194], "le": 373, "le_method": 407, "lead": [72, 390, 406, 419], "lean": 407, "learn": [13, 220, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 370, 375, 376, 377, 378, 379, 388, 390, 397, 401, 403, 404, 406, 413, 416, 421, 422, 424], "least": [156, 404, 409, 411, 412], "leav": 419, "lee": 408, "left": [69, 70, 148, 215, 321, 327, 376, 406, 415], "left_df": 321, "leftov": 406, "legal": 409, "legend": [363, 366], "len": [376, 378, 382, 383, 388], "length": [85, 156, 157, 224], "lengthi": 412, "lengthscal": [84, 85, 86, 88, 89, 90], "lengthscale_initial_valu": [84, 85, 86, 88, 89, 90], "lengthscale_prior": [84, 85, 86, 88, 89, 90], "leq": 30, "less": [285, 382, 383, 388, 412, 425], "let": [364, 381, 382, 383, 385, 386, 402, 404, 413, 415, 419], "level": [317, 406, 407, 411, 412, 413, 417, 419], "leverag": [382, 412, 417], "li": 416, "liabil": 409, "liabl": 409, "lib": 405, "librari": 405, "licensor": 409, "lie": [27, 224, 226, 227, 230, 234, 248, 250, 252, 254, 316], "life": [404, 407, 408, 425], "lifecycl": 412, "ligand": [363, 364, 366, 369, 370, 382, 404, 416], "ligand_data": 382, "ligand_smil": 382, "like": [178, 219, 287, 383, 388, 404, 405, 406, 407, 411, 412, 413, 416, 419, 420, 423, 425], "likelihood": 224, "limit": [244, 281, 383, 404, 408, 409, 413, 418, 424], "line": [327, 342, 362, 363, 365, 366, 382, 388, 406, 407, 410, 412, 416, 420, 423], "linear": [41, 83, 184, 248, 270, 275, 367, 370, 371, 390, 403, 406, 407, 418, 422], "linear_model": 385, "linear_regressor": 385, "linearkernel": 406, "linearli": [244, 275, 276, 390, 406], "lineplot": [361, 362, 363, 364, 365, 366, 382, 401, 402], "link": [51, 405, 406, 409, 416], "linspac": [361, 362, 365, 367, 375, 376, 377, 378, 379, 383, 385, 386, 394, 395, 397, 401, 402, 425], "lint": [404, 406, 407], "linter": [406, 407], "list": [30, 31, 32, 33, 34, 37, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 96, 117, 132, 137, 156, 157, 184, 186, 192, 193, 194, 197, 198, 199, 215, 219, 221, 280, 290, 291, 292, 299, 308, 309, 310, 311, 316, 318, 319, 320, 321, 322, 348, 361, 362, 363, 365, 367, 370, 375, 376, 377, 378, 379, 383, 388, 390, 392, 393, 394, 395, 402, 404, 407, 409, 413, 415, 417, 418, 420], "liter": [96, 156, 215, 217, 219, 317, 348, 407], "literatur": 406, "litig": 409, "littl": 405, "liver": [420, 423], "load": [340, 352, 382, 385, 398, 399, 405, 406], "loc": [146, 147, 363, 366], "local": [405, 407, 414, 424], "locat": [146, 147, 411, 414, 423], "lockfil": 406, "log": [146, 281, 404, 414], "logarithm": [4, 11, 12, 338], "logei": [4, 406], "logic": [152, 316, 406, 413, 417, 425], "lognormalprior": 406, "logo": 406, "long": [412, 419], "longer": 406, "look": [217, 370, 372, 373, 388, 405, 410, 412, 413, 419, 422], "look_up_target": 215, "lookup": [213, 215, 219, 221, 303, 321, 360, 361, 362, 365, 393, 403, 406, 424], "lookup_df": 217, "lookup_test_task": 402, "lookup_training_task": 402, "lookup_withmiss": 366, "loop": [213, 215, 221, 375, 376, 377, 378, 379, 382, 390, 406, 411, 420, 425], "loss": 409, "lost": 419, "low": [244, 365, 388, 405, 406, 416, 419], "lower": [148, 274, 275, 276, 327, 363, 366, 383, 390, 401, 402, 416, 422], "lower_bound": 418, "lst_exclud": 318, "lt": 405, "luxuri": 412, "m1": 405, "mac": 405, "machin": [388, 404, 405, 407, 410, 414, 416, 422, 423], "machineri": [17, 168, 405, 407, 423, 425], "made": [73, 192, 215, 348, 366, 404, 405, 409, 413, 414, 418, 420], "magic": 423, "magnitud": [317, 425], "mai": [27, 99, 104, 109, 186, 296, 404, 409, 412, 419], "mail": 409, "main": [26, 27, 404, 406], "maintain": [258, 407, 418], "major": [406, 420], "make": [8, 18, 53, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 256, 257, 258, 288, 363, 366, 370, 372, 404, 405, 407, 409, 412, 413, 416, 419, 420, 423, 425], "malfunct": 409, "manag": [26, 184, 185, 186, 192, 345, 406, 409], "mandatori": [406, 422], "mani": [349, 362, 365, 394, 395, 404, 412, 416, 419, 422, 423], "manipul": 418, "manner": 414, "manual": [395, 405, 418, 419], "map": [119, 130, 217, 219, 274, 275, 276, 294, 351, 362, 363, 364, 365, 366, 390, 420, 422], "margin": 406, "mark": [192, 409, 417, 423, 424], "mark_as_measur": 192, "markdown": [386, 398, 399, 406], "marker": [361, 363, 364, 366, 382, 401, 402, 406], "markers": [361, 364, 382, 401, 402], "market": 388, "marketplac": 406, "martin": [404, 408], "mask_bad1": 375, "mask_bad2": 375, "mask_bad3": 375, "mask_good": [375, 413], "mass": 142, "master": 246, "match": [27, 75, 113, 116, 117, 119, 127, 130, 132, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 264, 266, 269, 272, 280, 294, 296, 321, 322, 365, 381, 383, 390, 395, 404, 406, 411, 412, 415, 417, 419, 424], "match_attribut": 406, "match_targeta": 422, "match_targetb": 422, "materi": [388, 423], "matern": 84, "maternkernel": 406, "math": [378, 382], "mathemat": 406, "matmin": 405, "matplotlib": [362, 363, 365, 366, 383, 406], "matter": [407, 415], "max": [217, 269, 363, 364, 366, 367, 369, 370, 375, 376, 377, 378, 379, 382, 383, 385, 386, 388, 390, 397, 398, 399, 404, 406, 415, 419, 424], "max_cardin": [30, 40, 47], "max_column": 323, "max_colwidth": 323, "max_nonzero": 192, "max_row": 323, "max_sum": [192, 418], "max_target": 422, "max_yield": [363, 366], "maxim": [6, 269, 367, 369, 383, 388, 390, 404, 422], "maximum": [6, 30, 40, 47, 130, 184, 186, 192, 274, 323, 390, 406, 413, 418], "mc": [388, 411], "md": 406, "me2pph": [363, 364, 366], "mean": [5, 8, 17, 18, 27, 53, 96, 107, 154, 156, 157, 158, 176, 213, 215, 217, 219, 224, 250, 258, 338, 366, 367, 370, 385, 388, 390, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 419, 421, 424], "meaning": 415, "meaningless": 410, "meanpredictionsurrog": [258, 370, 421], "meantim": [407, 413], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 192, 213, 215, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 264, 266, 272, 280, 316, 321, 363, 364, 366, 370, 372, 373, 381, 382, 383, 390, 392, 393, 394, 395, 404, 406, 407, 410, 411, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424], "mechan": [8, 18, 60, 104, 105, 107, 213, 216, 217, 221, 296, 329, 348, 365, 381, 382, 383, 401, 402, 406, 409, 419, 420, 423], "mechanist": 404, "media": [409, 416, 423], "mediocr": 422, "medium": [386, 397, 404, 409, 416], "medoid": [177, 406, 417], "meet": [316, 409], "mem_estim": 425, "member": [300, 413], "memori": [10, 186, 191, 192, 364, 378, 386, 398, 406, 414, 424], "memorys": [186, 192, 425], "mention": 410, "merchant": 409, "merck": [404, 408, 414], "mere": [409, 415], "merg": 407, "meshgrid": [401, 402], "messag": 382, "meta": [69, 154, 156, 157, 158, 161, 375, 376, 377, 378, 379, 390, 397, 404, 406, 424], "metadata": [27, 184, 192, 278, 406, 424], "metarecommend": [156, 157, 158, 406], "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 76, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 209, 224, 226, 227, 228, 230, 234, 236, 237, 244, 246, 248, 250, 252, 254, 257, 260, 261, 264, 266, 272, 287, 288, 296, 300, 327, 340, 347, 348, 349, 351, 383, 386, 398, 399, 406, 408, 412, 414, 415, 416, 418, 419, 420, 421, 423], "methodtyp": [381, 382, 383], "methyldiphenylphosphin": [363, 364, 366], "methylisoxazol": 423, "metric": [388, 404, 414, 416], "micromamba": 406, "midpoint": 422, "might": [49, 53, 130, 186, 364, 370, 372, 376, 378, 395, 402, 405, 411, 412, 413, 414, 418, 420, 423, 425], "mimic": [77, 138, 413], "min": [269, 361, 362, 365, 367, 372, 373, 383, 390, 392, 393, 394, 395, 401, 402, 404, 406, 415, 419, 424], "min_cardin": [30, 40, 47], "min_nonzero": 192, "min_target": 422, "mind": [388, 421], "miniconda": 406, "minim": [6, 269, 367, 390, 401, 402, 422], "minimum": [30, 40, 47, 127, 184, 186, 192], "minor": 406, "mirror": [412, 419], "miss": [27, 215, 217, 366, 406, 407, 420], "mistak": 407, "mix": [221, 378, 404, 413, 416, 419, 423], "mixin": 209, "mixtur": [175, 374, 403, 406, 413, 416, 417, 423, 425], "mobil": 406, "mode": [96, 119, 130, 156, 215, 224, 269, 272, 275, 294, 316, 360, 361, 362, 363, 364, 365, 366, 369, 370, 372, 373, 375, 376, 377, 378, 379, 382, 383, 385, 386, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 405, 406, 415, 417, 419, 424], "model": [13, 27, 30, 31, 32, 33, 34, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 67, 77, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 224, 226, 227, 228, 229, 230, 234, 248, 250, 252, 254, 258, 260, 261, 334, 372, 373, 384, 401, 402, 404, 406, 408, 410, 411, 412, 413, 416, 417, 419, 422, 423, 424], "model_cl": 261, "model_cluster_num_parameter_nam": [175, 176, 177, 178], "model_from_config": 385, "model_from_python": 385, "model_init": 260, "model_json": 385, "model_param": [175, 176, 177, 178, 248, 252, 254, 386, 406], "modelnottrainederror": [224, 226, 227, 230, 234, 248, 250, 252, 254], "modif": [405, 409], "modifi": [27, 217, 258, 316, 317, 406, 409, 418, 425], "modul": [0, 1, 28, 77, 97, 110, 128, 138, 149, 152, 161, 164, 171, 182, 200, 201, 213, 222, 232, 239, 262, 265, 282, 332, 352, 355, 404, 405, 406, 407], "modular": 407, "mol": 309, "molecul": [51, 124, 130, 307, 308, 309, 416], "molecular": 416, "moment": [221, 244, 407, 422], "monitor": [406, 414], "monkeypatch": 405, "mont": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 68, 219, 361, 362, 364, 365, 366, 367, 382, 388, 401, 402, 411, 420], "monte_carlo_run": [219, 367, 382], "mordr": [124, 130, 186, 310, 363, 364, 366, 369, 370, 376, 378, 382, 386, 398, 399, 404, 406, 413, 416], "mordredcommun": [406, 416], "more": [8, 10, 18, 53, 58, 70, 130, 156, 157, 184, 186, 192, 199, 215, 258, 277, 280, 300, 342, 365, 366, 367, 370, 378, 383, 401, 404, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 418, 419, 422, 425], "morgan": [124, 308, 416], "morgan_fp": [124, 364, 416], "morgangener": [364, 375, 377, 379], "most": [192, 215, 362, 365, 368, 388, 404, 407, 411, 412, 413, 415, 416, 418, 419, 420, 421, 422, 423, 425], "motiv": 406, "move": [406, 419], "mpl_toolkit": 383, "mplot3d": 383, "mse": 388, "mu": [146, 147], "much": [364, 365, 415, 416], "multi": [223, 224, 360, 403, 406, 408, 411, 423], "multiarmedbandit": 388, "multipl": [36, 104, 154, 156, 157, 158, 218, 219, 317, 362, 363, 364, 365, 366, 376, 388, 404, 406, 411, 413, 415, 422, 423, 424], "multipli": 93, "multitask": 406, "must": [49, 99, 104, 109, 186, 192, 217, 221, 296, 317, 370, 381, 382, 388, 390, 406, 407, 409, 410, 413, 414, 415, 416], "mutual": 420, "my_attribut": 407, "my_valu": 414, "mypi": [288, 297, 404, 406, 407], "mystr": 407, "n": [22, 224, 285, 301, 348, 363, 364, 366, 369, 370, 375, 376, 377, 378, 379, 386, 388, 390, 392, 393, 394, 395, 397], "n_arm": 388, "n_batches_don": 27, "n_bit": 308, "n_cluster": [176, 177], "n_compon": 175, "n_doe_iter": [215, 219, 221, 361, 362, 363, 364, 365, 366, 367, 382, 383, 401, 402, 420], "n_estim": 386, "n_fits_don": 27, "n_interrupted_campaign": 382, "n_iter": [372, 373, 375, 376, 377, 378, 379, 388, 390], "n_mc_iter": [219, 221, 361, 362, 364, 365, 366, 367, 382, 401, 402, 420], "n_mc_run": 388, "n_mc_sampl": 17, "n_pis_ov": 382, "n_pis_over_requir": 382, "n_point": [184, 349], "n_raw_sampl": [168, 406, 417], "n_restart": [168, 406, 417], "n_sampl": 348, "n_task": 186, "n_task_param": 406, "naiv": [160, 250, 258, 365, 370, 406, 418], "naive_hybrid_campaign": 365, "naive_hybrid_recommend": 365, "naivehybridrecommend": 406, "naivehybridspacerecommend": [365, 395, 406, 417], "nake": [280, 414], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 40, 58, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 133, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 198, 207, 219, 230, 264, 266, 272, 284, 289, 294, 295, 296, 307, 308, 310, 311, 316, 318, 322, 335, 340, 342, 354, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 388, 390, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 406, 407, 409, 411, 413, 414, 415, 418, 419, 420, 421, 422, 423, 425], "name_or_abbr": [289, 295], "namedtupl": 388, "namespac": [169, 406, 407], "nan": [27, 136, 224, 310, 311, 356, 358, 359, 390], "nativ": [385, 406], "natur": [252, 364, 407, 413, 417, 419, 422], "navig": [404, 412], "nbase": [308, 310, 311], "nbviewer": 385, "nd": 404, "ndarrai": [105, 274, 275, 276, 324, 327, 338, 348, 383, 388, 406], "ne": 378, "nearli": 422, "necessari": [322, 381, 407, 412, 413, 415, 416, 418, 420], "necessarili": [409, 412, 413, 418, 423], "need": [22, 27, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 221, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 296, 321, 322, 361, 362, 363, 364, 365, 366, 367, 370, 375, 378, 379, 381, 383, 385, 388, 390, 392, 393, 394, 395, 401, 402, 404, 405, 406, 407, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 425], "neg": [13, 406], "negat": [6, 41, 402, 406, 423], "neglig": 409, "neither": [221, 317], "neq": 30, "nest": [342, 412, 424], "neural": 423, "neurip": 423, "never": [377, 378], "nevertheless": [300, 405], "new": [27, 43, 44, 96, 156, 158, 184, 217, 229, 274, 275, 276, 284, 320, 369, 382, 383, 397, 404, 406, 407, 412, 413, 421, 423], "new_rec": 412, "newli": [404, 407, 414, 423], "next": [27, 154, 156, 157, 158, 378, 381, 383, 397, 401, 402, 404, 410, 411, 412, 417, 419], "ngboost": [252, 370, 406], "ngboostmodel": 386, "ngboostsurrog": [370, 386, 421], "nice": [383, 405], "nicknam": 307, "nintern": 390, "no_duplicates_constraint": 378, "no_grad": 383, "no_tl": 401, "nois": [215, 317, 402, 406, 424], "noise_level": 317, "noise_perc": [215, 219, 420], "noise_std": [401, 402], "noise_typ": 317, "noised_hartmann": 401, "noisi": [12, 14, 401, 404, 406, 423], "non": [27, 57, 58, 99, 104, 109, 160, 186, 215, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 294, 296, 300, 349, 356, 357, 358, 393, 401, 406, 409, 411, 418, 419], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 38, 43, 44, 53, 57, 58, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 94, 96, 104, 109, 113, 126, 127, 132, 135, 136, 137, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 189, 192, 195, 198, 199, 202, 203, 205, 207, 215, 217, 219, 221, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 260, 261, 266, 272, 280, 281, 296, 316, 318, 319, 320, 327, 328, 340, 351, 356, 357, 358, 359, 370, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 390, 397, 418, 420, 422], "nonetheless": 423, "nonlinear": [33, 184], "nonpredict": [173, 175, 176, 177, 178, 180, 181], "nonpredictiverecommend": [178, 180, 181, 406], "nonzero": [30, 192, 406], "noqa": [375, 407], "nor": 317, "norecommenderslefterror": [156, 157], "noreturn": 231, "normal": [145, 146, 147, 375, 377, 378, 379, 390, 405, 409, 415, 418], "normaliz": 415, "normalprior": 406, "not_a_param": 386, "notabl": 406, "note": [27, 30, 53, 186, 215, 219, 221, 229, 230, 316, 317, 362, 363, 364, 365, 366, 370, 376, 378, 381, 385, 386, 390, 392, 393, 394, 395, 397, 398, 399, 404, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423], "notebook": 385, "noteworthi": 412, "noth": [13, 27, 30, 38, 40, 41, 47, 71, 104, 117, 158, 160, 166, 168, 175, 176, 177, 178, 184, 186, 192, 224, 234, 248, 252, 254, 272, 409, 416], "notic": [381, 407, 409, 419], "notimplementederror": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 105, 199, 202, 203, 221, 224, 226, 227, 229, 230, 234, 248, 250, 252, 254], "notwithstand": 409, "now": [362, 363, 364, 365, 366, 367, 369, 370, 375, 377, 378, 381, 382, 383, 388, 390, 397, 398, 401, 402, 404, 406, 416, 423, 425], "np": [105, 361, 362, 365, 367, 372, 373, 375, 376, 377, 378, 379, 383, 385, 386, 388, 394, 395, 397, 401, 402, 413, 416, 425], "nrecommend": [369, 370, 390, 392, 393, 394, 395], "nu": 84, "num": 331, "num_disc_1": [390, 412], "num_disc_2": 390, "num_experi": [215, 361, 362, 363, 364, 365, 366, 367, 382, 401, 402], "num_fantasi": 10, "num_parameter_1": 379, "num_parameter_2": 379, "num_parameter_3": 379, "num_parameter_4": 379, "num_parameter_5": 379, "num_parameter_6": 379, "num_sampl": 89, "num_valu": [375, 376, 377, 378, 379, 390, 397, 418], "number": [10, 13, 17, 27, 40, 89, 130, 151, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 215, 219, 221, 224, 308, 323, 327, 331, 343, 348, 349, 361, 362, 363, 364, 365, 366, 367, 372, 373, 375, 376, 377, 379, 383, 388, 392, 393, 394, 401, 402, 404, 405, 406, 410, 412, 413, 414, 415, 416, 418, 419, 420, 425], "numer": [27, 30, 31, 32, 33, 34, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 72, 112, 113, 114, 116, 117, 119, 126, 127, 130, 184, 192, 217, 272, 280, 317, 321, 349, 369, 372, 378, 406, 413, 414, 415, 416, 418, 420, 422], "numerical_measurements_must_be_within_toler": [27, 192, 280, 321, 406, 412], "numerical_onli": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "numericalcontinuousparamet": [41, 184, 365, 372, 373, 392, 393, 395, 402, 418, 424], "numericaldi": [375, 376, 377, 378, 379, 390, 397], "numericaldiscreteparamet": [192, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 390, 394, 395, 397, 398, 399, 401, 402, 404, 418, 419, 424, 425], "numericaltarget": [217, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 377, 378, 379, 382, 383, 385, 386, 390, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 406, 415, 419, 424], "numericcontinu": [365, 395], "numparam1": 379, "numparam2": 379, "numparam3": 379, "numparam4": 379, "numparam5": 379, "numparam6": 379, "numpi": [324, 327, 333, 335, 361, 362, 365, 367, 372, 373, 375, 376, 377, 378, 379, 383, 385, 386, 388, 394, 395, 397, 401, 402, 406, 413, 425], "nuniqu": 378, "nyou": [361, 392, 394, 395], "o": [361, 362, 363, 364, 365, 366, 367, 369, 370, 373, 375, 376, 377, 378, 379, 382, 383, 386, 388, 401, 402, 404, 413, 414, 416], "o2": [363, 364, 366], "obj": [135, 136, 137, 203], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 104, 107, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 193, 194, 203, 204, 207, 209, 224, 226, 227, 228, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 287, 288, 294, 296, 309, 317, 321, 322, 327, 340, 351, 365, 369, 381, 382, 383, 385, 386, 388, 395, 398, 399, 405, 406, 407, 409, 412, 413, 417, 418, 420, 421, 422, 424, 425], "objective_json": 419, "oblig": 409, "observ": [213, 388, 420, 422], "obtain": [215, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 364, 383, 388, 402, 404, 406, 412, 419, 423], "oc": [363, 364, 366, 369, 370], "oc1": [363, 364, 366], "occur": [52, 407], "occurr": 413, "octanol": [413, 416], "off": [8, 18, 221, 301, 376, 404, 406, 413, 414, 422], "offer": [296, 383, 388, 394, 405, 409, 410, 416, 417, 419, 420, 421, 423, 425], "offset": [41, 87], "offset_initial_valu": 87, "offset_prior": 87, "often": [388, 405, 410, 413, 414, 416, 419, 425], "oftentim": 419, "oh": [116, 121, 364, 386, 388, 390, 397, 398, 399, 404, 418, 419], "ok": 390, "old": 423, "omit": [219, 296, 381, 404, 419], "onc": [219, 382, 416, 420], "one": [17, 27, 58, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 142, 151, 152, 156, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 199, 217, 234, 258, 284, 285, 342, 362, 363, 364, 365, 366, 370, 372, 388, 390, 399, 401, 402, 404, 405, 406, 407, 409, 411, 412, 413, 415, 416, 418, 419, 420, 421, 422, 423], "onehot": 364, "ones": [186, 280, 321, 364, 395, 406, 411, 423], "ongo": [382, 423], "onli": [8, 10, 18, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 84, 99, 104, 109, 130, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 192, 217, 221, 258, 280, 281, 296, 297, 300, 316, 321, 327, 342, 348, 349, 361, 363, 370, 375, 376, 378, 382, 383, 385, 386, 392, 393, 394, 395, 402, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425], "onlin": 388, "onnx": [229, 230, 334, 384, 404, 406, 421], "onnx_input_nam": [230, 385], "onnx_str": [230, 385], "onto": 407, "open": [404, 407], "opentelemetri": [404, 406, 414], "oper": [38, 41, 50, 205, 258, 332, 372, 373, 377, 378, 379, 405, 406, 411, 413, 417, 419], "operator_convert": 385, "opposit": 413, "opt": [404, 414], "optim": [17, 27, 41, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 213, 215, 219, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 316, 364, 365, 367, 368, 369, 372, 373, 382, 383, 388, 390, 395, 406, 408, 410, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423], "optimize_acqf": [41, 168], "optimize_acqf_": 41, "optimize_acqf_discret": 168, "optimize_acqf_mix": 168, "option": [27, 73, 83, 84, 85, 86, 87, 88, 89, 90, 94, 104, 109, 113, 116, 117, 119, 127, 130, 132, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 205, 207, 215, 219, 221, 248, 252, 254, 260, 266, 272, 296, 316, 318, 319, 320, 340, 366, 370, 385, 386, 388, 405, 406, 407, 410, 412, 413, 415, 418, 419, 420, 421, 422, 425], "oracl": 420, "orchestr": [407, 412], "order": [186, 192, 378, 382, 388, 404, 406, 407, 412, 413, 416, 419, 423], "ordin": 422, "org": [41, 246, 288, 303, 320, 385, 404, 409], "organ": 407, "origin": [22, 27, 284, 285, 292, 397, 406, 407, 409, 416, 417, 419, 421], "orthogon": 407, "oserror": 405, "other": [49, 91, 184, 285, 362, 363, 366, 369, 372, 373, 378, 382, 388, 392, 395, 401, 402, 404, 405, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 425], "otherwis": [41, 112, 113, 114, 116, 117, 119, 126, 127, 130, 378, 409, 410, 415, 423], "our": [365, 375, 377, 381, 382, 383, 386, 388, 392, 393, 394, 395, 398, 399, 401, 402, 404, 407, 410, 412, 413, 419, 420], "out": [192, 390, 402, 404, 409, 414, 420, 423], "outcom": [151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 364, 404, 416, 422], "output": [27, 94, 317, 340, 393, 401, 402, 405, 406, 408, 421], "outputscal": 94, "outputscale_initial_valu": 94, "outputscale_prior": 94, "outsid": [27, 258, 275, 276, 316, 321, 390, 406, 419], "outstand": 409, "over": [27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 406, 410, 423], "overal": [186, 385, 386, 388, 406, 407, 412, 415, 423], "overlap": [57, 58, 310, 311, 372, 373, 392, 413], "overrid": [205, 207, 381, 406], "overridden": [381, 407], "overview": 419, "overwritten": 395, "own": [160, 404, 405, 406, 407, 409, 413, 416], "owner": 409, "ownership": 409, "p": [363, 364, 366, 369, 370, 381, 383, 401, 402, 407, 421, 425], "p1": [418, 419], "p1_json": 419, "p1_via_json": 419, "p2": [418, 419], "p2_json": 419, "p2_via_json": 419, "p3c4": [363, 364, 366], "p_i": 30, "pack": 419, "packag": [278, 405, 406, 407, 416, 421, 425], "page": [385, 404, 406, 407], "pair": [284, 404, 416], "pam": 177, "pamclusteringrecommend": 417, "panda": [48, 193, 211, 212, 217, 307, 324, 363, 364, 366, 375, 382, 383, 390, 401, 402, 406, 413, 416, 418, 419], "paper": 423, "paper_fil": 423, "parallel": 407, "param": [384, 386, 403, 418], "param1": [418, 420], "param2": [418, 420], "param_bounds_comp": 406, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 61, 70, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 105, 109, 112, 113, 116, 117, 119, 121, 122, 123, 124, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 188, 191, 192, 193, 194, 197, 198, 199, 205, 207, 209, 213, 215, 217, 219, 221, 224, 226, 227, 230, 234, 237, 244, 246, 248, 250, 252, 254, 256, 258, 260, 261, 264, 266, 272, 274, 275, 276, 280, 281, 284, 285, 290, 291, 292, 294, 296, 299, 300, 301, 303, 306, 307, 308, 309, 310, 311, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 331, 336, 337, 338, 340, 342, 344, 345, 348, 349, 351, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 388, 390, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 406, 407, 413, 414, 415, 419, 420, 421, 423, 424], "parameter": [142, 143, 144, 145, 146, 147, 148], "parameter_json": 419, "parameter_nam": [184, 186, 192], "parameterencod": [113, 121, 122, 124, 127], "parametr": 413, "parent": 407, "pars": [329, 406], "parser": 406, "part": [13, 22, 36, 64, 160, 161, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 316, 386, 395, 398, 399, 401, 402, 406, 407, 409, 410, 411, 412, 413, 417, 418, 419, 425], "parti": 409, "partial": [22, 382, 424], "particl": 423, "particular": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 192, 213, 381, 395, 404, 405, 407, 409, 412, 416, 418, 419, 420], "particularli": [296, 412], "partit": [177, 219, 221, 406, 417, 420], "pass": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 175, 176, 177, 178, 186, 192, 203, 234, 248, 252, 254, 322, 397, 402, 406, 407, 415, 419], "passthrough": [24, 100, 188, 238], "patch": 382, "patent": 409, "path": [340, 364, 406, 407, 414, 425], "pattern": [407, 423], "pd": [27, 217, 284, 285, 363, 364, 366, 375, 382, 383, 390, 401, 402, 406, 413, 416, 418, 419], "pdf": 423, "peek": 419, "pend": [22, 27, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 404, 406, 424], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 406, 411, 417], "per": [215, 361, 362, 363, 364, 365, 366, 367, 370, 390, 394, 401, 402, 406, 416, 418, 420], "percent": [215, 409], "percentag": [168, 280, 317, 370, 375, 376, 377, 378, 379, 390, 397, 402, 417], "perf_count": 381, "perfectli": 419, "perform": [168, 215, 280, 364, 365, 375, 376, 377, 378, 379, 383, 398, 401, 402, 404, 407, 409, 410, 412, 414, 416, 417, 420, 421, 423], "period": 85, "period_length_initial_valu": 85, "period_length_prior": 85, "periodickernel": 406, "perm_inv_constraint": 378, "permiss": [404, 409], "permut": [49, 52, 53, 285, 378, 406, 413], "permutation_invari": 49, "permutationinvarianceconstraint": 378, "perpetu": 409, "persist": [412, 414, 419, 421], "perspect": 419, "pertain": 409, "phase": 158, "phcpho": [363, 364, 366, 369, 370], "phenomenon": 412, "philosophi": 419, "physic": 420, "pi": [7, 370, 382, 383], "pi_max": 383, "pi_per_iter": 383, "pi_required_fract": 382, "pi_threshold": 382, "pickl": 406, "pictur": 404, "piec": [388, 404, 412, 413], "piecewis": 86, "piecewisepolynomialkernel": 406, "pin": [22, 406], "pin_discret": 22, "pinned_part": 22, "pip": [404, 406, 407, 425], "pipelin": [401, 402, 406, 407], "pival": [363, 364, 366, 369, 370], "pl": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55], "place": [27, 30, 217, 316, 317, 385, 386, 388, 405, 406, 407, 409, 412, 416, 419, 423], "placehold": 287, "plai": [412, 422], "plain": 238, "plainkernelfactori": [79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 234], "plan": [229, 416], "platt": 423, "pleas": [364, 375, 377, 379, 385, 386, 404, 410, 417], "plot": [215, 361, 362, 363, 364, 365, 366, 401, 402, 406, 421, 423], "plot_abegin_convert_pipelin": 334, "plot_ebegin_float_doubl": 334, "plotting_them": 340, "plt": [362, 363, 365, 366, 383], "plu": [217, 404], "plugin": 406, "pm": [5, 370], "png": [362, 363, 365, 366], "po16": 416, "poetri": 406, "point": [6, 13, 17, 22, 26, 27, 127, 151, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 192, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 333, 334, 346, 347, 348, 349, 353, 362, 363, 365, 367, 369, 370, 378, 382, 394, 395, 401, 402, 404, 406, 408, 410, 411, 412, 417, 418, 420, 424, 425], "points_per_dim": [361, 362, 365, 367, 383, 394, 395, 401, 402], "polar": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 194, 404, 406, 408, 424, 425], "poli": 383, "polici": 388, "polycollect": 383, "polym": 416, "polynomi": [86, 87], "polynomialkernel": 406, "polytop": 406, "popular": 421, "posit": [296, 348, 406, 415], "posixpath": 340, "possibl": [132, 192, 193, 194, 213, 296, 316, 365, 366, 382, 383, 390, 404, 406, 409, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 425], "possibli": 157, "post": 416, "post_hook": [296, 381, 382, 383], "posterior": [5, 6, 8, 13, 17, 18, 27, 224, 226, 227, 230, 234, 248, 250, 252, 254, 257, 370, 406, 410, 421], "posterior_mean": [224, 388], "posterior_mod": 224, "posteriorstandarddevi": [388, 410], "postprocess": 307, "potassium": [363, 364, 366, 369, 370], "potenti": [186, 321, 404, 405, 406, 407, 412, 415, 418, 425], "power": [87, 409, 413, 417], "pph3": [363, 364, 366], "pr": [406, 407], "practic": [410, 417], "pre": [132, 156, 237, 384, 405, 406, 407, 418], "pre_hook": [296, 381], "precis": [53, 156, 184, 280, 323, 334, 335, 354, 406, 424], "precomput": 119, "predefin": [340, 412, 417], "predict": [8, 18, 27, 67, 178, 224, 226, 227, 230, 234, 248, 250, 252, 254, 404, 406, 410, 411, 412, 420, 421, 423], "predictor": 256, "prefer": [27, 409, 419], "prefix": [308, 310, 311], "preliminari": 423, "prepar": [383, 407, 409, 425], "preprocess": 406, "presenc": 405, "present": [99, 104, 109, 186, 284, 285, 296, 321, 369, 388, 406, 413, 420, 425], "preset": [234, 241, 244, 246, 406], "pressur": [377, 385, 386, 397, 398, 399, 404, 413], "pretrain": [230, 384, 403], "pretti": 323, "pretty_print_df": 406, "prevent": [202, 203, 296, 405, 407, 418], "previou": [156, 382, 383, 406, 412, 414, 417, 423], "previous": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 280, 363, 364, 366, 369, 370, 377, 411], "price": 416, "primari": 412, "primarili": 410, "principl": [388, 421], "print": [217, 323, 342, 361, 363, 364, 366, 367, 369, 370, 372, 373, 377, 381, 385, 386, 388, 392, 393, 394, 395, 397, 398, 399, 404, 406, 425], "print_parameter_names_hook": 381, "printer_inst": 381, "prior": [83, 84, 85, 86, 87, 88, 89, 90, 94, 142, 143, 144, 145, 146, 147, 148, 224, 244, 379, 404, 405, 406, 420], "priori": [413, 419, 423], "privat": [406, 408], "probabilist": 410, "probability_of_improv": 383, "probabilityofimprov": [382, 383], "probabl": [7, 15, 17, 370, 380, 382, 403, 406], "problem": [388, 401, 402, 406, 407, 412, 415, 419], "problemat": [300, 405, 416], "proce": [215, 369, 414], "procedur": [410, 423], "proceed": 423, "process": [27, 77, 232, 233, 234, 235, 239, 240, 241, 243, 244, 245, 246, 348, 367, 370, 381, 388, 401, 402, 406, 407, 410, 411, 412, 413, 414, 416, 419, 423], "prod": [378, 379], "prod_constraint": 379, "prod_i": 415, "produc": [105, 217, 404, 407, 420], "product": [54, 93, 186, 192, 193, 194, 293, 374, 403, 404, 406, 409, 413, 424, 425], "product_paramet": [192, 418], "productkernel": 406, "progress": [27, 155, 383, 406], "prohibit": 410, "project": [383, 404, 406, 414], "promin": 409, "promis": [382, 411], "proper": [406, 420], "properli": [22, 390, 405, 418], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 107, 109, 112, 113, 114, 116, 117, 119, 121, 122, 124, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 187, 191, 192, 224, 226, 227, 230, 234, 237, 241, 244, 246, 248, 250, 252, 254, 264, 266, 269, 270, 272, 288, 327, 347, 351, 406, 407, 413], "proport": 402, "propos": 412, "protobuf": 406, "protocol": [150, 151, 228, 236, 300, 406], "prototyp": 408, "provid": [13, 27, 41, 105, 119, 130, 132, 151, 156, 157, 160, 161, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 205, 209, 213, 215, 217, 219, 221, 224, 226, 227, 230, 234, 244, 246, 248, 250, 252, 254, 284, 293, 296, 303, 306, 313, 317, 320, 322, 324, 348, 349, 361, 363, 364, 365, 366, 381, 392, 393, 394, 395, 398, 401, 402, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423], "prune": [12, 14], "prune_baselin": [12, 14], "pstd": [6, 406, 410], "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 107, 109, 112, 113, 114, 116, 117, 119, 121, 122, 124, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 187, 191, 192, 209, 224, 226, 227, 228, 230, 234, 236, 237, 241, 244, 246, 248, 250, 252, 254, 264, 266, 269, 270, 272, 287, 288, 327, 347, 351, 406, 407], "publicli": 409, "publish": 406, "pull": [388, 406], "pure": [8, 10, 13, 18, 152, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 221, 229, 349, 362, 367, 394, 406, 424], "purerecommend": [154, 156, 157, 158, 160, 166, 173, 406], "purpos": [13, 381, 382, 385, 388, 404, 405, 407, 409, 419, 425], "push": 407, "put": [388, 414, 416], "puzzl": 404, "py": [246, 406, 414], "py312": 407, "pyarrow": 406, "pydant": 406, "pydoclint": [406, 407], "pydocstyl": 407, "pylint": 406, "pymatgen": 405, "pypi": [404, 406], "pyplot": [362, 363, 365, 366, 383], "pyproject": 406, "pytest": [406, 407], "python": [26, 288, 297, 364, 386, 393, 398, 399, 404, 405, 406, 407, 412, 414, 419], "python310": 405, "pytorch": 406, "pyupgrad": 406, "q": [86, 256, 257, 370, 411], "qei": [9, 362, 370, 398, 399, 406], "qexpectedimprov": 370, "qkg": [10, 406], "qlogei": [11, 406], "qlogexpectedimprov": [375, 376, 377, 378, 379, 390, 397], "qlognei": [12, 406], "qnegintegratedposteriorvari": 410, "qnei": [14, 406], "qnipv": [13, 406, 410], "qpi": [15, 370], "qsimpleregret": 17, "qsr": [16, 406], "qt": 17, "qthompsonsampl": [388, 406], "quadrat": 90, "qualiti": 407, "quantif": 423, "quantifi": [388, 410, 423], "quantiti": [27, 51, 414, 415, 421, 425], "quantum": 119, "qucb": [18, 370, 410], "queri": [152, 161, 213, 215, 217, 404, 412, 414, 420], "question": [407, 412, 423], "qupperconfidencebound": 410, "qvarucb": 406, "r": [363, 364, 366, 369, 370], "radial": 88, "radiu": [308, 416], "rais": [13, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 105, 132, 136, 137, 156, 157, 166, 168, 184, 186, 192, 198, 199, 202, 203, 215, 217, 221, 224, 226, 227, 229, 230, 231, 234, 248, 250, 252, 254, 261, 285, 294, 296, 299, 301, 309, 313, 314, 316, 317, 321, 322, 342, 348, 349, 365, 381, 382, 383, 395, 405, 406, 407, 417], "rand": 385, "random": [13, 89, 184, 186, 215, 217, 219, 253, 254, 316, 347, 348, 349, 361, 362, 363, 364, 365, 366, 370, 382, 383, 385, 388, 402, 404, 406, 410, 416, 417, 420, 425], "random_campaign": [361, 362, 365], "random_forest": [254, 370], "random_recommend": [362, 365], "random_se": [215, 219, 382, 420], "randomforestmodel": 386, "randomforestsurrog": [370, 406, 421], "randomli": [181, 364, 410, 417], "randomrecommend": [361, 362, 363, 364, 365, 366, 370, 375, 376, 377, 378, 379, 381, 382, 383, 388, 390, 406, 411, 417], "rang": [112, 113, 114, 116, 117, 119, 126, 127, 130, 264, 316, 361, 362, 365, 367, 372, 373, 375, 376, 377, 378, 379, 383, 388, 390, 392, 393, 394, 395, 402, 404, 413, 419, 420, 422, 425], "rank": 422, "rastrigin": [361, 372, 373, 392, 394, 395], "rate": [143, 224, 388], "rather": [365, 397, 405, 410, 419], "ration": 90, "ravel": [401, 402], "raw": [168, 419], "rbf": 88, "rbfkernel": 406, "rdkit": [124, 186, 306, 311, 364, 375, 377, 379, 413, 416], "re": [362, 365, 367, 382, 392, 393, 394, 395, 407, 417], "reach": [274, 276, 390], "reachabl": 414, "reactant": 416, "reaction": [364, 369, 404, 413, 416, 423], "reactor": [411, 423], "reactora": 423, "reactorb": 423, "reactorc": 423, "read": [119, 186, 340, 364, 369, 404, 406, 407], "read_excel": [363, 364, 366, 382], "readabl": [191, 323, 331, 397, 406, 408, 409, 419], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 215, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 407, 411], "readm": [406, 407], "reagent": [413, 416], "real": [327, 404, 412, 422], "realist": 420, "realiz": [213, 420], "reason": [38, 175, 176, 177, 178, 192, 364, 378, 394, 406, 409, 410, 411, 413, 416, 420], "reassembl": 419, "rebas": 407, "rec": [375, 376, 377, 378, 379, 390, 411, 412], "rec_finish": 411, "rec_next": 411, "rec_pend": 411, "receiv": [409, 414, 419], "recip": 407, "recipi": 409, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 64, 69, 70, 117, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 192, 213, 215, 228, 229, 280, 316, 317, 361, 362, 363, 364, 365, 366, 368, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 388, 390, 398, 399, 401, 402, 403, 404, 406, 407, 410, 414, 416, 418, 420, 421, 423, 424, 425], "recommendation_orig": 397, "recommendation_recr": 397, "recommended_arm_idx": 388, "recommender_with_hook": 382, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 154, 156, 157, 158, 163, 228, 381, 383, 406, 411], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 327, 404, 412, 414, 419], "record": [27, 280, 281, 404, 414, 423], "recreat": [241, 397, 419], "recreate_model": 386, "recurs": [290, 291], "redesign": 406, "redistribut": 409, "reduc": [130, 383, 388, 401, 402, 416], "reduct": 424, "ref": 404, "refactor": 406, "refer": [213, 246, 280, 295, 316, 321, 334, 361, 362, 363, 364, 365, 366, 367, 370, 372, 373, 375, 376, 377, 378, 379, 381, 383, 385, 386, 390, 392, 393, 394, 395, 397, 405, 406, 412, 415, 416, 417, 418, 419, 420, 421, 423], "referenc": 407, "refin": [382, 404, 406, 412], "reflect": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 383, 406, 407, 410, 413, 416], "regard": [30, 36, 372, 373, 378, 392, 407, 409], "regim": 406, "regist": [296, 380, 382], "register_custom_architectur": 406, "register_hook": [380, 381, 382, 383, 406], "registr": 406, "regress": 248, "regressor": 385, "regret": [16, 17], "regroup": 406, "regular": [17, 258, 405, 406, 411, 423], "reinstal": 404, "rel": [215, 413, 415], "relat": [51, 99, 104, 106, 109, 120, 186, 204, 268, 283, 395, 401, 402, 404, 406, 412, 413, 414, 423], "relationship": [401, 402, 404, 407, 415, 423], "relative_perc": 317, "releas": [404, 406], "relev": [49, 192, 217, 322, 376, 406, 407, 412, 413, 423, 425], "reli": [405, 406], "reliabl": 416, "remain": [52, 221, 275, 388, 390, 395, 401, 402, 409, 416, 419, 420], "remaind": 349, "remind": 406, "remot": 407, "remov": [48, 51, 52, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 192, 378, 407, 413, 418], "renam": [364, 401, 402, 406, 407], "render": 385, "reoccur": 423, "reorder": 406, "reorgan": 406, "repeat": [388, 406, 407, 411, 412], "repetit": [219, 370, 382], "rephras": 413, "replac": [361, 392, 394, 395, 406, 407, 416], "replic": 419, "repo": 406, "report": [151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 388, 405], "repositori": [364, 404, 407], "repr": 385, "repres": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 92, 93, 119, 186, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 313, 324, 327, 331, 348, 378, 388, 398, 399, 404, 406, 409, 412, 416, 418, 425], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 209, 224, 226, 227, 228, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 301, 305, 313, 316, 323, 327, 342, 375, 376, 377, 378, 379, 385, 390, 397, 406, 411, 412, 416, 419, 424, 425], "reproduc": [382, 388, 406, 409, 424], "reproduct": 409, "request": [27, 69, 70, 105, 156, 157, 158, 199, 237, 278, 348, 349, 406, 411, 412], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 30, 40, 41, 47, 68, 158, 192, 261, 296, 369, 378, 381, 382, 385, 388, 390, 394, 398, 404, 405, 406, 407, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423, 425], "rerun": 385, "reserv": [404, 407], "reset_index": 401, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 376, 378, 379, 419], "resolv": 307, "resort": [258, 407, 419, 425], "resource_track": 405, "resp": [187, 365, 366, 395], "respect": [27, 168, 187, 215, 219, 279, 284, 316, 378, 407, 412, 413, 415, 419, 421, 422, 425], "respons": [409, 412, 417], "restart": [156, 168], "restor": 419, "restr": 17, "restrain": 416, "restrict": [186, 192, 213, 219, 221, 375, 406, 420, 423, 424], "result": [8, 10, 18, 27, 130, 192, 215, 316, 361, 362, 363, 364, 365, 366, 367, 369, 385, 386, 388, 390, 401, 402, 404, 406, 409, 410, 412, 413, 414, 416, 417, 419, 420, 423, 424, 425], "result_baselin": [401, 402], "result_fract": 402, "results_interrupt": 382, "results_uninterrupt": 382, "retain": [409, 413], "retrain": [229, 230, 421], "retriev": [186, 213, 289, 290, 291, 407, 420], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 99, 100, 102, 104, 105, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 133, 135, 136, 137, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 170, 173, 175, 176, 177, 178, 180, 181, 184, 186, 188, 189, 192, 193, 194, 195, 197, 198, 199, 202, 203, 205, 206, 207, 209, 211, 212, 215, 217, 219, 221, 224, 226, 227, 228, 230, 231, 234, 237, 238, 242, 248, 250, 252, 254, 256, 257, 258, 260, 261, 264, 266, 272, 274, 275, 276, 278, 279, 280, 281, 284, 285, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 331, 336, 337, 338, 340, 341, 342, 348, 349, 351, 356, 357, 358, 359, 362, 365, 367, 375, 382, 383, 385, 388, 393, 401, 406, 412, 413, 420, 421, 425], "return_std": 385, "reus": 158, "reuse_last": 156, "reveal": [383, 402], "review": 407, "revis": [406, 409], "reward": 388, "rework": 406, "rewrit": 406, "rff": 89, "rffkernel": 406, "rh": [41, 43, 44, 372, 373, 413], "right": [41, 148, 321, 327, 363, 366, 376, 388, 404, 405, 407, 409, 413, 415, 416, 422], "right_df": 321, "rihana": 408, "rim": 408, "risk": [405, 409, 412, 418], "roam": 405, "robust": [404, 423], "robustli": 258, "role": [406, 407, 412, 415, 422, 424], "room": [383, 412], "root": [364, 404, 407, 413], "round": [323, 372, 378, 385, 386, 413], "roundtrip": [406, 419], "rout": 419, "row": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 105, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 217, 280, 284, 285, 321, 323, 338, 363, 366, 372, 373, 375, 376, 377, 378, 379, 390, 392, 393, 394, 395, 397, 412, 418, 420], "rowei": 423, "roya": 408, "royalti": 409, "rq": 90, "rqkernel": 406, "ruff": [406, 407], "rule": [381, 406], "run": [215, 219, 361, 362, 363, 364, 365, 366, 367, 382, 383, 401, 402, 404, 405, 406, 407, 412, 419, 420, 425], "run_analyt": [362, 365], "run_full_initial_data": 363, "run_hybrid": 365, "run_impute_mod": 366, "runtim": [334, 405], "runtimeerror": [27, 156, 381], "rv": 388, "s41586": [246, 320], "safe": [406, 407, 412], "safeti": 296, "sai": 413, "said": 407, "same": [51, 154, 156, 157, 158, 192, 198, 217, 224, 226, 227, 230, 234, 248, 250, 252, 254, 292, 370, 382, 385, 386, 388, 397, 405, 411, 413, 414, 419, 423], "sampl": [10, 13, 17, 40, 168, 180, 181, 184, 281, 346, 347, 348, 349, 363, 365, 370, 375, 376, 377, 378, 379, 388, 390, 397, 402, 404, 406, 408, 424], "sample_from_full_factori": [184, 406], "sample_inactive_paramet": 40, "sample_percentag": 417, "sample_uniform": [184, 406], "sampler": [370, 375, 376, 377, 378, 379, 390, 397], "samples_full_factori": [184, 406], "samples_random": [184, 406], "sampling_algorithm": [347, 410], "sampling_fract": [13, 410], "sampling_method": [13, 410], "sampling_n_point": [13, 410], "sampling_percentag": [168, 365, 370], "satisfi": [36, 37, 38, 192, 372, 373], "save": [340, 362, 363, 365, 366, 385, 406], "savefig": [362, 363, 365, 366], "scalar": [104, 367, 390, 406, 415, 419], "scale": [94, 144, 145, 146, 147, 148, 351, 390, 401, 406, 410, 415], "scalekernel": 406, "scaler": 406, "scenario": [221, 361, 362, 363, 364, 365, 366, 367, 382, 401, 402, 411, 413, 415, 423, 424, 425], "scene": 415, "schema": 412, "schembl15068049": [363, 364, 366], "scheme": 406, "scienc": [404, 408], "scientif": [406, 423], "scipi": [338, 383, 388, 406], "screen": [292, 423], "script": [307, 405, 406, 414, 425], "seaborn": [361, 362, 363, 364, 365, 366, 382, 401, 402], "seamlessli": 419, "search": [13, 22, 27, 34, 48, 51, 61, 64, 70, 112, 113, 114, 116, 117, 119, 126, 127, 130, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 192, 196, 215, 219, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 280, 321, 322, 366, 369, 371, 374, 375, 376, 377, 378, 379, 381, 382, 383, 388, 390, 391, 397, 402, 406, 408, 411, 412, 413, 414, 419, 420, 424], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 112, 113, 114, 116, 117, 119, 126, 127, 130, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 187, 191, 192, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 364, 369, 381, 382, 383, 385, 386, 388, 397, 398, 399, 401, 403, 404, 406, 412, 413, 414, 416, 418, 419, 420, 425], "searchspace_json": 419, "searchspacetyp": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 370, 375, 376, 377, 378, 379, 382, 383, 390, 397, 418], "second": [336, 338, 367, 370, 385, 386, 390, 399, 401, 413, 414], "secondari": [404, 414], "section": [404, 406, 407, 409, 419], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 138, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 215, 219, 221, 224, 226, 227, 228, 230, 234, 237, 244, 246, 248, 250, 252, 254, 264, 266, 272, 277, 294, 300, 303, 317, 327, 351, 361, 362, 363, 364, 365, 366, 367, 372, 373, 381, 382, 386, 392, 395, 404, 407, 412, 414, 415, 416, 417, 419, 420, 424], "seed": [215, 219, 344, 345, 382, 383, 388, 404, 406, 425], "seek": 390, "seem": [309, 334, 399, 405], "seen": 410, "select": [6, 36, 37, 38, 63, 68, 154, 156, 157, 158, 161, 178, 180, 224, 226, 227, 230, 234, 248, 250, 252, 254, 275, 348, 370, 376, 377, 388, 395, 404, 406, 410, 412, 413, 417, 419, 421], "select_recommend": [154, 156, 157, 158], "self": [296, 314, 356, 357, 358, 359, 381, 382, 383, 388, 407], "sell": 409, "semant": [406, 419], "sens": [53, 296, 300, 413, 416], "sent": 409, "separ": [219, 221, 258, 294, 351, 352, 383, 406, 407, 409, 419], "seq_greedy_campaign": 365, "seq_greedy_ei_campaign": [361, 362], "seq_greedy_ei_recommend": 362, "seq_greedy_recommend": 365, "sequenc": [27, 41, 104, 136, 156, 184, 186, 192, 193, 194, 197, 280, 284, 285, 296, 297, 314, 321, 322, 338, 415, 417], "sequenti": [156, 157, 158, 168, 361, 362, 365, 370, 375, 376, 377, 378, 379, 390, 397, 406, 417], "sequential_continu": [168, 417], "sequential_greedy_x": 406, "sequentialgreedyrecommend": 406, "sequentialmetarecommend": [157, 417], "sequentialstrategi": 406, "seri": [27, 36, 37, 38, 48, 113, 116, 117, 119, 127, 130, 264, 266, 272, 375, 406, 413], "serial": [157, 192, 209, 281, 385, 403, 405, 406, 407, 413, 417, 424], "serializ": [404, 413, 417], "serialize_datafram": 419, "serialized_df": 211, "serializetostr": 385, "serialmixin": [20, 27, 31, 36, 81, 99, 114, 140, 154, 184, 186, 192, 227, 237, 264, 266, 272, 327, 406], "serv": [221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 321, 401, 402, 412, 413, 416], "servic": 409, "session": [230, 414, 419], "set": [30, 38, 40, 51, 53, 57, 58, 130, 151, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 215, 219, 241, 279, 316, 320, 340, 344, 345, 363, 364, 365, 366, 368, 370, 375, 377, 381, 386, 388, 390, 395, 404, 406, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 423, 425], "set_box_aspect": 383, "set_dash": 382, "set_random_se": [383, 388, 425], "set_size_inch": [362, 363, 365, 366], "set_x_pend": 22, "set_xlabel": 383, "set_xtick": 383, "set_xticklabel": 383, "set_ylabel": 383, "set_ylim": 383, "set_zlabel": 383, "setpoint": 127, "setup": [215, 382, 413, 420, 425], "sever": [132, 152, 362, 364, 367, 370, 382, 385, 388, 390, 402, 404, 406, 407, 411, 413, 414, 415, 416, 418, 419, 420, 423, 425], "shall": [156, 317, 409, 415], "shap": 421, "shap_valu": 421, "shape": [17, 184, 191, 270, 274, 276, 348, 418, 425], "share": [406, 409, 423], "shield": [246, 320, 364, 404, 416], "shift": [8, 18, 401], "shifted_hartmann": 401, "ship": [352, 414, 419], "shm": 405, "short": 407, "shortcut": [192, 418, 419], "shorten": [406, 407], "shot": 423, "should": [27, 49, 117, 130, 192, 207, 219, 269, 284, 285, 316, 317, 319, 320, 321, 323, 326, 327, 328, 336, 340, 365, 375, 377, 378, 382, 385, 393, 395, 399, 404, 406, 407, 411, 412, 413, 418, 420, 421, 423, 425], "show": [361, 362, 363, 364, 365, 366, 367, 369, 370, 375, 376, 377, 385, 386, 388, 393, 395, 397, 398, 399, 401, 402, 413, 418], "showcas": 417, "shown": [382, 388, 402, 406], "shrink": 383, "shutdown": 405, "side": [41, 275, 406], "sigma": [145, 146, 147, 148, 274, 390, 408], "signal": [60, 415], "signatur": [75, 261, 294, 296, 383, 406, 407, 413, 419], "significantli": [192, 388, 401, 402], "silenc": 407, "silent": [406, 413], "similar": [157, 405, 413, 414, 416, 417, 418, 419, 423, 425], "similarli": [365, 393, 416], "simpl": [16, 17, 288, 364, 381, 382, 393, 404, 406, 417, 420, 422, 423], "simpler": [407, 419], "simplest": 418, "simplex": [192, 424], "simplex_paramet": [192, 418], "simpli": [300, 381, 382, 407, 413, 416, 417, 418, 419, 422, 423], "simplic": 296, "simplifi": [362, 407], "simul": [71, 303, 317, 377, 378, 383, 404, 406, 423, 424], "simulate_experi": [219, 221, 420], "simulate_scenario": [221, 361, 362, 363, 364, 365, 366, 367, 382, 401, 402, 420], "simulate_transfer_learn": [401, 420], "simulationresult": 388, "simultan": 415, "sinc": [53, 186, 229, 296, 363, 372, 373, 378, 386, 392, 394, 397, 398, 399, 401, 407, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 423], "singer": 423, "singl": [17, 27, 36, 49, 96, 109, 184, 186, 192, 215, 264, 266, 272, 327, 335, 342, 348, 354, 361, 362, 363, 364, 365, 366, 376, 382, 383, 390, 393, 401, 402, 404, 406, 413, 415, 416, 418, 423, 424], "single_lin": 342, "singledispatch": 329, "singletargetobject": [27, 264, 266, 272, 361, 362, 363, 364, 365, 366, 369, 370, 372, 373, 375, 376, 377, 378, 379, 382, 383, 385, 386, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 406, 421, 424], "site": 405, "situat": [375, 377, 378, 405, 407, 411, 413, 415, 416, 419, 423], "size": [17, 79, 80, 81, 84, 86, 88, 89, 90, 156, 158, 186, 191, 192, 281, 331, 383, 385, 388, 392, 393, 394, 395, 401, 402, 412, 419, 420, 423, 425], "sk": 385, "skeleton": 406, "skicit": 406, "skin": 420, "skip": [189, 195, 406, 412], "skl2onnx": 385, "sklearn": [178, 334, 385, 405], "sklearnclusteringrecommend": [175, 176, 177, 406, 411], "slightli": [213, 364, 420], "slot": [388, 406], "slow": [375, 377, 379, 418], "slowest": 406, "small": [282, 286, 372, 401, 402, 406, 410, 416], "smaller": [27, 388, 412, 423], "smallest": [184, 418], "smart": 404, "smile": [130, 305, 306, 307, 308, 309, 310, 311, 404, 416], "smiles_list": [308, 309, 310, 311], "smoke": 406, "smoke_test": [340, 361, 362, 363, 364, 365, 366, 367, 373, 375, 376, 378, 379, 382, 383, 388, 401, 402], "smooth": [84, 86, 148], "smoothedboxprior": 406, "smoother": 84, "sn": [361, 362, 363, 364, 365, 366, 382, 401, 402], "so": [215, 229, 361, 366, 382, 388, 392, 394, 395, 404, 405, 413, 414, 415, 416, 417, 419, 420, 422], "softwar": [404, 409], "sola": 408, "sole": 409, "solut": [412, 418, 419, 423], "solv": [229, 376, 377, 378, 388], "solv1": 378, "solv2": 378, "solv3": 378, "solv3_mordred_aa": 378, "solv3_mordred_at": 378, "solv_rdkit_maxab": 377, "solvent": [363, 364, 366, 369, 370, 375, 376, 377, 378, 379, 382, 386, 398, 399, 404, 413, 416], "solvent1": 378, "solvent2": 378, "solvent3": 378, "solvent_1": 413, "solvent_2": 413, "solvent_3": 413, "solvent_data": 382, "solvent_encoding1": 413, "solvent_encoding2": 413, "solvent_mordred_enc": 413, "solvent_rdkit_enc": 413, "solvent_rdkit_ma": [375, 379], "solvent_smil": 382, "solver": 420, "some": [49, 321, 334, 361, 362, 363, 364, 365, 366, 367, 370, 375, 376, 377, 378, 379, 382, 383, 385, 386, 392, 393, 394, 395, 397, 402, 411, 413, 414, 416, 417, 419, 420, 421, 425], "someth": 399, "sometim": 413, "somewhat": 414, "somewher": 412, "soon": [404, 412, 417], "sophist": [406, 419], "sort": 133, "sourabh": 408, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 99, 100, 102, 104, 105, 107, 109, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 126, 127, 130, 132, 133, 135, 136, 137, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 170, 173, 175, 176, 177, 178, 180, 181, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 202, 203, 205, 206, 207, 209, 211, 212, 215, 217, 219, 221, 224, 226, 227, 228, 230, 231, 234, 236, 237, 238, 241, 242, 244, 246, 248, 250, 252, 254, 256, 257, 258, 260, 261, 264, 266, 269, 270, 272, 274, 275, 276, 278, 279, 280, 281, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 331, 336, 337, 338, 340, 341, 342, 344, 345, 347, 348, 349, 351, 359, 404, 405, 406, 407, 409], "space": [10, 13, 21, 22, 27, 34, 41, 48, 51, 61, 64, 66, 70, 112, 113, 114, 116, 117, 119, 126, 127, 130, 151, 159, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 192, 195, 196, 215, 219, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 280, 321, 348, 362, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 388, 390, 391, 392, 394, 397, 402, 403, 406, 408, 411, 412, 413, 414, 416, 419, 420, 424], "span": [112, 113, 114, 116, 117, 119, 126, 127, 130, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 280, 381, 388], "speak": 423, "spec": [189, 195, 206], "special": [158, 404, 405, 409, 410, 423, 425], "specif": [77, 132, 138, 178, 186, 189, 202, 219, 258, 289, 378, 381, 382, 394, 404, 407, 412, 413, 416, 417, 419, 420, 421, 422, 423], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 49, 74, 119, 130, 132, 151, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 205, 206, 215, 217, 219, 228, 274, 275, 276, 284, 295, 308, 316, 322, 348, 349, 364, 365, 370, 372, 385, 386, 388, 390, 393, 401, 404, 405, 406, 410, 412, 413, 415, 416, 417, 418, 419, 420, 422, 423], "speed": [192, 375, 377, 379, 401, 402, 414, 418], "speed_fast": 418, "speed_norm": 418, "speed_slow": 418, "speedup": 423, "spell": 407, "spellcheck": 406, "sphinx": [406, 407], "split": [160, 411], "sporad": 406, "spread": 422, "sqrt": 413, "squar": [362, 365, 367, 388, 393, 413], "squash": 407, "stabil": [406, 414], "stabl": [77, 138, 277], "stage": [412, 413, 419], "stand": 406, "standard": [6, 258, 308, 385, 406, 416], "start": [215, 381, 382, 383, 388, 405, 406, 411, 416, 417, 419, 420, 423], "startup": 406, "stat": [278, 383, 388], "state": [158, 365, 382, 393, 406, 409, 412], "stateless": 388, "statement": [323, 394, 404, 409], "static": [186, 192, 234, 404, 407, 423], "statist": [281, 402, 404, 414], "statu": 412, "std_threshold": 258, "stem": [405, 423], "step": [189, 195, 215, 388, 404, 407, 412, 415, 419, 421], "sterl": 408, "steven": 364, "still": [132, 192, 316, 382, 388, 411, 413, 414, 416, 423, 425], "stop": [380, 403, 406, 407], "stop_on_pi": 382, "stoppag": 409, "storag": [412, 414, 419], "store": [22, 114, 258, 264, 362, 383, 388, 404, 406, 412, 418, 425], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 105, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 166, 168, 175, 176, 177, 178, 184, 186, 191, 192, 205, 209, 219, 221, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 267, 272, 274, 275, 276, 278, 281, 284, 285, 289, 294, 295, 301, 305, 306, 307, 308, 309, 310, 311, 313, 316, 319, 320, 323, 327, 331, 337, 340, 341, 342, 386, 388, 398, 399, 401, 402], "straightforward": [422, 423], "strategi": [13, 168, 186, 213, 388, 406], "stream": [293, 414], "streamingsequentialmetarecommend": [156, 417], "streamingsequentialstrategi": 406, "streamlin": 407, "streamlit": [404, 406], "streibel": 408, "strict": 294, "strictli": [386, 398, 399], "stride": 372, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 129, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 301, 306, 307, 308, 309, 310, 311, 313, 314, 319, 327, 342, 385, 397, 406, 412, 413, 416, 422, 424], "strip": [215, 366, 411, 420], "strong": 406, "strongli": 412, "strtobool": 414, "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 45, 102, 205, 404, 405, 406, 407, 412, 416, 419], "studi": [152, 404, 417, 424], "style": [96, 401, 406, 407], "sub": [178, 406, 419], "subclass": [74, 205, 289, 291, 300, 370, 406, 407, 417, 419], "subfold": 414, "subject": 409, "sublicens": 409, "submiss": [406, 409], "submit": [22, 278, 280, 404, 407, 409], "submodul": 420, "subpackag": [406, 407], "subselectioncondit": [376, 377, 406, 424], "subsequ": [186, 192, 219, 307, 409, 412, 419, 421], "subset": [99, 104, 109, 130, 186, 292, 322, 348, 412, 413], "subspac": [22, 160, 168, 183, 184, 186, 188, 190, 192, 365, 372, 395, 406, 417, 419, 424, 425], "subspace_json": 419, "subspacecontinu": [27, 112, 126, 186, 188, 406, 418], "subspacediscret": [27, 113, 116, 117, 119, 127, 130, 186, 188, 191, 375, 376, 377, 378, 379, 390, 397, 406, 418, 419, 425], "substanc": [124, 130, 364, 369, 406, 413, 416, 423], "substance_12": 413, "substance_3": 413, "substance_43": 413, "substance_data": 406, "substance_encod": 364, "substanceenc": [375, 376, 377, 378, 379], "substanceencod": 130, "substancepar": [375, 376, 377, 378, 379], "substanceparamet": [363, 364, 366, 369, 370, 375, 376, 377, 378, 379, 382, 386, 398, 399, 404, 406, 413, 414, 418, 424], "substanti": [130, 425], "substrat": 423, "subtyp": 419, "success": [266, 348, 388, 419], "success_valu": 266, "suffic": 407, "suffici": [382, 418, 419], "suit": 407, "suitabl": [178, 192, 215, 301, 407, 410, 412, 416, 420, 421, 423], "sum": [55, 92, 192, 362, 365, 367, 374, 375, 376, 377, 378, 382, 388, 393, 403, 413, 415, 418], "sum_": [413, 415], "sum_constraint": 378, "sum_constraint_1": 379, "sum_constraint_2": 379, "sum_of_squar": [362, 365, 367, 393], "sum_toler": 378, "summar": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130, 264, 266, 272], "summari": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130, 264, 266, 272, 406, 407], "superior": 410, "supersed": 409, "support": [10, 157, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 334, 370, 375, 376, 377, 378, 379, 382, 383, 385, 390, 397, 406, 407, 409, 413, 414, 416, 417, 418, 420, 421], "supports_transfer_learn": [224, 226, 227, 230, 234, 248, 250, 252, 254, 421], "suppos": [280, 413], "sure": [404, 407, 420], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 65, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 166, 168, 175, 176, 177, 178, 224, 226, 228, 230, 234, 236, 237, 241, 244, 246, 248, 250, 252, 254, 375, 376, 377, 378, 379, 383, 388, 390, 397, 403, 404, 406, 408, 413, 416, 417, 423, 424], "surrogate_model": [166, 168, 370, 383, 385, 386, 388, 398, 399, 406], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 166, 168, 227, 406], "svg": 340, "sw": 376, "switch": [49, 155, 157, 158, 258, 370, 375, 376, 377, 378, 379, 388, 390, 397, 404, 406, 413, 417], "switch1": 376, "switch2": 376, "switch2_left": 376, "switch2_right": 376, "switch_1": 413, "switch_2": 413, "switch_aft": [158, 398, 399, 417], "sy": 405, "symmetri": 413, "syntax": [404, 406], "synthet": [302, 303, 372, 373, 383, 401, 402], "synthetictestfunct": 303, "system": [364, 388, 404, 405, 409, 414, 420, 423], "t": [256, 257, 301, 363, 364, 366, 369, 370, 377, 383, 401, 402, 419], "t1": 419, "t2": 419, "t3": 419, "t_1": 415, "t_2": 415, "t_3": 415, "t_i": 415, "tabl": [323, 406, 413], "tag": [404, 406, 419], "tailor": 412, "take": [45, 84, 113, 127, 132, 224, 226, 227, 230, 234, 244, 248, 250, 252, 254, 267, 381, 406, 411, 412, 413, 415, 416, 417, 423], "taken": [156, 382, 406, 412, 415], "tantamount": 410, "target": [27, 66, 96, 99, 100, 104, 108, 109, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 192, 213, 215, 216, 217, 224, 226, 227, 230, 234, 248, 250, 252, 254, 258, 266, 269, 270, 272, 296, 316, 322, 336, 337, 343, 360, 361, 362, 363, 364, 365, 366, 369, 370, 372, 373, 375, 376, 377, 378, 379, 382, 383, 385, 386, 388, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 406, 411, 412, 414, 419, 420, 421, 424], "target_1": [367, 376, 377, 378, 379, 390, 415, 422], "target_1_cumbest": 367, "target_1_iterbest": 367, "target_1_measur": 367, "target_2": [367, 390, 415, 422], "target_2_cumbest": 367, "target_2_iterbest": 367, "target_2_measur": 367, "target_3": [390, 415], "target_3a": 422, "target_3b": 422, "target_cumbest": [361, 362, 365, 401, 402], "target_max": 412, "target_transform": 390, "target_valu": [372, 373, 383, 392, 393, 394, 395], "targetmod": [272, 419, 422], "targetnam": 215, "targettransform": [272, 422], "task": [117, 186, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 264, 266, 272, 388, 406, 412, 417, 419, 420, 423], "task_idx": [186, 406], "task_param": [401, 402, 420], "task_paramet": 419, "task_parameter_json": 419, "task_parameter_reconstruct": 419, "taskparamet": [199, 401, 402, 406, 419, 420, 424], "tb": 425, "technic": [192, 411, 420, 423], "techniqu": [178, 417], "telemetri": [406, 408, 424], "tell": 279, "temp": [375, 377, 408], "temp_c": [363, 364, 366, 382], "temperatur": [363, 366, 369, 370, 375, 377, 381, 385, 386, 397, 413, 416, 418, 423], "temperature_resolut": 375, "temperature_valu": 382, "temporari": [95, 101, 169, 186, 345, 382, 406, 414, 419], "temporarili": [406, 425], "temporary_se": 425, "tempt": 423, "tenac": 406, "tend": 383, "tensor": [22, 41, 224, 256, 257, 324, 327, 351, 353, 406], "term": [87, 213, 382, 388, 407, 409, 412, 418, 419, 420, 423], "termin": [382, 383, 405, 409], "terminologi": 424, "tert": [363, 364, 366, 369, 370], "test": [192, 215, 230, 302, 303, 306, 316, 388, 401, 402, 404, 405, 406, 407, 412, 425], "test_funct": [303, 361, 372, 373, 383, 392, 393, 394, 395, 401, 402], "test_scenario": [363, 366], "testabl": [71, 215], "testfunct": [361, 372, 373, 392, 394, 395], "testfunctionclass": [361, 372, 373, 392, 394, 395], "text": [30, 341, 385, 409, 413, 414, 415], "th": [285, 413], "than": [27, 58, 70, 127, 156, 157, 158, 184, 186, 199, 285, 300, 342, 349, 364, 377, 378, 382, 410, 413, 414, 416, 419], "thei": [132, 152, 161, 275, 319, 322, 370, 379, 382, 388, 406, 407, 411, 412, 413, 416, 417, 418, 419, 422, 423, 425], "them": [34, 244, 340, 365, 370, 378, 404, 405, 407, 411, 413, 414, 416, 417, 419, 423], "theme": [340, 406], "theori": 409, "therebi": 192, "therefor": [158, 224, 226, 227, 230, 234, 248, 250, 252, 254, 370, 405, 412, 419, 423], "thereof": 409, "thf": 413, "thi": [10, 13, 17, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 213, 217, 219, 221, 224, 226, 227, 228, 229, 230, 234, 244, 248, 250, 252, 254, 258, 281, 284, 296, 297, 300, 307, 316, 317, 318, 320, 321, 323, 340, 361, 381, 382, 383, 385, 386, 388, 393, 397, 398, 399, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425], "think": [388, 416], "third": [390, 409], "thompson": [17, 408], "thomson": 17, "those": [132, 158, 160, 213, 348, 370, 405, 409, 413, 420], "though": 423, "three": [364, 365, 378, 390, 404, 412, 413, 415, 417, 418, 423], "threshold": [38, 119, 130, 258, 320, 372, 377, 378, 379, 382, 406, 413, 416], "thresholdcondit": [54, 55, 372, 377, 378, 379, 424], "through": [186, 274, 284, 316, 322, 386, 388, 390, 392, 393, 394, 395, 404, 406, 407, 409, 413, 419, 424], "throughout": 158, "throw": [307, 413, 416], "thrown": [217, 366, 382, 398, 405, 415, 420], "thu": [168, 296, 322, 361, 362, 363, 364, 365, 367, 370, 372, 373, 375, 376, 377, 378, 379, 385, 386, 388, 390, 392, 393, 394, 395, 397, 405, 407, 412, 414, 416, 417, 419, 420, 423, 425], "tick": 383, "time": [10, 168, 281, 349, 373, 381, 388, 404, 406, 411, 412, 413, 416, 419, 425], "timeout": [406, 414], "timer": 381, "titl": 409, "tl": 401, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 41, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 382, 383, 406], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 327], "to_factori": [79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94], "to_fram": 378, "to_gpytorch": [79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 140, 142, 143, 144, 145, 146, 147, 148, 406], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 327, 385, 386, 397, 412, 419], "to_list": [372, 373, 392, 393, 394, 395], "to_ndarrai": 327, "to_object": [264, 266, 272, 388, 415], "to_polar": [36, 37, 38], "to_searchspac": [112, 113, 114, 116, 117, 119, 126, 127, 130, 184, 192, 388, 406], "to_subspac": [112, 113, 116, 117, 119, 126, 127, 130, 406], "to_tensor": [327, 382, 383, 385, 406], "to_tupl": 327, "togeth": [34, 62, 285, 370, 388, 395, 404], "toler": [27, 38, 127, 192, 280, 321, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 377, 378, 379, 382, 385, 386, 390, 394, 395, 397, 398, 399, 404, 406, 413, 416], "tolist": 372, "toluen": 416, "toml": 406, "too": [372, 423], "tool": [304, 406, 419], "toolbox": 404, "top": [406, 407], "topic": 412, "torch": [327, 382, 383, 385, 406], "toronto": 408, "tort": 409, "total": [158, 348, 388, 418], "toward": [8, 18, 142, 316, 413], "tox": [404, 406, 407], "tracebackexcept": 405, "track": [151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 192, 382, 409, 418], "trade": [8, 18, 409], "trademark": 409, "tradit": [364, 404], "train": [67, 151, 156, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 221, 224, 226, 227, 228, 229, 230, 234, 248, 250, 252, 254, 258, 384, 401, 402, 406, 420], "train_i": 385, "train_x": 385, "training_funct": 402, "trajectori": [213, 382, 388, 420], "transfer": [220, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 370, 375, 376, 377, 378, 379, 390, 397, 401, 403, 404, 406, 409, 416, 421, 424], "transform": [27, 67, 99, 104, 109, 113, 114, 116, 117, 119, 127, 130, 184, 186, 192, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 264, 266, 270, 272, 322, 327, 328, 351, 367, 375, 376, 377, 378, 379, 397, 406, 409, 416, 421, 422], "transform_rep_exp2comp": 406, "transit": 406, "translat": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 394, 406, 409, 416], "transmiss": 419, "transmit": 281, "travers": 406, "treasur": 424, "treat": [130, 364, 404, 413, 416, 422, 425], "tree": 406, "tremend": 364, "trend": 423, "tri": 418, "triangl": 276, "triangular": [270, 276, 390, 422], "tricyclohexylphosphin": [363, 364, 366], "trigger": [156, 284, 382, 386, 388, 406, 407, 411, 415, 419], "trivial": [237, 250, 415, 416], "true": [6, 12, 14, 27, 30, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 192, 234, 266, 275, 280, 290, 291, 294, 300, 301, 306, 310, 311, 321, 342, 364, 370, 372, 373, 375, 376, 377, 378, 379, 385, 386, 388, 390, 397, 398, 399, 401, 402, 406, 412, 413, 414, 416, 419], "truncat": [404, 414], "trust": [385, 414], "truth": 301, "try": [316, 363, 364, 366, 382, 385, 386, 399, 405, 406, 425], "tune": 404, "tupl": [27, 37, 41, 79, 80, 81, 84, 86, 88, 89, 90, 92, 93, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 133, 184, 186, 191, 192, 257, 284, 294, 297, 314, 316, 324, 327, 331, 351, 365, 367, 393, 401, 420], "turn": [184, 192, 303, 331, 404, 405, 406, 413, 414], "twice": [378, 415], "two": [30, 51, 57, 58, 105, 158, 168, 213, 285, 288, 336, 348, 363, 365, 366, 367, 370, 381, 388, 390, 393, 395, 401, 402, 404, 406, 407, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 422], "twofold": 388, "twophasemetarecommend": [362, 363, 365, 366, 370, 375, 376, 377, 378, 379, 382, 383, 385, 386, 388, 390, 395, 397, 398, 399, 404, 417], "twophasestrategi": 406, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 100, 102, 104, 105, 109, 112, 113, 114, 116, 117, 119, 126, 127, 129, 130, 132, 133, 135, 136, 137, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 170, 173, 175, 176, 177, 178, 180, 181, 184, 186, 187, 188, 189, 192, 193, 194, 195, 197, 198, 199, 202, 203, 205, 206, 207, 209, 211, 212, 215, 217, 219, 221, 224, 226, 227, 228, 230, 231, 234, 237, 238, 242, 248, 250, 252, 254, 256, 257, 258, 260, 261, 264, 266, 267, 272, 274, 275, 276, 278, 279, 280, 281, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 305, 306, 307, 308, 309, 310, 311, 313, 314, 316, 317, 318, 319, 321, 322, 323, 324, 327, 328, 329, 331, 333, 334, 336, 337, 338, 340, 341, 342, 348, 349, 351, 353, 356, 357, 358, 359, 364, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 388, 390, 397, 398, 399, 404, 406, 407, 409, 410, 413, 415, 416, 417, 418, 423, 424], "typealia": 267, "typeerror": [27, 215, 230, 296, 316, 349, 382, 383], "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 197, 205, 206, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 257, 264, 266, 272, 291, 292, 293, 314, 322, 327], "typic": [13, 296, 342, 364, 404, 411, 412, 416, 419, 420, 425], "typing_extens": 407, "typo": [406, 407], "u": [17, 363, 364, 366, 381, 383, 388, 402, 404, 410, 413, 415], "ucb": [8, 370, 406, 410, 419], "ultim": 407, "ultra": [398, 399], "un": 406, "unabl": 385, "unavail": 406, "unawar": 411, "unbound": [327, 381], "uncaught": 406, "uncertainti": [13, 370, 424], "uncharacter": 423, "uncorrel": [320, 423], "undefin": 224, "under": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 281, 322, 378, 379, 383, 388, 404, 405, 409, 411, 416], "underflow": 72, "underli": [27, 51, 382, 388, 404, 412, 417, 419], "underscor": 406, "understand": [404, 423], "undesir": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 76, 413, 416, 425], "undo": 405, "unequ": 379, "unevenli": 416, "unfinish": 411, "unfortun": 423, "unhandl": 406, "uniform": [184, 224, 317, 406], "uniformli": 348, "uniniti": 300, "uninstal": [73, 404], "unintend": [76, 296, 406, 407], "unintention": 425, "union": [105, 215, 219, 274, 275, 276, 337, 395, 409, 418], "uniqu": [52, 132, 378, 406, 416], "unit": [191, 331], "unknown": [348, 388, 406, 421, 423], "unless": [404, 407, 409, 414, 416, 419], "unlik": [12, 14, 418, 425], "unlock": 424, "unmaintain": [406, 416], "unmatch": 294, "unmatchedattributeerror": 294, "unmeasur": [215, 366, 420], "unnecessari": [406, 412], "unpromis": 382, "unreach": 406, "unrealist": 420, "unrecogn": 316, "unrestrict": 296, "unsaf": 406, "unspecifi": [406, 419], "unsqueez": [382, 383], "unstructur": [207, 419], "unstructure_bas": 205, "unsupport": [184, 217], "until": [154, 156, 157, 158, 215, 388, 404, 420], "untransform": [27, 421], "unusedobjectwarn": [382, 406], "unveil": 402, "unwant": 34, "up": [192, 215, 217, 363, 364, 366, 368, 372, 373, 375, 377, 378, 381, 383, 395, 401, 402, 404, 405, 406, 410, 413, 425], "updat": [364, 369, 406, 407, 411], "upgrad": 406, "upon": [160, 237, 405, 406, 407, 413, 418, 421, 423], "upper": [8, 18, 148, 186, 192, 274, 275, 276, 327, 370, 383, 390, 401, 402, 406, 422, 425], "upper_bound": [375, 376, 377, 378, 379, 397, 418], "upperconfidencebound": [410, 419], "upstream": 407, "url": [414, 423], "us": [13, 17, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 62, 64, 84, 104, 105, 119, 127, 130, 132, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 193, 194, 206, 215, 217, 219, 224, 226, 227, 230, 231, 234, 248, 250, 252, 254, 270, 280, 281, 287, 296, 297, 307, 316, 317, 321, 329, 333, 334, 340, 348, 353, 372, 373, 380, 381, 382, 383, 384, 397, 398, 399, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 422, 423, 424, 425], "usa": 408, "usabl": [300, 405, 406, 416, 419], "usag": [330, 404, 406, 413, 414, 417], "user": [48, 49, 60, 68, 76, 119, 122, 192, 224, 226, 227, 230, 234, 248, 250, 252, 254, 261, 278, 317, 321, 369, 370, 375, 390, 399, 404, 405, 406, 407, 412, 413, 414, 415, 416, 418, 419, 420, 423], "userguid": 277, "usernam": [278, 406, 414], "userwarn": 405, "usort": 406, "usual": [215, 363, 364, 366, 398, 405, 416], "util": [168, 184, 192, 280, 287, 288, 327, 347, 351, 361, 364, 369, 370, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 388, 390, 392, 394, 395, 398, 401, 402, 404, 406, 410, 411, 415, 416, 417, 419, 421, 423, 424], "uv": 406, "v": 423, "val": [45, 102, 301, 401], "val_from_param1": 53, "val_from_param2": 53, "valid": [27, 30, 31, 32, 33, 34, 37, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 132, 186, 189, 192, 195, 230, 306, 309, 321, 375, 396, 398, 403, 405, 406, 407, 412, 413], "validate_compat": 230, "validate_config": [27, 399, 406, 412], "valu": [6, 8, 18, 22, 27, 30, 36, 37, 38, 41, 49, 51, 66, 83, 84, 85, 86, 87, 88, 89, 90, 94, 99, 104, 105, 109, 113, 116, 117, 119, 121, 122, 124, 127, 130, 132, 135, 136, 137, 175, 176, 177, 178, 184, 186, 192, 193, 194, 213, 215, 217, 219, 224, 226, 227, 230, 234, 248, 250, 252, 254, 266, 267, 269, 274, 275, 276, 281, 284, 292, 294, 301, 313, 316, 317, 319, 321, 322, 323, 327, 329, 336, 337, 338, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 388, 390, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 406, 407, 410, 412, 413, 414, 415, 416, 420, 422, 423, 424, 425], "valuabl": 417, "valueerror": [13, 27, 57, 58, 105, 132, 136, 137, 184, 186, 192, 198, 215, 217, 224, 226, 227, 230, 234, 248, 250, 252, 254, 261, 285, 294, 299, 301, 309, 313, 316, 317, 321, 322, 342, 348, 349, 365, 386, 395, 405], "var": [388, 424], "vari": [27, 192, 364, 415], "variabl": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 224, 226, 227, 230, 234, 248, 250, 252, 254, 264, 279, 281, 335, 340, 354, 394, 404, 406, 407, 413, 416, 417, 419], "varianc": [8, 13, 18, 83, 250, 318, 406, 410], "variance_initial_valu": 83, "variance_prior": 83, "variant": [370, 401, 423], "varieti": [394, 407, 419, 420], "variou": [327, 378, 391, 406, 411, 417], "varucb": 406, "vector": [30, 385, 408], "vendor": 416, "verbal": 409, "verbos": 386, "veri": [375, 377, 390, 411, 414, 416, 425], "verifi": [300, 365, 372, 375, 376, 377, 378, 379, 395, 397, 404, 407], "versa": [401, 423], "versatil": 417, "version": [186, 278, 303, 334, 388, 401, 402, 404, 405, 406, 407, 409, 419], "vert": 383, "via": [13, 17, 26, 27, 158, 168, 180, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 280, 289, 296, 316, 321, 366, 372, 373, 381, 382, 385, 392, 394, 404, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423], "via_init": 419, "via_json": 419, "viabl": [70, 390], "vice": [401, 423], "view": [184, 192, 383, 418], "view_init": 383, "violat": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "viridi": 383, "virtual": 407, "visibl": 406, "visual": [364, 401, 402, 422], "volum": 423, "vpn": [404, 414], "vulner": [406, 407], "w_i": 415, "wa": [13, 63, 65, 66, 73, 76, 132, 158, 192, 224, 226, 227, 230, 234, 248, 250, 252, 254, 313, 316, 349, 364, 405, 406, 407, 409, 414, 416, 419, 423], "wai": [186, 381, 391, 393, 401, 404, 411, 414, 416, 418, 419, 420, 422, 423, 425], "wall": 10, "want": [48, 365, 370, 375, 378, 388, 393, 395, 402, 404, 407, 413, 414, 416, 417, 419, 422], "warn": [59, 297, 364, 375, 377, 379, 382, 394, 395, 406, 407], "warranti": [404, 409], "was_measur": [375, 376, 377, 378, 379, 390, 397, 418], "was_recommend": [375, 376, 377, 378, 379, 390, 397, 418], "watch": 381, "water": [375, 376, 377, 378, 379, 413, 416], "we": [22, 213, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 388, 390, 392, 393, 394, 395, 397, 398, 399, 401, 402, 404, 405, 407, 410, 411, 412, 413, 415, 416, 418, 419, 421, 422, 423, 424, 425], "web": 407, "weber": 408, "weight": [96, 104, 105, 338, 367, 390, 415, 419], "weight_kdalton": 416, "welcom": 407, "well": [278, 340, 370, 382, 407, 412, 413, 416, 420], "were": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 316, 366, 370, 402, 405, 406, 411, 413, 414, 416, 418], "what": [132, 156, 186, 213, 316, 351, 385, 390, 399, 407, 410, 412, 416, 423, 424], "whatsnew": 288, "when": [27, 49, 127, 156, 158, 166, 168, 186, 192, 224, 226, 227, 230, 231, 234, 248, 250, 252, 254, 261, 294, 296, 300, 316, 342, 349, 367, 370, 375, 376, 379, 381, 386, 388, 390, 404, 405, 406, 407, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 425], "whenev": [22, 156, 316, 419], "where": [17, 22, 30, 34, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 213, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 284, 316, 348, 363, 364, 366, 370, 375, 377, 378, 388, 404, 405, 406, 407, 409, 411, 412, 413, 415, 416, 418, 419, 420, 422, 423], "wherea": 419, "wherev": [409, 411], "whether": [22, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130, 168, 184, 192, 224, 226, 227, 230, 234, 248, 250, 252, 254, 279, 308, 317, 321, 327, 365, 406, 409, 412, 414, 417, 422], "which": [13, 27, 36, 37, 38, 76, 99, 104, 109, 117, 132, 151, 152, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 192, 219, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 258, 280, 281, 296, 300, 316, 317, 320, 321, 323, 336, 337, 340, 351, 364, 365, 370, 373, 378, 381, 382, 388, 394, 395, 399, 401, 402, 404, 405, 406, 407, 409, 410, 412, 413, 416, 418, 419, 420, 421, 422, 423, 425], "while": [186, 189, 195, 382, 388, 390, 402, 405, 409, 410, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423], "whilst": 316, "whole": 409, "whom": 409, "whose": [105, 132, 186, 217, 292, 294, 381, 411], "wide": 420, "wider": 422, "width": 323, "william": 423, "willing": 412, "win": [224, 388], "win_rat": 388, "window": [406, 414], "winerror": 405, "wise": 338, "wish": 419, "within": [27, 112, 113, 114, 116, 117, 119, 126, 127, 130, 280, 321, 409, 413, 416, 421, 423, 424, 425], "without": [157, 401, 402, 404, 406, 409, 411, 412, 413, 414, 416, 423, 425], "work": [22, 255, 284, 378, 382, 390, 393, 397, 399, 404, 406, 407, 408, 409, 413, 414, 415, 417, 419], "workaround": [405, 406], "workflow": [385, 404, 412, 417, 419, 424], "world": [404, 412], "worldwid": 409, "worst": [215, 217, 219, 366, 420], "would": [52, 72, 132, 213, 215, 221, 229, 381, 388, 404, 407, 411, 413, 414, 416, 417, 418, 419, 420, 423, 425], "wrap": [79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 234, 238, 256, 257, 296, 303, 372, 373, 392, 394, 404, 406, 415], "wrapped_funct": [361, 372, 373, 383, 392, 394, 395], "wrapper": [1, 21, 219, 221, 230, 297, 302, 372, 373, 404, 417], "write": [404, 405, 409, 419], "written": [392, 394, 395, 407, 409], "wrong": [399, 406], "wrongli": 405, "www": [404, 409], "x": [22, 100, 188, 215, 217, 238, 297, 314, 324, 336, 351, 361, 362, 363, 364, 365, 366, 367, 375, 376, 377, 378, 379, 382, 383, 390, 393, 397, 401, 402, 404, 406, 418, 421], "x0": 418, "x1": 418, "x2": 418, "x_": [361, 362, 365, 367, 372, 373, 392, 393, 394, 395], "x_1": [372, 373, 392, 393, 394, 395, 413], "x_2": [372, 373, 392, 393, 394, 395, 413], "x_3": [372, 373, 392, 393, 394, 395, 413], "x_4": [372, 373, 392, 393, 394, 395], "x_5": 395, "x_6": 395, "x_i": 413, "x_pend": 22, "xlsx": [363, 364, 366, 382], "xpho": [363, 364, 366], "xxxx": 405, "xylen": [363, 364, 366, 369, 370], "y": [246, 301, 320, 336, 361, 362, 363, 364, 365, 366, 367, 382, 383, 385, 393, 401, 402, 404, 423], "ye": 301, "year": 423, "yet": [22, 154, 156, 157, 158, 406, 411, 417], "yield": [6, 84, 363, 364, 366, 369, 370, 375, 382, 385, 386, 395, 397, 398, 399, 404, 410, 415, 419], "yield_cumbest": [363, 364, 366, 382], "yml": 406, "you": [27, 48, 364, 370, 372, 381, 386, 388, 394, 395, 398, 404, 405, 407, 409, 410, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 425], "your": [364, 365, 381, 388, 395, 404, 405, 406, 407, 409, 412, 414, 416, 419, 421, 422, 423, 425], "your_branch_nam": 407, "yourself": 388, "z": [383, 404], "zdir": 383, "zero": [8, 18, 142, 318, 388, 423], "zip": [382, 383], "\u00b5fmt": 406, "\u0161o\u0161i\u0107": [404, 408]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedImprovement", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objective", "baybe.objective.Objective", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.deprecation", "baybe.objectives.deprecation.structure_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.single", "SingleTargetObjective", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "Surrogate", "SurrogateProtocol", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "classproperty", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.botorch_wrapper", "baybe.utils.botorch_wrapper.botorch_function_wrapper", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.is_valid_smiles", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fp_features", "baybe.utils.chemistry.smiles_to_molecules", "baybe.utils.chemistry.smiles_to_mordred_features", "baybe.utils.chemistry.smiles_to_rdkit_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.plotting", "baybe.utils.plotting.create_example_plots", "baybe.utils.plotting.indent", "baybe.utils.plotting.to_string", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "Backtesting", "Simulation loop using a BoTorch test function", "Example for full simulation loop using a custom analytical test function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a custom analytical test function in a hybrid", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Example for full simulation loop using the multi target mode for custom analytic", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using a mixture use case in a discrete searchspace", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Searchspaces", "Example for using a synthetic BoTorch test function in a continuous searchspace", "Example for using a custom BoTorch test function in a continuous searchspace", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 407, "0": 406, "01": 406, "02": 406, "03": 406, "04": 406, "05": 406, "06": 406, "07": 406, "08": 406, "09": 406, "1": 406, "10": 406, "11": 406, "12": 406, "13": 406, "14": 406, "15": 406, "16": 406, "17": 406, "19": 406, "2": 406, "2022": 406, "2023": 406, "2024": 406, "21": 406, "23": 406, "24": 406, "27": 406, "28": 406, "29": 406, "3": 406, "4": 406, "5": 406, "6": 406, "7": 406, "8": 406, "9": 406, "A": 404, "The": [388, 398, 404, 419, 420, 423], "abbrevi": 419, "acqf": 2, "acquisit": [1, 2, 19, 21, 23, 24, 25, 370, 411], "acquisitionfunct": 20, "action": 423, "activ": 410, "ad": [369, 406, 411, 412, 423, 425], "add_fake_measur": 316, "add_parameter_nois": 317, "addendum": 390, "addit": 417, "additivekernel": 92, "advanc": [404, 421], "altern": 419, "an": 388, "analyt": [362, 365, 367], "arm": [387, 388], "arm64": 405, "assembli": 419, "asynchron": 411, "attr": 407, "augment": [283, 284, 285], "automat": 419, "avail": [370, 421], "avx": 405, "back": 404, "backtest": [360, 401], "bandit": [223, 387, 388], "base": [19, 29, 78, 98, 100, 111, 139, 150, 153, 162, 165, 172, 225, 263, 363, 364, 366], "basic": [82, 141, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 368, 369, 412, 414, 419], "basickernel": 79, "batch": 412, "batchify_ensemble_predictor": 256, "batchify_mean_var_predict": 257, "bayb": [0, 1, 2, 19, 21, 23, 24, 25, 26, 28, 29, 35, 39, 42, 43, 44, 45, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 91, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 108, 110, 111, 115, 118, 120, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 149, 150, 152, 153, 155, 159, 161, 162, 164, 165, 167, 169, 170, 171, 172, 174, 179, 182, 183, 185, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 229, 231, 232, 233, 235, 238, 239, 240, 242, 243, 245, 247, 249, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 369, 404, 407], "bayesian": [164, 165, 167, 169, 170, 404, 417], "bayesianlinearsurrog": 248, "bayesianrecommend": 166, "bell_transform": 274, "bernoulli": 388, "betabernoullimultiarmedbanditsurrog": 224, "betaprior": 142, "binari": [265, 267], "binarytarget": 266, "black": 388, "block_deserialization_hook": 202, "block_serialization_hook": 203, "boolean": [298, 299, 300, 301], "both": 397, "botorch": [167, 361, 392, 393, 394], "botorch_function_wrapp": 303, "botorch_wrapp": [302, 303], "botorchrecommend": 168, "bound": [381, 415, 418], "box": 388, "break": 406, "build": [388, 418], "bytes_to_human_read": 331, "cach": [412, 414], "callabl": 420, "campaign": [26, 27, 361, 362, 363, 364, 365, 366, 367, 370, 372, 373, 375, 376, 378, 379, 382, 385, 386, 390, 392, 393, 394, 395, 397, 398, 412], "cardinalityconstraint": 30, "case": [378, 388], "catch_constant_target": 258, "categor": 115, "categoricalencod": 121, "categoricalparamet": [116, 416], "chang": 406, "changelog": 406, "check_if_in": 299, "chemic": 404, "chemistri": [304, 305, 306, 307, 308, 309, 310, 311], "choicevalu": 267, "class": 407, "classproperti": 288, "clone": 404, "closer_el": 336, "closest_el": 337, "cluster": [174, 417], "code": 407, "columntransform": 351, "compar": 397, "compon": 381, "composit": 91, "compositekernel": 80, "condit": [35, 36, 413], "config": [398, 399, 412], "configur": [385, 386, 398, 419], "constraint": [28, 29, 31, 35, 39, 42, 43, 44, 45, 46, 56, 57, 58, 371, 372, 373, 374, 375, 376, 377, 378, 379, 413, 414, 418, 425], "construct": [361, 362, 363, 364, 365, 366, 367, 372, 373, 392, 393, 394, 395, 415, 418], "constructor": [418, 419], "continu": [39, 183, 371, 373, 392, 393, 410, 413, 414, 416, 418, 423, 425], "continuouscardinalityconstraint": 40, "continuousconstraint": 32, "continuouslinearconstraint": [41, 413], "continuouslinearequalityconstraint": 43, "continuouslinearinequalityconstraint": 44, "continuousnonlinearconstraint": 33, "continuousparamet": 112, "contribut": 407, "contributor": 408, "conveni": 415, "convent": 407, "convers": [312, 313, 314, 415, 419], "convert": [204, 385], "convert_acqf": 24, "convert_bound": 328, "copi": 419, "core": [185, 188, 189, 201, 202, 203, 204, 205, 206, 207, 214, 215, 233, 240, 242], "cpu": 405, "creat": [361, 362, 363, 364, 366, 367, 370, 372, 373, 375, 376, 377, 378, 379, 385, 386, 390, 392, 393, 394, 397, 398, 401, 402, 412, 418], "create_example_plot": 340, "creation": [363, 364, 366, 412, 425], "current": 421, "custom": [118, 229, 231, 362, 365, 367, 375, 380, 381, 384, 385, 386, 393, 421], "customdiscreteparamet": [119, 416], "customencod": 122, "customonnxsurrog": 230, "data": [363, 364, 366, 418, 423], "datafram": [315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 418, 419, 420], "de": [397, 419], "default": [243, 418, 419], "defaultkernelfactori": 244, "defin": [361, 362, 365, 367, 372, 373, 381, 382, 383, 390, 392, 393, 394, 395, 399, 401, 402, 404], "definit": 382, "depend": [376, 404, 416], "deprec": [42, 43, 44, 45, 101, 102, 406], "deprecationerror": 60, "descript": 390, "deseri": 419, "deserialize_datafram": 211, "design": [404, 407], "desir": [103, 105], "desirabilityobject": [104, 415], "develop": 407, "df_apply_dependency_augment": 284, "df_apply_permutation_augment": 285, "df_drop_single_value_column": 318, "df_drop_string_column": 319, "df_uncorrelated_featur": 320, "dictionari": [398, 399], "differ": 370, "dimens": 395, "discret": [46, 190, 193, 194, 195, 374, 375, 376, 377, 378, 394, 413, 416, 417, 418], "discretecardinalityconstraint": 47, "discreteconstraint": 34, "discretecustomconstraint": [48, 413], "discretedependenciesconstraint": [49, 413], "discreteexcludeconstraint": [50, 413], "discretelinkedparametersconstraint": [51, 413], "discretenolabelduplicatesconstraint": [52, 413], "discreteparamet": 113, "discretepermutationinvarianceconstraint": [53, 413], "discreteproductconstraint": [54, 413], "discretesamplingmethod": 347, "discretesumconstraint": [55, 413], "discuss": 388, "disk": 414, "do": 420, "docstr": 407, "document": 386, "dtypefloatnumpi": 333, "dtypefloatonnx": 334, "dtypefloattorch": 353, "dummi": 287, "dure": 425, "edbo": 245, "edbokernelfactori": 246, "effici": 425, "emptysearchspaceerror": 61, "encod": 416, "end": 404, "enum": [106, 120, 268], "environ": 414, "equival": 419, "estim": 425, "exampl": [362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 377, 378, 379, 385, 386, 390, 392, 393, 394, 395, 397, 398, 399, 403, 404], "except": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "exceptiongroup": 405, "exclus": [377, 379], "expect": 423, "expectedimprov": 3, "experi": [375, 376, 377, 378, 379, 385, 386, 390, 397, 404, 411, 420], "experiment": 412, "expir": 406, "explicit": 418, "extend": 407, "extract": 421, "fake": 425, "farthest_point_sampl": 348, "field": 419, "file": [398, 399], "find_subclass": 289, "finite_float": 356, "fix": [405, 406], "float": 414, "fpsrecommend": 180, "fraction_to_float": 313, "from": [398, 404, 406, 412, 418, 419], "full": [361, 362, 363, 364, 365, 366, 367, 418], "function": [361, 362, 363, 364, 365, 366, 367, 370, 372, 373, 382, 390, 392, 393, 394, 395, 407, 411, 420], "further": 412, "fuzzy_row_match": 321, "gammaprior": 143, "gaussian_process": [232, 233, 235, 238, 239, 240, 242, 243, 245], "gaussianmixtureclusteringrecommend": 175, "gaussianprocesspreset": 241, "gaussianprocesssurrog": 234, "gener": [401, 402, 407, 417], "geom_mean": 338, "get": [369, 412], "get_base_structure_hook": 205, "get_baseclass": 290, "get_canonical_smil": 305, "get_model_params_valid": 260, "get_parameters_from_datafram": 132, "get_subclass": 291, "get_transform_object": 322, "get_transform_paramet": 197, "get_user_detail": 278, "github": 404, "global": 410, "group_duplicate_valu": 292, "guid": 424, "halfcauchyprior": 144, "halfnormalprior": 145, "hilberts_factori": 293, "hook": [380, 381, 382, 383], "hybrid": [365, 372, 395, 413], "imaginari": 388, "implicit": 415, "import": [361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 377, 378, 379, 381, 383, 385, 386, 388, 390, 392, 393, 394, 395, 397, 398, 399, 401, 402], "improv": 383, "inclus": 363, "incompatibilityerror": 62, "incompatibleacquisitionfunctionerror": 63, "incompatiblesearchspaceerror": 64, "incomplet": 366, "incorpor": 379, "indent": 341, "independentgaussiansurrog": 226, "index": 404, "indic": 404, "infiniteintervalerror": 326, "influenc": 425, "inform": [412, 417], "initi": [363, 370], "instal": [404, 405], "instanc": 381, "instead": [385, 386], "instruct": 414, "internet": 414, "interrupt": 382, "interv": [325, 326, 327, 328, 329], "invalidsurrogatemodelerror": 65, "invalidtargetvalueerror": 66, "invok": 419, "irrelev": 423, "is_abstract": 300, "is_en": 279, "is_valid_smil": 306, "issu": [404, 405], "iter": [372, 373, 385, 386, 390], "json": [412, 419], "kernel": [77, 78, 81, 82, 91], "kernel_factori": [235, 238], "kernelfactori": 236, "kmeansclusteringrecommend": 176, "known": [404, 405], "leak": 405, "learn": [400, 402, 410, 420, 423], "licens": [404, 409], "limit": [421, 422], "linear": [247, 373], "linear_transform": 275, "linearkernel": 83, "link": 386, "local": [404, 410], "logexpectedimprov": 4, "lognormalprior": 146, "look_up_target": 217, "lookup": [216, 217, 363, 364, 366, 382, 401, 402, 420], "loop": [361, 362, 363, 364, 365, 366, 367, 401, 402, 404], "maco": 405, "maintain": [404, 408], "make_gp_from_preset": 242, "mandatori": 415, "manual": [375, 376, 377, 378, 379], "mark": 411, "match": 422, "match_attribut": 294, "maternkernel": 84, "max": 422, "mean": 420, "meanpredictionsurrog": 250, "measur": [369, 385, 386, 412, 425], "mechan": [363, 364, 366], "memori": [330, 331, 425], "memorys": 191, "meta": [152, 153, 155, 417], "metadata": 418, "metarecommend": 154, "method": [381, 407, 410], "min": 422, "mixin": 208, "mixtur": 378, "mode": [367, 390, 422], "model": [370, 385, 386, 388, 421], "modelnottrainederror": 67, "monitor": 383, "monkeypatch": [381, 382, 383], "multi": [367, 387, 388, 389, 390], "multipl": [367, 420], "naiv": [159, 249], "naivehybridspacerecommend": 160, "name": 416, "name_to_smil": 307, "necessari": [362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 377, 378, 379, 385, 386, 390, 392, 393, 394, 395, 397, 398, 399], "nest": 419, "ngboost": 251, "ngboostsurrog": 252, "nois": 425, "nomcacquisitionfunctionerror": 68, "non_inf_float": 357, "non_nan_float": 358, "nonpredict": [171, 172, 174, 179], "nonpredictiverecommend": 173, "nonstring_to_tupl": 314, "norecommenderslefterror": 69, "normalprior": 147, "notenoughpointslefterror": 70, "nothingtosimulateerror": 71, "numer": [125, 271, 332, 333, 334, 335, 336, 337, 338], "numericalcontinuousparamet": [126, 416], "numericaldiscreteparamet": [127, 416], "numericaltarget": [272, 422], "numericalunderflowerror": 72, "object": [95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 361, 362, 363, 364, 366, 367, 370, 372, 373, 375, 376, 377, 378, 379, 390, 392, 393, 394, 397, 401, 402, 404, 415, 419], "onnx": 385, "optim": [401, 402, 404, 412, 425], "option": [404, 416, 417], "optionalimporterror": 73, "other": 370, "output": [385, 386], "overrid": 407, "packag": [404, 414], "pamclusteringrecommend": 177, "parallel": 412, "paramet": [110, 111, 114, 115, 118, 120, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 361, 362, 363, 364, 365, 366, 367, 370, 386, 412, 416, 418, 425], "parameter_cartesian_prod_panda": 193, "parameter_cartesian_prod_polar": 194, "parameterencod": 123, "partial": [21, 411], "partialacquisitionfunct": 22, "pass": 386, "pend": 411, "perform": [361, 362, 363, 367, 390, 392, 393, 394, 395], "periodickernel": 85, "piecewisepolynomialkernel": 86, "plainkernelfactori": 237, "plot": [339, 340, 341, 342, 382, 383], "point": 414, "polar": [405, 414], "polynomialkernel": 87, "posteriormean": 5, "posteriorstandarddevi": 6, "pre": 385, "precis": 414, "preset": [239, 240, 242, 243, 245], "pretrain": 385, "pretty_print_df": 323, "print": [375, 376, 378, 379, 390], "prior": [138, 139, 140, 141], "probabilityofimprov": 7, "probabl": 383, "problem": [382, 405], "product": [379, 418], "productkernel": 93, "pull": 407, "pure": [161, 162, 164, 165, 167, 169, 170, 171, 172, 174, 179, 410, 417], "purerecommend": 163, "pycharm": 405, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedimprov": 12, "qnegintegratedposteriorvari": 13, "qnoisyexpectedimprov": 14, "qprobabilityofimprov": 15, "qsimpleregret": 16, "qthompsonsampl": 17, "quick": 404, "qupperconfidencebound": 18, "random": [343, 344, 345], "random_forest": 253, "randomforestsurrog": 254, "randomrecommend": 181, "rbfkernel": 88, "recommend": [149, 150, 152, 153, 155, 159, 161, 162, 164, 165, 167, 169, 170, 171, 172, 174, 179, 369, 370, 385, 386, 392, 393, 394, 395, 397, 411, 412, 417], "recommenderprotocol": 151, "reduct": 410, "refers_to": 295, "regist": 381, "register_custom_architectur": 231, "register_hook": 296, "relat": 405, "remov": 406, "represent": 418, "reproduc": 425, "request": 407, "restrict": 418, "result": [382, 383, 411], "rffkernel": 89, "role": 423, "rqkernel": 90, "run": [372, 373, 388], "sampl": [179, 410, 417], "sample_numerical_df": 349, "sampling_algorithm": [346, 348, 349], "scalar": [105, 107, 421], "scale": 350, "scalekernel": 94, "scenario": [218, 219, 420], "scope": 414, "search": [401, 404, 410, 417, 418, 425], "searchspac": [182, 183, 185, 186, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 361, 362, 363, 365, 366, 367, 370, 372, 373, 375, 376, 377, 378, 379, 390, 391, 392, 393, 394, 395, 402], "searchspacetyp": 187, "see": 423, "select_constructor_hook": 206, "semaphor": 405, "sequenti": [155, 412], "sequential_greedi": [169, 170], "sequentialgreedyrecommend": 170, "sequentialmetarecommend": 156, "serial": [200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 396, 397, 412, 419], "serialize_datafram": 212, "serialmixin": 209, "set": [382, 383, 401, 402], "set_random_se": 344, "setup": [369, 375, 376, 377, 378, 379, 385, 386, 388, 390, 397], "signatur": 381, "simplex": 418, "simul": [213, 214, 215, 216, 217, 218, 219, 220, 221, 361, 362, 363, 364, 365, 366, 367, 382, 388, 401, 402, 420], "simulate_experi": 215, "simulate_scenario": 219, "simulate_transfer_learn": 221, "singl": [108, 414, 420], "singletargetobject": [109, 415], "sklearnclusteringrecommend": 178, "smile": 129, "smiles_to_fp_featur": 308, "smiles_to_molecul": 309, "smiles_to_mordred_featur": 310, "smiles_to_rdkit_featur": 311, "smoothedboxprior": 148, "some": [372, 373, 390], "sort_paramet": 133, "space": [395, 401, 404, 410, 417, 418, 425], "stage": 385, "start": 404, "stop": 382, "str_to_acqf": 25, "strategi": [370, 404], "streamingsequentialmetarecommend": 157, "string": [398, 419], "strtobool": 301, "structure_constraint": 45, "structure_object": 102, "studi": 421, "sub": 410, "subselectioncondit": [37, 413], "subspac": 418, "subspacecontinu": 184, "subspacediscret": 192, "substanc": [128, 129, 404], "substanceencod": 124, "substanceparamet": [130, 416], "suggest": 405, "suitabl": 370, "sum": 379, "support": [405, 411], "surrog": [222, 223, 225, 227, 229, 231, 232, 233, 235, 238, 239, 240, 242, 243, 245, 247, 249, 251, 253, 255, 256, 257, 258, 259, 260, 261, 370, 384, 385, 386, 421], "surrogateprotocol": 228, "synchron": 407, "synthet": [392, 394, 395], "tabl": [363, 364, 366, 401, 402, 404], "target": [262, 263, 264, 265, 267, 268, 271, 273, 274, 275, 276, 367, 381, 389, 390, 415, 422, 425], "targetmod": 269, "targettransform": 270, "task": [401, 402], "taskparamet": [117, 416, 423], "technologi": 423, "telemetri": [277, 278, 279, 280, 281, 404, 414], "telemetry_record_recommended_measurement_percentag": 280, "telemetry_record_valu": 281, "temporary_se": 345, "terminologi": [419, 420, 423], "test": [361, 362, 365, 367, 372, 373, 392, 393, 394, 395], "thi": [362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 375, 376, 377, 378, 379, 390, 392, 394, 395], "thresholdcondit": [38, 413], "through": 423, "to_kernel_factori": 238, "to_object": 100, "to_searchspac": 188, "to_str": 342, "to_tensor": 324, "to_tupl": 297, "toler": 412, "tool": 407, "torch": [352, 353, 354, 405], "train": 385, "transfer": [400, 402, 420, 423], "transfer_learn": [220, 221], "transform": [273, 274, 275, 276, 390], "treasur": 423, "triangular_transform": 276, "trigger": [381, 383], "two": 399, "twophasemetarecommend": 158, "type": 419, "uncertainti": 410, "unidentifiedsubclasserror": 74, "uninstal": 414, "uninterrupt": 382, "unlock": 423, "unmatchedattributeerror": 75, "unreleas": 406, "unstructure_bas": 207, "unusedobjectwarn": 76, "upperconfidencebound": 8, "us": [361, 362, 363, 364, 365, 366, 367, 369, 370, 375, 376, 377, 378, 379, 385, 386, 388, 390, 392, 393, 394, 395, 418, 419, 420, 421], "use_fallback_constructor_hook": 329, "user": 424, "util": [23, 24, 25, 131, 132, 133, 210, 211, 212, 255, 256, 257, 258, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 425], "v": [381, 405, 412], "valid": [56, 57, 58, 134, 135, 136, 137, 196, 197, 198, 199, 259, 260, 261, 355, 356, 357, 358, 359, 386, 399], "validate_cardinality_constraints_are_nonoverlap": 57, "validate_constraint": 58, "validate_custom_architecture_cl": 261, "validate_decorrel": 135, "validate_is_finit": 136, "validate_not_nan": 359, "validate_paramet": 199, "validate_parameter_nam": 198, "validate_searchspace_from_config": 189, "validate_simplex_subspace_from_config": 195, "validate_unique_valu": 137, "valu": [418, 419], "variabl": 414, "varname_numpy_use_single_precis": 335, "varname_torch_use_single_precis": 354, "verif": [375, 376, 377, 378, 379, 399], "verifi": 373, "we": 420, "what": 420, "window": 405, "within": 418, "without": 405, "workflow": [407, 411], "write": 407}})