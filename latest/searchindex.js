Search.setIndex({"alltitles": {"Acquisition function": [[372, "acquisition-function"]], "AcquisitionFunction": [[20, null]], "Active Learning": [[413, null]], "Added": [[409, "added"], [409, "id4"], [409, "id8"], [409, "id14"], [409, "id21"], [409, "id30"], [409, "id36"], [409, "id40"], [409, "id47"], [409, "id52"], [409, "id58"], [409, "id64"], [409, "id68"], [409, "id72"], [409, "id76"], [409, "id81"], [409, "id85"], [409, "id88"], [409, "id92"], [409, "id96"], [409, "id100"], [409, "id103"], [409, "id107"], [409, "id111"], [409, "id115"], [409, "id119"], [409, "id125"], [409, "id128"]], "Addendum: Description of transformation functions": [[394, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[428, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[426, null]], "Adding Partial Results": [[414, "adding-partial-results"]], "Adding measurements": [[415, "adding-measurements"]], "Additional Options for Discrete Search Spaces": [[420, null]], "AdditiveKernel": [[98, null]], "Advanced Example: Chemical Substances": [[407, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[392, "an-imaginary-use-case"]], "Array-Based Callables": [[423, null]], "Asynchronous Workflows": [[414, null]], "Automatic field conversion": [[422, "automatic-field-conversion"]], "Available Models": [[424, "available-models"]], "Available recommenders suitable for initial recommendation": [[372, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[372, "available-surrogate-models"]], "Backtesting": [[365, null], [404, null]], "Basic Instructions": [[417, "basic-instructions"]], "Basic creation": [[415, "basic-creation"]], "Basic example for using BayBE": [[371, null]], "Basic string assembly": [[422, "basic-string-assembly"]], "BasicKernel": [[85, null]], "Basics": [[370, null], [415, "basics"]], "Batch optimization": [[415, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[407, null]], "Bayesian Recommenders": [[420, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[254, null]], "BayesianRecommender": [[172, null]], "Bernoulli Multi Armed Bandit": [[392, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[230, null]], "BetaPrior": [[148, null]], "BinaryTarget": [[272, null]], "BotorchRecommender": [[174, null]], "Bound methods": [[382, "bound-methods"]], "Breaking Changes": [[409, "breaking-changes"], [409, "id13"], [409, "id20"]], "Building from the Product of Parameter Values": [[421, "building-from-the-product-of-parameter-values"], [421, "id2"]], "Building the Model": [[392, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[408, "cpus-without-avx-support-installation-of-polars"]], "Caching of recommendations": [[415, "caching-of-recommendations"]], "Campaign": [[27, null]], "Campaign Stopping": [[383, null]], "Campaigns": [[415, null]], "CardinalityConstraint": [[30, null]], "CategoricalEncoding": [[127, null]], "CategoricalParameter": [[122, null], [419, "categoricalparameter"]], "Changed": [[409, "changed"], [409, "id5"], [409, "id9"], [409, "id15"], [409, "id22"], [409, "id27"], [409, "id31"], [409, "id37"], [409, "id41"], [409, "id44"], [409, "id48"], [409, "id53"], [409, "id59"], [409, "id65"], [409, "id69"], [409, "id73"], [409, "id77"], [409, "id82"], [409, "id86"], [409, "id89"], [409, "id93"], [409, "id97"], [409, "id101"], [409, "id104"], [409, "id108"], [409, "id112"], [409, "id116"], [409, "id120"]], "Changelog": [[409, null]], "Clustering Recommenders": [[420, "clustering-recommenders"]], "Code Design": [[410, "code-design"]], "ColumnTransformer": [[356, null]], "Comparing recommendations in both objects": [[400, "comparing-recommendations-in-both-objects"]], "CompositeKernel": [[86, null]], "Condition": [[36, null]], "Conditions": [[416, "conditions"]], "Constraint": [[31, null]], "Constraint Setup": [[389, "constraint-setup"]], "Constraints": [[416, null]], "Constraints Continuous": [[373, null]], "Constraints Discrete": [[376, null]], "Constraints Setup": [[390, "constraints-setup"]], "Construct the campaign and run some iterations": [[374, "construct-the-campaign-and-run-some-iterations"], [375, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[421, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[367, "constructing-campaigns-for-the-simulation-loop"], [368, "constructing-campaigns-for-the-simulation-loop"], [369, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[421, "constructing-from-a-dataframe"], [421, "id1"], [421, "id3"]], "Constructing hybrid recommenders": [[398, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[397, "constructing-the-campaign-and-performing-a-recommendation"], [398, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[398, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[416, "continuous-constraints"]], "Continuous Parameters": [[419, "continuous-parameters"]], "Continuous Subspaces": [[421, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[40, null]], "ContinuousConstraint": [[32, null]], "ContinuousLinearConstraint": [[41, null], [416, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[33, null]], "ContinuousParameter": [[118, null]], "Contributing to BayBE": [[410, null]], "Contributors": [[411, null], [411, "id1"]], "Convenience construction and implicit conversion": [[418, null]], "Conventions for attrs classes": [[410, "conventions-for-attrs-classes"]], "Convert model to onnx": [[386, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[386, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[387, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[386, "create-campaign"]], "Creating Continuous Search Spaces": [[396, null]], "Creating a Simplex-Bound Discrete Subspace": [[421, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign": [[415, "creating-a-campaign"]], "Creating a campaign from the configuration file": [[401, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[377, "creating-and-printing-the-campaign"], [378, "creating-and-printing-the-campaign"], [380, "creating-and-printing-the-campaign"], [394, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[366, "creating-the-campaigns"]], "Creating the Objective": [[368, "creating-the-objective"]], "Creating the Optimization Objective": [[404, "creating-the-optimization-objective"], [405, "creating-the-optimization-objective"]], "Creating the Search Space": [[404, "creating-the-search-space"]], "Creating the Searchspace": [[405, "creating-the-searchspace"]], "Creating the campaign": [[372, "creating-the-campaign"], [387, "creating-the-campaign"], [400, "creating-the-campaign"]], "Creating the constraint": [[377, "creating-the-constraint"], [379, "creating-the-constraint"]], "Creating the constraints": [[378, "creating-the-constraints"], [380, "creating-the-constraints"]], "Creating the objective": [[394, "creating-the-objective"]], "Creating the recommender object": [[372, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[367, "creating-the-searchspace-and-the-objective"], [369, "creating-the-searchspace-and-the-objective"], [374, "creating-the-searchspace-and-the-objective"], [375, "creating-the-searchspace-and-the-objective"], [377, "creating-the-searchspace-and-the-objective"], [378, "creating-the-searchspace-and-the-objective"], [379, "creating-the-searchspace-and-the-objective"], [380, "creating-the-searchspace-and-the-objective"], [397, "creating-the-searchspace-and-the-objective"]], "Creation from a JSON config": [[415, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[424, null]], "Custom Hooks": [[381, null]], "Custom Surrogates": [[385, null]], "CustomDiscreteParameter": [[125, null], [419, "customdiscreteparameter"]], "CustomEncoding": [[128, null]], "CustomONNXSurrogate": [[236, null]], "Dataframe deserialization": [[422, "dataframe-deserialization"]], "DefaultKernelFactory": [[250, null]], "Defining config dictionaries": [[402, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[383, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[384, "defining-the-hook"]], "Defining the Hooks": [[382, "defining-the-hooks"]], "Defining the Optimization Objective": [[407, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[366, "defining-the-optimization-problem"]], "Defining the Search Space": [[407, "defining-the-search-space"]], "Defining the Tasks": [[404, "defining-the-tasks"], [405, "defining-the-tasks"]], "Defining the targets": [[394, "defining-the-targets"]], "Defining the test function": [[374, "defining-the-test-function"], [375, "defining-the-test-function"], [397, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[398, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[409, "deprecations"], [409, "id11"], [409, "id18"], [409, "id25"], [409, "id34"], [409, "id50"], [409, "id56"], [409, "id62"], [409, "id79"]], "Deserialization from configuration strings": [[422, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[110, null], [418, "desirabilityobjective"]], "Developer Tools": [[410, "developer-tools"]], "Discrete Constraints": [[416, "discrete-constraints"]], "Discrete Parameters": [[419, "discrete-parameters"]], "Discrete Subspaces": [[421, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[389, null]], "DiscreteCardinalityConstraint": [[47, null]], "DiscreteConstraint": [[34, null]], "DiscreteCustomConstraint": [[48, null], [416, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[49, null], [416, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[50, null], [416, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[51, null], [416, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[52, null], [416, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[119, null]], "DiscretePermutationInvarianceConstraint": [[53, null], [416, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[54, null]], "DiscreteSamplingMethod": [[352, null]], "DiscreteSumConstraint": [[55, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[416, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[392, "discussion"]], "Disk Caching": [[417, "disk-caching"]], "Dummy": [[293, null]], "Duplicate Substances": [[389, "duplicate-substances"]], "EDBOKernelFactory": [[252, null]], "EXPERIMENTAL: Floating Point Precision": [[417, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[428, null]], "Environment Variables": [[417, null]], "Equivalent copies": [[422, null]], "Estimation with Constraints": [[428, null]], "Example Searchspace and objective parameters": [[372, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[374, null]], "Example for creating campaigns from configs": [[401, null]], "Example for custom parameter passing in surrogate models": [[387, null]], "Example for full simulation loop using a table-based lookup mechanism": [[368, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[369, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[367, null]], "Example for linear constraints in a continuous searchspace": [[375, null]], "Example for surrogate model with a custom pretrained model": [[386, null]], "Example for the serialization of a campaign": [[400, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[397, null]], "Example for using custom constraints in discrete searchspaces": [[377, null]], "Example for using dependency constraints in discrete searchspaces": [[378, null]], "Example for using different strategies": [[372, null]], "Example for using exclusion constraints in discrete searchspaces": [[379, null]], "Example for using exclusion constraints incorporating sums and products": [[380, null]], "Example for using synthetic test functions in hybrid spaces": [[398, null]], "Example for using the multi target mode for the objective": [[394, null]], "Example for validation of a config file": [[402, null]], "Examples": [[406, null]], "Expectations": [[426, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[386, "experiment-setup"], [387, "experiment-setup"]], "Experiment setup": [[377, "experiment-setup"], [378, "experiment-setup"], [379, "experiment-setup"], [380, "experiment-setup"], [400, "experiment-setup"]], "Experiment setup and creating the searchspace": [[394, "experiment-setup-and-creating-the-searchspace"]], "Experimental feature only!": [[417, null]], "Expired Deprecations (from 0.6.*)": [[409, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[409, "expired-deprecations-from-0-7"]], "Extending BayBE\u2019s Functionality": [[410, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[424, "extracting-the-model-for-advanced-study"]], "FPSRecommender": [[186, null]], "Fixed": [[409, "fixed"], [409, "id2"], [409, "id6"], [409, "id10"], [409, "id16"], [409, "id24"], [409, "id28"], [409, "id33"], [409, "id38"], [409, "id42"], [409, "id49"], [409, "id54"], [409, "id60"], [409, "id66"], [409, "id74"], [409, "id78"], [409, "id83"], [409, "id90"], [409, "id94"], [409, "id98"], [409, "id105"], [409, "id109"], [409, "id113"], [409, "id117"], [409, "id121"], [409, "id123"], [409, "id126"]], "From GitHub": [[407, "from-github"]], "From Local Clone": [[407, "from-local-clone"]], "From Package Index": [[407, "from-package-index"]], "From the Default Constructor": [[421, "from-the-default-constructor"]], "Further information": [[415, "further-information"]], "GammaPrior": [[149, null]], "GaussianMixtureClusteringRecommender": [[181, null]], "GaussianProcessPreset": [[247, null]], "GaussianProcessSurrogate": [[240, null]], "General Information": [[420, "general-information"]], "General Workflow": [[410, "general-workflow"]], "Generating Lookup Tables": [[404, "generating-lookup-tables"], [405, "generating-lookup-tables"]], "Getting a recommendation and adding measurements": [[371, "getting-a-recommendation-and-adding-measurements"]], "Getting recommendations": [[415, "getting-recommendations"]], "Global Uncertainty Reduction": [[413, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[150, null]], "HalfNormalPrior": [[151, null]], "Hook instance vs. target instance": [[382, null]], "Hybrid constraints": [[416, null]], "Imports": [[366, "imports"], [382, "imports"], [384, "imports"], [389, "imports"], [390, "imports"], [392, "imports"], [396, "imports"], [404, "imports"], [405, "imports"]], "Inclusion of initial data": [[367, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[232, null]], "Indices and Tables": [[407, "indices-and-tables"]], "Influence of Continuous Parameters": [[428, null]], "Installation Related Issues": [[408, "installation-related-issues"]], "Interval": [[332, null]], "Invoking alternative constructors": [[422, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[386, "iterate-with-recommendations-and-measurements"], [387, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[422, "json-de-serialization"]], "KMeansClusteringRecommender": [[182, null]], "Kernel": [[87, null]], "KernelFactory": [[242, null]], "Known Issues": [[408, null]], "License": [[412, null]], "Limitations": [[425, "limitations"]], "LinearKernel": [[89, null]], "Links for documentation": [[387, "links-for-documentation"]], "Local Uncertainty Reduction": [[413, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[152, null]], "Lookup functionality and data creation": [[367, "lookup-functionality-and-data-creation"], [368, "lookup-functionality-and-data-creation"], [369, "lookup-functionality-and-data-creation"]], "MATCH mode": [[425, "match-mode"]], "MIN and MAX mode": [[425, "min-and-max-mode"]], "Maintainers": [[411, "maintainers"]], "Mandatory target bounds": [[418, null]], "Manual verification of the constraint": [[377, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[378, "manual-verification-of-the-constraints"], [379, "manual-verification-of-the-constraints"], [380, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[414, "marking-experiments-as-pending"]], "MaternKernel": [[90, null]], "MeanPredictionSurrogate": [[256, null]], "Memory During Optimization": [[428, null]], "MemorySize": [[197, null]], "Meta Recommenders": [[420, "meta-recommenders"]], "MetaRecommender": [[160, null]], "Method overrides": [[410, "method-overrides"]], "Missing Lookup Values": [[423, null]], "Mixtures": [[388, null]], "Model Outputs": [[386, "model-outputs"], [387, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[389, null]], "Modeling a Mixture in Traditional Representation": [[390, null]], "Monitoring the Probability of Improvement": [[384, null]], "Monkeypatching": [[382, "monkeypatching"], [383, null], [384, "monkeypatching"]], "Multi Target": [[393, null]], "Multi-Armed Bandit": [[391, null]], "NGBoostSurrogate": [[258, null]], "NaiveHybridSpaceRecommender": [[166, null]], "Necessary imports": [[386, "necessary-imports"], [387, "necessary-imports"], [400, "necessary-imports"], [401, "necessary-imports"], [402, "necessary-imports"]], "Necessary imports for this example": [[367, "necessary-imports-for-this-example"], [368, "necessary-imports-for-this-example"], [369, "necessary-imports-for-this-example"], [371, "necessary-imports-for-this-example"], [372, "necessary-imports-for-this-example"], [374, "necessary-imports-for-this-example"], [375, "necessary-imports-for-this-example"], [377, "necessary-imports-for-this-example"], [378, "necessary-imports-for-this-example"], [379, "necessary-imports-for-this-example"], [380, "necessary-imports-for-this-example"], [394, "necessary-imports-for-this-example"], [397, "necessary-imports-for-this-example"], [398, "necessary-imports-for-this-example"]], "Nesting objects": [[422, "nesting-objects"]], "NonPredictiveRecommender": [[179, null]], "NormalPrior": [[153, null]], "NumericalContinuousParameter": [[132, null], [419, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[133, null], [419, "numericaldiscreteparameter"]], "NumericalTarget": [[278, null], [425, "numericaltarget"]], "Objective": [[105, null], [418, null]], "Optimizing a Custom Black-Box Function": [[366, null]], "Optional Dependencies": [[407, "optional-dependencies"]], "Optional dependency": [[419, null]], "Optional: Defining the Optimization Strategy": [[407, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[389, null]], "Other parameters": [[372, "other-parameters"]], "PAMClusteringRecommender": [[183, null]], "Parameter": [[120, null]], "Parameter Setup": [[389, "parameter-setup"], [390, "parameter-setup"]], "Parameter encoding": [[419, null]], "Parameter names": [[419, null]], "Parameter tolerances": [[415, null]], "ParameterEncoding": [[129, null]], "Parameters": [[419, null]], "Parameters for a full simulation loop": [[367, "parameters-for-a-full-simulation-loop"], [368, "parameters-for-a-full-simulation-loop"], [369, "parameters-for-a-full-simulation-loop"]], "PartialAcquisitionFunction": [[22, null]], "Performing some iterations": [[394, "performing-some-iterations"]], "Performing the simulation loop": [[367, "performing-the-simulation-loop"]], "PeriodicKernel": [[91, null]], "Permutation Invariance": [[389, "permutation-invariance"]], "PiecewisePolynomialKernel": [[92, null]], "PlainKernelFactory": [[243, null]], "Plotting the Results": [[366, "plotting-the-results"], [383, "plotting-the-results"], [384, "plotting-the-results"]], "Polars": [[417, "polars"]], "PolynomialKernel": [[93, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Prior": [[146, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[383, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[99, null]], "Pure Recommenders": [[420, "pure-recommenders"]], "PureRecommender": [[169, null]], "Purely Continuous Search Spaces": [[413, null]], "PyCharm vs. exceptiongroup": [[408, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[94, null]], "RFFKernel": [[95, null]], "RQKernel": [[96, null]], "RandomForestSurrogate": [[260, null]], "RandomRecommender": [[187, null]], "RecommenderProtocol": [[157, null]], "Recommenders": [[420, null]], "Registering Custom Hooks": [[382, null]], "Removed": [[409, "removed"], [409, "id17"], [409, "id23"], [409, "id32"], [409, "id45"], [409, "id55"], [409, "id61"], [409, "id70"]], "Representation of Data within Discrete Subspaces": [[421, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[428, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[421, "restricting-search-spaces-using-constraints"]], "Running the Simulation": [[392, "running-the-simulation"]], "Running the Simulation Loop": [[366, "running-the-simulation-loop"]], "SHAPInsight": [[80, null]], "SKLearnClusteringRecommender": [[184, null]], "Sampling Recommenders": [[420, "sampling-recommenders"]], "Scalarizer": [[113, null]], "ScaleKernel": [[100, null]], "Search Space Creation": [[389, "search-space-creation"], [390, "search-space-creation"]], "Search Space Memory Estimation": [[428, "search-space-memory-estimation"]], "Search Spaces": [[421, null]], "SearchSpace": [[192, null]], "SearchSpaceType": [[193, null]], "Searchspaces": [[395, null]], "Seeing Transfer Learning in Action": [[426, "seeing-transfer-learning-in-action"]], "Sequential vs. parallel experimentation": [[415, null]], "SequentialMetaRecommender": [[162, null]], "SerialMixin": [[215, null]], "Serialization": [[399, null], [415, "serialization"], [422, null]], "Serialization and de-serialization": [[400, "serialization-and-de-serialization"]], "Settings": [[366, "settings"], [383, "settings"], [384, "settings"], [396, "settings"], [404, "settings"], [405, "settings"]], "Setup": [[371, "setup"], [392, "setup"]], "Signature components": [[382, null]], "Simplex Construction": [[389, null]], "Simulating Multiple Scenarios": [[423, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[423, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[423, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[383, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[383, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[423, null]], "Simulation Loop": [[404, "simulation-loop"], [405, "simulation-loop"]], "SingleTargetObjective": [[115, null], [418, "singletargetobjective"]], "Slot-based Representation": [[390, null]], "SmoothedBoxPrior": [[154, null]], "StreamingSequentialMetaRecommender": [[163, null]], "Sub-Sampling Method": [[413, null]], "SubSelectionCondition": [[37, null], [416, "subselectioncondition"]], "SubspaceContinuous": [[190, null]], "SubspaceDiscrete": [[198, null]], "Substance Amounts": [[389, "substance-amounts"]], "SubstanceEncoding": [[130, null]], "SubstanceParameter": [[136, null], [419, "substanceparameter"]], "Suggested Fix": [[408, null], [408, null], [408, null], [408, null]], "Supported Acquisition Functions": [[414, null]], "Supported Recommenders": [[414, null]], "Surrogate": [[233, null]], "SurrogateProtocol": [[234, null]], "Surrogates": [[424, null]], "Synchronizing Pull Requests": [[410, "synchronizing-pull-requests"]], "Target": [[270, null]], "TargetMode": [[275, null]], "TargetTransformation": [[276, null]], "Targets": [[425, null]], "TaskParameter": [[123, null], [419, "taskparameter"]], "Technology": [[426, null]], "Telemetry": [[417, "telemetry"]], "Telemetry Scope": [[417, null]], "Terminology": [[389, "terminology"], [422, null], [426, null]], "Terminology Continued": [[426, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[423, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[392, "the-black-box-model"]], "The Lookup Mechanism": [[423, "the-lookup-mechanism"]], "The Optimization Loop": [[407, "the-optimization-loop"]], "The Role of the TaskParameter": [[426, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[401, "the-configuration-dictionary-as-a-string"]], "The type field": [[422, "the-type-field"]], "Theoretical Span": [[389, null]], "ThresholdCondition": [[38, null], [416, "thresholdcondition"]], "Transfer Learning": [[403, null], [405, null], [426, null]], "Triggering the Hook": [[384, "triggering-the-hook"]], "Triggering the Hooks": [[382, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[164, null]], "Uninstalling Internet Packages": [[417, null]], "Unlocking Data Treasures Through Transfer Learning": [[426, "unlocking-data-treasures-through-transfer-learning"]], "UpperConfidenceBound": [[8, null]], "User Guide": [[427, null]], "Using Custom Models": [[424, "using-custom-models"]], "Using Explicit Bounds": [[421, "using-explicit-bounds"]], "Using None": [[423, "using-none"]], "Using a Callable": [[423, "using-a-callable"]], "Using a Dataframe": [[423, "using-a-dataframe"]], "Using abbreviations": [[422, "using-abbreviations"]], "Using configuration instead": [[386, "using-configuration-instead"], [387, "using-configuration-instead"]], "Using default values": [[422, "using-default-values"]], "Utilities": [[428, null]], "Validation of model parameters": [[387, "validation-of-model-parameters"]], "Verification of Constraints": [[389, "verification-of-constraints"], [390, "verification-of-constraints"]], "Verification of Span": [[389, "verification-of-span"]], "Verification of the two dictionaries": [[402, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[375, "verify-the-constraints"]], "Windows \u2013 Torch Problems": [[408, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[374, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [375, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [398, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[410, "writing-docstrings"]], "Writing classes": [[410, "writing-classes"]], "[0.1.0] - 2022-10-01": [[409, "id127"]], "[0.10.0] - 2024-08-02": [[409, "id19"]], "[0.11.0] - 2024-09-09": [[409, "id12"]], "[0.11.1] - 2024-10-01": [[409, "id7"]], "[0.11.2] - 2024-10-11": [[409, "id3"]], "[0.11.3] - 2024-11-06": [[409, "id1"]], "[0.2.0] - 2022-11-10": [[409, "id124"]], "[0.2.1] - 2022-12-01": [[409, "id122"]], "[0.2.2] - 2023-01-13": [[409, "id118"]], "[0.2.3] - 2023-03-14": [[409, "id114"]], "[0.2.4] - 2023-03-24": [[409, "id110"]], "[0.3.0] - 2023-06-27": [[409, "id106"]], "[0.3.1] - 2023-07-17": [[409, "id102"]], "[0.3.2] - 2023-07-24": [[409, "id99"]], "[0.4.0] - 2023-08-16": [[409, "id95"]], "[0.4.1] - 2023-08-23": [[409, "id91"]], "[0.4.2] - 2023-08-29": [[409, "id87"]], "[0.5.0] - 2023-09-15": [[409, "id84"]], "[0.5.1] - 2023-10-19": [[409, "id80"]], "[0.6.0] - 2023-11-17": [[409, "id75"]], "[0.6.1] - 2023-11-27": [[409, "id71"]], "[0.7.0] - 2023-12-04": [[409, "id67"]], "[0.7.1] - 2023-12-07": [[409, "id63"]], "[0.7.2] - 2024-01-24": [[409, "id57"]], "[0.7.3] - 2024-02-09": [[409, "id51"]], "[0.7.4] - 2024-02-28": [[409, "id46"]], "[0.8.0] - 2024-02-29": [[409, "id43"]], "[0.8.1] - 2024-03-11": [[409, "id39"]], "[0.8.2] - 2024-03-27": [[409, "id35"]], "[0.9.0] - 2024-05-21": [[409, "id29"]], "[0.9.1] - 2024-06-04": [[409, "id26"]], "[Unreleased]": [[409, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[19, null]], "baybe.acquisition.partial": [[21, null]], "baybe.acquisition.utils": [[23, null]], "baybe.acquisition.utils.convert_acqf": [[24, null]], "baybe.acquisition.utils.str_to_acqf": [[25, null]], "baybe.campaign": [[26, null]], "baybe.constraints": [[28, null]], "baybe.constraints.base": [[29, null]], "baybe.constraints.conditions": [[35, null]], "baybe.constraints.continuous": [[39, null]], "baybe.constraints.deprecation": [[42, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[43, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[44, null]], "baybe.constraints.deprecation.structure_constraints": [[45, null]], "baybe.constraints.discrete": [[46, null]], "baybe.constraints.validation": [[56, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[57, null]], "baybe.constraints.validation.validate_constraints": [[58, null]], "baybe.exceptions": [[59, null]], "baybe.exceptions.DeprecationError": [[60, null]], "baybe.exceptions.EmptySearchSpaceError": [[61, null]], "baybe.exceptions.IncompatibilityError": [[62, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[63, null]], "baybe.exceptions.IncompatibleExplainerError": [[64, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[65, null]], "baybe.exceptions.InvalidSurrogateModelError": [[66, null]], "baybe.exceptions.InvalidTargetValueError": [[67, null]], "baybe.exceptions.ModelNotTrainedError": [[68, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[69, null]], "baybe.exceptions.NoRecommendersLeftError": [[70, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[71, null]], "baybe.exceptions.NothingToSimulateError": [[72, null]], "baybe.exceptions.NumericalUnderflowError": [[73, null]], "baybe.exceptions.OptionalImportError": [[74, null]], "baybe.exceptions.UnidentifiedSubclassError": [[75, null]], "baybe.exceptions.UnmatchedAttributeError": [[76, null]], "baybe.exceptions.UnusedObjectWarning": [[77, null]], "baybe.insights": [[78, null]], "baybe.insights.shap": [[79, null]], "baybe.insights.shap.is_shap_explainer": [[81, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[82, null]], "baybe.kernels": [[83, null]], "baybe.kernels.base": [[84, null]], "baybe.kernels.basic": [[88, null]], "baybe.kernels.composite": [[97, null]], "baybe.objective": [[101, null]], "baybe.objective.Objective": [[102, null]], "baybe.objectives": [[103, null]], "baybe.objectives.base": [[104, null]], "baybe.objectives.base.to_objective": [[106, null]], "baybe.objectives.deprecation": [[107, null]], "baybe.objectives.deprecation.structure_objective": [[108, null]], "baybe.objectives.desirability": [[109, null]], "baybe.objectives.desirability.scalarize": [[111, null]], "baybe.objectives.enum": [[112, null]], "baybe.objectives.single": [[114, null]], "baybe.parameters": [[116, null]], "baybe.parameters.base": [[117, null]], "baybe.parameters.categorical": [[121, null]], "baybe.parameters.custom": [[124, null]], "baybe.parameters.enum": [[126, null]], "baybe.parameters.numerical": [[131, null]], "baybe.parameters.substance": [[134, null]], "baybe.parameters.substance.Smiles": [[135, null]], "baybe.parameters.utils": [[137, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[138, null]], "baybe.parameters.utils.sort_parameters": [[139, null]], "baybe.parameters.validation": [[140, null]], "baybe.parameters.validation.validate_decorrelation": [[141, null]], "baybe.parameters.validation.validate_is_finite": [[142, null]], "baybe.parameters.validation.validate_unique_values": [[143, null]], "baybe.priors": [[144, null]], "baybe.priors.base": [[145, null]], "baybe.priors.basic": [[147, null]], "baybe.recommenders": [[155, null]], "baybe.recommenders.base": [[156, null]], "baybe.recommenders.meta": [[158, null]], "baybe.recommenders.meta.base": [[159, null]], "baybe.recommenders.meta.sequential": [[161, null]], "baybe.recommenders.naive": [[165, null]], "baybe.recommenders.pure": [[167, null]], "baybe.recommenders.pure.base": [[168, null]], "baybe.recommenders.pure.bayesian": [[170, null]], "baybe.recommenders.pure.bayesian.base": [[171, null]], "baybe.recommenders.pure.bayesian.botorch": [[173, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[175, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[176, null]], "baybe.recommenders.pure.nonpredictive": [[177, null]], "baybe.recommenders.pure.nonpredictive.base": [[178, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[180, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[185, null]], "baybe.searchspace": [[188, null]], "baybe.searchspace.continuous": [[189, null]], "baybe.searchspace.core": [[191, null]], "baybe.searchspace.core.to_searchspace": [[194, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[195, null]], "baybe.searchspace.discrete": [[196, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[199, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[200, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[201, null]], "baybe.searchspace.validation": [[202, null]], "baybe.searchspace.validation.get_transform_parameters": [[203, null]], "baybe.searchspace.validation.validate_parameter_names": [[204, null]], "baybe.searchspace.validation.validate_parameters": [[205, null]], "baybe.serialization": [[206, null]], "baybe.serialization.core": [[207, null]], "baybe.serialization.core.block_deserialization_hook": [[208, null]], "baybe.serialization.core.block_serialization_hook": [[209, null]], "baybe.serialization.core.converter": [[210, null]], "baybe.serialization.core.get_base_structure_hook": [[211, null]], "baybe.serialization.core.select_constructor_hook": [[212, null]], "baybe.serialization.core.unstructure_base": [[213, null]], "baybe.serialization.mixin": [[214, null]], "baybe.serialization.utils": [[216, null]], "baybe.serialization.utils.deserialize_dataframe": [[217, null]], "baybe.serialization.utils.serialize_dataframe": [[218, null]], "baybe.simulation": [[219, null]], "baybe.simulation.core": [[220, null]], "baybe.simulation.core.simulate_experiment": [[221, null]], "baybe.simulation.lookup": [[222, null]], "baybe.simulation.lookup.look_up_targets": [[223, null]], "baybe.simulation.scenarios": [[224, null]], "baybe.simulation.scenarios.simulate_scenarios": [[225, null]], "baybe.simulation.transfer_learning": [[226, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[227, null]], "baybe.surrogates": [[228, null]], "baybe.surrogates.bandit": [[229, null]], "baybe.surrogates.base": [[231, null]], "baybe.surrogates.custom": [[235, null]], "baybe.surrogates.custom.register_custom_architecture": [[237, null]], "baybe.surrogates.gaussian_process": [[238, null]], "baybe.surrogates.gaussian_process.core": [[239, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[241, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[244, null]], "baybe.surrogates.gaussian_process.presets": [[245, null]], "baybe.surrogates.gaussian_process.presets.core": [[246, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[248, null]], "baybe.surrogates.gaussian_process.presets.default": [[249, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[251, null]], "baybe.surrogates.linear": [[253, null]], "baybe.surrogates.naive": [[255, null]], "baybe.surrogates.ngboost": [[257, null]], "baybe.surrogates.random_forest": [[259, null]], "baybe.surrogates.utils": [[261, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[262, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[263, null]], "baybe.surrogates.utils.catch_constant_targets": [[264, null]], "baybe.surrogates.validation": [[265, null]], "baybe.surrogates.validation.get_model_params_validator": [[266, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[267, null]], "baybe.targets": [[268, null]], "baybe.targets.base": [[269, null]], "baybe.targets.binary": [[271, null]], "baybe.targets.binary.ChoiceValue": [[273, null]], "baybe.targets.enum": [[274, null]], "baybe.targets.numerical": [[277, null]], "baybe.targets.transforms": [[279, null]], "baybe.targets.transforms.bell_transform": [[280, null]], "baybe.targets.transforms.linear_transform": [[281, null]], "baybe.targets.transforms.triangular_transform": [[282, null]], "baybe.telemetry": [[283, null]], "baybe.telemetry.get_user_details": [[284, null]], "baybe.telemetry.is_enabled": [[285, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[286, null]], "baybe.telemetry.telemetry_record_value": [[287, null]], "baybe.utils": [[288, null]], "baybe.utils.augmentation": [[289, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[290, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[291, null]], "baybe.utils.basic": [[292, null]], "baybe.utils.basic.find_subclass": [[295, null]], "baybe.utils.basic.get_baseclasses": [[296, null]], "baybe.utils.basic.get_subclasses": [[297, null]], "baybe.utils.basic.group_duplicate_values": [[298, null]], "baybe.utils.basic.hilberts_factory": [[299, null]], "baybe.utils.basic.is_all_instance": [[300, null]], "baybe.utils.basic.match_attributes": [[301, null]], "baybe.utils.basic.refers_to": [[302, null]], "baybe.utils.basic.register_hooks": [[303, null]], "baybe.utils.basic.to_tuple": [[304, null]], "baybe.utils.boolean": [[305, null]], "baybe.utils.boolean.check_if_in": [[306, null]], "baybe.utils.boolean.is_abstract": [[307, null]], "baybe.utils.boolean.strtobool": [[308, null]], "baybe.utils.chemistry": [[309, null]], "baybe.utils.chemistry.get_canonical_smiles": [[310, null]], "baybe.utils.chemistry.get_fingerprint_class": [[311, null]], "baybe.utils.chemistry.name_to_smiles": [[312, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[313, null]], "baybe.utils.conversion": [[314, null]], "baybe.utils.conversion.fraction_to_float": [[315, null]], "baybe.utils.conversion.nonstring_to_tuple": [[316, null]], "baybe.utils.dataframe": [[317, null]], "baybe.utils.dataframe.add_fake_measurements": [[318, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[319, null]], "baybe.utils.dataframe.add_parameter_noise": [[320, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[321, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[322, null]], "baybe.utils.dataframe.df_drop_string_columns": [[323, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[324, null]], "baybe.utils.dataframe.filter_df": [[325, null]], "baybe.utils.dataframe.fuzzy_row_match": [[326, null]], "baybe.utils.dataframe.get_transform_objects": [[327, null]], "baybe.utils.dataframe.pretty_print_df": [[328, null]], "baybe.utils.dataframe.to_tensor": [[329, null]], "baybe.utils.interval": [[330, null]], "baybe.utils.interval.InfiniteIntervalError": [[331, null]], "baybe.utils.interval.convert_bounds": [[333, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[334, null]], "baybe.utils.memory": [[335, null]], "baybe.utils.memory.bytes_to_human_readable": [[336, null]], "baybe.utils.numerical": [[337, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[338, null]], "baybe.utils.numerical.DTypeFloatONNX": [[339, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[340, null]], "baybe.utils.numerical.closer_element": [[341, null]], "baybe.utils.numerical.closest_element": [[342, null]], "baybe.utils.numerical.geom_mean": [[343, null]], "baybe.utils.plotting": [[344, null]], "baybe.utils.plotting.create_example_plots": [[345, null]], "baybe.utils.plotting.indent": [[346, null]], "baybe.utils.plotting.to_string": [[347, null]], "baybe.utils.random": [[348, null]], "baybe.utils.random.set_random_seed": [[349, null]], "baybe.utils.random.temporary_seed": [[350, null]], "baybe.utils.sampling_algorithms": [[351, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[353, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[354, null]], "baybe.utils.scaling": [[355, null]], "baybe.utils.torch": [[357, null]], "baybe.utils.torch.DTypeFloatTorch": [[358, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[359, null]], "baybe.utils.validation": [[360, null]], "baybe.utils.validation.finite_float": [[361, null]], "baybe.utils.validation.non_inf_float": [[362, null]], "baybe.utils.validation.non_nan_float": [[363, null]], "baybe.utils.validation.validate_not_nan": [[364, null]], "classproperty": [[294, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[408, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNoisyExpectedImprovement": [[12, null]], "qNegIntegratedPosteriorVariance": [[13, null]], "qNoisyExpectedImprovement": [[14, null]], "qProbabilityOfImprovement": [[15, null]], "qSimpleRegret": [[16, null]], "qThompsonSampling": [[17, null]], "qUpperConfidenceBound": [[18, null]], "\u201cPre-training\u201d stage": [[386, "pre-training-stage"]], "\u26a1 Quick Start": [[407, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[407, "maintainers"]], "\ud83d\udcbb Installation": [[407, "installation"]], "\ud83d\udcc4 License": [[407, "license"]], "\ud83d\udce1 Telemetry": [[407, "telemetry"]], "\ud83d\udd0b Batteries Included": [[407, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[407, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objective", "_autosummary/baybe.objective.Objective", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.deprecation", "_autosummary/baybe.objectives.deprecation.structure_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.plotting", "_autosummary/baybe.utils.plotting.create_example_plots", "_autosummary/baybe.utils.plotting.indent", "_autosummary/baybe.utils.plotting.to_string", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objective.rst", "_autosummary/baybe.objective.Objective.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.deprecation.rst", "_autosummary/baybe.objectives.deprecation.structure_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.plotting.rst", "_autosummary/baybe.utils.plotting.create_example_plots.rst", "_autosummary/baybe.utils.plotting.indent.rst", "_autosummary/baybe.utils.plotting.to_string.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[60, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[61, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[62, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[64, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[65, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[66, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[67, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[68, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[69, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[70, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[71, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[72, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[73, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[74, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[75, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[76, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[77, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[80, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[85, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[86, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[87, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[89, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[90, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[91, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[93, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[94, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[95, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[96, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[98, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[99, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[100, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[105, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[110, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[115, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[118, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[119, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[120, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[122, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[123, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[136, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[146, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[148, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[149, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[150, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[151, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[152, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[153, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[154, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[157, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[162, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[163, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[164, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[166, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[169, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[172, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[174, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[179, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[181, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[186, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[187, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[192, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[197, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[230, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[232, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[233, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[234, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[236, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[240, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[242, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[243, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[250, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[252, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[254, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[256, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[258, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[260, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[270, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[272, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[278, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[294, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[293, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[331, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[332, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[356, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[60, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[61, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[62, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[64, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[65, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[66, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[67, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[68, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[69, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[70, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[71, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[72, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[73, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[74, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[75, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[76, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[77, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[127, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[128, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[130, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[331, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[154, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[20, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[172, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[174, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[172, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function_cls", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[174, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function_cls", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[20, "baybe.acquisition.base.AcquisitionFunction", false]], "active_values (baybe.parameters.categorical.taskparameter attribute)": [[123, "baybe.parameters.categorical.TaskParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[318, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[319, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[320, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[98, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[166, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender attribute)": [[169, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[172, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[174, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[179, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[181, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[166, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender attribute)": [[169, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[172, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[174, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[179, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[181, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[166, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender attribute)": [[169, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[172, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[174, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[179, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[181, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[148, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[321, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[154, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[80, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[100, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[98, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[99, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basickernel (class in baybe.kernels.base)": [[85, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[262, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[263, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[247, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[19, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[21, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[23, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[26, "module-baybe.campaign", false]], "baybe.constraints": [[28, "module-baybe.constraints", false]], "baybe.constraints.base": [[29, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[35, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[39, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[42, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[46, "module-baybe.constraints.discrete", false]], "baybe.constraints.validation": [[56, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[59, "module-baybe.exceptions", false]], "baybe.insights": [[78, "module-baybe.insights", false]], "baybe.insights.shap": [[79, "module-baybe.insights.shap", false]], "baybe.kernels": [[83, "module-baybe.kernels", false]], "baybe.kernels.base": [[84, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[88, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[97, "module-baybe.kernels.composite", false]], "baybe.objective": [[101, "module-baybe.objective", false]], "baybe.objectives": [[103, "module-baybe.objectives", false]], "baybe.objectives.base": [[104, "module-baybe.objectives.base", false]], "baybe.objectives.deprecation": [[107, "module-baybe.objectives.deprecation", false]], "baybe.objectives.desirability": [[109, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[112, "module-baybe.objectives.enum", false]], "baybe.objectives.single": [[114, "module-baybe.objectives.single", false]], "baybe.parameters": [[116, "module-baybe.parameters", false]], "baybe.parameters.base": [[117, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[121, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[124, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[126, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[131, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[134, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[137, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[140, "module-baybe.parameters.validation", false]], "baybe.priors": [[144, "module-baybe.priors", false]], "baybe.priors.base": [[145, "module-baybe.priors.base", false]], "baybe.priors.basic": [[147, "module-baybe.priors.basic", false]], "baybe.recommenders": [[155, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[156, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[158, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[159, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[161, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[165, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[167, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[168, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[170, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[171, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[173, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[175, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[177, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[178, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[180, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[185, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[188, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[189, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[191, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[196, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[202, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[206, "module-baybe.serialization", false]], "baybe.serialization.core": [[207, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[214, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[216, "module-baybe.serialization.utils", false]], "baybe.simulation": [[219, "module-baybe.simulation", false]], "baybe.simulation.core": [[220, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[222, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[224, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[226, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[228, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[229, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[231, "module-baybe.surrogates.base", false]], "baybe.surrogates.custom": [[235, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[238, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[239, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[241, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[245, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[246, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[249, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[251, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[253, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[255, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[257, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[259, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[261, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[265, "module-baybe.surrogates.validation", false]], "baybe.targets": [[268, "module-baybe.targets", false]], "baybe.targets.base": [[269, "module-baybe.targets.base", false]], "baybe.targets.binary": [[271, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[274, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[277, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[279, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[283, "module-baybe.telemetry", false]], "baybe.utils": [[288, "module-baybe.utils", false]], "baybe.utils.augmentation": [[289, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[292, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[305, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[309, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[314, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[317, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[330, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[335, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[337, "module-baybe.utils.numerical", false]], "baybe.utils.plotting": [[344, "module-baybe.utils.plotting", false]], "baybe.utils.random": [[348, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[351, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[355, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[357, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[360, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[254, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[172, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[276, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[280, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[148, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[230, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[148, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[272, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[208, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[209, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[174, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[278, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[336, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[27, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[30, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[264, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[127, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[122, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[332, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[306, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[273, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[294, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[341, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[342, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[356, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[119, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[122, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[123, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[136, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[192, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[197, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[118, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[119, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[120, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[122, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[123, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[136, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[192, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[197, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[197, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[166, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[169, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[172, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[174, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[179, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[181, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[86, "baybe.kernels.base.CompositeKernel", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[149, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[36, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[31, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[192, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[192, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[166, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[332, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[192, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[193, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[32, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[43, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[44, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[118, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[24, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[333, "baybe.utils.interval.convert_bounds", false]], "converter (in module baybe.serialization.core)": [[210, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[332, "baybe.utils.interval.Interval.create", false]], "create_example_plots() (in module baybe.utils.plotting)": [[345, "baybe.utils.plotting.create_example_plots", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[128, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[125, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[128, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[236, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[136, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[136, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_iterator() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[163, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.default_iterator", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[236, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[250, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[60, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[217, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[110, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[290, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[291, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[322, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[323, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[324, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[166, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[192, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[193, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[119, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[352, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[338, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[339, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[358, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[293, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[252, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[193, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[61, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[119, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[122, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[123, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[136, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[192, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[197, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[197, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[197, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[80, "baybe.insights.shap.SHAPInsight.explain", false]], "explainer (baybe.insights.shap.shapinsight attribute)": [[80, "baybe.insights.shap.SHAPInsight.explainer", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[272, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[353, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[325, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[295, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[361, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[230, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[232, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[233, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[234, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[236, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[240, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[254, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[256, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[258, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[260, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[356, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[352, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[186, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[315, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[80, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[192, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[20, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[30, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[31, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[32, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[34, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[36, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[38, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[85, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[86, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[87, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[89, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[90, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[91, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[93, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[94, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[95, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[96, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[98, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[99, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[100, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[105, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[110, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[115, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[118, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[119, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[120, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[122, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[123, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[136, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[146, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[148, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[149, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[150, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[151, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[152, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[153, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[154, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[162, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[163, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[164, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[192, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[215, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[230, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[232, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[233, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[236, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[240, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[243, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[254, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[256, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[258, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[260, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[270, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[272, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[278, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[332, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[20, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[30, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[31, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[32, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[34, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[36, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[38, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[85, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[86, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[87, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[89, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[90, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[91, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[93, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[94, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[95, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[96, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[98, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[99, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[100, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[105, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[110, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[115, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[118, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[119, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[120, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[122, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[123, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[136, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[146, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[148, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[149, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[150, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[151, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[152, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[153, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[154, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[162, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[163, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[164, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[192, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[215, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[230, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[232, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[233, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[236, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[240, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[243, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[254, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[256, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[258, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[260, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[270, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[272, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[278, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[332, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[192, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[240, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[192, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[80, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[80, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[326, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[149, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[181, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[247, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[240, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[113, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[343, "baybe.utils.numerical.geom_mean", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[211, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[296, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[310, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[192, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[162, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[163, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[164, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[311, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[266, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[162, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[163, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[164, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[192, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[138, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[297, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[172, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[174, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[327, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[203, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[284, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[298, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[150, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[151, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[299, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[193, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[174, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "incompatibilityerror": [[62, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleexplainererror": [[64, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[65, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "indent() (in module baybe.utils.plotting)": [[346, "baybe.utils.plotting.indent", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[232, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infiniteintervalerror": [[331, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[164, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[127, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[332, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[66, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[67, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[307, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[300, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[332, "baybe.utils.interval.Interval.is_bounded", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[30, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[31, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[32, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[34, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[118, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[119, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[120, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[122, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[123, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[136, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[332, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[30, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[31, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[32, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[34, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[118, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[119, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[120, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[122, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[123, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[136, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[285, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[332, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[332, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[118, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[119, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[120, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[122, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[123, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[136, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[332, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[118, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[119, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[120, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[122, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[123, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[136, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[332, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[81, "baybe.insights.shap.is_shap_explainer", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[243, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[87, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[240, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[242, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[136, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[136, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[90, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[91, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[94, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[95, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[96, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[90, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[91, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[94, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[95, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[96, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[276, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[281, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[89, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[152, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[153, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[152, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[223, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[332, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[82, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[248, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[356, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[275, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[301, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[90, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[275, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[113, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[256, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[197, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[160, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[275, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[162, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[278, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[181, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[181, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[254, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[258, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[260, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[68, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [19, "module-baybe.acquisition.base", false], [21, "module-baybe.acquisition.partial", false], [23, "module-baybe.acquisition.utils", false], [26, "module-baybe.campaign", false], [28, "module-baybe.constraints", false], [29, "module-baybe.constraints.base", false], [35, "module-baybe.constraints.conditions", false], [39, "module-baybe.constraints.continuous", false], [42, "module-baybe.constraints.deprecation", false], [46, "module-baybe.constraints.discrete", false], [56, "module-baybe.constraints.validation", false], [59, "module-baybe.exceptions", false], [78, "module-baybe.insights", false], [79, "module-baybe.insights.shap", false], [83, "module-baybe.kernels", false], [84, "module-baybe.kernels.base", false], [88, "module-baybe.kernels.basic", false], [97, "module-baybe.kernels.composite", false], [101, "module-baybe.objective", false], [103, "module-baybe.objectives", false], [104, "module-baybe.objectives.base", false], [107, "module-baybe.objectives.deprecation", false], [109, "module-baybe.objectives.desirability", false], [112, "module-baybe.objectives.enum", false], [114, "module-baybe.objectives.single", false], [116, "module-baybe.parameters", false], [117, "module-baybe.parameters.base", false], [121, "module-baybe.parameters.categorical", false], [124, "module-baybe.parameters.custom", false], [126, "module-baybe.parameters.enum", false], [131, "module-baybe.parameters.numerical", false], [134, "module-baybe.parameters.substance", false], [137, "module-baybe.parameters.utils", false], [140, "module-baybe.parameters.validation", false], [144, "module-baybe.priors", false], [145, "module-baybe.priors.base", false], [147, "module-baybe.priors.basic", false], [155, "module-baybe.recommenders", false], [156, "module-baybe.recommenders.base", false], [158, "module-baybe.recommenders.meta", false], [159, "module-baybe.recommenders.meta.base", false], [161, "module-baybe.recommenders.meta.sequential", false], [165, "module-baybe.recommenders.naive", false], [167, "module-baybe.recommenders.pure", false], [168, "module-baybe.recommenders.pure.base", false], [170, "module-baybe.recommenders.pure.bayesian", false], [171, "module-baybe.recommenders.pure.bayesian.base", false], [173, "module-baybe.recommenders.pure.bayesian.botorch", false], [175, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [177, "module-baybe.recommenders.pure.nonpredictive", false], [178, "module-baybe.recommenders.pure.nonpredictive.base", false], [180, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [185, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [188, "module-baybe.searchspace", false], [189, "module-baybe.searchspace.continuous", false], [191, "module-baybe.searchspace.core", false], [196, "module-baybe.searchspace.discrete", false], [202, "module-baybe.searchspace.validation", false], [206, "module-baybe.serialization", false], [207, "module-baybe.serialization.core", false], [214, "module-baybe.serialization.mixin", false], [216, "module-baybe.serialization.utils", false], [219, "module-baybe.simulation", false], [220, "module-baybe.simulation.core", false], [222, "module-baybe.simulation.lookup", false], [224, "module-baybe.simulation.scenarios", false], [226, "module-baybe.simulation.transfer_learning", false], [228, "module-baybe.surrogates", false], [229, "module-baybe.surrogates.bandit", false], [231, "module-baybe.surrogates.base", false], [235, "module-baybe.surrogates.custom", false], [238, "module-baybe.surrogates.gaussian_process", false], [239, "module-baybe.surrogates.gaussian_process.core", false], [241, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [245, "module-baybe.surrogates.gaussian_process.presets", false], [246, "module-baybe.surrogates.gaussian_process.presets.core", false], [249, "module-baybe.surrogates.gaussian_process.presets.default", false], [251, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [253, "module-baybe.surrogates.linear", false], [255, "module-baybe.surrogates.naive", false], [257, "module-baybe.surrogates.ngboost", false], [259, "module-baybe.surrogates.random_forest", false], [261, "module-baybe.surrogates.utils", false], [265, "module-baybe.surrogates.validation", false], [268, "module-baybe.targets", false], [269, "module-baybe.targets.base", false], [271, "module-baybe.targets.binary", false], [274, "module-baybe.targets.enum", false], [277, "module-baybe.targets.numerical", false], [279, "module-baybe.targets.transforms", false], [283, "module-baybe.telemetry", false], [288, "module-baybe.utils", false], [289, "module-baybe.utils.augmentation", false], [292, "module-baybe.utils.basic", false], [305, "module-baybe.utils.boolean", false], [309, "module-baybe.utils.chemistry", false], [314, "module-baybe.utils.conversion", false], [317, "module-baybe.utils.dataframe", false], [330, "module-baybe.utils.interval", false], [335, "module-baybe.utils.memory", false], [337, "module-baybe.utils.numerical", false], [344, "module-baybe.utils.plotting", false], [348, "module-baybe.utils.random", false], [351, "module-baybe.utils.sampling_algorithms", false], [355, "module-baybe.utils.scaling", false], [357, "module-baybe.utils.torch", false], [360, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.n_fits_done", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[174, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[174, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[192, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[166, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[118, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[119, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[120, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[122, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[123, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[136, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[270, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[272, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[278, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[312, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[258, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[69, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "non_inf_float() (in module baybe.utils.validation)": [[362, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[363, "baybe.utils.validation.non_nan_float", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[179, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[316, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[70, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[153, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[71, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[72, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[90, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[95, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[278, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[73, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[105, "baybe.objectives.base.Objective", false]], "objective() (in module baybe.objective)": [[102, "baybe.objective.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[93, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[93, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[127, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[236, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[236, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[74, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[100, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[100, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[120, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[199, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[200, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[192, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameterencoding (class in baybe.parameters.enum)": [[129, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[192, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[91, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[91, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[91, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[243, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[80, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[93, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[230, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[232, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[233, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[236, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[240, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[254, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[256, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[258, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[260, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[230, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[230, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[93, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[328, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[230, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[146, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[99, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[169, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[352, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[260, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[187, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[149, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[94, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[157, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[162, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[163, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[164, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[166, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[169, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[172, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[174, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[179, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[181, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[182, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[183, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[186, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[187, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[164, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[157, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[162, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[163, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "refers_to() (in module baybe.utils.basic)": [[302, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[237, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[303, "baybe.utils.basic.register_hooks", false]], "rffkernel (class in baybe.kernels.basic)": [[95, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[96, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[354, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[174, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[111, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[110, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[113, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[150, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[151, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[152, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[153, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[100, "baybe.kernels.composite.ScaleKernel", false]], "searchspace (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[192, "baybe.searchspace.core.SearchSpace", false]], "searchspacetype (class in baybe.searchspace.core)": [[193, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[212, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[162, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[163, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[164, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[37, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[174, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[176, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[162, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[218, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[215, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[349, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shapinsight (class in baybe.insights.shap)": [[80, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[154, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[221, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[225, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[227, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[115, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[184, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[135, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[313, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[154, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[139, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[25, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[163, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[308, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[45, "baybe.constraints.deprecation.structure_constraints", false]], "structure_objective() (in module baybe.objectives.deprecation)": [[108, "baybe.objectives.deprecation.structure_objective", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[37, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[190, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[130, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[136, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[272, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[118, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[119, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[120, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[122, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[123, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[136, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[270, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[272, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[278, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[230, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[232, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[233, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[236, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[240, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[254, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[256, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[258, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[260, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[233, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[172, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[174, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[234, "baybe.surrogates.base.SurrogateProtocol", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[164, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[270, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[275, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[105, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[110, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[115, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[276, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[192, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[123, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[286, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[287, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[350, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[38, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[230, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[232, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[233, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[234, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[236, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[240, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[254, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[256, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[258, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[260, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[85, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[86, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[87, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[89, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[90, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[91, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[93, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[94, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[95, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[96, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[98, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[99, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[100, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[105, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[110, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[115, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[118, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[119, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[120, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[122, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[123, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[136, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[146, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[148, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[149, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[150, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[151, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[152, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[153, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[154, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[162, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[163, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[164, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[192, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[215, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[230, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[232, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[233, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[236, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[240, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[243, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[254, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[256, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[258, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[260, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[270, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[272, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[278, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[332, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[85, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[86, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[87, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[89, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[90, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[91, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[93, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[94, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[95, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[96, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[98, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[99, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[100, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[85, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[86, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[87, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[89, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[90, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[91, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[93, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[94, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[95, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[96, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[98, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[99, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[100, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[146, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[148, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[149, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[150, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[151, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[152, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[153, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[154, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[85, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[86, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[87, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[89, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[90, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[91, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[92, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[93, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[94, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[95, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[96, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[98, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[99, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[100, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[105, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[110, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[115, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[118, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[119, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[120, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[122, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[123, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[136, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[146, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[148, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[149, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[150, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[151, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[152, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[153, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[154, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[160, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[162, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[163, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[164, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[192, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[215, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[230, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[232, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[233, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[236, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[240, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[243, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[254, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[256, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[258, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[260, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[270, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[272, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[278, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[332, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[244, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[332, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[270, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[272, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[278, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[106, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[118, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[119, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[120, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[122, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[123, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[136, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[194, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.plotting)": [[347, "baybe.utils.plotting.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[118, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[119, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[122, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[123, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[132, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[136, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[332, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[329, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[332, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[304, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[105, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[110, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[115, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[119, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[122, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[123, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[136, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[190, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[192, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[198, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[270, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[272, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[278, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[356, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[278, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[276, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[282, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[164, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[192, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[75, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[76, "baybe.exceptions.UnmatchedAttributeError", false]], "unstructure_base() (in module baybe.serialization.core)": [[213, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[77, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[332, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[334, "baybe.utils.interval.use_fallback_constructor_hook", false]], "uses_shap_explainer (baybe.insights.shap.shapinsight property)": [[80, "baybe.insights.shap.SHAPInsight.uses_shap_explainer", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[57, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[236, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[58, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[267, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[141, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[142, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[364, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[204, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[205, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[195, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[201, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[143, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[119, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[122, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[123, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[125, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[133, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[136, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[89, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[89, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[340, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[359, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[110, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[130, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [26, 0, 0, "-", "campaign"], [28, 0, 0, "-", "constraints"], [59, 0, 0, "-", "exceptions"], [78, 0, 0, "-", "insights"], [83, 0, 0, "-", "kernels"], [101, 0, 0, "-", "objective"], [103, 0, 0, "-", "objectives"], [116, 0, 0, "-", "parameters"], [144, 0, 0, "-", "priors"], [155, 0, 0, "-", "recommenders"], [188, 0, 0, "-", "searchspace"], [206, 0, 0, "-", "serialization"], [219, 0, 0, "-", "simulation"], [228, 0, 0, "-", "surrogates"], [268, 0, 0, "-", "targets"], [283, 0, 0, "-", "telemetry"], [288, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [19, 0, 0, "-", "base"], [21, 0, 0, "-", "partial"], [23, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNoisyExpectedImprovement"], [13, 1, 1, "", "qNegIntegratedPosteriorVariance"], [14, 1, 1, "", "qNoisyExpectedImprovement"], [15, 1, 1, "", "qProbabilityOfImprovement"], [16, 1, 1, "", "qSimpleRegret"], [17, 1, 1, "", "qThompsonSampling"], [18, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 2, 1, "", "get_integration_points"], [13, 3, 1, "", "sampling_fraction"], [13, 3, 1, "", "sampling_method"], [13, 3, 1, "", "sampling_n_points"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[13, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "n_mc_samples"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 3, 1, "", "beta"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.base": [[20, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.partial": [[22, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "botorch_acqf"], [22, 3, 1, "", "pin_discrete"], [22, 3, 1, "", "pinned_part"], [22, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[22, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[24, 5, 1, "", "convert_acqf"], [25, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[27, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "add_measurements"], [27, 2, 1, "", "from_config"], [27, 2, 1, "", "from_dict"], [27, 2, 1, "", "from_json"], [27, 2, 1, "", "get_surrogate"], [27, 6, 1, "", "measurements"], [27, 3, 1, "", "n_batches_done"], [27, 3, 1, "", "n_fits_done"], [27, 3, 1, "", "objective"], [27, 6, 1, "", "parameters"], [27, 2, 1, "", "posterior"], [27, 2, 1, "", "recommend"], [27, 3, 1, "", "recommender"], [27, 3, 1, "", "searchspace"], [27, 6, 1, "", "targets"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_json"], [27, 2, 1, "", "toggle_discrete_candidates"], [27, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.add_measurements.params": [[27, 4, 1, "", "data"], [27, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[27, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[27, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[27, 4, 1, "", "string"]], "baybe.campaign.Campaign.posterior.params": [[27, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.recommend.params": [[27, 4, 1, "", "batch_size"], [27, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[27, 4, 1, "", "complement"], [27, 4, 1, "", "constraints"], [27, 4, 1, "", "dry_run"], [27, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.validate_config.params": [[27, 4, 1, "", "config_json"]], "baybe.constraints": [[29, 0, 0, "-", "base"], [35, 0, 0, "-", "conditions"], [39, 0, 0, "-", "continuous"], [42, 0, 0, "-", "deprecation"], [46, 0, 0, "-", "discrete"], [56, 0, 0, "-", "validation"]], "baybe.constraints.base": [[30, 1, 1, "", "CardinalityConstraint"], [31, 1, 1, "", "Constraint"], [32, 1, 1, "", "ContinuousConstraint"], [33, 1, 1, "", "ContinuousNonlinearConstraint"], [34, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[30, 2, 1, "", "__init__"], [30, 3, 1, "", "eval_during_augmentation"], [30, 3, 1, "", "eval_during_creation"], [30, 3, 1, "", "eval_during_modeling"], [30, 2, 1, "", "from_dict"], [30, 2, 1, "", "from_json"], [30, 6, 1, "", "is_continuous"], [30, 6, 1, "", "is_discrete"], [30, 3, 1, "", "max_cardinality"], [30, 3, 1, "", "min_cardinality"], [30, 3, 1, "", "numerical_only"], [30, 3, 1, "", "parameters"], [30, 2, 1, "", "summary"], [30, 2, 1, "", "to_dict"], [30, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[30, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[30, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "eval_during_augmentation"], [31, 3, 1, "", "eval_during_creation"], [31, 3, 1, "", "eval_during_modeling"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 6, 1, "", "is_continuous"], [31, 6, 1, "", "is_discrete"], [31, 3, 1, "", "numerical_only"], [31, 3, 1, "", "parameters"], [31, 2, 1, "", "summary"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[31, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[32, 2, 1, "", "__init__"], [32, 3, 1, "", "eval_during_augmentation"], [32, 3, 1, "", "eval_during_creation"], [32, 3, 1, "", "eval_during_modeling"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "from_json"], [32, 6, 1, "", "is_continuous"], [32, 6, 1, "", "is_discrete"], [32, 3, 1, "", "numerical_only"], [32, 3, 1, "", "parameters"], [32, 2, 1, "", "summary"], [32, 2, 1, "", "to_dict"], [32, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[32, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[32, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "eval_during_augmentation"], [33, 3, 1, "", "eval_during_creation"], [33, 3, 1, "", "eval_during_modeling"], [33, 2, 1, "", "from_dict"], [33, 2, 1, "", "from_json"], [33, 6, 1, "", "is_continuous"], [33, 6, 1, "", "is_discrete"], [33, 3, 1, "", "numerical_only"], [33, 3, 1, "", "parameters"], [33, 2, 1, "", "summary"], [33, 2, 1, "", "to_dict"], [33, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[33, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[33, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 2, 1, "", "get_invalid"], [34, 2, 1, "", "get_invalid_polars"], [34, 2, 1, "", "get_valid"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[34, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[34, 4, 1, "", "df"]], "baybe.constraints.conditions": [[36, 1, 1, "", "Condition"], [37, 1, 1, "", "SubSelectionCondition"], [38, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[36, 2, 1, "", "evaluate"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"], [36, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[36, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[36, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[36, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[36, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "evaluate"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "selection"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"], [37, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[37, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[37, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "evaluate"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 3, 1, "", "operator"], [38, 3, 1, "", "threshold"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"], [38, 2, 1, "", "to_polars"], [38, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[38, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[38, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[40, 1, 1, "", "ContinuousCardinalityConstraint"], [41, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[40, 2, 1, "", "__init__"], [40, 3, 1, "", "eval_during_augmentation"], [40, 3, 1, "", "eval_during_creation"], [40, 3, 1, "", "eval_during_modeling"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 6, 1, "", "is_continuous"], [40, 6, 1, "", "is_discrete"], [40, 3, 1, "", "max_cardinality"], [40, 3, 1, "", "min_cardinality"], [40, 3, 1, "", "numerical_only"], [40, 3, 1, "", "parameters"], [40, 2, 1, "", "sample_inactive_parameters"], [40, 2, 1, "", "summary"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[40, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[41, 2, 1, "", "__init__"], [41, 3, 1, "", "coefficients"], [41, 3, 1, "", "eval_during_augmentation"], [41, 3, 1, "", "eval_during_creation"], [41, 3, 1, "", "eval_during_modeling"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "is_continuous"], [41, 6, 1, "", "is_discrete"], [41, 6, 1, "", "is_eq"], [41, 3, 1, "", "numerical_only"], [41, 3, 1, "", "operator"], [41, 3, 1, "", "parameters"], [41, 3, 1, "", "rhs"], [41, 2, 1, "", "summary"], [41, 2, 1, "", "to_botorch"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[41, 4, 1, "", "idx_offset"], [41, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[43, 5, 1, "", "ContinuousLinearEqualityConstraint"], [44, 5, 1, "", "ContinuousLinearInequalityConstraint"], [45, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[47, 1, 1, "", "DiscreteCardinalityConstraint"], [48, 1, 1, "", "DiscreteCustomConstraint"], [49, 1, 1, "", "DiscreteDependenciesConstraint"], [50, 1, 1, "", "DiscreteExcludeConstraint"], [51, 1, 1, "", "DiscreteLinkedParametersConstraint"], [52, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [53, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [54, 1, 1, "", "DiscreteProductConstraint"], [55, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[47, 2, 1, "", "__init__"], [47, 3, 1, "", "eval_during_augmentation"], [47, 3, 1, "", "eval_during_creation"], [47, 3, 1, "", "eval_during_modeling"], [47, 2, 1, "", "from_dict"], [47, 2, 1, "", "from_json"], [47, 2, 1, "", "get_invalid"], [47, 2, 1, "", "get_invalid_polars"], [47, 2, 1, "", "get_valid"], [47, 6, 1, "", "is_continuous"], [47, 6, 1, "", "is_discrete"], [47, 3, 1, "", "max_cardinality"], [47, 3, 1, "", "min_cardinality"], [47, 3, 1, "", "numerical_only"], [47, 3, 1, "", "parameters"], [47, 2, 1, "", "summary"], [47, 2, 1, "", "to_dict"], [47, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[47, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[47, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[47, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[47, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[48, 2, 1, "", "__init__"], [48, 3, 1, "", "eval_during_augmentation"], [48, 3, 1, "", "eval_during_creation"], [48, 3, 1, "", "eval_during_modeling"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "from_json"], [48, 2, 1, "", "get_invalid"], [48, 2, 1, "", "get_invalid_polars"], [48, 2, 1, "", "get_valid"], [48, 6, 1, "", "is_continuous"], [48, 6, 1, "", "is_discrete"], [48, 3, 1, "", "numerical_only"], [48, 3, 1, "", "parameters"], [48, 2, 1, "", "summary"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_json"], [48, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[48, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[48, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[48, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[48, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[49, 2, 1, "", "__init__"], [49, 3, 1, "", "affected_parameters"], [49, 3, 1, "", "conditions"], [49, 3, 1, "", "eval_during_augmentation"], [49, 3, 1, "", "eval_during_creation"], [49, 3, 1, "", "eval_during_modeling"], [49, 2, 1, "", "from_dict"], [49, 2, 1, "", "from_json"], [49, 2, 1, "", "get_invalid"], [49, 2, 1, "", "get_invalid_polars"], [49, 2, 1, "", "get_valid"], [49, 6, 1, "", "is_continuous"], [49, 6, 1, "", "is_discrete"], [49, 3, 1, "", "numerical_only"], [49, 3, 1, "", "parameters"], [49, 3, 1, "", "permutation_invariant"], [49, 2, 1, "", "summary"], [49, 2, 1, "", "to_dict"], [49, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[49, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[49, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[49, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[49, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[50, 2, 1, "", "__init__"], [50, 3, 1, "", "combiner"], [50, 3, 1, "", "conditions"], [50, 3, 1, "", "eval_during_augmentation"], [50, 3, 1, "", "eval_during_creation"], [50, 3, 1, "", "eval_during_modeling"], [50, 2, 1, "", "from_dict"], [50, 2, 1, "", "from_json"], [50, 2, 1, "", "get_invalid"], [50, 2, 1, "", "get_invalid_polars"], [50, 2, 1, "", "get_valid"], [50, 6, 1, "", "is_continuous"], [50, 6, 1, "", "is_discrete"], [50, 3, 1, "", "numerical_only"], [50, 3, 1, "", "parameters"], [50, 2, 1, "", "summary"], [50, 2, 1, "", "to_dict"], [50, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[50, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[50, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[50, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[50, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "dependencies"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "condition"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "condition"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.validation": [[57, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [58, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[57, 4, 1, "", "constraints"]], "baybe.exceptions": [[60, 7, 1, "", "DeprecationError"], [61, 7, 1, "", "EmptySearchSpaceError"], [62, 7, 1, "", "IncompatibilityError"], [63, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [64, 7, 1, "", "IncompatibleExplainerError"], [65, 7, 1, "", "IncompatibleSearchSpaceError"], [66, 7, 1, "", "InvalidSurrogateModelError"], [67, 7, 1, "", "InvalidTargetValueError"], [68, 7, 1, "", "ModelNotTrainedError"], [69, 7, 1, "", "NoMCAcquisitionFunctionError"], [70, 7, 1, "", "NoRecommendersLeftError"], [71, 7, 1, "", "NotEnoughPointsLeftError"], [72, 7, 1, "", "NothingToSimulateError"], [73, 7, 1, "", "NumericalUnderflowError"], [74, 7, 1, "", "OptionalImportError"], [75, 7, 1, "", "UnidentifiedSubclassError"], [76, 7, 1, "", "UnmatchedAttributeError"], [77, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.insights": [[79, 0, 0, "-", "shap"]], "baybe.insights.shap": [[80, 1, 1, "", "SHAPInsight"], [81, 5, 1, "", "is_shap_explainer"], [82, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[80, 2, 1, "", "__init__"], [80, 3, 1, "", "background_data"], [80, 2, 1, "", "explain"], [80, 3, 1, "", "explainer"], [80, 2, 1, "", "from_campaign"], [80, 2, 1, "", "from_recommender"], [80, 2, 1, "", "from_surrogate"], [80, 2, 1, "", "plot"], [80, 6, 1, "", "uses_shap_explainer"]], "baybe.insights.shap.SHAPInsight.explain.params": [[80, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[80, 4, 1, "", "campaign"], [80, 4, 1, "", "explainer_cls"], [80, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[80, 4, 1, "", "explainer_cls"], [80, 4, 1, "", "measurements"], [80, 4, 1, "", "objective"], [80, 4, 1, "", "recommender"], [80, 4, 1, "", "searchspace"], [80, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[80, 4, 1, "", "**kwargs"], [80, 4, 1, "", "data"], [80, 4, 1, "", "explanation_index"], [80, 4, 1, "", "plot_type"], [80, 4, 1, "", "show"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[82, 4, 1, "", "data"], [82, 4, 1, "", "explainer_cls"], [82, 4, 1, "", "surrogate"], [82, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[84, 0, 0, "-", "base"], [88, 0, 0, "-", "basic"], [97, 0, 0, "-", "composite"]], "baybe.kernels.base": [[85, 1, 1, "", "BasicKernel"], [86, 1, 1, "", "CompositeKernel"], [87, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "from_dict"], [85, 2, 1, "", "from_json"], [85, 2, 1, "", "to_dict"], [85, 2, 1, "", "to_factory"], [85, 2, 1, "", "to_gpytorch"], [85, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[85, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[85, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "from_dict"], [86, 2, 1, "", "from_json"], [86, 2, 1, "", "to_dict"], [86, 2, 1, "", "to_factory"], [86, 2, 1, "", "to_gpytorch"], [86, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[86, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[86, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "from_dict"], [87, 2, 1, "", "from_json"], [87, 2, 1, "", "to_dict"], [87, 2, 1, "", "to_factory"], [87, 2, 1, "", "to_gpytorch"], [87, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[87, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[87, 4, 1, "", "string"]], "baybe.kernels.basic": [[89, 1, 1, "", "LinearKernel"], [90, 1, 1, "", "MaternKernel"], [91, 1, 1, "", "PeriodicKernel"], [92, 1, 1, "", "PiecewisePolynomialKernel"], [93, 1, 1, "", "PolynomialKernel"], [94, 1, 1, "", "RBFKernel"], [95, 1, 1, "", "RFFKernel"], [96, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "from_dict"], [89, 2, 1, "", "from_json"], [89, 2, 1, "", "to_dict"], [89, 2, 1, "", "to_factory"], [89, 2, 1, "", "to_gpytorch"], [89, 2, 1, "", "to_json"], [89, 3, 1, "", "variance_initial_value"], [89, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[89, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[89, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "from_dict"], [90, 2, 1, "", "from_json"], [90, 3, 1, "", "lengthscale_initial_value"], [90, 3, 1, "", "lengthscale_prior"], [90, 3, 1, "", "nu"], [90, 2, 1, "", "to_dict"], [90, 2, 1, "", "to_factory"], [90, 2, 1, "", "to_gpytorch"], [90, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[90, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[90, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "from_dict"], [91, 2, 1, "", "from_json"], [91, 3, 1, "", "lengthscale_initial_value"], [91, 3, 1, "", "lengthscale_prior"], [91, 3, 1, "", "period_length_initial_value"], [91, 3, 1, "", "period_length_prior"], [91, 2, 1, "", "to_dict"], [91, 2, 1, "", "to_factory"], [91, 2, 1, "", "to_gpytorch"], [91, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[91, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[91, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "from_dict"], [92, 2, 1, "", "from_json"], [92, 3, 1, "", "lengthscale_initial_value"], [92, 3, 1, "", "lengthscale_prior"], [92, 3, 1, "", "q"], [92, 2, 1, "", "to_dict"], [92, 2, 1, "", "to_factory"], [92, 2, 1, "", "to_gpytorch"], [92, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[92, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[92, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "from_dict"], [93, 2, 1, "", "from_json"], [93, 3, 1, "", "offset_initial_value"], [93, 3, 1, "", "offset_prior"], [93, 3, 1, "", "power"], [93, 2, 1, "", "to_dict"], [93, 2, 1, "", "to_factory"], [93, 2, 1, "", "to_gpytorch"], [93, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[93, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[93, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "from_dict"], [94, 2, 1, "", "from_json"], [94, 3, 1, "", "lengthscale_initial_value"], [94, 3, 1, "", "lengthscale_prior"], [94, 2, 1, "", "to_dict"], [94, 2, 1, "", "to_factory"], [94, 2, 1, "", "to_gpytorch"], [94, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[94, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[94, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "from_dict"], [95, 2, 1, "", "from_json"], [95, 3, 1, "", "lengthscale_initial_value"], [95, 3, 1, "", "lengthscale_prior"], [95, 3, 1, "", "num_samples"], [95, 2, 1, "", "to_dict"], [95, 2, 1, "", "to_factory"], [95, 2, 1, "", "to_gpytorch"], [95, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[95, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[95, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "from_dict"], [96, 2, 1, "", "from_json"], [96, 3, 1, "", "lengthscale_initial_value"], [96, 3, 1, "", "lengthscale_prior"], [96, 2, 1, "", "to_dict"], [96, 2, 1, "", "to_factory"], [96, 2, 1, "", "to_gpytorch"], [96, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[96, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[96, 4, 1, "", "string"]], "baybe.kernels.composite": [[98, 1, 1, "", "AdditiveKernel"], [99, 1, 1, "", "ProductKernel"], [100, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[98, 2, 1, "", "__init__"], [98, 3, 1, "", "base_kernels"], [98, 2, 1, "", "from_dict"], [98, 2, 1, "", "from_json"], [98, 2, 1, "", "to_dict"], [98, 2, 1, "", "to_factory"], [98, 2, 1, "", "to_gpytorch"], [98, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[98, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[98, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[99, 2, 1, "", "__init__"], [99, 3, 1, "", "base_kernels"], [99, 2, 1, "", "from_dict"], [99, 2, 1, "", "from_json"], [99, 2, 1, "", "to_dict"], [99, 2, 1, "", "to_factory"], [99, 2, 1, "", "to_gpytorch"], [99, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[99, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[99, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[100, 2, 1, "", "__init__"], [100, 3, 1, "", "base_kernel"], [100, 2, 1, "", "from_dict"], [100, 2, 1, "", "from_json"], [100, 3, 1, "", "outputscale_initial_value"], [100, 3, 1, "", "outputscale_prior"], [100, 2, 1, "", "to_dict"], [100, 2, 1, "", "to_factory"], [100, 2, 1, "", "to_gpytorch"], [100, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[100, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[100, 4, 1, "", "string"]], "baybe.objective": [[102, 5, 1, "", "Objective"]], "baybe.objectives": [[104, 0, 0, "-", "base"], [107, 0, 0, "-", "deprecation"], [109, 0, 0, "-", "desirability"], [112, 0, 0, "-", "enum"], [114, 0, 0, "-", "single"]], "baybe.objectives.base": [[105, 1, 1, "", "Objective"], [106, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "from_dict"], [105, 2, 1, "", "from_json"], [105, 6, 1, "", "targets"], [105, 2, 1, "", "to_dict"], [105, 2, 1, "", "to_json"], [105, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[105, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[105, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[105, 4, 1, "", "allow_extra"], [105, 4, 1, "", "allow_missing"], [105, 4, 1, "", "df"]], "baybe.objectives.deprecation": [[108, 5, 1, "", "structure_objective"]], "baybe.objectives.desirability": [[110, 1, 1, "", "DesirabilityObjective"], [111, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "from_dict"], [110, 2, 1, "", "from_json"], [110, 3, 1, "", "scalarizer"], [110, 6, 1, "", "targets"], [110, 2, 1, "", "to_dict"], [110, 2, 1, "", "to_json"], [110, 2, 1, "", "transform"], [110, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[110, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[110, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[110, 4, 1, "", "allow_extra"], [110, 4, 1, "", "allow_missing"], [110, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[111, 4, 1, "", "scalarizer"], [111, 4, 1, "", "values"], [111, 4, 1, "", "weights"]], "baybe.objectives.enum": [[113, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[113, 3, 1, "", "GEOM_MEAN"], [113, 3, 1, "", "MEAN"]], "baybe.objectives.single": [[115, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "from_dict"], [115, 2, 1, "", "from_json"], [115, 6, 1, "", "targets"], [115, 2, 1, "", "to_dict"], [115, 2, 1, "", "to_json"], [115, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[115, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[115, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[115, 4, 1, "", "allow_extra"], [115, 4, 1, "", "allow_missing"], [115, 4, 1, "", "df"]], "baybe.parameters": [[117, 0, 0, "-", "base"], [121, 0, 0, "-", "categorical"], [124, 0, 0, "-", "custom"], [126, 0, 0, "-", "enum"], [131, 0, 0, "-", "numerical"], [134, 0, 0, "-", "substance"], [137, 0, 0, "-", "utils"], [140, 0, 0, "-", "validation"]], "baybe.parameters.base": [[118, 1, 1, "", "ContinuousParameter"], [119, 1, 1, "", "DiscreteParameter"], [120, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[118, 2, 1, "", "__init__"], [118, 6, 1, "", "comp_rep_columns"], [118, 2, 1, "", "from_dict"], [118, 2, 1, "", "from_json"], [118, 6, 1, "", "is_continuous"], [118, 6, 1, "", "is_discrete"], [118, 2, 1, "", "is_in_range"], [118, 3, 1, "", "is_numerical"], [118, 3, 1, "", "name"], [118, 2, 1, "", "summary"], [118, 2, 1, "", "to_dict"], [118, 2, 1, "", "to_json"], [118, 2, 1, "", "to_searchspace"], [118, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[118, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[118, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[118, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[119, 2, 1, "", "__init__"], [119, 6, 1, "", "comp_df"], [119, 6, 1, "", "comp_rep_columns"], [119, 3, 1, "", "encoding"], [119, 2, 1, "", "from_dict"], [119, 2, 1, "", "from_json"], [119, 6, 1, "", "is_continuous"], [119, 6, 1, "", "is_discrete"], [119, 2, 1, "", "is_in_range"], [119, 3, 1, "", "is_numerical"], [119, 3, 1, "", "name"], [119, 2, 1, "", "summary"], [119, 2, 1, "", "to_dict"], [119, 2, 1, "", "to_json"], [119, 2, 1, "", "to_searchspace"], [119, 2, 1, "", "to_subspace"], [119, 2, 1, "", "transform"], [119, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[119, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[119, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[119, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[119, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[120, 2, 1, "", "__init__"], [120, 6, 1, "", "comp_rep_columns"], [120, 2, 1, "", "from_dict"], [120, 2, 1, "", "from_json"], [120, 6, 1, "", "is_continuous"], [120, 6, 1, "", "is_discrete"], [120, 2, 1, "", "is_in_range"], [120, 3, 1, "", "is_numerical"], [120, 3, 1, "", "name"], [120, 2, 1, "", "summary"], [120, 2, 1, "", "to_dict"], [120, 2, 1, "", "to_json"], [120, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[120, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[120, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[120, 4, 1, "", "item"]], "baybe.parameters.categorical": [[122, 1, 1, "", "CategoricalParameter"], [123, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[122, 2, 1, "", "__init__"], [122, 6, 1, "", "comp_df"], [122, 6, 1, "", "comp_rep_columns"], [122, 3, 1, "", "encoding"], [122, 2, 1, "", "from_dict"], [122, 2, 1, "", "from_json"], [122, 6, 1, "", "is_continuous"], [122, 6, 1, "", "is_discrete"], [122, 2, 1, "", "is_in_range"], [122, 3, 1, "", "is_numerical"], [122, 3, 1, "", "name"], [122, 2, 1, "", "summary"], [122, 2, 1, "", "to_dict"], [122, 2, 1, "", "to_json"], [122, 2, 1, "", "to_searchspace"], [122, 2, 1, "", "to_subspace"], [122, 2, 1, "", "transform"], [122, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[122, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[122, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[122, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[122, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[123, 2, 1, "", "__init__"], [123, 3, 1, "", "active_values"], [123, 6, 1, "", "comp_df"], [123, 6, 1, "", "comp_rep_columns"], [123, 3, 1, "", "encoding"], [123, 2, 1, "", "from_dict"], [123, 2, 1, "", "from_json"], [123, 6, 1, "", "is_continuous"], [123, 6, 1, "", "is_discrete"], [123, 2, 1, "", "is_in_range"], [123, 3, 1, "", "is_numerical"], [123, 3, 1, "", "name"], [123, 2, 1, "", "summary"], [123, 2, 1, "", "to_dict"], [123, 2, 1, "", "to_json"], [123, 2, 1, "", "to_searchspace"], [123, 2, 1, "", "to_subspace"], [123, 2, 1, "", "transform"], [123, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[123, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[123, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[123, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[123, 4, 1, "", "series"]], "baybe.parameters.custom": [[125, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[125, 2, 1, "", "__init__"], [125, 6, 1, "", "comp_df"], [125, 6, 1, "", "comp_rep_columns"], [125, 3, 1, "", "data"], [125, 3, 1, "", "decorrelate"], [125, 3, 1, "", "encoding"], [125, 2, 1, "", "from_dict"], [125, 2, 1, "", "from_json"], [125, 6, 1, "", "is_continuous"], [125, 6, 1, "", "is_discrete"], [125, 2, 1, "", "is_in_range"], [125, 3, 1, "", "is_numerical"], [125, 3, 1, "", "name"], [125, 2, 1, "", "summary"], [125, 2, 1, "", "to_dict"], [125, 2, 1, "", "to_json"], [125, 2, 1, "", "to_searchspace"], [125, 2, 1, "", "to_subspace"], [125, 2, 1, "", "transform"], [125, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[125, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[125, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[125, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[125, 4, 1, "", "series"]], "baybe.parameters.enum": [[127, 1, 1, "", "CategoricalEncoding"], [128, 1, 1, "", "CustomEncoding"], [129, 1, 1, "", "ParameterEncoding"], [130, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[127, 3, 1, "", "INT"], [127, 3, 1, "", "OHE"], [127, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[128, 3, 1, "", "CUSTOM"], [128, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[130, 3, 1, "", "ATOMPAIR"], [130, 3, 1, "", "AUTOCORR"], [130, 3, 1, "", "AVALON"], [130, 3, 1, "", "E3FP"], [130, 3, 1, "", "ECFP"], [130, 3, 1, "", "ELECTROSHAPE"], [130, 3, 1, "", "ERG"], [130, 3, 1, "", "ESTATE"], [130, 3, 1, "", "FUNCTIONALGROUPS"], [130, 3, 1, "", "GETAWAY"], [130, 3, 1, "", "GHOSECRIPPEN"], [130, 3, 1, "", "KLEKOTAROTH"], [130, 3, 1, "", "LAGGNER"], [130, 3, 1, "", "LAYERED"], [130, 3, 1, "", "LINGO"], [130, 3, 1, "", "MACCS"], [130, 3, 1, "", "MAP"], [130, 3, 1, "", "MHFP"], [130, 3, 1, "", "MORDRED"], [130, 3, 1, "", "MORGAN_FP"], [130, 3, 1, "", "MORSE"], [130, 3, 1, "", "MQNS"], [130, 3, 1, "", "PATTERN"], [130, 3, 1, "", "PHARMACOPHORE"], [130, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [130, 3, 1, "", "PUBCHEM"], [130, 3, 1, "", "RDF"], [130, 3, 1, "", "RDKIT"], [130, 3, 1, "", "RDKIT2DDESCRIPTORS"], [130, 3, 1, "", "RDKITFINGERPRINT"], [130, 3, 1, "", "SECFP"], [130, 3, 1, "", "TOPOLOGICALTORSION"], [130, 3, 1, "", "USR"], [130, 3, 1, "", "USRCAT"], [130, 3, 1, "", "VSA"], [130, 3, 1, "", "WHIM"], [130, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[132, 1, 1, "", "NumericalContinuousParameter"], [133, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[132, 2, 1, "", "__init__"], [132, 3, 1, "", "bounds"], [132, 6, 1, "", "comp_rep_columns"], [132, 2, 1, "", "from_dict"], [132, 2, 1, "", "from_json"], [132, 6, 1, "", "is_continuous"], [132, 6, 1, "", "is_discrete"], [132, 2, 1, "", "is_in_range"], [132, 3, 1, "", "is_numerical"], [132, 3, 1, "", "name"], [132, 2, 1, "", "summary"], [132, 2, 1, "", "to_dict"], [132, 2, 1, "", "to_json"], [132, 2, 1, "", "to_searchspace"], [132, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[132, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[132, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[132, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[133, 2, 1, "", "__init__"], [133, 6, 1, "", "comp_df"], [133, 6, 1, "", "comp_rep_columns"], [133, 3, 1, "", "encoding"], [133, 2, 1, "", "from_dict"], [133, 2, 1, "", "from_json"], [133, 6, 1, "", "is_continuous"], [133, 6, 1, "", "is_discrete"], [133, 2, 1, "", "is_in_range"], [133, 3, 1, "", "is_numerical"], [133, 3, 1, "", "name"], [133, 2, 1, "", "summary"], [133, 2, 1, "", "to_dict"], [133, 2, 1, "", "to_json"], [133, 2, 1, "", "to_searchspace"], [133, 2, 1, "", "to_subspace"], [133, 3, 1, "", "tolerance"], [133, 2, 1, "", "transform"], [133, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[133, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[133, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[133, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[133, 4, 1, "", "series"]], "baybe.parameters.substance": [[135, 3, 1, "", "Smiles"], [136, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[136, 2, 1, "", "__init__"], [136, 6, 1, "", "comp_df"], [136, 6, 1, "", "comp_rep_columns"], [136, 3, 1, "", "data"], [136, 3, 1, "", "decorrelate"], [136, 3, 1, "", "encoding"], [136, 2, 1, "", "from_dict"], [136, 2, 1, "", "from_json"], [136, 6, 1, "", "is_continuous"], [136, 6, 1, "", "is_discrete"], [136, 2, 1, "", "is_in_range"], [136, 3, 1, "", "is_numerical"], [136, 3, 1, "", "kwargs_conformer"], [136, 3, 1, "", "kwargs_fingerprint"], [136, 3, 1, "", "name"], [136, 2, 1, "", "summary"], [136, 2, 1, "", "to_dict"], [136, 2, 1, "", "to_json"], [136, 2, 1, "", "to_searchspace"], [136, 2, 1, "", "to_subspace"], [136, 2, 1, "", "transform"], [136, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[136, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[136, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[136, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[136, 4, 1, "", "series"]], "baybe.parameters.utils": [[138, 5, 1, "", "get_parameters_from_dataframe"], [139, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[138, 4, 1, "", "df"], [138, 4, 1, "", "factory"], [138, 4, 1, "", "parameters"]], "baybe.parameters.validation": [[141, 5, 1, "", "validate_decorrelation"], [142, 5, 1, "", "validate_is_finite"], [143, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[145, 0, 0, "-", "base"], [147, 0, 0, "-", "basic"]], "baybe.priors.base": [[146, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "from_dict"], [146, 2, 1, "", "from_json"], [146, 2, 1, "", "to_dict"], [146, 2, 1, "", "to_gpytorch"], [146, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[146, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[146, 4, 1, "", "string"]], "baybe.priors.basic": [[148, 1, 1, "", "BetaPrior"], [149, 1, 1, "", "GammaPrior"], [150, 1, 1, "", "HalfCauchyPrior"], [151, 1, 1, "", "HalfNormalPrior"], [152, 1, 1, "", "LogNormalPrior"], [153, 1, 1, "", "NormalPrior"], [154, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[148, 2, 1, "", "__init__"], [148, 3, 1, "", "alpha"], [148, 3, 1, "", "beta"], [148, 2, 1, "", "from_dict"], [148, 2, 1, "", "from_json"], [148, 2, 1, "", "to_dict"], [148, 2, 1, "", "to_gpytorch"], [148, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[148, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[148, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[149, 2, 1, "", "__init__"], [149, 3, 1, "", "concentration"], [149, 2, 1, "", "from_dict"], [149, 2, 1, "", "from_json"], [149, 3, 1, "", "rate"], [149, 2, 1, "", "to_dict"], [149, 2, 1, "", "to_gpytorch"], [149, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[149, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[149, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "from_dict"], [150, 2, 1, "", "from_json"], [150, 3, 1, "", "scale"], [150, 2, 1, "", "to_dict"], [150, 2, 1, "", "to_gpytorch"], [150, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[150, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[150, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "from_dict"], [151, 2, 1, "", "from_json"], [151, 3, 1, "", "scale"], [151, 2, 1, "", "to_dict"], [151, 2, 1, "", "to_gpytorch"], [151, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[151, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[151, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "from_dict"], [152, 2, 1, "", "from_json"], [152, 3, 1, "", "loc"], [152, 3, 1, "", "scale"], [152, 2, 1, "", "to_dict"], [152, 2, 1, "", "to_gpytorch"], [152, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[152, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[152, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "from_dict"], [153, 2, 1, "", "from_json"], [153, 3, 1, "", "loc"], [153, 3, 1, "", "scale"], [153, 2, 1, "", "to_dict"], [153, 2, 1, "", "to_gpytorch"], [153, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[153, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[153, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[154, 2, 1, "", "__init__"], [154, 3, 1, "", "a"], [154, 3, 1, "", "b"], [154, 2, 1, "", "from_dict"], [154, 2, 1, "", "from_json"], [154, 3, 1, "", "sigma"], [154, 2, 1, "", "to_dict"], [154, 2, 1, "", "to_gpytorch"], [154, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[154, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[154, 4, 1, "", "string"]], "baybe.recommenders": [[156, 0, 0, "-", "base"], [158, 0, 0, "-", "meta"], [165, 0, 0, "-", "naive"], [167, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[157, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[157, 4, 1, "", "batch_size"], [157, 4, 1, "", "measurements"], [157, 4, 1, "", "objective"], [157, 4, 1, "", "pending_experiments"], [157, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[159, 0, 0, "-", "base"], [161, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[160, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "from_dict"], [160, 2, 1, "", "from_json"], [160, 2, 1, "", "get_current_recommender"], [160, 2, 1, "", "get_next_recommender"], [160, 2, 1, "", "recommend"], [160, 2, 1, "", "select_recommender"], [160, 2, 1, "", "to_dict"], [160, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[160, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[160, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[162, 1, 1, "", "SequentialMetaRecommender"], [163, 1, 1, "", "StreamingSequentialMetaRecommender"], [164, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "from_dict"], [162, 2, 1, "", "from_json"], [162, 2, 1, "", "get_current_recommender"], [162, 2, 1, "", "get_next_recommender"], [162, 3, 1, "", "mode"], [162, 2, 1, "", "recommend"], [162, 3, 1, "", "recommenders"], [162, 2, 1, "", "select_recommender"], [162, 2, 1, "", "to_dict"], [162, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[162, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[162, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "default_iterator"], [163, 2, 1, "", "from_dict"], [163, 2, 1, "", "from_json"], [163, 2, 1, "", "get_current_recommender"], [163, 2, 1, "", "get_next_recommender"], [163, 2, 1, "", "recommend"], [163, 3, 1, "", "recommenders"], [163, 2, 1, "", "select_recommender"], [163, 2, 1, "", "to_dict"], [163, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[163, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[163, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "from_dict"], [164, 2, 1, "", "from_json"], [164, 2, 1, "", "get_current_recommender"], [164, 2, 1, "", "get_next_recommender"], [164, 3, 1, "", "initial_recommender"], [164, 2, 1, "", "recommend"], [164, 3, 1, "", "recommender"], [164, 2, 1, "", "select_recommender"], [164, 3, 1, "", "switch_after"], [164, 2, 1, "", "to_dict"], [164, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[164, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[164, 4, 1, "", "string"]], "baybe.recommenders.naive": [[166, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[166, 2, 1, "", "__init__"], [166, 3, 1, "", "allow_recommending_already_measured"], [166, 3, 1, "", "allow_recommending_pending_experiments"], [166, 3, 1, "", "allow_repeated_recommendations"], [166, 3, 1, "", "compatibility"], [166, 3, 1, "", "cont_recommender"], [166, 3, 1, "", "disc_recommender"], [166, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[166, 4, 1, "", "batch_size"], [166, 4, 1, "", "measurements"], [166, 4, 1, "", "objective"], [166, 4, 1, "", "pending_experiments"], [166, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[168, 0, 0, "-", "base"], [170, 0, 0, "-", "bayesian"], [177, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[169, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[169, 2, 1, "", "__init__"], [169, 3, 1, "", "allow_recommending_already_measured"], [169, 3, 1, "", "allow_recommending_pending_experiments"], [169, 3, 1, "", "allow_repeated_recommendations"], [169, 3, 1, "", "compatibility"], [169, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[169, 4, 1, "", "batch_size"], [169, 4, 1, "", "measurements"], [169, 4, 1, "", "objective"], [169, 4, 1, "", "pending_experiments"], [169, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[171, 0, 0, "-", "base"], [173, 0, 0, "-", "botorch"], [175, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[172, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[172, 2, 1, "", "__init__"], [172, 3, 1, "", "acquisition_function"], [172, 3, 1, "", "acquisition_function_cls"], [172, 3, 1, "", "allow_recommending_already_measured"], [172, 3, 1, "", "allow_recommending_pending_experiments"], [172, 3, 1, "", "allow_repeated_recommendations"], [172, 3, 1, "", "compatibility"], [172, 2, 1, "", "get_surrogate"], [172, 2, 1, "", "recommend"], [172, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[172, 4, 1, "", "batch_size"], [172, 4, 1, "", "measurements"], [172, 4, 1, "", "objective"], [172, 4, 1, "", "pending_experiments"], [172, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[174, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[174, 2, 1, "", "__init__"], [174, 3, 1, "", "acquisition_function"], [174, 3, 1, "", "acquisition_function_cls"], [174, 3, 1, "", "allow_recommending_already_measured"], [174, 3, 1, "", "allow_recommending_pending_experiments"], [174, 3, 1, "", "allow_repeated_recommendations"], [174, 3, 1, "", "compatibility"], [174, 2, 1, "", "get_surrogate"], [174, 3, 1, "", "hybrid_sampler"], [174, 3, 1, "", "n_raw_samples"], [174, 3, 1, "", "n_restarts"], [174, 2, 1, "", "recommend"], [174, 3, 1, "", "sampling_percentage"], [174, 3, 1, "", "sequential_continuous"], [174, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[174, 4, 1, "", "batch_size"], [174, 4, 1, "", "measurements"], [174, 4, 1, "", "objective"], [174, 4, 1, "", "pending_experiments"], [174, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[176, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[178, 0, 0, "-", "base"], [180, 0, 0, "-", "clustering"], [185, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[179, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[179, 2, 1, "", "__init__"], [179, 3, 1, "", "allow_recommending_already_measured"], [179, 3, 1, "", "allow_recommending_pending_experiments"], [179, 3, 1, "", "allow_repeated_recommendations"], [179, 3, 1, "", "compatibility"], [179, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[179, 4, 1, "", "batch_size"], [179, 4, 1, "", "measurements"], [179, 4, 1, "", "objective"], [179, 4, 1, "", "pending_experiments"], [179, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[181, 1, 1, "", "GaussianMixtureClusteringRecommender"], [182, 1, 1, "", "KMeansClusteringRecommender"], [183, 1, 1, "", "PAMClusteringRecommender"], [184, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[181, 2, 1, "", "__init__"], [181, 3, 1, "", "allow_recommending_already_measured"], [181, 3, 1, "", "allow_recommending_pending_experiments"], [181, 3, 1, "", "allow_repeated_recommendations"], [181, 3, 1, "", "compatibility"], [181, 3, 1, "", "model_cluster_num_parameter_name"], [181, 3, 1, "", "model_params"], [181, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[181, 4, 1, "", "batch_size"], [181, 4, 1, "", "measurements"], [181, 4, 1, "", "objective"], [181, 4, 1, "", "pending_experiments"], [181, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[182, 2, 1, "", "__init__"], [182, 3, 1, "", "allow_recommending_already_measured"], [182, 3, 1, "", "allow_recommending_pending_experiments"], [182, 3, 1, "", "allow_repeated_recommendations"], [182, 3, 1, "", "compatibility"], [182, 3, 1, "", "model_cluster_num_parameter_name"], [182, 3, 1, "", "model_params"], [182, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[182, 4, 1, "", "batch_size"], [182, 4, 1, "", "measurements"], [182, 4, 1, "", "objective"], [182, 4, 1, "", "pending_experiments"], [182, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[183, 2, 1, "", "__init__"], [183, 3, 1, "", "allow_recommending_already_measured"], [183, 3, 1, "", "allow_recommending_pending_experiments"], [183, 3, 1, "", "allow_repeated_recommendations"], [183, 3, 1, "", "compatibility"], [183, 3, 1, "", "model_cluster_num_parameter_name"], [183, 3, 1, "", "model_params"], [183, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[183, 4, 1, "", "batch_size"], [183, 4, 1, "", "measurements"], [183, 4, 1, "", "objective"], [183, 4, 1, "", "pending_experiments"], [183, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[184, 2, 1, "", "__init__"], [184, 3, 1, "", "allow_recommending_already_measured"], [184, 3, 1, "", "allow_recommending_pending_experiments"], [184, 3, 1, "", "allow_repeated_recommendations"], [184, 3, 1, "", "compatibility"], [184, 3, 1, "", "model_cluster_num_parameter_name"], [184, 3, 1, "", "model_params"], [184, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[184, 4, 1, "", "batch_size"], [184, 4, 1, "", "measurements"], [184, 4, 1, "", "objective"], [184, 4, 1, "", "pending_experiments"], [184, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[186, 1, 1, "", "FPSRecommender"], [187, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[186, 2, 1, "", "__init__"], [186, 3, 1, "", "allow_recommending_already_measured"], [186, 3, 1, "", "allow_recommending_pending_experiments"], [186, 3, 1, "", "allow_repeated_recommendations"], [186, 3, 1, "", "compatibility"], [186, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[186, 4, 1, "", "batch_size"], [186, 4, 1, "", "measurements"], [186, 4, 1, "", "objective"], [186, 4, 1, "", "pending_experiments"], [186, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[187, 2, 1, "", "__init__"], [187, 3, 1, "", "allow_recommending_already_measured"], [187, 3, 1, "", "allow_recommending_pending_experiments"], [187, 3, 1, "", "allow_repeated_recommendations"], [187, 3, 1, "", "compatibility"], [187, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[187, 4, 1, "", "batch_size"], [187, 4, 1, "", "measurements"], [187, 4, 1, "", "objective"], [187, 4, 1, "", "pending_experiments"], [187, 4, 1, "", "searchspace"]], "baybe.searchspace": [[189, 0, 0, "-", "continuous"], [191, 0, 0, "-", "core"], [196, 0, 0, "-", "discrete"], [202, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[190, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[190, 2, 1, "", "__init__"], [190, 6, 1, "", "comp_rep_bounds"], [190, 6, 1, "", "comp_rep_columns"], [190, 6, 1, "", "constraints_cardinality"], [190, 3, 1, "", "constraints_lin_eq"], [190, 3, 1, "", "constraints_lin_ineq"], [190, 3, 1, "", "constraints_nonlin"], [190, 2, 1, "", "empty"], [190, 2, 1, "", "from_bounds"], [190, 2, 1, "", "from_dataframe"], [190, 2, 1, "", "from_dict"], [190, 2, 1, "", "from_json"], [190, 2, 1, "", "from_parameter"], [190, 2, 1, "", "from_product"], [190, 6, 1, "", "full_factorial"], [190, 2, 1, "", "get_parameters_by_name"], [190, 6, 1, "", "is_empty"], [190, 6, 1, "", "parameter_names"], [190, 3, 1, "", "parameters"], [190, 2, 1, "", "sample_from_full_factorial"], [190, 2, 1, "", "sample_uniform"], [190, 2, 1, "", "samples_full_factorial"], [190, 2, 1, "", "samples_random"], [190, 2, 1, "", "to_dict"], [190, 2, 1, "", "to_json"], [190, 2, 1, "", "to_searchspace"], [190, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[190, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[190, 4, 1, "", "df"], [190, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[190, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[190, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[190, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[190, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[190, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[190, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[192, 1, 1, "", "SearchSpace"], [193, 1, 1, "", "SearchSpaceType"], [194, 5, 1, "", "to_searchspace"], [195, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[192, 2, 1, "", "__init__"], [192, 6, 1, "", "comp_rep_bounds"], [192, 6, 1, "", "comp_rep_columns"], [192, 6, 1, "", "constraints"], [192, 6, 1, "", "constraints_augmentable"], [192, 3, 1, "", "continuous"], [192, 3, 1, "", "discrete"], [192, 2, 1, "", "estimate_product_space_size"], [192, 2, 1, "", "from_dataframe"], [192, 2, 1, "", "from_dict"], [192, 2, 1, "", "from_json"], [192, 2, 1, "", "from_parameter"], [192, 2, 1, "", "from_product"], [192, 2, 1, "", "get_comp_rep_parameter_indices"], [192, 2, 1, "", "get_parameters_by_name"], [192, 6, 1, "", "n_tasks"], [192, 6, 1, "", "parameter_names"], [192, 6, 1, "", "parameters"], [192, 6, 1, "", "task_idx"], [192, 2, 1, "", "to_dict"], [192, 2, 1, "", "to_json"], [192, 2, 1, "", "transform"], [192, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[192, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[192, 4, 1, "", "df"], [192, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[192, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[192, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[192, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[192, 4, 1, "", "constraints"], [192, 4, 1, "", "empty_encoding"], [192, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[192, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[192, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[192, 4, 1, "", "allow_extra"], [192, 4, 1, "", "allow_missing"], [192, 4, 1, "", "data"], [192, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[193, 3, 1, "", "CONTINUOUS"], [193, 3, 1, "", "DISCRETE"], [193, 3, 1, "", "EITHER"], [193, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[197, 1, 1, "", "MemorySize"], [198, 1, 1, "", "SubspaceDiscrete"], [199, 5, 1, "", "parameter_cartesian_prod_pandas"], [200, 5, 1, "", "parameter_cartesian_prod_polars"], [201, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[197, 2, 1, "", "__init__"], [197, 3, 1, "", "comp_rep_bytes"], [197, 6, 1, "", "comp_rep_human_readable"], [197, 3, 1, "", "comp_rep_shape"], [197, 3, 1, "", "exp_rep_bytes"], [197, 6, 1, "", "exp_rep_human_readable"], [197, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[198, 2, 1, "", "__init__"], [198, 3, 1, "", "comp_rep"], [198, 6, 1, "", "comp_rep_bounds"], [198, 6, 1, "", "comp_rep_columns"], [198, 3, 1, "", "constraints"], [198, 2, 1, "", "empty"], [198, 3, 1, "", "empty_encoding"], [198, 2, 1, "", "estimate_product_space_size"], [198, 3, 1, "", "exp_rep"], [198, 2, 1, "", "from_dataframe"], [198, 2, 1, "", "from_dict"], [198, 2, 1, "", "from_json"], [198, 2, 1, "", "from_parameter"], [198, 2, 1, "", "from_product"], [198, 2, 1, "", "from_simplex"], [198, 2, 1, "", "get_candidates"], [198, 2, 1, "", "get_parameters_by_name"], [198, 6, 1, "", "is_empty"], [198, 6, 1, "", "metadata"], [198, 6, 1, "", "parameter_names"], [198, 3, 1, "", "parameters"], [198, 2, 1, "", "to_dict"], [198, 2, 1, "", "to_json"], [198, 2, 1, "", "to_searchspace"], [198, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[198, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[198, 4, 1, "", "df"], [198, 4, 1, "", "empty_encoding"], [198, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[198, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[198, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[198, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[198, 4, 1, "", "boundary_only"], [198, 4, 1, "", "constraints"], [198, 4, 1, "", "max_nonzero"], [198, 4, 1, "", "max_sum"], [198, 4, 1, "", "min_nonzero"], [198, 4, 1, "", "product_parameters"], [198, 4, 1, "", "simplex_parameters"], [198, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates.params": [[198, 4, 1, "", "allow_recommending_already_measured"], [198, 4, 1, "", "allow_repeated_recommendations"], [198, 4, 1, "", "exclude"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[198, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[199, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[200, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[203, 5, 1, "", "get_transform_parameters"], [204, 5, 1, "", "validate_parameter_names"], [205, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[207, 0, 0, "-", "core"], [214, 0, 0, "-", "mixin"], [216, 0, 0, "-", "utils"]], "baybe.serialization.core": [[208, 5, 1, "", "block_deserialization_hook"], [209, 5, 1, "", "block_serialization_hook"], [210, 8, 1, "", "converter"], [211, 5, 1, "", "get_base_structure_hook"], [212, 5, 1, "", "select_constructor_hook"], [213, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[211, 4, 1, "", "base"], [211, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[213, 4, 1, "", "base"], [213, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[215, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[215, 2, 1, "", "from_dict"], [215, 2, 1, "", "from_json"], [215, 2, 1, "", "to_dict"], [215, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[215, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[215, 4, 1, "", "string"]], "baybe.serialization.utils": [[217, 5, 1, "", "deserialize_dataframe"], [218, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[220, 0, 0, "-", "core"], [222, 0, 0, "-", "lookup"], [224, 0, 0, "-", "scenarios"], [226, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[221, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[221, 4, 1, "", "batch_size"], [221, 4, 1, "", "campaign"], [221, 4, 1, "", "impute_mode"], [221, 4, 1, "", "initial_data"], [221, 4, 1, "", "lookup"], [221, 4, 1, "", "n_doe_iterations"], [221, 4, 1, "", "noise_percent"], [221, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[223, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[223, 4, 1, "", "impute_mode"], [223, 4, 1, "", "lookup"], [223, 4, 1, "", "queries"], [223, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[225, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[225, 4, 1, "", "batch_size"], [225, 4, 1, "", "groupby"], [225, 4, 1, "", "impute_mode"], [225, 4, 1, "", "initial_data"], [225, 4, 1, "", "lookup"], [225, 4, 1, "", "n_doe_iterations"], [225, 4, 1, "", "n_mc_iterations"], [225, 4, 1, "", "noise_percent"], [225, 4, 1, "", "random_seed"], [225, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[227, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[227, 4, 1, "", "batch_size"], [227, 4, 1, "", "campaign"], [227, 4, 1, "", "groupby"], [227, 4, 1, "", "lookup"], [227, 4, 1, "", "n_doe_iterations"], [227, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[229, 0, 0, "-", "bandit"], [231, 0, 0, "-", "base"], [235, 0, 0, "-", "custom"], [238, 0, 0, "-", "gaussian_process"], [253, 0, 0, "-", "linear"], [255, 0, 0, "-", "naive"], [257, 0, 0, "-", "ngboost"], [259, 0, 0, "-", "random_forest"], [261, 0, 0, "-", "utils"], [265, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[230, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[230, 2, 1, "", "__init__"], [230, 2, 1, "", "fit"], [230, 2, 1, "", "from_dict"], [230, 2, 1, "", "from_json"], [230, 2, 1, "", "posterior"], [230, 2, 1, "", "posterior_means"], [230, 2, 1, "", "posterior_modes"], [230, 3, 1, "", "prior"], [230, 3, 1, "", "supports_transfer_learning"], [230, 2, 1, "", "to_botorch"], [230, 2, 1, "", "to_dict"], [230, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[230, 4, 1, "", "measurements"], [230, 4, 1, "", "objective"], [230, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[230, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[230, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[230, 4, 1, "", "candidates"]], "baybe.surrogates.base": [[232, 1, 1, "", "IndependentGaussianSurrogate"], [233, 1, 1, "", "Surrogate"], [234, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[232, 2, 1, "", "__init__"], [232, 2, 1, "", "fit"], [232, 2, 1, "", "from_dict"], [232, 2, 1, "", "from_json"], [232, 2, 1, "", "posterior"], [232, 3, 1, "", "supports_transfer_learning"], [232, 2, 1, "", "to_botorch"], [232, 2, 1, "", "to_dict"], [232, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[232, 4, 1, "", "measurements"], [232, 4, 1, "", "objective"], [232, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[232, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[232, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[232, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate": [[233, 2, 1, "", "__init__"], [233, 2, 1, "", "fit"], [233, 2, 1, "", "from_dict"], [233, 2, 1, "", "from_json"], [233, 2, 1, "", "posterior"], [233, 3, 1, "", "supports_transfer_learning"], [233, 2, 1, "", "to_botorch"], [233, 2, 1, "", "to_dict"], [233, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[233, 4, 1, "", "measurements"], [233, 4, 1, "", "objective"], [233, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[233, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[233, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[233, 4, 1, "", "candidates"]], "baybe.surrogates.base.SurrogateProtocol": [[234, 2, 1, "", "__init__"], [234, 2, 1, "", "fit"], [234, 2, 1, "", "to_botorch"]], "baybe.surrogates.custom": [[236, 1, 1, "", "CustomONNXSurrogate"], [237, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[236, 2, 1, "", "__init__"], [236, 2, 1, "", "default_model"], [236, 2, 1, "", "fit"], [236, 2, 1, "", "from_dict"], [236, 2, 1, "", "from_json"], [236, 3, 1, "", "onnx_input_name"], [236, 3, 1, "", "onnx_str"], [236, 2, 1, "", "posterior"], [236, 3, 1, "", "supports_transfer_learning"], [236, 2, 1, "", "to_botorch"], [236, 2, 1, "", "to_dict"], [236, 2, 1, "", "to_json"], [236, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[236, 4, 1, "", "measurements"], [236, 4, 1, "", "objective"], [236, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[236, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[236, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[236, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[236, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[239, 0, 0, "-", "core"], [241, 0, 0, "-", "kernel_factory"], [245, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[240, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[240, 2, 1, "", "__init__"], [240, 2, 1, "", "fit"], [240, 2, 1, "", "from_dict"], [240, 2, 1, "", "from_json"], [240, 2, 1, "", "from_preset"], [240, 3, 1, "", "kernel_factory"], [240, 2, 1, "", "posterior"], [240, 3, 1, "", "supports_transfer_learning"], [240, 2, 1, "", "to_botorch"], [240, 2, 1, "", "to_dict"], [240, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[240, 4, 1, "", "measurements"], [240, 4, 1, "", "objective"], [240, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[240, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[240, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[240, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.kernel_factory": [[242, 1, 1, "", "KernelFactory"], [243, 1, 1, "", "PlainKernelFactory"], [244, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[242, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[243, 2, 1, "", "__init__"], [243, 2, 1, "", "from_dict"], [243, 2, 1, "", "from_json"], [243, 3, 1, "", "kernel"], [243, 2, 1, "", "to_dict"], [243, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[243, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[243, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[246, 0, 0, "-", "core"], [249, 0, 0, "-", "default"], [251, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[247, 1, 1, "", "GaussianProcessPreset"], [248, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[247, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[250, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[250, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[252, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[252, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[254, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[254, 2, 1, "", "__init__"], [254, 2, 1, "", "fit"], [254, 2, 1, "", "from_dict"], [254, 2, 1, "", "from_json"], [254, 3, 1, "", "model_params"], [254, 2, 1, "", "posterior"], [254, 3, 1, "", "supports_transfer_learning"], [254, 2, 1, "", "to_botorch"], [254, 2, 1, "", "to_dict"], [254, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[254, 4, 1, "", "measurements"], [254, 4, 1, "", "objective"], [254, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[254, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[254, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[254, 4, 1, "", "candidates"]], "baybe.surrogates.naive": [[256, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[256, 2, 1, "", "__init__"], [256, 2, 1, "", "fit"], [256, 2, 1, "", "from_dict"], [256, 2, 1, "", "from_json"], [256, 2, 1, "", "posterior"], [256, 3, 1, "", "supports_transfer_learning"], [256, 2, 1, "", "to_botorch"], [256, 2, 1, "", "to_dict"], [256, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[256, 4, 1, "", "measurements"], [256, 4, 1, "", "objective"], [256, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[256, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[256, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[256, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost": [[258, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[258, 2, 1, "", "__init__"], [258, 2, 1, "", "fit"], [258, 2, 1, "", "from_dict"], [258, 2, 1, "", "from_json"], [258, 3, 1, "", "model_params"], [258, 2, 1, "", "posterior"], [258, 3, 1, "", "supports_transfer_learning"], [258, 2, 1, "", "to_botorch"], [258, 2, 1, "", "to_dict"], [258, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[258, 4, 1, "", "measurements"], [258, 4, 1, "", "objective"], [258, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[258, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[258, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[258, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest": [[260, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[260, 2, 1, "", "__init__"], [260, 2, 1, "", "fit"], [260, 2, 1, "", "from_dict"], [260, 2, 1, "", "from_json"], [260, 3, 1, "", "model_params"], [260, 2, 1, "", "posterior"], [260, 3, 1, "", "supports_transfer_learning"], [260, 2, 1, "", "to_botorch"], [260, 2, 1, "", "to_dict"], [260, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[260, 4, 1, "", "measurements"], [260, 4, 1, "", "objective"], [260, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[260, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[260, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[260, 4, 1, "", "candidates"]], "baybe.surrogates.utils": [[262, 5, 1, "", "batchify_ensemble_predictor"], [263, 5, 1, "", "batchify_mean_var_prediction"], [264, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[262, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[264, 4, 1, "", "cls"], [264, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[266, 5, 1, "", "get_model_params_validator"], [267, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.get_model_params_validator.params": [[266, 4, 1, "", "model_init"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[267, 4, 1, "", "model_cls"]], "baybe.targets": [[269, 0, 0, "-", "base"], [271, 0, 0, "-", "binary"], [274, 0, 0, "-", "enum"], [277, 0, 0, "-", "numerical"], [279, 0, 0, "-", "transforms"]], "baybe.targets.base": [[270, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[270, 2, 1, "", "__init__"], [270, 2, 1, "", "from_dict"], [270, 2, 1, "", "from_json"], [270, 3, 1, "", "name"], [270, 2, 1, "", "summary"], [270, 2, 1, "", "to_dict"], [270, 2, 1, "", "to_json"], [270, 2, 1, "", "to_objective"], [270, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[270, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[270, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[270, 4, 1, "", "series"]], "baybe.targets.binary": [[272, 1, 1, "", "BinaryTarget"], [273, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[272, 2, 1, "", "__init__"], [272, 3, 1, "", "failure_value"], [272, 2, 1, "", "from_dict"], [272, 2, 1, "", "from_json"], [272, 3, 1, "", "name"], [272, 3, 1, "", "success_value"], [272, 2, 1, "", "summary"], [272, 2, 1, "", "to_dict"], [272, 2, 1, "", "to_json"], [272, 2, 1, "", "to_objective"], [272, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[272, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[272, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[272, 4, 1, "", "series"]], "baybe.targets.enum": [[275, 1, 1, "", "TargetMode"], [276, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[275, 3, 1, "", "MATCH"], [275, 3, 1, "", "MAX"], [275, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[276, 3, 1, "", "BELL"], [276, 3, 1, "", "LINEAR"], [276, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[278, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[278, 2, 1, "", "__init__"], [278, 3, 1, "", "bounds"], [278, 2, 1, "", "from_dict"], [278, 2, 1, "", "from_json"], [278, 3, 1, "", "mode"], [278, 3, 1, "", "name"], [278, 2, 1, "", "summary"], [278, 2, 1, "", "to_dict"], [278, 2, 1, "", "to_json"], [278, 2, 1, "", "to_objective"], [278, 2, 1, "", "transform"], [278, 3, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[278, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[278, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[278, 4, 1, "", "series"]], "baybe.targets.transforms": [[280, 5, 1, "", "bell_transform"], [281, 5, 1, "", "linear_transform"], [282, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[280, 4, 1, "", "arr"], [280, 4, 1, "", "lower"], [280, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[281, 4, 1, "", "arr"], [281, 4, 1, "", "descending"], [281, 4, 1, "", "lower"], [281, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[282, 4, 1, "", "arr"], [282, 4, 1, "", "lower"], [282, 4, 1, "", "upper"]], "baybe.telemetry": [[284, 5, 1, "", "get_user_details"], [285, 5, 1, "", "is_enabled"], [286, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [287, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[286, 4, 1, "", "cached_recommendation"], [286, 4, 1, "", "measurements"], [286, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [286, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[287, 4, 1, "", "instrument_name"], [287, 4, 1, "", "value"]], "baybe.utils": [[289, 0, 0, "-", "augmentation"], [292, 0, 0, "-", "basic"], [305, 0, 0, "-", "boolean"], [309, 0, 0, "-", "chemistry"], [314, 0, 0, "-", "conversion"], [317, 0, 0, "-", "dataframe"], [330, 0, 0, "-", "interval"], [335, 0, 0, "-", "memory"], [337, 0, 0, "-", "numerical"], [344, 0, 0, "-", "plotting"], [348, 0, 0, "-", "random"], [351, 0, 0, "-", "sampling_algorithms"], [355, 0, 0, "-", "scaling"], [357, 0, 0, "-", "torch"], [360, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[290, 5, 1, "", "df_apply_dependency_augmentation"], [291, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[290, 4, 1, "", "affected"], [290, 4, 1, "", "causing"], [290, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[291, 4, 1, "", "column_groups"], [291, 4, 1, "", "df"]], "baybe.utils.basic": [[293, 1, 1, "", "Dummy"], [294, 1, 1, "", "classproperty"], [295, 5, 1, "", "find_subclass"], [296, 5, 1, "", "get_baseclasses"], [297, 5, 1, "", "get_subclasses"], [298, 5, 1, "", "group_duplicate_values"], [299, 5, 1, "", "hilberts_factory"], [300, 5, 1, "", "is_all_instance"], [301, 5, 1, "", "match_attributes"], [302, 5, 1, "", "refers_to"], [303, 5, 1, "", "register_hooks"], [304, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[293, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[294, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[296, 4, 1, "", "abstract"], [296, 4, 1, "", "cls"], [296, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[297, 4, 1, "", "abstract"], [297, 4, 1, "", "cls"], [297, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[298, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[301, 4, 1, "", "callable_"], [301, 4, 1, "", "ignore"], [301, 4, 1, "", "object"], [301, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[303, 4, 1, "", "post_hooks"], [303, 4, 1, "", "pre_hooks"], [303, 4, 1, "", "target"]], "baybe.utils.boolean": [[306, 5, 1, "", "check_if_in"], [307, 5, 1, "", "is_abstract"], [308, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[306, 4, 1, "", "allowed"], [306, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[307, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[308, 4, 1, "", "val"]], "baybe.utils.chemistry": [[310, 5, 1, "", "get_canonical_smiles"], [311, 5, 1, "", "get_fingerprint_class"], [312, 5, 1, "", "name_to_smiles"], [313, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[311, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[312, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[313, 4, 1, "", "encoding"], [313, 4, 1, "", "kwargs_conformer"], [313, 4, 1, "", "kwargs_fingerprint"], [313, 4, 1, "", "prefix"], [313, 4, 1, "", "smiles"]], "baybe.utils.conversion": [[315, 5, 1, "", "fraction_to_float"], [316, 5, 1, "", "nonstring_to_tuple"]], "baybe.utils.conversion.fraction_to_float.params": [[315, 4, 1, "", "value"]], "baybe.utils.dataframe": [[318, 5, 1, "", "add_fake_measurements"], [319, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [320, 5, 1, "", "add_parameter_noise"], [321, 5, 1, "", "arrays_to_dataframes"], [322, 5, 1, "", "df_drop_single_value_columns"], [323, 5, 1, "", "df_drop_string_columns"], [324, 5, 1, "", "df_uncorrelated_features"], [325, 5, 1, "", "filter_df"], [326, 5, 1, "", "fuzzy_row_match"], [327, 5, 1, "", "get_transform_objects"], [328, 5, 1, "", "pretty_print_df"], [329, 5, 1, "", "to_tensor"]], "baybe.utils.dataframe.add_fake_measurements.params": [[318, 4, 1, "", "bad_intervals"], [318, 4, 1, "", "data"], [318, 4, 1, "", "good_intervals"], [318, 4, 1, "", "good_reference_values"], [318, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[319, 4, 1, "", "df"], [319, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[320, 4, 1, "", "data"], [320, 4, 1, "", "noise_level"], [320, 4, 1, "", "noise_type"], [320, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[321, 4, 1, "", "input_labels"], [321, 4, 1, "", "output_labels"], [321, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[322, 4, 1, "", "df"], [322, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[323, 4, 1, "", "df"], [323, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[324, 4, 1, "", "df"], [324, 4, 1, "", "exclude_list"], [324, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[325, 4, 1, "", "complement"], [325, 4, 1, "", "df"], [325, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[326, 4, 1, "", "left_df"], [326, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [326, 4, 1, "", "parameters"], [326, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[327, 4, 1, "", "allow_extra"], [327, 4, 1, "", "allow_missing"], [327, 4, 1, "", "df"], [327, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[328, 4, 1, "", "df"], [328, 4, 1, "", "max_columns"], [328, 4, 1, "", "max_colwidth"], [328, 4, 1, "", "max_rows"], [328, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[329, 4, 1, "", "*x"]], "baybe.utils.interval": [[331, 7, 1, "", "InfiniteIntervalError"], [332, 1, 1, "", "Interval"], [333, 5, 1, "", "convert_bounds"], [334, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[331, 2, 1, "", "__init__"], [331, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[332, 2, 1, "", "__init__"], [332, 6, 1, "", "center"], [332, 2, 1, "", "contains"], [332, 2, 1, "", "create"], [332, 2, 1, "", "from_dict"], [332, 2, 1, "", "from_json"], [332, 6, 1, "", "is_bounded"], [332, 6, 1, "", "is_degenerate"], [332, 6, 1, "", "is_fully_unbounded"], [332, 6, 1, "", "is_half_bounded"], [332, 6, 1, "", "is_left_bounded"], [332, 6, 1, "", "is_right_bounded"], [332, 3, 1, "", "lower"], [332, 2, 1, "", "to_dict"], [332, 2, 1, "", "to_json"], [332, 2, 1, "", "to_ndarray"], [332, 2, 1, "", "to_tensor"], [332, 2, 1, "", "to_tuple"], [332, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[332, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[332, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[332, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[333, 4, 1, "", "bounds"]], "baybe.utils.memory": [[336, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[336, 4, 1, "", "num"]], "baybe.utils.numerical": [[338, 3, 1, "", "DTypeFloatNumpy"], [339, 3, 1, "", "DTypeFloatONNX"], [340, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [341, 5, 1, "", "closer_element"], [342, 5, 1, "", "closest_element"], [343, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[341, 4, 1, "", "target"], [341, 4, 1, "", "x"], [341, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[342, 4, 1, "", "array"], [342, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[343, 4, 1, "", "arr"], [343, 4, 1, "", "weights"]], "baybe.utils.plotting": [[345, 5, 1, "", "create_example_plots"], [346, 5, 1, "", "indent"], [347, 5, 1, "", "to_string"]], "baybe.utils.plotting.create_example_plots.params": [[345, 4, 1, "", "ax"], [345, 4, 1, "", "base_name"], [345, 4, 1, "", "path"]], "baybe.utils.plotting.to_string.params": [[347, 4, 1, "", "*fields"], [347, 4, 1, "", "header"], [347, 4, 1, "", "single_line"]], "baybe.utils.random": [[349, 5, 1, "", "set_random_seed"], [350, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[349, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[350, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[352, 1, 1, "", "DiscreteSamplingMethod"], [353, 5, 1, "", "farthest_point_sampling"], [354, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[352, 3, 1, "", "FPS"], [352, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[353, 4, 1, "", "initialization"], [353, 4, 1, "", "n_samples"], [353, 4, 1, "", "points"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[354, 4, 1, "", "df"], [354, 4, 1, "", "method"], [354, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[356, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[356, 2, 1, "", "__init__"], [356, 2, 1, "", "fit"], [356, 3, 1, "", "mapping"], [356, 2, 1, "", "transform"]], "baybe.utils.torch": [[358, 8, 1, "", "DTypeFloatTorch"], [359, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[361, 5, 1, "", "finite_float"], [362, 5, 1, "", "non_inf_float"], [363, 5, 1, "", "non_nan_float"], [364, 5, 1, "", "validate_not_nan"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 174, 190, 192, 198, 215, 230, 232, 233, 236, 240, 243, 254, 256, 258, 260, 270, 272, 278, 299, 329, 332, 365, 368, 375, 379, 382, 383, 386, 387, 389, 390, 391, 392, 393, 399, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426], "0": [8, 18, 30, 40, 41, 47, 90, 125, 133, 136, 154, 174, 198, 221, 223, 280, 281, 282, 290, 291, 308, 319, 320, 324, 325, 339, 367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389, 390, 392, 394, 396, 397, 398, 400, 401, 402, 404, 405, 407, 412, 413, 416, 418, 419, 421, 422, 423, 425, 428], "00": [398, 421], "000": [379, 400], "001": [319, 416], "001157878000014989": 382, "003547": 390, "005": [367, 368, 369, 371, 372], "008102": 390, "008530": 390, "009413": 390, "01": [154, 374, 375, 380, 383, 397, 398, 405], "010939": 396, "011766": 396, "02": 405, "021": [252, 324], "024369": 390, "025704": 396, "025976": 396, "03213": [252, 324], "032270": 390, "037459": 394, "040352": 396, "043919": 396, "047119": 390, "05": 405, "057": [367, 368, 369, 371, 372, 382], "06": [198, 264], "063837": 394, "068385": 396, "075776": 394, "075859": 396, "078258": 390, "08": 405, "085241": 394, "09653736976391157": 392, "0f": 383, "1": [22, 27, 40, 90, 111, 125, 136, 162, 164, 174, 190, 221, 223, 225, 227, 280, 281, 282, 287, 290, 291, 298, 308, 320, 325, 339, 343, 353, 366, 367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389, 390, 392, 394, 396, 397, 398, 400, 401, 402, 404, 405, 407, 408, 412, 415, 416, 418, 419, 421, 422, 423, 425, 428], "10": [174, 223, 252, 324, 366, 368, 377, 378, 379, 380, 383, 386, 387, 389, 390, 392, 394, 396, 400, 401, 402, 404, 405, 407, 414, 419, 423, 428], "100": [371, 377, 378, 379, 380, 383, 386, 387, 389, 390, 394, 400, 405, 418, 419, 423, 425, 428], "1000": 423, "102": 397, "1024": [130, 409, 419], "102627": 390, "1038": [252, 324], "105": [367, 368, 369, 371, 372, 382, 394, 421], "109096": 396, "11": [294, 389, 390, 408], "111": 400, "1147": 379, "1148": 379, "1149": 379, "1150": 379, "116988": 390, "118": 398, "118147": 398, "119": 398, "12": [389, 390, 398, 410, 421], "120": [367, 368, 369, 371, 372, 377, 379, 382, 419], "120000": 397, "122": 400, "122326": 394, "124112": 396, "126": [377, 379, 380, 408], "126181": 390, "1268824": [367, 368, 369], "127681": 396, "128": 10, "13": [389, 397, 404, 421], "1337": [383, 384, 428], "134": 397, "14": [389, 390, 421], "141": 372, "141820": 390, "14448993259018328": 392, "1454": 409, "145840": 396, "148596": 390, "15": [223, 379, 389, 390, 404, 405, 407, 415, 421], "150": [377, 380, 416], "1500": 419, "151": 379, "153": [367, 368, 369, 371, 372, 382], "156": 394, "158391": 390, "16": [328, 339, 372, 389, 390], "160": 394, "17": [389, 390, 398], "176036": 390, "177": 400, "18": [389, 415], "180": 377, "180324": 390, "184715": 398, "185804": 390, "187748": 394, "188": 400, "19": [389, 390, 394], "192": [379, 394], "194244": 396, "196414": 396, "198160": 372, "1e": [198, 264], "2": [8, 18, 90, 92, 111, 223, 290, 291, 298, 318, 325, 343, 353, 366, 367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 383, 384, 386, 387, 389, 390, 392, 394, 396, 397, 398, 400, 401, 402, 404, 405, 407, 412, 415, 416, 418, 419, 421, 422, 423, 425], "20": [136, 223, 366, 367, 368, 369, 383, 384, 389, 390, 394, 409, 419, 426, 428], "200": [368, 377, 379, 386, 387, 392, 400], "2004": 412, "2007": 426, "2021": 368, "2022": 407, "2024": 407, "206652": 390, "21": [389, 394, 398, 401], "212103": 390, "22": [389, 390, 394], "221": 409, "222": 400, "225137": 394, "23": [389, 423], "231215": 396, "24": [378, 389, 390, 421], "241": 419, "242415": 390, "243598": 390, "25": [372, 383, 389, 390, 404, 421], "250": 413, "250991": 390, "251019": 390, "252801": 394, "253552": 390, "256252": 390, "257332": 390, "26": [389, 394, 421], "260447": 390, "261": 372, "261417": 398, "268350": 396, "27": [389, 421], "271452": 390, "277": 394, "278": 394, "279": 394, "28": [372, 389], "280": 394, "284498": 396, "29": [386, 389, 394, 407], "290309": 390, "3": [223, 290, 291, 294, 298, 325, 328, 346, 367, 368, 369, 372, 375, 377, 378, 379, 380, 382, 384, 387, 389, 390, 392, 394, 396, 397, 398, 400, 401, 404, 405, 407, 408, 410, 412, 415, 416, 419, 421, 422, 423, 425, 426], "30": [366, 380, 384, 389, 419], "301702": 398, "305031": 372, "306119": 394, "3078f3": 409, "309087": 390, "31": [371, 389, 401], "311839": 390, "312950": 390, "32": [378, 389, 419], "328": 371, "329": 372, "33": [378, 389, 390, 394], "337630": 396, "34": 378, "345505": 396, "35": [371, 378, 389, 390], "350192": 398, "357065": 390, "36": 394, "365167": 390, "365981": 390, "368834": 390, "372398": 398, "372822": 390, "376050": 397, "379940": 390, "381724": 394, "383017": 396, "39": 419, "392186": 394, "394542": 394, "3d": 384, "4": [130, 290, 291, 328, 374, 375, 377, 378, 379, 380, 384, 389, 390, 392, 394, 396, 397, 398, 407, 412, 415, 416, 419, 421], "40": [389, 418, 419], "414944": 396, "415634": 390, "42": [390, 392], "428827": 390, "433743": 396, "434398": 390, "436420": 390, "44": 397, "446645": 394, "446736": 396, "447": 377, "448": 377, "449": 377, "449690": 390, "45": [389, 394, 425], "450": 377, "452345": 394, "452569": 398, "453051": 394, "462753": 390, "467098": 390, "472282": 394, "48": 390, "486649": 390, "492710": 394, "494589": 390, "5": [90, 136, 290, 291, 367, 369, 374, 377, 378, 379, 380, 383, 386, 387, 389, 390, 394, 396, 397, 398, 400, 401, 402, 404, 405, 407, 412, 413, 414, 415, 416, 419, 421, 423, 426, 428], "50": [380, 387, 389, 392, 404, 405, 412, 413, 419, 421, 425], "500": [384, 419], "503518": 394, "5066666666666667": 392, "51": 394, "52": 394, "521861": 390, "523063": 394, "53": [390, 394], "530560": 396, "5313": 304, "535278": 390, "535388": 371, "539710": 390, "54": [394, 407], "542403": 394, "545821": 394, "548861": 394, "548980": 394, "55": [390, 394, 425], "552239": 371, "557547": 396, "56": [394, 423], "57": 394, "575015": 390, "579452": 390, "580937": 390, "585542": 396, "59": [400, 407], "590": 368, "594101": 390, "598286": 390, "6": [290, 291, 328, 367, 368, 369, 377, 378, 379, 380, 389, 390, 392, 394, 396, 398, 400, 412, 416, 421], "60": [394, 418], "61": 390, "612370": 394, "62": [390, 392], "63": [390, 394], "634157": 396, "64": [174, 390], "640854": 396, "65": [390, 392], "651029": 372, "652686": 394, "658463": 390, "66": 394, "66368270ffd51418ec58bd793f2d9b1b": 426, "664089": 390, "664163": 390, "670052": 396, "68": 394, "689041": 396, "69": [367, 368, 369], "699546": 394, "7": [136, 290, 291, 324, 378, 380, 384, 389, 390, 394, 396, 404, 412, 419, 421], "70": 389, "702007": 394, "703442": 394, "706667": 397, "708733": 390, "71": [394, 419], "720837": 390, "724306": 394, "73": 390, "730442": 397, "738670": 390, "738972": 394, "745": 428, "75": [389, 397, 421], "751198": 390, "766816": 390, "770506": 394, "775021": 396, "778": 400, "778781": 398, "789158": 390, "79": [398, 407], "7gz": 419, "7hf": 419, "8": [291, 367, 369, 377, 379, 380, 389, 390, 392, 394, 396, 407, 412, 416], "80": [390, 416], "800798": 390, "807065": 394, "811758": 390, "825590": 390, "826169": 394, "826782": 390, "827363": 390, "830470": 390, "831849": 396, "8389": 304, "84": 394, "8417": 304, "852660": 390, "854145": 396, "857": 379, "86": 394, "861": 380, "861727": 390, "862": 380, "863": 380, "864": 380, "866682": 394, "87": 400, "873961": 396, "88": 400, "881839": 398, "882426": 396, "8859": 386, "889": 400, "89": [368, 394, 400], "890533": 390, "895576": 398, "8jq": 419, "9": [371, 380, 384, 389, 390, 394, 396, 412, 415, 421, 422], "90": [367, 368, 369, 371, 372, 382, 400, 421], "914373": 396, "914534": 396, "915061": 398, "919508": 396, "921082": 394, "922803": 390, "927475": 390, "93": 394, "930492": 394, "930754": 396, "939961": 390, "947165": 390, "95": 394, "956144": 396, "96": 368, "97": 394, "973436": 390, "974041": 390, "98": 394, "988113": 398, "990794": 390, "999": 416, "A": [0, 8, 18, 22, 27, 34, 36, 37, 38, 40, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 65, 67, 68, 69, 70, 73, 75, 77, 80, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 108, 110, 111, 115, 119, 122, 123, 125, 133, 136, 138, 147, 148, 149, 150, 151, 152, 153, 154, 157, 162, 163, 164, 166, 169, 172, 174, 176, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 199, 200, 215, 216, 221, 223, 225, 227, 230, 232, 233, 236, 240, 242, 243, 250, 252, 254, 256, 258, 260, 266, 270, 272, 278, 280, 281, 282, 290, 294, 296, 297, 298, 301, 311, 318, 324, 325, 327, 336, 343, 351, 353, 356, 366, 378, 387, 389, 390, 392, 394, 401, 402, 408, 409, 410, 412, 416, 419, 420, 421, 422, 425, 426], "AND": [50, 379, 412, 416], "AS": [407, 412], "And": 386, "As": [367, 368, 369, 384, 392, 394, 404, 405, 407, 408, 409, 416, 420, 421, 423], "At": 425, "But": 425, "By": [80, 110, 123, 138, 198, 307, 325, 390, 410, 417, 420, 421], "FOR": 412, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 144, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 197, 198, 221, 227, 230, 232, 233, 234, 236, 240, 243, 250, 252, 254, 256, 258, 260, 270, 272, 278, 283, 303, 326, 332, 345, 356, 367, 368, 369, 371, 372, 378, 382, 383, 384, 389, 390, 392, 394, 398, 404, 405, 407, 408, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428], "If": [6, 13, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 80, 82, 105, 110, 111, 115, 138, 142, 143, 162, 163, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 204, 205, 221, 223, 225, 227, 230, 232, 233, 236, 240, 254, 256, 258, 260, 281, 286, 291, 296, 297, 301, 303, 306, 308, 311, 315, 318, 319, 320, 324, 325, 326, 327, 345, 347, 353, 354, 372, 374, 383, 389, 397, 398, 401, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 423, 424, 425, 426, 428], "In": [27, 41, 53, 160, 162, 163, 164, 174, 192, 219, 221, 301, 328, 367, 368, 369, 371, 383, 384, 386, 389, 390, 392, 394, 397, 398, 401, 407, 408, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428], "It": [22, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 219, 235, 256, 318, 367, 371, 372, 378, 387, 389, 392, 394, 398, 400, 401, 402, 404, 407, 414, 415, 416, 417, 419, 420, 421, 423, 428], "Its": [223, 386], "No": [396, 409], "Not": [412, 416], "OF": [407, 412], "OR": [407, 412], "Of": [372, 381, 406, 422], "On": [386, 392], "One": [127, 367, 369, 407], "Or": 417, "Such": [372, 416, 423], "That": [192, 223, 230, 232, 233, 236, 240, 254, 256, 258, 260, 281, 372, 377, 389, 410, 421, 423, 426], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 80, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 111, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 144, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 197, 198, 210, 211, 213, 215, 219, 221, 223, 225, 230, 232, 233, 234, 236, 240, 243, 254, 256, 258, 260, 262, 264, 266, 267, 270, 272, 275, 278, 280, 281, 282, 284, 286, 287, 290, 291, 294, 296, 297, 298, 301, 303, 306, 307, 308, 311, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 336, 341, 342, 343, 345, 347, 349, 350, 353, 354, 367, 368, 369, 372, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389, 394, 397, 398, 402, 404, 405, 408, 409, 410, 412, 415, 416, 417, 418, 419, 420, 421, 424, 425, 427, 428], "Then": 384, "There": [72, 264, 339, 389, 396, 407, 408, 410, 414, 421], "These": [284, 365, 368, 369, 370, 373, 376, 381, 385, 388, 391, 393, 395, 399, 403, 410, 414, 416, 417, 419, 421], "To": [367, 372, 383, 384, 390, 392, 400, 404, 405, 407, 408, 410, 414, 415, 417, 419, 423], "Will": 413, "With": [318, 383, 384, 389, 392, 404, 405, 407, 414, 416, 419, 422], "_": [142, 143, 195, 201, 208, 345, 374, 383, 405], "__class__": [382, 392], "__excepthook__": 408, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 197, 198, 230, 232, 233, 234, 236, 240, 242, 243, 250, 252, 254, 256, 258, 260, 270, 272, 278, 293, 294, 331, 332, 356, 421, 422], "__name__": [382, 392], "__new__": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 127, 128, 130, 331], "__str__": 409, "__version__": 409, "_amount": 389, "_arraylik": 321, "_c": 297, "_cumbest": 221, "_default_my_attribut": 410, "_fit": 267, "_iterbest": 221, "_label": 389, "_measur": 221, "_n_last_measur": 162, "_nbase": 313, "_nestedsequ": [111, 280, 281, 282, 342], "_no_tl": 404, "_option": 409, "_posterior": 267, "_step": 162, "_supportsarrai": [111, 280, 281, 282, 342], "_surrogate_model": [383, 384], "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 190, 192, 198, 203, 211, 212, 215, 230, 232, 233, 236, 240, 243, 254, 256, 258, 260, 270, 272, 278, 298, 299, 300, 316, 327, 332], "_target": 409, "_tparamet": 138, "_tsurrog": 263, "_u": 298, "_validate_my_attribut": 410, "a1": 291, "a2": 291, "ab": [380, 389], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 295, 302, 409, 427], "abc": [20, 30, 31, 32, 33, 34, 36, 85, 86, 87, 105, 119, 120, 146, 160, 169, 172, 179, 184, 232, 233, 270, 307], "abil": [413, 426], "abl": [384, 408, 414, 416, 419, 422, 428], "about": [22, 27, 120, 136, 270, 287, 367, 368, 369, 389, 397, 398, 407, 409, 410, 419, 421], "abov": [264, 282, 307, 324, 366, 372, 379, 380, 382, 383, 390, 396, 407, 410, 412, 413, 414, 415, 416, 417, 419, 422, 423, 426], "absenc": 418, "absolut": [133, 320, 407], "abstract": [20, 30, 31, 32, 33, 34, 36, 85, 86, 87, 105, 118, 119, 120, 146, 160, 169, 172, 179, 233, 270, 296, 297, 307, 409, 416, 426], "abstractli": 392, "acceler": [407, 409, 411, 426], "accept": [27, 162, 240, 321, 326, 383, 384, 409, 412, 417, 418, 419, 423, 425], "access": [190, 198, 230, 232, 233, 236, 240, 254, 256, 258, 260, 367, 368, 369, 377, 382, 405, 409, 416, 422], "accord": [40, 158, 390, 413, 416, 417, 420, 428], "accordingli": [174, 415, 422], "account": 414, "accumul": [148, 392, 426], "accur": 415, "acet": [367, 368, 369, 371, 372], "aceton": 389, "achiev": [17, 198, 384, 389, 392, 407, 410, 413, 415, 416], "ack": 407, "acq_funct": 372, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 383, 384, 392], "acqf1": 422, "acqf2": 422, "acqf_valu": 383, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 63, 69, 172, 174, 377, 378, 379, 380, 383, 384, 392, 394, 400, 407, 409, 413, 420, 422, 424], "acquisition_funct": [172, 174, 372, 392, 401, 402, 409], "acquisition_function_cl": [172, 174, 409], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 22, 24, 25, 172, 174, 392, 422], "across": [389, 392, 404, 414, 420, 426], "act": [389, 409, 412, 416, 423], "action": [17, 382, 392, 409, 427], "activ": [13, 30, 123, 164, 383, 384, 392, 407, 408, 409, 410, 416, 417, 418, 420, 426, 427, 428], "active_dim": [85, 86, 87, 90, 92, 94, 95, 96], "active_valu": [123, 404, 405, 426], "actual": [162, 192, 219, 397, 409, 421, 423, 426, 428], "ad": [27, 198, 286, 290, 318, 353, 389, 390, 410, 413, 417, 418, 419, 424, 425, 427], "adapt": [252, 308, 324], "add": [27, 213, 223, 318, 319, 372, 386, 387, 389, 394, 404, 407, 412, 414, 415, 416, 421, 426, 428], "add_collection3d": 384, "add_fake_measur": [371, 372, 377, 378, 379, 380, 386, 387, 394, 409, 414, 423, 428], "add_fake_result": 409, "add_measur": [27, 371, 372, 374, 375, 377, 378, 379, 380, 384, 386, 387, 392, 394, 397, 398, 407, 409, 414, 415, 417], "add_noise_to_perturb_degenerate_row": 409, "add_parameter_nois": [409, 428], "add_subplot": 384, "addendum": 412, "addit": [27, 80, 105, 110, 115, 162, 174, 192, 213, 221, 223, 225, 320, 367, 368, 369, 390, 397, 405, 407, 409, 411, 412, 415, 416, 417, 418, 419, 421, 422, 423, 426, 428], "addition": [382, 390, 407], "additivekernel": 409, "address": 423, "adher": [409, 410], "adjust": [368, 372, 397, 409], "adopt": 372, "adrian": [407, 411], "advanc": [392, 408, 409, 417, 422, 426, 427], "advantag": [389, 410], "advic": 410, "advis": [412, 423], "affect": [27, 49, 174, 290, 382, 400, 408, 416], "affected_paramet": [49, 377, 378, 379, 380, 389, 416], "affili": [407, 417], "afford": 415, "aforement": [192, 417], "after": [164, 198, 303, 371, 372, 377, 378, 379, 380, 384, 394, 400, 407, 415, 422], "afterward": 422, "again": [383, 414, 416, 420, 426], "against": [76, 286, 301, 389, 412, 426], "agent": 390, "agraw": 411, "agre": [407, 412], "agreement": 412, "ai": [83, 144, 339], "aim": 415, "akin": 414, "al": [368, 407, 419], "aldrich": 411, "alex": 411, "alexand": [407, 411], "algorithm": [167, 174, 318, 351, 353, 366, 389, 394, 407, 409, 414, 420], "alia": [135, 176, 419], "alias": 409, "align": [80, 190, 303, 383, 421, 426], "all": [19, 20, 29, 31, 36, 49, 51, 84, 85, 86, 87, 104, 105, 110, 117, 120, 123, 125, 129, 136, 145, 146, 156, 159, 160, 162, 168, 169, 171, 174, 178, 179, 192, 199, 200, 223, 230, 231, 233, 269, 270, 290, 300, 301, 318, 367, 368, 369, 372, 374, 375, 377, 378, 382, 383, 384, 389, 390, 392, 394, 396, 397, 404, 405, 407, 409, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428], "allclos": [374, 375, 390], "alleg": 412, "allow": [17, 30, 40, 47, 51, 105, 110, 115, 133, 138, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 192, 198, 225, 287, 306, 326, 327, 367, 368, 369, 372, 389, 390, 404, 405, 407, 409, 413, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 428], "allow_extra": [105, 110, 115, 190, 192, 198, 203, 327, 394, 409], "allow_miss": [105, 110, 115, 190, 192, 198, 203, 327, 409], "allow_recommending_already_measur": [166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 198, 372, 383, 392, 401, 402, 409, 420], "allow_recommending_pending_experi": [166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 409, 414, 420], "allow_repeated_recommend": [166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 198, 372, 383, 392, 401, 402, 409, 420], "almost": 368, "alon": [409, 412], "along": [343, 412, 419, 426], "alongsid": 412, "alpha": [148, 384], "alphabet": [139, 409], "alreadi": [27, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 198, 372, 389, 398, 407, 409, 413, 414, 420, 421, 423, 424, 426, 428], "also": [53, 80, 138, 230, 232, 233, 236, 240, 254, 256, 258, 260, 287, 301, 303, 318, 319, 320, 367, 374, 375, 383, 384, 386, 387, 389, 394, 397, 398, 400, 404, 405, 407, 409, 410, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428], "alter": [389, 409, 415], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 264, 343, 382, 389, 390, 396, 407, 409, 427, 428], "although": [389, 398, 401, 421, 423], "alwai": [13, 27, 36, 208, 209, 386, 389, 390, 407, 413, 415, 416, 423, 424, 426, 428], "ambigu": [133, 421], "amend": 416, "among": [30, 389, 407, 426], "amount": [291, 346, 354, 390, 404, 405, 414, 419, 428], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 63, 64, 66, 69, 74, 76, 77, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 106, 108, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 211, 213, 215, 219, 221, 223, 225, 230, 232, 233, 236, 237, 240, 243, 254, 256, 258, 260, 262, 263, 270, 272, 278, 290, 299, 301, 303, 306, 312, 316, 324, 325, 326, 328, 331, 332, 333, 342, 345, 347, 353, 354, 367, 369, 370, 372, 379, 380, 382, 383, 386, 387, 390, 394, 396, 400, 401, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426], "analog": [192, 318, 421, 422], "analogi": [158, 420], "analysi": [407, 424], "analyt": [3, 4, 7, 8, 69, 423, 426], "analyz": [407, 410], "angl": 384, "ani": [57, 58, 80, 111, 118, 119, 120, 122, 123, 125, 136, 138, 141, 142, 143, 198, 208, 209, 213, 217, 218, 225, 254, 258, 260, 280, 281, 282, 287, 290, 300, 301, 303, 304, 306, 307, 326, 332, 334, 342, 347, 361, 362, 363, 364, 382, 389, 404, 405, 407, 408, 409, 410, 412, 414, 415, 417, 419, 422, 423, 426], "annot": [303, 382, 412], "anonym": [407, 417], "anoth": [49, 333, 368, 378, 379, 386, 387, 389, 398, 410, 416, 426], "ansatz": 409, "answer": 415, "anti": 325, "anymor": [409, 426], "anyth": 308, "anywai": 424, "anywher": 374, "apach": [407, 412], "apart": [410, 415], "api": [41, 407, 408, 422], "appar": 422, "appdata": 408, "appear": [301, 408, 409, 412, 422], "append": [384, 405], "appendix": 412, "appli": [27, 36, 37, 38, 53, 174, 192, 219, 221, 301, 312, 320, 356, 372, 373, 376, 377, 379, 380, 382, 383, 389, 404, 408, 409, 412, 416, 418, 420, 421, 422, 423, 424, 425, 426], "applic": [347, 407, 410, 412, 419, 420, 423], "approach": [198, 383, 392, 407, 410, 413, 415, 420, 422, 426], "appropri": [43, 44, 102, 198, 392, 410, 412, 421], "approxim": [10, 17], "ar": [6, 12, 14, 27, 30, 34, 36, 37, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 62, 70, 71, 72, 80, 105, 110, 111, 115, 123, 136, 138, 143, 157, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 221, 223, 225, 227, 230, 232, 233, 236, 240, 254, 256, 258, 260, 282, 284, 286, 287, 290, 291, 296, 297, 298, 300, 301, 303, 307, 308, 318, 319, 321, 322, 326, 327, 345, 353, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 387, 389, 390, 392, 394, 396, 397, 400, 401, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428], "arang": [374, 384, 419], "arbitrari": [163, 192, 334, 409, 416, 419, 420, 423, 426, 428], "arbitrarili": [418, 422], "architectur": [267, 409, 424, 426], "ard_num_dim": [85, 86, 87, 90, 92, 94, 95, 96], "area": 384, "arg": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 89, 91, 93, 98, 99, 100, 146, 148, 149, 150, 151, 152, 153, 154, 157, 176, 234, 237, 242, 331, 410], "argu": 389, "argument": [77, 80, 83, 136, 138, 144, 160, 162, 163, 164, 190, 198, 234, 303, 325, 372, 387, 394, 409, 416, 419, 420, 421, 422, 423, 426], "aris": [52, 389, 409, 412, 416, 422, 428], "arithmet": [113, 418], "arizona": 411, "arm": [229, 230, 406, 411], "arm_index": 392, "around": [183, 225, 227, 394, 409, 420, 422, 428], "arr": [280, 281, 282, 343], "arrai": [111, 280, 281, 282, 293, 321, 329, 338, 342, 343, 353, 384, 409, 420, 424], "arrays_to_datafram": [374, 375, 384, 397, 398, 404, 405, 409, 423], "arriv": 407, "artifici": 428, "aryl": [367, 368, 369, 371, 407, 419], "ascend": 394, "ask": [389, 407, 409, 410, 415], "aspect": [370, 374, 375, 398, 414, 417], "assembl": [389, 422], "assembli": 427, "assert": [58, 377, 378, 379, 380, 386, 387, 389, 390, 396, 400, 409, 412, 415, 416, 422], "assess": 423, "assign": [318, 383, 390, 396, 419], "associ": [192, 392, 412, 415, 417, 418, 426], "assum": [22, 41, 235, 303, 327, 367, 368, 369, 372, 374, 375, 377, 378, 379, 380, 386, 387, 389, 392, 394, 397, 398, 400, 407, 412, 416, 419, 422, 424, 425, 428], "assumpt": 423, "assur": 416, "asynchron": [407, 420, 427], "atol": [374, 375], "atompair": 130, "atompairfingerprint": 130, "attach": [22, 303, 382, 383, 384, 412], "attempt": [68, 74, 235, 345, 392, 408, 409, 414, 416, 420], "attent": 164, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 197, 198, 230, 232, 233, 236, 240, 243, 250, 252, 254, 256, 258, 260, 270, 272, 278, 301, 304, 332, 356, 364, 409], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 76, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 113, 115, 118, 119, 120, 122, 123, 125, 127, 128, 130, 132, 133, 134, 136, 138, 141, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 193, 197, 198, 207, 211, 213, 230, 232, 233, 236, 240, 243, 247, 250, 252, 254, 256, 258, 260, 267, 270, 271, 272, 275, 276, 278, 301, 316, 327, 332, 337, 352, 356, 357, 360, 361, 362, 363, 364, 396, 409, 410, 412, 420, 422, 424, 425], "audit": [407, 409, 410], "augment": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 192, 262, 263, 264, 409, 415], "author": 412, "authorship": 412, "auto": [12, 14, 409, 411], "auto_tutori": 339, "autocorr": 130, "autocorrfingerprint": 130, "autodoc": 409, "automat": [27, 108, 174, 240, 326, 366, 384, 397, 408, 409, 410, 418, 420, 421, 426, 427], "avail": [2, 113, 125, 127, 128, 130, 136, 160, 162, 163, 164, 198, 221, 223, 247, 275, 276, 287, 352, 353, 354, 369, 371, 374, 375, 389, 394, 397, 398, 407, 408, 409, 410, 412, 414, 415, 417, 419, 420, 421, 422, 423, 426, 427], "available_acq_funct": 372, "avalon": 130, "avalonfingerprint": 130, "averag": [256, 383, 384, 405, 419, 423], "avoid": [192, 304, 343, 409, 410, 414, 415, 419, 421], "awai": 425, "awar": [389, 404, 405, 413, 422], "ax": [80, 345, 366, 368, 383, 384, 404, 405], "axes3d": [345, 384], "axi": [190, 221, 343, 366, 374, 375, 380, 383, 384, 389, 390, 392, 394, 397, 398, 404, 405, 421], "azim": 384, "azur": 409, "b": [52, 154, 252, 290, 298, 324, 325, 368, 378, 387, 392, 401, 402, 407, 410, 412, 415, 419, 422], "b1": 291, "b2": 291, "back": [0, 400, 410], "backend": 287, "background": [80, 82], "background_data": 80, "backport": 408, "backtest": [219, 220, 226, 367, 368, 369, 383, 403, 406, 407, 409, 420, 423], "backtick": 410, "backward": [101, 107, 175, 176, 192, 409], "bad": [394, 415, 417, 425], "bad_interv": 318, "badg": 409, "bai": 407, "baird": 411, "balanc": [110, 392, 407], "banana": 410, "bandit": [230, 372, 406, 407, 409, 411], "banner": 409, "bar": [80, 386, 387, 389, 400, 401, 402, 407, 409, 424], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 113, 115, 118, 119, 120, 122, 123, 125, 127, 128, 129, 130, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 161, 162, 163, 164, 166, 169, 172, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 193, 197, 198, 211, 213, 215, 230, 232, 233, 234, 235, 236, 240, 242, 243, 247, 250, 252, 254, 256, 258, 260, 264, 266, 270, 272, 275, 276, 278, 293, 294, 295, 296, 297, 321, 325, 332, 345, 352, 353, 356, 366, 371, 372, 383, 384, 386, 388, 392, 406, 407, 409, 412, 413, 416, 417, 419, 420, 421, 422, 424], "base1": 390, "base2": 390, "base_data": 383, "base_kernel": [98, 99, 100], "base_nam": [345, 366, 368, 383, 384, 404, 405], "base_predictor": 262, "base_smil": 383, "basefingerprinttransform": 311, "baselin": [366, 368, 404, 407, 419], "bashrc": 417, "basi": [94, 407, 412], "basic": [85, 89, 90, 91, 92, 93, 94, 95, 96, 148, 149, 150, 151, 152, 153, 154, 221, 293, 294, 367, 368, 369, 372, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 389, 394, 397, 398, 399, 400, 403, 406, 409, 410, 418, 419, 423, 427], "basic_transfer_learn": 405, "basickernel": [89, 90, 91, 92, 93, 94, 95, 96, 409], "batch": [27, 157, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 224, 262, 263, 372, 377, 378, 379, 380, 384, 394, 397, 398, 400, 404, 405, 409, 414, 420, 423], "batch_quant": 409, "batch_shap": [85, 86, 87, 90, 92, 94, 95, 96], "batch_siz": [27, 40, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 221, 225, 227, 366, 367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 386, 387, 390, 392, 394, 397, 398, 400, 401, 404, 405, 407, 409, 414, 415, 417, 423], "batchnr": 394, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 113, 115, 118, 119, 120, 122, 123, 125, 127, 128, 129, 130, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 193, 197, 198, 215, 230, 232, 233, 234, 236, 240, 242, 243, 247, 250, 252, 254, 256, 258, 260, 270, 272, 275, 276, 278, 293, 294, 332, 352, 356, 365, 366, 367, 368, 369, 370, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428], "baybe_cach": 417, "baybe_cache_dir": [409, 417], "baybe_deactivate_polar": [409, 417], "baybe_debug_fake_hosthash": 409, "baybe_debug_fake_userhash": 409, "baybe_numpy_use_single_precis": [340, 409, 417], "baybe_telemetry_en": [407, 417], "baybe_telemetry_endpoint": [409, 417], "baybe_telemetry_host": 409, "baybe_telemetry_hostnam": [409, 417], "baybe_telemetry_usernam": [409, 417], "baybe_telemetry_vpn_check": [409, 417], "baybe_telemetry_vpn_check_timeout": [409, 417], "baybe_torch_use_single_precis": [359, 409, 417], "bayesian": [0, 166, 172, 174, 219, 221, 225, 227, 235, 254, 392, 409, 413, 415, 424, 427], "bayesian_recommend": 384, "bayesianlinearmodel": 387, "bayesianlinearsurrog": [372, 424], "bayesianrecommend": [166, 174, 235, 409, 420], "bayesianridg": 386, "bcw07": 426, "becaus": [72, 133, 192, 198, 227, 307, 382, 383, 389, 405, 410, 413, 415, 416, 417, 418, 419, 422, 423, 426], "becom": [192, 389, 413, 415, 416, 422, 425, 428], "been": [22, 68, 69, 160, 162, 163, 164, 198, 230, 232, 233, 236, 240, 254, 256, 258, 260, 326, 367, 368, 372, 407, 408, 409, 412, 414, 420, 426], "beeswarm": 80, "befor": [68, 164, 221, 230, 232, 233, 236, 240, 254, 256, 258, 260, 303, 366, 369, 372, 378, 383, 407, 409, 410, 417, 419, 421], "begin": [162, 377, 379, 396, 400, 420], "behalf": 412, "behav": [384, 400, 422], "behavior": [174, 407, 409, 417, 418, 420, 421, 426], "behind": [418, 422, 423, 425], "being": [100, 318, 345, 392, 408, 409, 416, 417, 419, 421], "bell": [276, 280, 394, 425], "belong": [382, 422], "below": [264, 282, 379, 382, 383, 389, 410, 412, 413, 415, 416, 418, 422, 424, 425, 426], "benchmark": [407, 409, 411], "benefici": [412, 413, 417], "benefit": [416, 426], "benzo": 426, "bernoulli": [230, 391, 406, 411], "besid": [407, 418, 425], "best": [12, 14, 221, 223, 225, 369, 392, 407, 417, 420], "bet": 415, "beta": [8, 18, 148, 230, 372, 409, 413], "betabernoullimultiarmedbanditsurrog": [372, 392, 409], "betaprior": [230, 409], "better": [10, 318, 368, 409, 415, 416, 419], "between": [30, 49, 133, 163, 190, 198, 250, 325, 382, 384, 389, 392, 394, 398, 404, 405, 407, 409, 410, 414, 415, 416, 417, 419, 420, 421, 422, 425, 426], "beyond": 407, "bias": 419, "bin": 389, "binar": 409, "binari": [272, 400, 408, 409, 422], "binarytarget": [273, 392, 409], "bind": [382, 384, 412], "bit": [409, 419], "black": [219, 423, 426], "blackbox": [365, 366, 406], "blank": 410, "blob": 252, "block": [383, 389, 407, 408, 409, 417, 422], "bodi": 382, "bonilla": 426, "bool": [6, 12, 14, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 81, 82, 105, 110, 111, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 203, 230, 232, 233, 236, 240, 254, 256, 258, 260, 272, 273, 280, 281, 282, 285, 286, 296, 297, 301, 302, 307, 308, 321, 325, 326, 327, 332, 342, 347, 392], "boolean": [30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 82, 118, 119, 120, 122, 123, 125, 132, 133, 136, 327, 372, 417], "boost": [258, 405], "both": [10, 138, 192, 198, 227, 282, 303, 366, 378, 383, 386, 389, 390, 392, 394, 404, 405, 407, 410, 413, 416, 419, 421, 422, 425, 428], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 41, 166, 174, 176, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 374, 375, 384, 398, 404, 405, 409, 417, 420], "botorch_acqf": [22, 383, 384], "botorch_function_wrapp": 409, "botorchrecommend": [166, 176, 372, 377, 378, 379, 380, 383, 384, 386, 387, 392, 394, 398, 400, 401, 402, 407, 409, 414, 415, 420], "bottom": 415, "bound": [8, 18, 30, 132, 138, 154, 190, 192, 198, 203, 263, 278, 279, 297, 303, 327, 332, 333, 366, 372, 374, 375, 384, 390, 394, 396, 397, 398, 404, 405, 409, 419, 422, 425, 427, 428], "boundari": [198, 280, 281, 394], "boundary_onli": [198, 389], "bounded": 409, "bounds_transform_func": 409, "box": [154, 219, 423, 426], "brain": [423, 426], "branch": [407, 410], "break": [235, 422], "brettpho": [367, 368, 369, 371, 372], "briefli": [423, 426], "bring": [407, 409], "bro": 252, "broad": 422, "brute": [174, 420], "bu": [367, 368, 369, 371, 372], "bucket": 389, "budget": 415, "bug": [409, 410], "build": [190, 198, 235, 383, 389, 408, 409, 410, 416, 422, 426, 427, 428], "built": [198, 386, 407, 410, 415, 420], "builtin": 294, "bump": 409, "button": 409, "butyl": [367, 368, 369, 371, 372], "butylphenylphosphin": [367, 368, 369, 371, 372], "butyornitril": [367, 368, 369, 371, 372], "bypass": [138, 383], "byte": [111, 197, 236, 280, 281, 282, 336, 342, 409, 428], "c": [52, 290, 298, 367, 368, 369, 371, 372, 377, 378, 379, 380, 387, 389, 401, 402, 407, 408, 412, 415, 419, 421, 422], "c1": [367, 368, 369, 371, 372, 377, 378, 379, 380, 419], "c1c2": [367, 368, 369, 371, 372], "c1ccccc1": [367, 368, 369, 377, 379], "c1ccoc1": 416, "c2": [367, 368, 369, 371, 372, 377, 379, 380], "c2ccccc2": [367, 368, 369], "c2oc": [367, 368, 369, 371, 372], "c2p": [367, 368, 369, 371, 372], "c3": [367, 368, 369, 371, 372, 377, 379], "c3c": [367, 368, 369], "c3ccccc3": [367, 368, 369, 371, 372], "c4": [367, 368, 369, 377, 379], "c4ccccc4": [367, 368, 369, 371, 372], "c5": [377, 379], "c6": [377, 379], "c_g2_min": 390, "c_g3_max": 390, "c_i": 416, "c_total_sum": 390, "cach": [286, 409, 422, 427], "cached_recommend": 286, "calcul": [286, 343, 374, 384, 404, 417, 419, 421], "calibr": 426, "call": [41, 77, 160, 162, 163, 164, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 286, 287, 303, 321, 367, 368, 369, 382, 387, 389, 390, 401, 402, 407, 408, 409, 413, 415, 416, 417, 419, 422, 423, 426], "callabl": [48, 76, 138, 211, 219, 221, 223, 225, 227, 262, 263, 266, 267, 294, 299, 301, 303, 321, 366, 382, 409, 427], "callable_": 301, "campaign": [80, 221, 224, 225, 227, 318, 320, 370, 371, 379, 381, 384, 392, 402, 404, 405, 406, 407, 409, 413, 414, 416, 418, 419, 421, 422, 423, 424, 426, 427, 428], "campaign1": 423, "campaign2": 423, "campaign_json": 415, "campaign_oh": 368, "campaign_rand": [367, 368, 369], "campaign_recr": 400, "campaign_stop": 383, "campaign_with_hook": 383, "campaignstoppedexcept": 383, "can": [13, 17, 22, 27, 30, 36, 37, 38, 52, 80, 119, 125, 133, 136, 157, 166, 167, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 219, 223, 230, 232, 233, 234, 235, 236, 240, 254, 256, 258, 260, 264, 273, 285, 287, 301, 303, 307, 318, 320, 321, 326, 339, 366, 367, 368, 369, 372, 373, 376, 377, 378, 379, 382, 383, 384, 386, 387, 389, 390, 392, 394, 396, 397, 398, 401, 404, 405, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428], "canada": 411, "candid": [12, 14, 27, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 198, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 383, 405, 409, 413, 414, 415, 420, 421], "candidates_comp_rep": 383, "cannot": [13, 75, 76, 80, 235, 236, 264, 308, 345, 392, 409, 412, 414, 416, 417, 419, 420, 422, 424, 426], "canon": [310, 422], "capabl": [365, 391, 393, 399, 403, 405, 409, 411, 415, 426], "captur": 419, "cardin": [30, 40, 47, 57, 58, 190, 409, 411], "cardinalityconstraint": [40, 47, 409], "care": [45, 389, 410, 416, 418], "carefulli": 417, "carlo": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 69, 225, 366, 368, 369, 383, 392, 404, 405, 414, 423], "carri": [303, 382, 412], "cartesian": [192, 198, 199, 200, 407, 409, 421], "case": [160, 162, 163, 164, 227, 264, 303, 318, 328, 383, 388, 389, 397, 398, 401, 407, 408, 410, 413, 414, 415, 416, 417, 419, 422, 423, 425, 426, 428], "cast": [41, 409], "cat": 325, "cat_1": 394, "cat_1_22": 394, "cat_1_33": 394, "cat_2": 394, "catch_constant_target": 409, "categor": [27, 122, 123, 127, 198, 205, 326, 407, 409, 419, 421, 425], "categori": [368, 383, 407, 409, 422, 425], "categorical_1": [394, 415], "categorical_2": [394, 415], "categorical_paramet": 422, "categorical_parameter_json": 422, "categorical_parameter_reconstruct": 422, "categoricalencod": [122, 123, 377, 378, 379, 380, 394, 400], "categoricalparamet": [123, 198, 368, 377, 378, 379, 380, 387, 392, 394, 400, 401, 402, 407, 409, 421, 422, 427], "cattr": [210, 211, 213, 402, 408, 409, 410], "cauchi": 150, "caus": [133, 290, 294, 409, 412], "caution": 426, "cc": [367, 368, 369, 371, 372, 377, 379, 380, 389, 419, 426], "cc1": [367, 368, 369, 371, 372, 419], "ccc": [377, 379, 387, 407], "cccc": [367, 368, 369, 371, 372, 377, 379], "ccccc": [377, 379, 401, 402], "cccccc": [377, 379], "cccccccco": [416, 419], "ccccoc": [367, 368, 369, 371, 372], "cco": 389, "ccoccoccn": [401, 402], "cdot": [416, 418], "ceil": 383, "cell": [386, 419, 423, 426], "cell_lin": 426, "center": [280, 282, 332, 394, 415], "central": [409, 415], "certain": [27, 49, 76, 164, 211, 213, 219, 287, 300, 318, 346, 378, 383, 392, 407, 410, 416, 420, 422, 426, 428], "cesium": [367, 368, 369, 371, 372], "ch": 346, "chai": 426, "chain": [34, 294, 416], "challeng": [410, 422], "chanc": 408, "chang": [49, 162, 318, 319, 320, 372, 389, 397, 407, 408, 410, 412, 415, 417, 419, 421, 426], "charact": 412, "characterist": 294, "charg": 412, "check": [27, 118, 119, 120, 122, 123, 125, 132, 133, 136, 286, 300, 302, 305, 306, 307, 308, 326, 332, 341, 397, 398, 400, 407, 409, 410, 417, 421, 422], "checker": 409, "checkout": 410, "chem": [407, 409, 419], "chemic": [312, 368, 371, 389, 409, 411, 416, 419, 426], "cheminformat": [136, 407, 409], "chemistri": [125, 377, 379, 380], "child": [181, 182, 183, 184, 410], "chocol": 410, "choic": [221, 223, 353, 382, 389, 392, 398, 409, 416, 418, 419, 420, 421, 422, 425], "choos": [158, 389, 390, 392, 394, 396, 397, 398, 407, 412, 413, 415, 420, 424, 425], "chose": [397, 422], "chosen": [66, 166, 221, 223, 227, 349, 350, 372, 392, 409, 413, 416, 419, 421], "christoph": 426, "ci": [375, 404, 405, 409, 410], "circular": 419, "circumv": [408, 422], "cl": [45, 108, 208, 212, 264, 296, 297, 302, 307, 334], "claim": 412, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 75, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 196, 197, 198, 211, 213, 214, 215, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 292, 293, 294, 295, 296, 297, 302, 307, 311, 330, 332, 347, 351, 352, 355, 356, 372, 382, 383, 386, 392, 401, 409, 415, 416, 418, 419, 420, 421, 422, 424], "classic": [392, 418], "classifi": 419, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 190, 192, 198, 215, 230, 232, 233, 236, 240, 243, 254, 256, 258, 260, 270, 272, 278, 294, 332, 409], "classvalidationerror": [402, 408], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 118, 119, 120, 122, 123, 125, 132, 133, 136, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 230, 232, 233, 236, 240, 254, 256, 258, 260], "clean": [322, 323, 324, 408, 409, 410], "clear": [339, 426], "click": [392, 419], "clone": 410, "close": [221, 227, 275, 366, 383, 404, 405, 423], "closer": [341, 419], "closest": [286, 326, 342], "closest_el": 409, "closur": [219, 423], "cluster": [181, 182, 183, 184, 372, 409, 411, 427], "clustering_x": 409, "cmap": 384, "cn": [367, 368, 369, 371, 372], "co": 389, "co1": [367, 368, 369], "co2": [367, 368, 369], "co3": [367, 368, 369], "coars": [387, 400, 401, 402, 407], "coc": [387, 401, 402, 407], "cococ": [401, 402], "code": [235, 368, 387, 392, 397, 401, 402, 407, 408, 409, 412, 416, 417, 419, 423, 426, 428], "coeffici": [41, 43, 44, 374, 375, 390, 416], "coerc": 409, "collect": [27, 57, 58, 88, 98, 99, 138, 139, 147, 162, 164, 190, 198, 204, 205, 216, 223, 288, 290, 292, 300, 301, 318, 327, 351, 353, 366, 372, 384, 389, 392, 404, 405, 407, 409, 415, 417], "color": 384, "column": [36, 37, 38, 80, 105, 110, 111, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 221, 223, 225, 227, 290, 291, 319, 321, 322, 323, 324, 325, 327, 328, 356, 368, 371, 377, 378, 379, 380, 383, 389, 394, 400, 404, 405, 409, 415, 421, 422, 423], "column_group": 291, "com": [252, 304, 324, 407, 409], "comb": 389, "combin": [50, 138, 192, 198, 199, 200, 294, 312, 367, 368, 369, 377, 379, 382, 383, 389, 394, 407, 408, 412, 416, 418, 420, 421, 423, 426, 428], "combinatori": 428, "combine_func": 102, "come": [392, 407, 415, 422, 426, 428], "command": 408, "comment": 409, "commerci": 412, "commit": [407, 409, 410], "common": [147, 386, 390, 409, 410, 412, 415, 416, 419, 422], "commonli": 418, "commun": [412, 418, 426], "comp_df": [119, 122, 123, 125, 133, 136, 409], "comp_rep": [198, 384, 386, 409, 421], "comp_rep_bound": [190, 192, 198, 409], "comp_rep_byt": [197, 428], "comp_rep_column": [118, 119, 120, 122, 123, 125, 132, 133, 136, 190, 192, 198, 409], "comp_rep_human_read": [197, 428], "comp_rep_shap": [197, 428], "comp_rep_tensor": [383, 384], "compar": [138, 162, 366, 389, 390, 392, 404, 407, 409, 410, 419, 425], "comparison": [383, 404, 405, 420, 422], "compat": [101, 107, 138, 166, 169, 172, 174, 175, 176, 179, 181, 182, 183, 184, 186, 187, 192, 193, 223, 236, 303, 327, 364, 372, 377, 378, 379, 380, 382, 384, 394, 400, 409, 420], "compens": 409, "compil": [408, 412], "complain": 410, "complaint": 410, "complement": [27, 325], "complet": [384, 389, 414, 416, 418, 422], "complex": [111, 280, 281, 282, 342, 389, 400, 404, 405, 410, 413, 414, 416, 423, 426], "compli": 412, "complianc": 407, "complic": [389, 426], "compon": [62, 389, 390, 410, 413, 415, 416, 417, 422, 426], "compos": [97, 422], "composit": [86, 98, 99, 100], "compositekernel": [98, 99, 100, 409], "compound": 312, "comprehens": [407, 424], "compress": 422, "comput": [22, 27, 73, 80, 82, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 190, 192, 197, 198, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 264, 270, 272, 278, 313, 343, 377, 378, 379, 380, 382, 389, 390, 394, 400, 409, 412, 413, 415, 417, 419, 421, 422, 423, 428], "computation": 174, "concat": [374, 375, 383, 384, 394, 397, 398, 404, 405], "concentr": [148, 149, 367, 368, 369, 371, 372, 377, 382, 383, 416], "concentrati": 377, "concentration_valu": 383, "concept": [290, 389, 418, 419, 422], "concis": 409, "concret": [409, 422], "conda": 409, "condit": [30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 318, 325, 368, 374, 378, 379, 380, 389, 407, 409, 412, 426, 427], "conduct": [27, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 225, 230, 232, 233, 236, 240, 254, 256, 258, 260, 367, 368, 369, 407, 410, 415, 426], "confid": [8, 18, 372], "config": [386, 387, 399, 406, 409, 427], "config_json": 27, "configur": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 71, 72, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 219, 221, 227, 230, 232, 233, 234, 236, 240, 246, 254, 256, 258, 260, 318, 345, 353, 370, 371, 389, 395, 398, 402, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 426, 427, 428], "confirm": 384, "conflict": [407, 410, 418], "conform": [136, 313, 419], "confront": [392, 407], "conjunct": 424, "connect": [53, 318, 409, 417, 419, 425], "consecut": [160, 162, 163, 164], "consequ": [163, 369, 408, 416, 417, 420, 421, 423], "consequenti": 412, "consid": [8, 18, 27, 30, 31, 32, 33, 34, 37, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 110, 123, 162, 192, 198, 225, 286, 318, 326, 327, 366, 389, 392, 394, 404, 405, 407, 409, 410, 414, 416, 418, 419, 420, 422, 428], "consider": [192, 414], "consist": [158, 197, 384, 410, 412], "consol": 408, "consolid": [409, 420], "consortium": 411, "conspicu": 412, "constant": [256, 264, 281, 394, 409, 410, 419, 421], "constitut": 412, "constrain": [409, 416, 425, 426], "constraint": [27, 30, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 120, 190, 192, 198, 293, 386, 387, 394, 400, 401, 402, 406, 407, 409, 411, 417, 419, 427], "constraint_1": 379, "constraint_2": 379, "constraint_3": 379, "constraints_augment": 192, "constraints_cardin": 190, "constraints_lin_eq": 190, "constraints_lin_ineq": 190, "constraints_nonlin": 190, "constru": 412, "construct": [27, 190, 192, 198, 236, 266, 366, 396, 404, 405, 407, 409, 413, 422, 427], "constructor": [181, 182, 183, 184, 192, 212, 254, 258, 260, 389, 396, 401, 402, 409, 413, 415, 418, 419, 427, 428], "consult": 407, "consum": [162, 382], "consumpt": 417, "cont_ind": 398, "cont_indic": [397, 398], "cont_paramet": 398, "cont_recommend": [166, 398], "contact": [407, 411], "contain": [27, 30, 36, 37, 38, 58, 61, 65, 80, 105, 110, 111, 115, 119, 122, 123, 125, 133, 136, 138, 142, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 197, 199, 200, 204, 219, 221, 223, 225, 230, 232, 233, 236, 240, 254, 256, 258, 260, 270, 272, 278, 280, 281, 282, 290, 291, 303, 313, 318, 320, 325, 332, 343, 345, 347, 353, 368, 369, 383, 384, 390, 392, 398, 404, 405, 408, 409, 410, 412, 415, 416, 420, 421, 422, 423, 428], "content": [138, 162, 192, 223, 319, 354, 409, 412, 422], "context": [160, 162, 163, 164, 219, 234, 350, 382, 392, 396, 404, 405, 409, 415, 419, 422, 423, 426, 428], "contextu": 426, "continu": [10, 13, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 65, 118, 119, 120, 122, 123, 125, 132, 133, 136, 166, 174, 190, 192, 193, 198, 199, 200, 227, 230, 232, 233, 236, 240, 254, 256, 258, 260, 372, 374, 377, 378, 379, 380, 390, 394, 395, 398, 400, 406, 407, 409, 415, 417, 420, 422, 423, 427], "continuous_subspac": 421, "continuouscardinalityconstraint": [57, 190, 409], "continuousconstraint": [33, 41, 190, 409, 416], "continuouslinearconstraint": [190, 374, 375, 390, 409, 427], "continuouslinearequalityconstraint": 409, "continuouslinearinequalityconstraint": 409, "continuousnonlinearconstraint": [40, 190, 409], "continuousparamet": [132, 190, 409], "contract": 412, "contrast": [198, 307, 390, 392], "contribut": [407, 409, 412, 428], "contributor": [407, 412], "contributori": 412, "control": [13, 17, 138, 148, 174, 190, 198, 327, 394, 397, 407, 409, 412, 413, 417, 418, 419, 420, 425], "convei": 422, "conveni": [409, 421, 422], "convent": 192, "convers": [27, 163, 386, 396, 409, 412, 427], "convert": [24, 106, 194, 207, 304, 308, 312, 315, 316, 328, 329, 333, 336, 339, 387, 401, 402, 409, 415, 417, 422, 423], "convert_sklearn": 386, "convert_sklearn_bayesian_ridg": 386, "cooki": 410, "coordin": 353, "copi": [383, 407, 409, 412, 428], "copyright": [407, 412], "core": [27, 190, 192, 193, 198, 225, 227, 230, 232, 233, 234, 236, 240, 247, 254, 256, 258, 260, 372, 407, 409, 425], "coregion": 426, "coretest": [409, 410], "corpu": 419, "correct": [27, 267, 384, 407, 409, 410, 422], "correctli": [389, 398, 409], "correl": [125, 136, 324, 419, 426], "correspond": [22, 27, 40, 105, 110, 115, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 211, 219, 221, 223, 230, 232, 233, 236, 240, 254, 256, 258, 260, 280, 286, 303, 306, 308, 311, 312, 318, 321, 327, 328, 366, 371, 372, 389, 392, 398, 404, 405, 407, 409, 410, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426], "correspondingli": 27, "corrupt": 320, "cost": [368, 392], "costli": [192, 195, 201, 415], "could": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 133, 315, 372, 382, 383, 389, 390, 405, 409, 414, 416, 419, 423, 425, 426], "count": [287, 383, 389, 416], "counterclaim": 412, "counterpart": [303, 421], "coupl": 384, "cours": [404, 405, 410, 422, 426], "cov": [409, 410], "cover": [307, 318], "coverag": [409, 410], "cp": [367, 368, 369], "craft": 423, "crash": [408, 409], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 80, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 190, 192, 198, 199, 200, 215, 223, 230, 232, 233, 234, 236, 240, 243, 248, 254, 256, 258, 260, 270, 272, 278, 318, 321, 332, 345, 347, 353, 371, 382, 383, 384, 389, 390, 398, 399, 406, 407, 408, 409, 410, 416, 417, 422, 423, 424, 425, 427, 428], "create_example_plot": [366, 368, 383, 384, 404, 405], "create_from_config": [386, 387], "create_pi_plot": 384, "creation": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 138, 195, 198, 201, 378, 380, 386, 387, 421, 422, 427], "criteria": 384, "criterion": [383, 413], "critic": 409, "cross": [404, 412], "crucial": [407, 425], "cube": 416, "cuda": 408, "cultur": [419, 426], "curran": 426, "current": [10, 27, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 225, 227, 235, 285, 339, 383, 384, 389, 413, 415, 416, 417, 419, 423, 425, 426, 428], "curv": [280, 384, 394, 416, 425], "custom": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 118, 119, 120, 122, 123, 125, 128, 132, 133, 136, 138, 236, 267, 270, 272, 278, 303, 328, 365, 372, 376, 383, 392, 398, 406, 407, 409, 416, 419, 420, 423, 426, 427, 428], "custom_blackbox": 366, "custom_conversion_funct": 386, "custom_filt": 416, "custom_funct": 377, "customari": 412, "customconstraint": 377, "customdiscreteparamet": [409, 427], "customencod": 125, "customonnxsurrog": [372, 386, 409], "cycl": [162, 407], "cyclic": 162, "d": [22, 52, 111, 290, 298, 343, 353, 384, 387, 401, 402, 404, 405, 407, 412, 421, 426], "d401": 377, "damag": 412, "daniel": 411, "darmstadt": [407, 411, 417], "dashboard": 409, "data": [13, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 64, 80, 82, 110, 115, 125, 133, 136, 157, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 221, 225, 227, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 272, 278, 287, 289, 293, 318, 320, 326, 338, 339, 354, 358, 365, 366, 371, 372, 374, 375, 377, 378, 379, 380, 383, 387, 389, 394, 397, 400, 401, 402, 404, 405, 406, 407, 409, 413, 414, 415, 416, 417, 419, 420, 422, 423, 424, 427, 428], "data_typ": 386, "databas": [27, 394, 407, 422], "dataclass": [382, 392], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 82, 105, 110, 115, 119, 122, 123, 125, 133, 136, 138, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 197, 198, 199, 200, 203, 217, 218, 221, 223, 225, 227, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 272, 278, 286, 290, 291, 312, 313, 354, 366, 367, 371, 372, 377, 378, 379, 380, 383, 384, 386, 387, 389, 390, 394, 397, 400, 404, 405, 409, 414, 415, 416, 419, 427, 428], "datapoint": 409, "dataset": [162, 219, 423], "datatyp": 409, "date": 412, "de": [210, 399, 407, 408, 409, 410, 415, 416, 420, 427], "deactiv": [407, 409, 417], "deal": [369, 414, 419, 423], "debug": 409, "decid": [133, 326, 389, 392, 398, 413], "declar": [49, 53, 58, 184, 378, 410, 416], "decod": 386, "decor": [100, 264, 294, 321, 382, 409, 410, 423], "decorrel": [125, 136, 141, 401, 402, 419], "decreas": [162, 281, 394, 422, 426], "deduc": [374, 375, 397], "dedupl": 409, "deep": 383, "deepcopi": 409, "def": [366, 377, 382, 383, 384, 389, 392, 404, 410, 416, 423], "default": [38, 80, 110, 123, 125, 136, 138, 166, 181, 182, 183, 184, 190, 192, 198, 210, 230, 247, 250, 325, 366, 367, 369, 372, 387, 394, 398, 407, 409, 410, 415, 417, 418, 419, 427], "default_campaign": 366, "default_iter": 163, "default_model": 236, "defaultkernelfactori": [372, 377, 378, 379, 380, 394, 400], "defaultscal": 409, "defend": 412, "defin": [22, 27, 37, 41, 48, 128, 157, 162, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 198, 219, 240, 242, 243, 267, 320, 324, 325, 356, 367, 368, 369, 371, 377, 378, 379, 380, 386, 387, 392, 396, 409, 410, 412, 415, 416, 419, 422, 423, 425], "definit": [190, 198, 307, 390, 407, 409, 412, 418, 421], "degener": [319, 332, 409], "degr": 400, "degre": 422, "degree_c": [386, 387, 400], "deliber": 412, "delici": 410, "deliveri": 419, "demand": 405, "demo": 409, "demonstr": [365, 366, 367, 370, 373, 376, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 395, 399, 400, 403, 404, 405, 409, 418, 421, 422, 426], "denot": 22, "densiti": 384, "depend": [49, 53, 74, 102, 192, 198, 219, 281, 290, 368, 372, 376, 389, 390, 396, 406, 408, 409, 410, 416, 417, 421, 423, 425, 426, 428], "dependenciesconstraint": 409, "deprec": [60, 130, 172, 174, 190, 198, 203, 237, 294, 377, 379, 380], "deprecationwarn": [377, 379, 380, 383], "depth": 421, "deriv": [181, 182, 183, 184, 198, 307, 412, 416, 421], "descend": 281, "describ": [123, 181, 182, 183, 184, 230, 232, 233, 236, 240, 254, 256, 258, 260, 372, 377, 382, 383, 390, 392, 394, 410, 412, 414, 415, 416, 418, 419, 422, 423], "descript": 410, "descriptor": [136, 313, 409, 419, 426], "deseri": [208, 212, 217, 400, 408, 409, 415, 427], "deserialize_datafram": 422, "design": [0, 17, 22, 221, 321, 382, 386, 389, 392, 412, 413, 418, 420, 422], "desir": [102, 110, 113, 393, 394, 406, 407, 409, 413, 415, 417, 418, 420, 422, 425, 428], "desirabilityobject": [27, 394, 407, 409, 422, 424, 427], "desktop": 409, "despit": 409, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 144, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 197, 198, 221, 225, 230, 232, 233, 234, 236, 240, 243, 250, 252, 254, 256, 258, 260, 270, 272, 278, 283, 284, 325, 332, 356, 367, 369, 374, 375, 394, 398, 407, 408, 409, 415, 416, 417, 419, 420, 421, 422, 423, 424, 426], "detect": [293, 326, 408, 410], "determin": [27, 80, 108, 198, 307, 325, 336, 341, 353, 367, 389, 392, 412, 417, 420], "determinist": 353, "detriment": 419, "dev": [407, 409, 410], "develop": [407, 409, 414, 419, 423], "deviat": [6, 264, 386, 409], "df": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 105, 110, 115, 138, 190, 192, 198, 203, 218, 223, 290, 291, 312, 319, 322, 323, 324, 325, 327, 328, 354, 366, 377, 392, 407, 416, 421, 422, 423], "dfa": [290, 291], "di": [367, 368, 369, 371, 372, 411], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 108, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 181, 182, 183, 184, 190, 192, 195, 198, 201, 211, 212, 213, 215, 225, 230, 232, 233, 236, 240, 243, 254, 256, 258, 260, 270, 272, 278, 284, 298, 301, 313, 318, 332, 356, 383, 386, 404, 405, 409], "dict_bas": [367, 368, 369, 371, 372], "dict_ligand": [367, 368, 369, 371, 372], "dict_solv": [367, 368, 369, 371, 372, 377, 378, 379, 380, 389, 416], "dictat": [105, 110, 115, 192, 404, 405], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 190, 192, 198, 211, 213, 215, 225, 230, 232, 233, 236, 240, 243, 254, 256, 258, 260, 264, 270, 272, 278, 298, 301, 318, 332, 367, 368, 369, 371, 419, 423], "diff": 410, "differ": [51, 110, 174, 190, 192, 193, 198, 219, 227, 286, 291, 318, 320, 356, 368, 377, 382, 389, 392, 394, 397, 398, 404, 405, 407, 409, 410, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 425, 426], "differenti": [423, 426], "difficult": 426, "digit": 328, "dilemma": 392, "dim": [22, 374, 375, 384, 386, 397, 398, 404, 405], "dimens": [22, 353, 366, 374, 375, 384, 386, 396, 397, 404, 405, 409, 419, 421, 426], "dimension": [111, 118, 119, 120, 122, 123, 125, 132, 133, 136, 250, 321, 353, 366, 404, 405, 409], "dimethylisoxazol": 426, "direct": [367, 368, 369, 371, 407, 412, 419, 428], "directli": [307, 405, 407, 409, 416, 418, 422, 424], "directori": [345, 398, 409], "disabl": [285, 377, 379, 380, 409, 415], "disadvantag": 422, "disappear": 409, "disc_ind": 398, "disc_indic": [397, 398], "disc_paramet": 398, "disc_recommend": [166, 398], "discard": 389, "disclaim": 412, "discourag": 415, "discret": [13, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 65, 118, 119, 120, 122, 123, 125, 132, 133, 136, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 193, 197, 198, 227, 352, 371, 374, 380, 383, 384, 386, 394, 395, 398, 400, 405, 406, 407, 409, 413, 415, 422, 423, 427, 428], "discrete_param": [384, 404, 405], "discrete_spac": [374, 375, 398], "discrete_subspac": 421, "discretecardinalityconstraint": 409, "discreteconstraint": [27, 47, 48, 49, 50, 51, 52, 53, 54, 55, 198, 409, 416], "discretecust": 377, "discretecustomconstraint": [377, 409, 427], "discretedep": 378, "discretedependenciesconstraint": [53, 58, 378, 389, 427], "discreteexcl": 379, "discreteexcludeconstraint": [379, 409, 427], "discretelinkedparametersconstraint": [409, 427], "discretenolabelduplicatesconstraint": [53, 389, 409, 427], "discreteparamet": [122, 125, 133, 136, 198, 409], "discretepermutationinvarianceconstraint": [389, 427], "discreteprod": 380, "discreteproductconstraint": [380, 409, 427], "discretesamplingmethod": [13, 174, 354, 409, 413], "discretesumc": 380, "discretesumconstraint": [374, 380, 389, 409, 427], "discuss": [394, 412, 416, 421, 423], "disjoint": 198, "disk": [409, 427], "dispatch": 101, "displai": [328, 383, 412], "distanc": [133, 286, 326, 353], "distinct": [382, 415, 420], "distinguish": [319, 389, 409, 416, 419, 426], "distribut": [27, 144, 147, 230, 232, 233, 236, 240, 254, 256, 258, 260, 389, 394, 398, 407, 409, 412, 413, 414], "distutil": 308, "div": 386, "divers": 424, "divid": 390, "divis": 343, "dll": 408, "dmac": [367, 368, 369, 371, 372], "dmf": 416, "do": [192, 198, 235, 382, 386, 387, 389, 392, 398, 400, 401, 402, 404, 407, 408, 412, 414, 416, 417, 419, 420, 422, 426, 427, 428], "do_baybe_work": 417, "doc": [83, 144, 294, 377, 379, 380, 407, 409], "doc101": 410, "doc103": 410, "docstr": 409, "doctest": 409, "document": [339, 386, 407, 409, 410, 411, 412, 415, 423], "doe": [26, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 174, 219, 221, 223, 225, 230, 232, 233, 235, 236, 240, 254, 256, 258, 260, 267, 303, 312, 339, 369, 372, 383, 386, 387, 389, 401, 402, 404, 405, 409, 410, 412, 416, 418, 420, 423, 424, 426, 428], "doi": [252, 324], "domain": [230, 232, 233, 236, 240, 254, 256, 258, 260, 366, 407, 421, 423], "done": [27, 325, 369, 371, 377, 378, 379, 380, 386, 387, 394, 400, 409, 413, 416, 417], "doubl": [339, 410, 417], "down": [422, 428], "downsid": 163, "draft": 409, "dramat": 426, "drastic": 419, "draw": [10, 95, 190, 390, 392, 396], "draw_arm": 392, "drawn": [17, 174], "drive": [384, 426], "driven": [318, 413], "driver": 408, "drop": [322, 323, 324, 383, 409, 416], "dry_run": 27, "dtype": [111, 280, 281, 282, 342], "due": [287, 405, 407, 409, 413, 416, 417, 419, 420, 421, 422, 425], "duplic": [53, 143, 293, 298, 409, 416], "dure": [27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 192, 198, 219, 301, 353, 389, 392, 404, 405, 407, 408, 409, 410, 411, 415, 416, 417, 421, 422, 423, 424], "dynam": [392, 409, 422], "d\u00fcbendorf": 411, "e": [17, 22, 27, 30, 49, 51, 52, 65, 80, 81, 125, 138, 164, 192, 198, 219, 287, 293, 296, 297, 313, 318, 325, 326, 332, 361, 367, 368, 369, 387, 389, 390, 392, 407, 408, 409, 410, 413, 414, 416, 417, 419, 420, 421, 422, 423, 426, 428], "e3fp": 130, "e3fpfingerprint": 130, "each": [17, 27, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 105, 110, 115, 138, 157, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 192, 221, 223, 225, 227, 235, 291, 313, 318, 319, 345, 366, 368, 369, 372, 384, 389, 390, 392, 394, 398, 404, 405, 410, 412, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428], "eagerli": 409, "earli": [383, 409], "earlier": [166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 198, 408], "earn": 392, "earned_reward": 392, "easi": [312, 410, 422], "easier": [410, 428], "easiest": [407, 410], "easili": [383, 407, 410, 415, 419, 421, 422, 426], "ecfp": [130, 368, 409, 419], "ecfpfingerprint": 130, "ecosystem": 422, "edbo": [250, 252, 324, 409], "edbokernelfactori": [250, 409], "edit": [407, 410], "editor": 426, "editori": 412, "edwin": 426, "effect": [51, 227, 382, 383, 392, 405, 409, 413, 416, 419, 420, 423, 426, 428], "effici": [198, 389, 407, 409, 421], "effortlessli": 423, "ei": [3, 372], "either": [22, 27, 193, 221, 227, 240, 264, 368, 379, 394, 398, 407, 412, 418, 419, 420, 421, 423], "elabor": 412, "elaps": 382, "elapsedtimeprint": 382, "electron": [411, 412], "electroshap": 130, "electroshapefingerprint": 130, "eleg": [404, 422], "element": [36, 37, 38, 48, 227, 286, 293, 300, 306, 326, 341, 342, 347, 389, 404, 405, 409, 416, 423], "elev": 384, "elif": [397, 398], "elimin": [410, 413], "els": [307, 308, 366, 367, 368, 369, 374, 375, 377, 378, 380, 383, 384, 392, 397, 398, 404, 405], "elsewher": 386, "emd": 411, "emdgroup": [283, 407], "emelin": 411, "emerg": 415, "empir": 392, "emploi": [27, 392, 420], "employe": [407, 417], "empow": 424, "empti": [82, 190, 192, 198, 205, 291, 303, 312, 325, 328, 389, 394, 398, 400, 409, 421], "empty_encod": [192, 198], "emptysearchspaceerror": 205, "emul": [17, 408, 409], "en": [83, 144], "enabl": [285, 286, 367, 368, 369, 389, 404, 407, 408, 409, 415, 416, 417, 418, 420, 422, 423, 425, 426], "encod": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 118, 119, 120, 122, 123, 125, 127, 128, 129, 130, 132, 133, 136, 192, 198, 230, 232, 233, 236, 240, 254, 256, 258, 260, 311, 313, 367, 368, 369, 371, 372, 377, 378, 379, 380, 383, 387, 389, 392, 394, 400, 401, 402, 404, 405, 407, 409, 416, 421, 422, 426], "encompass": 415, "encount": [353, 408, 409, 410, 418], "end": [0, 282, 332, 383, 387, 392, 394, 400, 412, 416, 422], "endeavor": 413, "endpoint": [409, 417], "enforc": [340, 359, 409, 410], "engin": [408, 420, 422, 423, 428], "enhanc": [22, 407], "enlarg": 419, "enough": [190, 422], "ensembl": 262, "ensur": [138, 367, 368, 369, 389, 390, 407, 416, 422, 423], "enter": [67, 198, 421], "entir": [286, 332, 354, 409, 410, 413, 417, 428], "entiti": 412, "entri": [27, 34, 37, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 213, 230, 232, 233, 236, 240, 254, 256, 258, 260, 286, 291, 318, 326, 354, 369, 377, 378, 379, 380, 389, 409, 416, 417, 425, 428], "enum": [113, 127, 128, 129, 130, 193, 247, 275, 276, 352, 409, 422], "enumer": [112, 126, 274, 384, 404, 405, 418], "env": [409, 410], "envar_nam": 417, "environ": [285, 340, 359, 366, 367, 368, 369, 375, 377, 378, 380, 383, 384, 386, 392, 404, 405, 407, 408, 409, 410, 427], "envvar": 283, "envvar_nam": 417, "eq": [377, 389], "equal": [41, 110, 164, 190, 392, 394, 400, 409, 416, 418, 421, 422, 425], "equat": [41, 416, 423], "equidist": 419, "equip": 416, "equival": [17, 30, 53, 375, 396, 413, 416, 423], "erg": 130, "ergfingerprint": 130, "erron": 409, "error": [162, 172, 174, 221, 223, 225, 237, 301, 343, 369, 387, 392, 408, 409, 416, 418, 419, 420], "esian": 407, "especi": 410, "essenti": [415, 420], "establish": [383, 404, 405, 426], "estat": 130, "estatefingerprint": 130, "ester": [367, 368, 369, 371, 372], "estim": [192, 197, 198, 230, 392, 409, 424, 427], "estimate_product_space_s": [192, 198, 428], "estimated_win_r": 392, "estimation_bia": 392, "estimation_vari": 392, "et": [368, 407, 419], "etc": [36, 37, 38, 120, 192, 270, 426], "ethanol": [389, 416], "euclidean": 353, "eval_during_augment": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "eval_during_cr": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "eval_during_model": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "evalu": [22, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 262, 263, 308, 397, 398, 409, 415, 417, 420, 423, 426], "even": [264, 323, 404, 405, 412, 414, 415, 417, 419, 423, 424, 426, 428], "event": [27, 286, 383, 412], "everi": [414, 428], "everyth": [410, 416], "evolv": [384, 410], "exabyt": 428, "exact": [27, 326, 382, 408, 409, 414, 416, 419, 420], "exactli": [105, 110, 115, 192, 389, 409, 414, 415, 421, 422], "exampl": [138, 223, 290, 291, 298, 307, 325, 365, 366, 370, 373, 376, 381, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 395, 396, 399, 403, 404, 405, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428], "example_input_nam": 386, "exceed": 383, "exceedingli": 423, "except": [303, 312, 316, 330, 331, 367, 368, 369, 383, 387, 401, 402, 407, 408, 409, 412], "excepthook": 408, "exceptiongroup": 409, "excess": 428, "exclud": [27, 52, 198, 322, 377, 378, 379, 380, 394, 400, 409, 412, 416], "exclude_list": 324, "exclus": [50, 376, 406, 409, 412, 416, 423], "execut": [27, 60, 221, 303, 366, 368, 408, 409, 410, 412, 417, 422, 423, 426], "exemplari": 415, "exercis": 412, "exhaust": [162, 420], "exist": [100, 192, 286, 294, 303, 389, 408, 409, 410, 413, 415, 416, 422, 426], "exp_rep": [198, 377, 378, 379, 380, 389, 421], "exp_rep_byt": [197, 428], "exp_rep_human_read": [197, 428], "exp_rep_shap": [197, 428], "expect": [3, 4, 9, 11, 12, 14, 48, 234, 242, 303, 321, 372, 378, 384, 386, 389, 390, 392, 402, 409, 410, 415, 416, 418, 419, 422, 423, 425, 428], "expens": [10, 174, 374, 423], "experi": [0, 27, 157, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 219, 221, 230, 232, 233, 236, 240, 254, 256, 258, 260, 367, 368, 369, 371, 372, 397, 398, 409, 413, 415, 416, 418, 419, 420, 425, 426, 427], "experiment": [27, 82, 105, 110, 115, 119, 122, 123, 125, 133, 136, 157, 160, 161, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 192, 197, 198, 219, 230, 232, 233, 236, 240, 254, 256, 258, 260, 270, 272, 278, 318, 320, 377, 378, 379, 380, 384, 394, 400, 407, 409, 413, 414, 416, 418, 419, 421, 422, 423, 425, 426, 427, 428], "explain": [64, 80, 81, 82, 384, 409, 411, 424], "explainer_cl": [80, 82], "explan": [80, 82, 409, 415, 424], "explanation_index": 80, "explicit": [138, 163, 382, 383, 387, 389, 396, 401, 402, 409, 410, 422, 426, 427], "explicitli": [190, 198, 382, 398, 405, 412, 421, 426], "exploit": [8, 17, 18, 392], "explor": [8, 18, 27, 392, 413, 420, 421, 426], "exploratori": 413, "exponenti": 198, "expos": [27, 382, 409], "exposur": 409, "expr": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55], "express": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 407, 409, 412, 416], "extend": [419, 426], "extens": [409, 420], "extra": [368, 408, 409], "extract": [27, 327, 384, 404, 427], "extract_pi": 384, "f": [308, 366, 367, 368, 369, 374, 375, 377, 378, 379, 380, 382, 383, 384, 389, 390, 394, 396, 397, 398, 404, 405, 428], "f1": 423, "f2": 423, "fabian": 411, "face": [230, 232, 233, 236, 240, 254, 256, 258, 260, 390, 392], "facilit": 420, "fact": [17, 384, 389, 416, 418], "factor": [138, 415, 428], "factori": [138, 190, 240, 241, 242, 243, 244, 250, 252, 299, 372, 377, 378, 379, 380, 394, 400, 409], "fail": [398, 402, 408, 409], "failur": [272, 412], "failure_valu": 272, "fairli": 418, "fake": [223, 318, 371, 372, 386, 387, 394, 409, 414, 423, 427], "fall": [383, 415, 425], "fallback": [108, 198, 334, 345, 386, 409, 421], "fals": [6, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 82, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 203, 230, 236, 254, 256, 258, 260, 272, 281, 286, 296, 297, 301, 307, 308, 321, 325, 326, 327, 347, 372, 377, 378, 379, 380, 394, 400, 401, 402, 407, 414, 417], "famili": 416, "familiar": [367, 368, 369, 372, 374, 375, 377, 378, 379, 380, 386, 387, 394, 397, 398, 400], "fang": 411, "fantasi": 10, "farthest": [186, 352, 353, 372, 407, 409, 411, 413, 420], "farthest_point_sampl": 409, "fashion": [280, 282], "fast": [377, 379, 380, 421, 425], "faster": 198, "fault": 77, "faulti": 408, "favicon": 409, "fc": [367, 368, 369], "feasibl": 415, "featur": [80, 95, 136, 324, 407, 408, 410, 416, 424, 426], "fed": 407, "feder": 411, "fee": 412, "feed": [407, 426], "feedback": 411, "feel": 383, "few": [366, 392, 409, 410, 413, 419, 422, 426, 428], "field": [212, 316, 347, 409, 426, 427], "fifti": 412, "fig": 384, "figur": [345, 384], "file": [345, 367, 368, 369, 386, 387, 398, 407, 409, 412, 417, 422, 426], "filenotfounderror": [367, 368, 369, 383], "fill": [27, 223, 384], "filler": 416, "filter": [27, 34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 192, 198, 322, 325, 377, 389, 409, 416, 421, 426, 428], "filter_attribut": 409, "filter_df": [27, 409], "filterwarn": 383, "final": [366, 368, 371, 383, 389, 405], "find": [192, 301, 342, 345, 407, 413, 415, 416, 426], "fine": [387, 400, 401, 402, 407], "finer": [138, 407], "fingerprint": [130, 136, 311, 313, 407, 409, 411, 419], "finish": 414, "finit": [162, 219, 227, 331, 361, 392, 419, 423], "first": [192, 225, 341, 353, 366, 368, 371, 372, 377, 382, 383, 386, 387, 389, 394, 398, 402, 404, 405, 407, 408, 409, 415, 416, 418, 419, 420, 421, 426, 428], "fit": [27, 184, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 354, 356, 367, 368, 369, 377, 378, 379, 380, 386, 394, 400, 409, 412, 416, 419, 424], "fit_gpytorch_ml": 409, "fit_gpytorch_mll_torch": 409, "fitnr": 394, "fitzner": [407, 411], "fix": [219, 243, 383, 384, 389, 392, 397, 398, 410, 415, 419, 423, 426, 428], "flag": [22, 27, 49, 80, 82, 105, 110, 115, 174, 192, 193, 198, 321, 326, 327, 409, 414, 415, 417, 420], "flake8": 409, "flexibl": [382, 396, 409, 422, 423], "flexibli": 420, "float": [8, 13, 18, 38, 41, 43, 44, 89, 90, 91, 92, 93, 94, 95, 96, 100, 102, 110, 111, 125, 132, 133, 136, 141, 142, 148, 149, 150, 151, 152, 153, 154, 174, 197, 198, 221, 225, 230, 264, 272, 273, 280, 281, 282, 287, 315, 318, 319, 320, 324, 332, 336, 338, 339, 341, 342, 343, 358, 361, 362, 363, 382, 384, 386, 392, 394, 409, 410, 427], "float64": 358, "floattensortyp": 386, "fly": 422, "fn": 294, "focu": [8, 18, 415], "focus": [115, 398, 407], "folder": [368, 407, 410, 417, 424], "follow": [192, 221, 223, 225, 367, 368, 369, 372, 374, 375, 377, 378, 379, 380, 382, 383, 387, 392, 394, 398, 401, 402, 404, 405, 407, 408, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426], "footprint": [10, 192], "forbid": 364, "forc": [80, 174, 409, 410, 420], "forest": [259, 260], "forgiv": 425, "fork": 410, "form": [198, 219, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 318, 407, 412, 413, 415, 418, 419, 420, 421, 422, 423, 428], "formal": 390, "format": [41, 284, 328, 333, 336, 386, 387, 400, 401, 407, 408, 409, 410, 415, 417, 422, 423], "format_except": 408, "former": [389, 409], "formul": 426, "formula": 389, "forrest": 409, "found": [75, 138, 190, 198, 301, 311, 339, 342, 345, 383, 389, 394, 407, 408, 410, 415, 416, 420, 426], "foundat": 420, "four": 389, "fourier": 95, "fourth": 416, "fp": [352, 409, 413], "fp_size": [130, 419], "fpsrecommend": [372, 386, 387, 400, 401, 402, 407, 414, 420], "frac": [405, 418], "frac1": 378, "fraction": [13, 90, 315, 383, 413, 416, 417], "fraction1": 378, "fraction_1": 416, "fraction_2": 416, "fraction_3": 416, "frame": [320, 428], "frame1": 378, "frame2": 378, "frame_1": 416, "frame_2": 416, "framea": 378, "framea_a": 378, "frameb": 378, "framework": [415, 419], "free": [410, 412, 417], "freedom": 422, "freeli": 389, "frequenc": 95, "frequent": 392, "fresh": 383, "frictionless": 422, "friendli": 409, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 130, 132, 133, 136, 138, 144, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 215, 223, 225, 227, 230, 232, 233, 236, 240, 243, 248, 252, 254, 256, 258, 260, 264, 270, 272, 278, 281, 282, 303, 307, 308, 312, 320, 321, 322, 324, 332, 343, 345, 354, 366, 367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389, 390, 392, 394, 396, 397, 398, 399, 400, 402, 404, 405, 406, 408, 410, 412, 413, 414, 416, 418, 419, 420, 423, 425, 426, 427, 428], "from_bound": [190, 409, 421], "from_campaign": 80, "from_config": [27, 401, 402, 415], "from_datafram": [190, 192, 198, 409, 421, 422, 428], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 190, 192, 198, 215, 230, 232, 233, 236, 240, 243, 254, 256, 258, 260, 270, 272, 278, 332, 386], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 190, 192, 198, 215, 230, 232, 233, 236, 240, 243, 254, 256, 258, 260, 270, 272, 278, 332, 386, 387, 400, 415, 422], "from_paramet": [190, 192, 198, 409], "from_preset": 240, "from_product": [190, 192, 198, 366, 367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389, 390, 394, 396, 397, 398, 400, 401, 402, 404, 405, 407, 409, 416, 421, 422, 423], "from_recommend": 80, "from_record": [422, 423], "from_simplex": [198, 389, 409, 421, 428], "from_surrog": 80, "frozenset": 389, "fsspec": 409, "fulfil": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 383, 389, 390], "full": [22, 190, 339, 365, 406, 409, 415, 419, 426, 427], "full_factori": 190, "full_lik": 384, "full_lookup": [367, 368, 369], "fulli": [389, 407, 409, 417, 423], "fulltest": 410, "func": 410, "func_nam": 404, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 35, 41, 42, 48, 56, 63, 69, 77, 79, 80, 94, 101, 104, 107, 109, 114, 137, 140, 172, 174, 175, 191, 196, 202, 206, 207, 215, 216, 219, 220, 222, 224, 225, 226, 231, 235, 241, 246, 261, 265, 266, 269, 276, 279, 280, 281, 282, 283, 286, 287, 289, 292, 305, 309, 314, 317, 320, 327, 328, 330, 335, 337, 344, 345, 348, 351, 360, 371, 377, 378, 379, 380, 382, 384, 389, 392, 400, 404, 405, 407, 408, 409, 413, 415, 416, 418, 420, 421, 423, 424, 425, 426, 428], "function_nam": [404, 405], "functionalgroup": 130, "functionalgroupsfingerprint": 130, "fundament": [419, 422], "furo": 409, "further": [389, 390, 400, 407, 414, 420, 421, 424, 426, 427], "furthermor": 394, "furyl": [367, 368, 369], "futur": [53, 192, 235, 377, 379, 380, 383, 404, 425], "fuzzi": 286, "fuzzy_row_match": 286, "g": [49, 51, 52, 65, 80, 81, 125, 138, 192, 198, 293, 313, 326, 392, 407, 408, 409, 410, 413, 414, 416, 417, 419, 420, 421, 423, 428], "g1": 390, "g2": 390, "g3": 390, "gain": [198, 415], "gamma": 149, "gammaprior": 409, "garbag": 409, "gather": [164, 404, 405, 413, 426], "gaussian": [83, 181, 232, 238, 239, 240, 241, 245, 246, 247, 249, 250, 251, 252, 280, 372, 394, 409, 416, 420, 426], "gaussian_kd": 384, "gaussian_process": [85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 240, 242, 243, 247, 250, 252, 372, 409], "gaussianmixtureclusteringrecommend": 420, "gaussianprocesspreset": [240, 248], "gaussianprocesssurrog": [248, 372, 377, 378, 379, 380, 384, 394, 400, 401, 402, 409, 424], "gcf": [367, 369], "ge": 375, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 129, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 197, 198, 230, 232, 233, 236, 240, 243, 250, 252, 254, 256, 258, 260, 270, 272, 278, 284, 307, 313, 319, 332, 348, 356, 366, 372, 382, 389, 407, 409, 411, 412, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 426, 427, 428], "geom_mean": [102, 110, 113, 394, 418], "geometr": [113, 343, 394, 418], "germani": [407, 411, 417], "get": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 160, 162, 163, 164, 172, 174, 190, 240, 318, 372, 383, 389, 397, 398, 407, 409, 414, 427, 428], "get_candid": [198, 383], "get_cmap": 384, "get_comp_rep_parameter_indic": [192, 409], "get_current_recommend": [160, 162, 163, 164], "get_integration_point": 13, "get_invalid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "get_invalid_polar": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "get_lin": 383, "get_next_recommend": [160, 162, 163, 164], "get_parameters_by_nam": [190, 192, 198], "get_parameters_from_datafram": [190, 198], "get_subclass": 372, "get_surrog": [27, 80, 172, 174, 409, 424], "get_transform_object": 409, "get_transform_paramet": 409, "get_valid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 409], "getawai": 130, "getawayfingerprint": 130, "ghosecrippen": 130, "ghosecrippenfingerprint": 130, "git": [407, 410], "github": [252, 283, 304, 324, 386, 409, 410, 411], "give": [386, 387, 389, 405, 412, 415, 418, 422], "given": [25, 27, 30, 36, 37, 38, 58, 75, 80, 81, 82, 105, 110, 115, 123, 136, 138, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 204, 219, 223, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 264, 275, 287, 291, 296, 297, 301, 302, 303, 306, 307, 310, 311, 315, 318, 321, 327, 332, 333, 341, 343, 346, 347, 353, 356, 377, 378, 379, 380, 383, 389, 392, 394, 398, 404, 405, 415, 421, 423], "glass_transition_tempc": 419, "global": [13, 349, 409, 427, 428], "gmean": 343, "gmm": 181, "go": [290, 389, 407], "goal": [366, 392, 418, 426], "goe": 424, "good": [318, 383, 394, 415, 417, 425], "good_interv": 318, "good_reference_valu": 318, "goodwil": 412, "googl": [409, 410], "govern": 407, "gp": [230, 232, 233, 236, 240, 254, 256, 258, 260, 409], "gpytorch": [83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 144, 146, 148, 149, 150, 151, 152, 153, 154, 409], "gradient": [10, 174, 258, 409, 417, 420], "grant": [409, 412], "granular": [387, 400, 401, 402, 407], "granularity_coar": 400, "granularity_fin": 400, "great": [392, 422], "greater": 164, "greatli": 410, "greedi": [174, 409, 420], "grid": [404, 405], "grid_d": [404, 405], "grossli": 412, "group": [291, 298, 356, 390, 407, 409, 415], "groupbi": [225, 227], "grow": 428, "gt": [380, 389], "gu16": 419, "guarante": [416, 417, 420], "guid": [371, 407, 408, 409, 410, 413, 415, 418, 421, 423, 426], "guidelin": [409, 410, 413], "ha": [27, 49, 68, 69, 80, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 230, 232, 233, 236, 240, 254, 256, 258, 260, 290, 301, 303, 307, 319, 326, 353, 354, 368, 372, 378, 389, 394, 398, 407, 409, 410, 412, 414, 415, 416, 419, 421, 422, 423, 425, 426], "had": [219, 416, 419, 423], "half": [133, 150, 151, 332, 398, 414], "halfcauchyprior": 409, "halfnormalprior": 409, "hamster": 426, "hand": [41, 136, 390, 392, 404, 405, 407, 415, 422], "handl": [80, 120, 221, 223, 264, 330, 377, 378, 392, 394, 409, 415, 418, 428], "happen": [162, 394, 398, 405, 408, 409, 410, 421, 422, 426], "happili": 418, "hard": [409, 426, 428], "harmless": 412, "hartmann": [384, 404, 405], "hasattr": [374, 375, 397, 398], "hash": [284, 407, 417, 419], "hashabledict": 409, "have": [22, 27, 34, 36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 105, 110, 115, 136, 184, 192, 198, 219, 235, 267, 291, 298, 301, 318, 326, 327, 339, 367, 368, 371, 372, 377, 378, 382, 384, 389, 390, 392, 394, 397, 398, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 426, 428], "head": 409, "header": 347, "heart": 426, "heatmap": 80, "help": [392, 422, 423, 426], "helper": [382, 384, 386, 389, 422], "henc": [312, 389, 392, 400, 416, 419, 428], "here": [52, 339, 367, 369, 371, 374, 375, 382, 383, 387, 389, 390, 397, 398, 400, 404, 405, 407, 408, 414, 416, 418, 419, 420, 421, 422, 423, 425, 426], "herebi": 412, "herein": [412, 415], "heurist": 174, "hierarch": 422, "hierarchi": [75, 409, 410, 415, 422], "high": [250, 366, 392, 409, 410, 413, 415, 416, 419, 422], "higher": [8, 18, 136, 392, 408, 416, 420], "highest": [413, 422], "highlight": 426, "hint": 410, "histogram": 287, "histori": 410, "hold": [40, 298, 412, 422], "home": [377, 379, 380], "homepag": [407, 409], "hood": 419, "hook": [45, 108, 198, 207, 211, 303, 406, 408, 409, 410], "hopp": [407, 411], "host": [407, 409, 417], "hostnam": [284, 417], "hot": [127, 368, 392, 407, 409, 419], "how": [50, 221, 223, 353, 366, 367, 369, 370, 371, 372, 373, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 398, 400, 401, 402, 405, 407, 415, 416, 417, 418, 423, 424, 425, 426], "howev": [138, 198, 235, 303, 382, 389, 392, 397, 398, 408, 410, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 424, 426, 428], "hrovatin": 411, "html": [41, 83, 144, 283, 294, 339, 386, 409], "http": [41, 83, 144, 252, 283, 294, 304, 324, 339, 407, 409, 412, 426], "hue": [366, 367, 368, 369, 383, 404, 405], "human": [197, 336, 400, 409, 411, 422], "hybrid": [21, 22, 65, 165, 166, 174, 187, 192, 193, 372, 373, 377, 378, 379, 380, 394, 395, 400, 406, 407, 409, 420, 421], "hybrid_recommend": 398, "hybrid_sampl": [174, 420], "hyperparamet": 372, "hyperrectangl": [190, 421], "hypothesi": [407, 409, 410], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 64, 65, 67, 68, 69, 70, 72, 80, 81, 82, 97, 100, 111, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 205, 219, 221, 223, 225, 227, 230, 232, 233, 234, 235, 236, 240, 250, 254, 256, 258, 260, 264, 267, 275, 280, 281, 282, 285, 286, 287, 291, 294, 296, 297, 301, 303, 304, 306, 307, 308, 311, 312, 318, 319, 320, 321, 325, 326, 327, 328, 331, 332, 339, 341, 342, 345, 347, 353, 354, 361, 366, 367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389, 390, 392, 394, 397, 398, 400, 401, 402, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428], "ideal": [414, 416, 423], "ident": [138, 290, 291, 419, 422, 426], "identif": 392, "identifi": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 225, 298, 312, 326, 327, 383, 409, 416, 419, 421, 422, 423, 426], "idx_offset": 41, "ignor": [105, 110, 115, 162, 174, 192, 199, 200, 221, 223, 225, 301, 324, 369, 383, 398, 409, 416, 422, 428], "ignore_exampl": 409, "ignore_list": 323, "ii": 412, "iii": 412, "illustr": 396, "iloc": 414, "imag": [392, 409], "imagin": [389, 392], "immedi": [345, 382, 415], "immut": 409, "impact": [368, 405, 417], "imperfect": 320, "implement": [17, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 111, 157, 167, 227, 234, 305, 377, 383, 389, 404, 409, 410, 411, 413, 420, 421, 423, 426], "impli": [389, 407, 412, 416, 419], "implicitli": 422, "import": [74, 80, 110, 223, 383, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428], "impos": [389, 390, 416], "imposs": [407, 417, 422], "improv": [3, 4, 7, 9, 11, 12, 14, 15, 372, 375, 381, 383, 406, 407, 409, 412, 417], "imput": [221, 223, 365, 369, 406, 407], "impute_mod": [221, 223, 225, 369, 423], "inabl": [407, 412], "inaccuraci": 407, "inact": 40, "inc": 426, "incident": 412, "includ": [58, 105, 110, 115, 164, 221, 296, 297, 323, 367, 378, 387, 389, 401, 402, 405, 409, 410, 412, 413, 414, 416, 428], "inclus": 412, "incom": 422, "incompat": [62, 63, 64, 65, 82, 236, 379, 416], "incompatibilityerror": 27, "incompatibleacquisitionfunctionerror": 414, "incomplet": 409, "inconsist": 409, "incorpor": [412, 414, 424, 428], "incorrect": 409, "incorrectli": 409, "increas": [10, 162, 225, 281, 282, 394, 404, 405, 409, 413, 419, 426], "increment": 198, "incur": 412, "indefinit": [162, 221], "indemn": 412, "indemnifi": 412, "indent": 347, "independ": [166, 232, 256, 386, 409, 420, 423], "independentgaussiansurrog": [236, 254, 256, 258, 409], "index": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 192, 225, 290, 291, 325, 326, 386, 387, 394, 398, 400, 409, 419, 421, 423], "indexkernel": 409, "indic": [27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 80, 81, 118, 119, 120, 122, 123, 125, 132, 133, 136, 192, 290, 291, 321, 353, 389, 398, 409, 412, 420, 423, 424], "indirect": [296, 297, 412], "indistinguish": 389, "individu": [49, 50, 98, 99, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 221, 328, 383, 390, 412, 415, 418, 420, 426], "induc": 392, "industri": 426, "ineffici": 198, "inequ": [41, 190, 421], "inf": [377, 378, 379, 380, 400], "infer": [138, 236, 404, 405, 409, 421], "inferencesess": 236, "infin": 142, "infinit": [162, 163, 299, 331, 361, 362, 409, 419], "influenc": [166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187], "influenti": 426, "info": [287, 409], "inform": [22, 120, 270, 327, 367, 368, 369, 384, 389, 397, 398, 405, 407, 409, 410, 412, 414, 417, 419, 421, 426, 427], "infring": 412, "ingest": [198, 221, 419, 420], "ingredi": [389, 390, 416], "inher": [17, 389], "inherit": 410, "init": 266, "initi": [89, 90, 91, 92, 93, 94, 95, 96, 100, 163, 164, 166, 174, 181, 182, 183, 184, 186, 198, 221, 225, 286, 353, 365, 377, 378, 379, 380, 383, 384, 394, 400, 405, 406, 409, 411, 415, 417, 419, 420, 422, 423, 426], "initial_data": [221, 225, 367, 405, 423], "initial_recommend": [164, 372, 383, 384, 386, 387, 392, 400, 401, 402, 407, 420], "initial_recommender_cl": 409, "initial_strategi": 409, "initial_typ": 386, "inject": 422, "inner": [158, 325, 420, 422], "inplac": [368, 404, 405, 428], "input": [36, 37, 38, 111, 119, 122, 123, 125, 133, 136, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 270, 272, 278, 280, 298, 315, 316, 320, 321, 325, 326, 332, 334, 341, 353, 366, 386, 394, 404, 405, 409, 422, 423, 426], "input_dim": 386, "input_label": 321, "inputtransform": 356, "insid": [383, 386, 387, 408, 422], "insight": [80, 383, 407, 409, 411], "inspect": [307, 382, 389], "instabl": 416, "instal": [409, 410, 417, 419, 428], "instanc": [36, 37, 38, 49, 52, 80, 160, 162, 163, 164, 192, 198, 318, 378, 383, 389, 390, 407, 408, 410, 414, 415, 416, 417, 419, 421, 422, 423, 428], "instanti": [236, 383, 415], "instead": [162, 286, 312, 321, 377, 379, 380, 407, 408, 409, 415, 416, 418, 419, 422, 423, 425, 426, 428], "institut": [411, 412], "instruct": [407, 409, 425, 427], "instrument_nam": 287, "int": [10, 13, 17, 27, 30, 40, 41, 47, 80, 85, 86, 87, 90, 92, 93, 94, 95, 96, 111, 127, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 197, 198, 221, 225, 227, 272, 273, 280, 281, 282, 287, 328, 342, 346, 349, 350, 353, 354, 356, 377, 379, 380, 389, 392, 394, 405, 410, 419], "integ": [30, 127, 192, 225, 398, 409, 410, 419], "integr": [13, 409, 410, 413, 415], "intend": [371, 382, 404, 410, 420], "intens": 419, "intention": 412, "interact": [26, 27, 371, 407, 408, 415, 422], "interchang": 389, "interconnect": 415, "interest": [418, 428], "interfac": [157, 234, 242, 382, 384, 409, 412, 415], "intermedi": [184, 353], "intern": [27, 41, 53, 162, 366, 383, 394, 409, 416, 417, 419, 420, 421, 422], "internet": 407, "internship": 411, "interplai": 409, "interpol": [90, 250, 409], "interpret": [192, 219, 315, 387, 389, 401, 402, 405, 417, 421, 423], "interrupt": 60, "intersect": 398, "interv": [132, 278, 280, 281, 282, 394, 409, 415, 419, 422, 425], "intrins": 426, "introduc": [408, 409, 416, 419, 420, 423], "intuit": 415, "invalid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 66, 198, 312, 326, 354, 387, 401, 408, 415, 416, 421], "invalid_config": 402, "invalid_surrogate_model": 387, "invalid_typ": 402, "invari": [49, 52, 53, 290, 291, 416], "invers": [211, 422], "invert": [27, 325], "investig": [219, 423, 424], "invok": [423, 427, 428], "involv": [27, 198, 382, 389, 407, 417, 418, 419, 422, 426], "io": 283, "irrelev": [389, 416], "irrespect": [286, 326], "irrevoc": 412, "is_bound": [332, 409], "is_continu": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 118, 119, 120, 122, 123, 125, 132, 133, 136], "is_degener": 332, "is_discret": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 118, 119, 120, 122, 123, 125, 132, 133, 136], "is_empti": [190, 198, 409], "is_eq": 41, "is_finit": 409, "is_fully_unbound": 332, "is_half_bound": 332, "is_in_rang": [118, 119, 120, 122, 123, 125, 132, 133, 136], "is_left_bound": 332, "is_numer": [118, 119, 120, 122, 123, 125, 132, 133, 136, 409], "is_right_bound": 332, "iso": 386, "isoxazol": 426, "issu": [235, 294, 304, 409, 412, 423, 428], "item": [37, 118, 119, 120, 122, 123, 125, 132, 133, 136, 389, 392, 404, 405, 419], "iter": [27, 132, 162, 163, 192, 198, 221, 235, 278, 299, 320, 333, 367, 377, 378, 379, 380, 383, 384, 392, 404, 405, 407, 409, 413, 415, 419, 420, 423, 424, 428], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 166, 190, 192, 198, 215, 227, 230, 232, 233, 236, 240, 243, 254, 256, 258, 260, 270, 272, 278, 287, 290, 295, 303, 307, 318, 332, 336, 366, 372, 382, 384, 389, 390, 392, 405, 407, 408, 410, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 426, 428], "itself": [382, 404, 408, 426], "j": [368, 407, 419, 426], "jackiepho": [367, 368, 369], "januari": 412, "javadi": 411, "jin": 411, "join": [325, 408], "joint": 415, "jointli": 415, "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 190, 192, 198, 215, 230, 232, 233, 236, 240, 243, 254, 256, 258, 260, 270, 272, 278, 332, 345, 386, 387, 400, 401, 409, 427], "json_str": 422, "juli": 411, "julian": 411, "jump": [409, 426], "jupyt": 386, "just": [392, 410, 422], "k": [133, 182, 353, 366, 367, 368, 369, 371, 372, 374, 375, 383, 389, 396, 397, 398, 409, 420, 428], "karin": 411, "kde": 384, "keep": [48, 136, 190, 198, 383, 409, 410], "kei": [298, 318, 368, 410], "kept": [325, 419, 424], "kernel": [85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 240, 241, 242, 243, 244, 250, 252, 372, 377, 378, 379, 380, 394, 400, 409, 416, 426], "kernel_factori": [85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 240, 242, 243], "kernel_or_factori": 240, "kernelexplain": [80, 82], "kernelfactori": [240, 243, 244, 250, 252, 409], "keyword": [80, 136, 369, 372, 398, 405, 409, 414, 416, 421, 423], "kgaa": [407, 411, 417], "kian": 426, "kickstart": 422, "kind": [174, 407, 409, 412, 416, 419, 420], "kiter": [377, 378, 379, 380, 394], "klekotaroth": 130, "klekotarothfingerprint": 130, "kmean": 372, "kmeansclusteringrecommend": [372, 420], "knob": 407, "know": [392, 401, 407, 408, 422, 426], "knowledg": [10, 407, 409, 426], "known": [416, 426], "koller": 426, "kwarg": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 89, 91, 93, 98, 99, 100, 146, 148, 149, 150, 151, 152, 153, 154, 157, 176, 234, 237, 242, 313, 331], "kwargs_conform": [136, 313, 419], "kwargs_fingerprint": [136, 313, 419], "l0": 30, "l1": 419, "l664": 252, "label": [52, 53, 125, 136, 287, 321, 389, 390, 407, 409, 416, 419, 421, 423], "labelpad": 384, "laggner": 130, "laggnerfingerprint": 130, "lambda": [377, 379, 380, 383, 389, 404, 424], "land": 409, "languag": [294, 390, 407], "larg": [136, 198, 374, 375, 390, 409, 417, 419, 423, 428], "larger": [90, 133, 354, 372, 379, 415, 416, 422, 426], "largest": [353, 392, 413], "last": [27, 162, 392, 410, 415, 420], "last_call_tim": 382, "lastli": 384, "latent": 419, "later": [133, 408, 415, 422], "latest": [407, 410, 415], "latter": [17, 27, 290, 307, 383, 389, 415, 426], "law": [407, 412], "lawsuit": 412, "layer": 130, "layeredfingerprint": 130, "layout": 409, "lazi": [200, 357, 409], "lazili": [409, 417], "lazyfram": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 200], "le": 375, "le_method": 410, "lead": [73, 394, 409, 422], "lean": 410, "learn": [13, 226, 227, 230, 232, 233, 236, 240, 254, 256, 258, 260, 372, 377, 378, 379, 380, 392, 394, 400, 404, 406, 407, 409, 416, 419, 424, 425, 427], "least": [162, 390, 407, 412, 414, 415], "leav": 422, "lee": 411, "left": [70, 71, 154, 221, 319, 326, 332, 378, 409, 418], "left_df": 326, "leftov": 409, "legal": 412, "legend": [367, 369], "len": [378, 383, 384, 389, 390, 392], "length": [91, 162, 163, 230], "lengthi": 415, "lengthscal": [90, 91, 92, 94, 95, 96], "lengthscale_initial_valu": [90, 91, 92, 94, 95, 96], "lengthscale_prior": [90, 91, 92, 94, 95, 96], "leq": 30, "less": [291, 383, 384, 392, 415, 428], "let": [366, 368, 382, 383, 384, 386, 387, 389, 390, 396, 405, 407, 416, 418, 422], "level": [320, 409, 410, 414, 415, 416, 420, 422], "leverag": [383, 415, 420], "li": 419, "liabil": 412, "liabl": 412, "lib": [377, 379, 380, 408], "librari": 408, "licensor": 412, "lie": [27, 230, 232, 233, 236, 240, 254, 256, 258, 260, 318], "liebig": 411, "life": [407, 410, 411, 428], "lifecycl": 415, "ligand": [367, 368, 369, 371, 372, 383, 407, 419], "ligand_data": 383, "ligand_smil": 383, "like": [184, 225, 293, 384, 389, 392, 407, 408, 409, 410, 414, 415, 416, 419, 422, 423, 426, 428], "likelihood": 230, "lime": [80, 81], "limit": [250, 287, 384, 407, 411, 412, 416, 421, 427], "line": [332, 347, 367, 369, 383, 392, 409, 410, 413, 415, 419, 423, 426], "linear": [41, 89, 190, 254, 276, 281, 372, 373, 394, 406, 409, 410, 421, 425], "linear_model": 386, "linear_regressor": 386, "linearkernel": 409, "linearli": [250, 281, 282, 394, 409], "lineplot": [366, 367, 368, 369, 383, 404, 405], "lingo": 130, "lingofingerprint": 130, "link": [51, 408, 409, 412, 419], "linspac": [377, 378, 379, 380, 384, 386, 387, 389, 397, 398, 400, 404, 405, 428], "lint": [407, 409, 410], "linter": [409, 410], "list": [30, 31, 32, 33, 34, 37, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 102, 123, 138, 143, 162, 163, 190, 192, 198, 199, 200, 203, 204, 205, 221, 225, 227, 286, 296, 297, 298, 306, 313, 318, 322, 323, 324, 326, 327, 353, 367, 372, 377, 378, 379, 380, 384, 389, 390, 392, 394, 397, 398, 405, 407, 410, 412, 416, 418, 419, 420, 421, 423], "liter": [80, 102, 162, 221, 223, 225, 320, 353, 410], "literatur": 409, "litig": 412, "littl": 408, "liver": [423, 426], "load": [345, 357, 383, 386, 401, 402, 408, 409], "loc": [152, 153, 367, 369], "local": [408, 410, 417, 427], "locat": [152, 153, 414, 417, 426], "lockfil": 409, "log": [152, 287, 372, 407, 417], "logarithm": [4, 11, 12, 343], "logei": [4, 409], "logic": [158, 318, 321, 366, 409, 416, 420, 423, 428], "lognormalprior": 409, "logo": 409, "long": [415, 422, 423], "longer": 409, "look": [223, 372, 389, 392, 408, 413, 415, 416, 422, 423, 425], "look_up_target": 221, "lookup": [219, 221, 225, 227, 321, 326, 365, 366, 384, 397, 406, 409, 427], "lookup_df": 223, "lookup_test_task": 405, "lookup_training_task": 405, "lookup_valu": [374, 375, 384, 397, 398], "lookup_withmiss": 369, "loop": [219, 221, 227, 377, 378, 379, 380, 383, 394, 409, 414, 423, 428], "loss": 412, "lost": 422, "lot": 396, "low": [250, 392, 408, 409, 419, 422], "lower": [154, 280, 281, 282, 332, 367, 369, 384, 394, 404, 405, 419, 425], "lower_bound": 421, "lst_exclud": 322, "lt": 408, "luxuri": 415, "m": 389, "m1": 408, "mac": 408, "macc": 130, "maccsfingerprint": 130, "machin": [392, 407, 408, 410, 413, 417, 419, 425, 426], "machineri": [17, 174, 408, 410, 426, 428], "made": [74, 198, 221, 353, 369, 407, 408, 412, 416, 417, 423], "magic": 426, "magnitud": [319, 320, 428], "mai": [27, 105, 110, 115, 192, 303, 407, 412, 415, 422, 423], "mail": 412, "main": [26, 27, 407, 409], "maintain": [264, 410], "major": [409, 423], "make": [8, 18, 53, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 262, 263, 264, 294, 319, 321, 367, 369, 372, 374, 389, 390, 407, 408, 410, 412, 415, 416, 419, 422, 426, 428], "make_explainer_for_surrog": 80, "malfunct": 412, "manag": [26, 190, 191, 192, 198, 350, 409, 412, 423], "mandatori": [409, 425], "mani": [354, 389, 397, 398, 407, 415, 419, 422, 425, 426], "manner": 417, "manual": [398, 408, 409, 422], "map": [125, 130, 136, 223, 225, 280, 281, 282, 301, 321, 356, 367, 368, 369, 394, 423, 425], "mapfingerprint": 130, "mapl": [80, 81], "margin": 409, "mark": [412, 420, 426, 427], "markdown": [387, 401, 402, 409], "marker": [366, 367, 368, 369, 383, 404, 405, 409], "markers": [366, 368, 383, 404, 405], "market": 392, "marketplac": 409, "martin": [407, 411], "mask_bad1": 377, "mask_bad2": 377, "mask_bad3": 377, "mask_good": [377, 416], "mass": 148, "master": 252, "match": [27, 76, 119, 122, 123, 125, 133, 136, 138, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 270, 272, 275, 278, 286, 301, 303, 326, 327, 382, 384, 394, 398, 407, 409, 414, 415, 418, 420, 422, 423, 427], "match_attribut": 409, "match_targeta": 425, "match_targetb": 425, "materi": [392, 411, 426], "matern": 90, "maternkernel": 409, "math": [383, 389], "mathemat": 409, "matmin": 408, "matplotlib": [367, 369, 384, 409], "matter": [389, 396, 410, 418], "max": [223, 275, 319, 367, 368, 369, 371, 372, 377, 378, 379, 380, 383, 384, 386, 387, 392, 394, 400, 401, 402, 407, 409, 418, 422, 423, 427], "max_cardin": [30, 40, 47], "max_column": [328, 389], "max_colwidth": 328, "max_nonzero": 198, "max_row": [328, 389], "max_sum": [198, 389, 421], "max_target": 425, "max_yield": [367, 369], "maxim": [6, 275, 371, 384, 392, 394, 407, 409, 425], "maximum": [6, 30, 40, 47, 136, 190, 192, 198, 280, 328, 389, 390, 394, 409, 416, 419, 421], "mc": [392, 414], "md": 409, "me2pph": [367, 368, 369], "mean": [5, 8, 17, 18, 27, 53, 102, 113, 160, 162, 163, 164, 182, 219, 221, 223, 225, 230, 256, 264, 343, 369, 372, 386, 392, 394, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 422, 424, 427], "meaning": 418, "meaningless": [389, 413], "meanpredictionsurrog": [264, 372, 424], "meantim": [410, 416], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 80, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 198, 219, 221, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 270, 272, 278, 286, 318, 326, 367, 368, 369, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 394, 397, 398, 400, 407, 409, 410, 413, 414, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427], "mechan": [8, 18, 27, 60, 110, 111, 113, 219, 222, 223, 227, 303, 325, 334, 353, 366, 382, 383, 384, 404, 405, 409, 412, 421, 422, 426, 427], "mechanist": 407, "media": [412, 419, 426], "mediocr": 425, "medium": [387, 400, 407, 412, 419], "medoid": [183, 409, 420], "meet": [318, 412], "mem_estim": 428, "member": [307, 416, 419], "memori": [10, 192, 197, 198, 409, 417, 427], "memorys": [192, 198, 428], "mention": 413, "merchant": 412, "merck": [407, 411, 417], "mere": [412, 418], "merg": 410, "meshgrid": [404, 405], "messag": 383, "meta": [70, 160, 162, 163, 164, 167, 377, 378, 379, 380, 394, 400, 407, 409, 427], "metadata": [27, 190, 198, 284, 409], "metarecommend": [162, 163, 164, 409], "methanol": 389, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 197, 198, 215, 230, 232, 233, 234, 236, 240, 242, 243, 250, 252, 254, 256, 258, 260, 263, 266, 267, 270, 272, 278, 293, 294, 303, 307, 332, 345, 352, 353, 354, 356, 384, 387, 401, 402, 409, 411, 415, 417, 418, 419, 421, 422, 423, 424, 426], "methodtyp": [382, 383, 384], "methyldiphenylphosphin": [367, 368, 369], "methylisoxazol": 426, "metric": [392, 407, 417, 419], "mhfp": 130, "mhfpfingerprint": 130, "micromamba": 409, "midpoint": 425, "might": [49, 53, 136, 192, 368, 372, 374, 378, 398, 405, 408, 414, 415, 416, 417, 421, 423, 426, 428], "mimic": [83, 144, 416], "min": [275, 319, 366, 374, 375, 384, 394, 397, 398, 404, 405, 407, 409, 418, 422, 427], "min_cardin": [30, 40, 47], "min_nonzero": 198, "min_target": 425, "mind": [392, 424], "miniconda": 409, "minim": [6, 275, 394, 404, 405, 409, 421, 425], "minimum": [30, 40, 47, 133, 190, 192, 198], "minor": 409, "mirror": [415, 422], "miss": [27, 221, 223, 369, 409, 410], "mistak": 410, "mix": [227, 389, 390, 407, 416, 419, 422, 426], "mixin": 215, "mixtur": [181, 406, 409, 416, 419, 420, 426, 428], "mobil": 409, "mode": [102, 125, 136, 162, 221, 230, 275, 278, 281, 301, 318, 365, 366, 367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 383, 384, 386, 387, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 418, 420, 422, 427], "model": [13, 27, 30, 31, 32, 33, 34, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 66, 68, 80, 82, 83, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 230, 232, 233, 234, 235, 236, 240, 254, 256, 258, 260, 264, 266, 267, 339, 374, 375, 385, 404, 405, 407, 409, 411, 413, 414, 415, 416, 419, 420, 422, 423, 425, 426, 427], "model_cl": 267, "model_cluster_num_parameter_nam": [181, 182, 183, 184], "model_from_config": 386, "model_from_python": 386, "model_init": 266, "model_json": 386, "model_param": [181, 182, 183, 184, 254, 258, 260, 387, 409], "modelnottrainederror": [230, 232, 233, 236, 240, 254, 256, 258, 260], "modif": [408, 412], "modifi": [27, 223, 264, 318, 319, 320, 409, 412, 428], "modul": [0, 1, 28, 78, 83, 103, 116, 134, 144, 155, 158, 167, 170, 177, 188, 206, 207, 219, 228, 238, 245, 268, 271, 288, 337, 357, 360, 407, 408, 409, 410], "modular": 410, "molecul": [51, 136, 312, 389, 419], "molecular": [313, 419], "moment": [227, 250, 410, 425], "monitor": [409, 417], "monkeypatch": 408, "mont": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 69, 225, 366, 368, 369, 383, 392, 404, 405, 414, 423], "monte_carlo_run": [225, 383], "mordr": [130, 136, 367, 368, 369, 371, 372, 378, 383, 387, 389, 401, 402, 407, 409, 416, 419], "mordredcommun": 409, "mordredfingerprint": [130, 419], "more": [8, 10, 18, 53, 58, 71, 136, 162, 163, 190, 192, 198, 205, 221, 264, 283, 286, 307, 347, 369, 372, 384, 389, 390, 404, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 428], "morgan": 419, "morgan_fp": [130, 409], "mors": 130, "morsefingerprint": 130, "most": [198, 221, 370, 392, 407, 410, 414, 415, 416, 418, 419, 421, 422, 423, 424, 425, 426, 428], "motiv": 409, "move": [409, 422], "mpl_toolkit": 384, "mplot3d": 384, "mqn": 130, "mqnsfingerprint": 130, "mse": 392, "mu": [152, 153], "much": [368, 418, 419], "multi": [229, 230, 406, 409, 411, 414, 426], "multiarmedbandit": 392, "multipl": [36, 110, 160, 162, 163, 164, 224, 225, 320, 367, 368, 369, 378, 389, 392, 407, 409, 414, 416, 418, 425, 426, 427], "multipli": 99, "multitask": 409, "must": [49, 105, 110, 115, 192, 198, 223, 227, 303, 320, 372, 382, 383, 389, 392, 394, 409, 410, 412, 413, 416, 417, 418, 419, 423], "mutual": 423, "my_attribut": 410, "my_valu": 417, "mypi": [294, 304, 407, 409, 410], "mystr": 410, "n": [22, 230, 291, 308, 353, 367, 368, 369, 371, 372, 377, 378, 379, 380, 387, 389, 392, 394, 397, 398, 400], "n_arm": 392, "n_batches_don": 27, "n_cluster": [182, 183], "n_combin": 389, "n_combinations_actu": 389, "n_combinations_expect": 389, "n_compon": 181, "n_doe_iter": [221, 225, 227, 366, 367, 368, 369, 383, 384, 404, 405, 423], "n_duplic": 389, "n_estim": 387, "n_fits_don": 27, "n_interrupted_campaign": 383, "n_iter": [374, 375, 377, 378, 379, 380, 392, 394], "n_mc_iter": [225, 227, 366, 368, 369, 383, 404, 405, 423], "n_mc_run": 392, "n_mc_sampl": 17, "n_permut": 389, "n_pis_ov": 383, "n_pis_over_requir": 383, "n_point": [190, 354], "n_raw_sampl": [174, 409, 420], "n_restart": [174, 409, 420], "n_sampl": 353, "n_task": 192, "n_task_param": 409, "n_wrong_sum": 389, "naiv": [166, 256, 264, 372, 409, 421], "naivehybridrecommend": 409, "naivehybridspacerecommend": [398, 409, 420], "nake": [286, 417], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 40, 58, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 139, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 204, 213, 225, 236, 270, 272, 278, 290, 295, 301, 302, 303, 312, 313, 318, 322, 327, 340, 345, 347, 359, 366, 367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389, 390, 392, 394, 396, 397, 398, 400, 401, 402, 404, 405, 407, 409, 410, 412, 414, 416, 417, 418, 421, 422, 423, 424, 425, 426, 428], "name_or_abbr": [295, 302], "namedtupl": 392, "namespac": [175, 409, 410], "nan": [27, 142, 230, 361, 363, 364, 394], "nativ": [386, 409], "natur": [258, 368, 410, 416, 420, 422, 425], "navig": [407, 415], "nbase": 313, "nbviewer": 386, "nd": 407, "ndarrai": [111, 280, 281, 282, 321, 329, 332, 343, 353, 384, 392, 409, 423], "ne": 389, "nearli": 425, "necessari": [327, 382, 410, 415, 416, 418, 419, 421, 423], "necessarili": [412, 415, 416, 421, 426], "need": [22, 27, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 227, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 303, 326, 327, 367, 368, 369, 372, 377, 380, 382, 384, 386, 389, 392, 394, 404, 405, 407, 408, 409, 410, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 428], "neg": [13, 409], "negat": [6, 41, 405, 409, 426], "neglig": 412, "neither": [227, 320], "neq": 30, "nest": [347, 415, 427], "neural": 426, "neurip": 426, "never": 379, "nevertheless": [307, 408], "new": [27, 43, 44, 102, 162, 164, 190, 223, 235, 280, 281, 282, 290, 324, 325, 371, 383, 384, 400, 407, 409, 410, 415, 416, 424, 426], "new_rec": 415, "newli": [407, 410, 417, 426], "next": [27, 160, 162, 163, 164, 366, 382, 384, 389, 390, 400, 404, 405, 407, 413, 414, 415, 420, 422], "ngboost": [258, 372, 409], "ngboostmodel": 387, "ngboostsurrog": [372, 387, 424], "nice": [384, 408], "nicknam": 312, "nintern": 394, "no_duplicates_constraint": 389, "no_grad": 384, "no_tl": 404, "nois": [221, 319, 320, 405, 409, 427], "noise_level": 320, "noise_perc": [221, 225, 423], "noise_ratio": 319, "noise_std": [404, 405], "noise_typ": 320, "noisi": [12, 14, 404, 407, 409, 426], "non": [27, 57, 58, 105, 110, 115, 166, 192, 221, 227, 230, 232, 233, 236, 240, 254, 256, 258, 260, 301, 303, 307, 319, 354, 361, 362, 363, 389, 404, 407, 409, 412, 414, 421, 422], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 38, 43, 44, 53, 57, 58, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 100, 102, 110, 115, 119, 132, 133, 138, 141, 142, 143, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 195, 198, 201, 204, 205, 208, 209, 211, 213, 221, 223, 225, 227, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 266, 267, 272, 278, 286, 287, 303, 313, 318, 322, 323, 324, 328, 332, 333, 345, 356, 361, 362, 363, 364, 372, 377, 378, 379, 380, 382, 383, 384, 386, 387, 394, 400, 421, 425, 427], "nonetheless": 426, "nonlinear": [33, 190], "nonpredict": [179, 181, 182, 183, 184, 186, 187], "nonpredictiverecommend": [184, 186, 187, 409], "nonzero": [30, 198, 409], "noqa": [377, 410], "nor": 320, "norecommenderslefterror": [162, 163], "noreturn": 237, "normal": [151, 152, 153, 377, 379, 380, 394, 408, 412, 418, 421], "normaliz": 418, "normalprior": 409, "not_a_param": 387, "notabl": 409, "note": [27, 30, 53, 192, 221, 225, 227, 235, 236, 318, 319, 320, 367, 368, 369, 372, 378, 382, 386, 387, 389, 394, 397, 398, 400, 401, 402, 407, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426], "notebook": 386, "noteworthi": 415, "noth": [13, 27, 30, 38, 40, 41, 47, 72, 110, 123, 136, 164, 166, 172, 174, 181, 182, 183, 184, 190, 192, 198, 230, 240, 254, 258, 260, 278, 412, 419], "notic": [382, 410, 412, 422], "notimplementederror": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 111, 205, 208, 209, 227, 230, 232, 233, 235, 236, 240, 254, 256, 258, 260], "notwithstand": 412, "now": [366, 367, 368, 369, 371, 372, 377, 379, 382, 383, 384, 389, 390, 392, 394, 396, 400, 401, 404, 405, 407, 409, 426, 428], "np": [111, 374, 375, 377, 378, 379, 380, 384, 386, 387, 389, 390, 392, 396, 397, 398, 400, 404, 405, 416, 419, 423, 428], "nrecommend": [371, 372, 394, 397, 398], "nu": 90, "num": [325, 336], "num_disc_1": [394, 415], "num_disc_2": 394, "num_experi": [221, 366, 367, 368, 369, 383, 404, 405], "num_fantasi": 10, "num_parameter_1": 380, "num_parameter_2": 380, "num_parameter_3": 380, "num_parameter_4": 380, "num_parameter_5": 380, "num_parameter_6": 380, "num_sampl": 95, "num_valu": [377, 378, 379, 380, 394, 400, 421], "number": [10, 13, 17, 27, 40, 95, 136, 157, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 221, 225, 227, 230, 328, 332, 336, 348, 353, 354, 367, 368, 369, 374, 375, 377, 378, 379, 380, 384, 389, 392, 397, 404, 405, 407, 408, 409, 413, 415, 416, 417, 418, 419, 421, 422, 423, 428], "numer": [27, 30, 31, 32, 33, 34, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 73, 118, 119, 120, 122, 123, 125, 132, 133, 136, 190, 198, 223, 278, 286, 319, 320, 326, 354, 366, 371, 374, 389, 390, 409, 416, 417, 418, 419, 421, 423, 425], "numerical_measurements_must_be_within_toler": [27, 286, 326, 409, 415], "numerical_onli": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "numericalcontinuousparamet": [41, 190, 366, 374, 375, 390, 396, 398, 405, 421, 423, 427], "numericaldiscreteparamet": [198, 367, 368, 369, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389, 394, 397, 398, 400, 401, 402, 404, 405, 407, 421, 422, 423, 427, 428], "numericaltarget": [223, 366, 367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 383, 384, 386, 387, 394, 397, 398, 400, 401, 402, 404, 405, 407, 409, 418, 422, 423, 427], "numericcontinu": 398, "numparam1": 380, "numparam2": 380, "numparam3": 380, "numparam4": 380, "numparam5": 380, "numparam6": 380, "numpi": [321, 329, 332, 338, 340, 374, 375, 377, 378, 379, 380, 384, 386, 387, 389, 390, 392, 396, 397, 398, 400, 404, 405, 409, 416, 423, 428], "nuniqu": 389, "nyou": [397, 398], "o": [366, 367, 368, 369, 371, 372, 375, 377, 378, 379, 380, 383, 384, 387, 389, 392, 404, 405, 407, 416, 417, 419], "o2": [367, 368, 369], "obj": [141, 142, 143, 209], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 110, 113, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 197, 198, 199, 200, 209, 210, 213, 215, 230, 232, 233, 234, 236, 240, 243, 254, 256, 258, 260, 270, 272, 278, 293, 294, 301, 303, 320, 326, 327, 332, 345, 356, 366, 371, 382, 383, 384, 386, 387, 392, 396, 398, 401, 402, 408, 409, 410, 412, 415, 416, 420, 421, 423, 424, 425, 427, 428], "objective_json": 422, "oblig": 412, "observ": [219, 392, 423, 425], "obtain": [221, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 368, 384, 392, 405, 407, 409, 415, 422, 426], "oc": [367, 368, 369, 371, 372], "oc1": [367, 368, 369], "occur": [52, 410], "occurr": 416, "octanol": [416, 419], "off": [8, 18, 227, 308, 378, 407, 409, 416, 417, 425], "offer": [303, 384, 389, 392, 397, 407, 408, 412, 413, 419, 420, 422, 423, 424, 426, 428], "offset": [41, 93], "offset_initial_valu": 93, "offset_prior": 93, "often": [390, 392, 408, 413, 416, 417, 419, 422, 428], "oftentim": [422, 423], "oh": [122, 127, 368, 378, 387, 392, 394, 400, 401, 402, 407, 421, 422], "ok": 394, "old": 426, "omit": [225, 303, 382, 407, 421, 422], "onc": [225, 383, 419, 423], "one": [17, 27, 58, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 148, 157, 158, 162, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 192, 205, 223, 240, 264, 290, 291, 347, 367, 368, 369, 372, 374, 389, 392, 394, 402, 404, 405, 407, 408, 409, 410, 412, 414, 415, 416, 418, 419, 421, 422, 423, 424, 425, 426], "onehot": 368, "ones": [192, 286, 326, 368, 398, 409, 414, 426], "ongo": [383, 426], "onli": [8, 10, 18, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 80, 90, 105, 110, 115, 136, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 192, 198, 223, 227, 264, 286, 287, 303, 304, 307, 318, 326, 332, 347, 353, 354, 367, 372, 377, 378, 383, 384, 386, 387, 389, 397, 398, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 425, 426, 428], "onlin": 392, "onnx": [235, 236, 339, 385, 407, 409, 424], "onnx_input_nam": [236, 386], "onnx_str": [236, 386], "onto": 410, "open": [407, 410], "opentelemetri": [407, 409, 417], "oper": [38, 41, 50, 211, 264, 321, 337, 374, 375, 379, 380, 389, 390, 408, 409, 414, 416, 420, 422], "operator_convert": 386, "opposit": 416, "opt": [407, 417], "optim": [17, 27, 41, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 219, 221, 225, 227, 230, 232, 233, 236, 240, 254, 256, 258, 260, 318, 368, 370, 371, 374, 375, 383, 384, 389, 392, 394, 398, 409, 411, 413, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426], "optimize_acqf": [41, 174], "optimize_acqf_": 41, "optimize_acqf_discret": 174, "optimize_acqf_mix": 174, "option": [27, 74, 78, 80, 89, 90, 91, 92, 93, 94, 95, 96, 100, 110, 115, 119, 122, 123, 125, 133, 136, 138, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 211, 213, 221, 225, 227, 254, 258, 260, 266, 272, 278, 303, 313, 318, 322, 323, 324, 345, 369, 372, 386, 387, 392, 408, 409, 410, 413, 415, 416, 418, 421, 422, 423, 424, 425, 428], "oracl": 423, "orchestr": [410, 415], "order": [192, 198, 383, 392, 407, 409, 410, 415, 416, 419, 422, 426], "ordin": 425, "org": [41, 252, 294, 324, 386, 407, 412], "organ": 410, "origin": [22, 27, 290, 291, 298, 321, 400, 409, 410, 412, 420, 422, 424], "orthogon": 410, "oserror": 408, "other": [49, 97, 190, 291, 367, 369, 371, 374, 375, 383, 390, 392, 398, 404, 405, 407, 408, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 428], "otherwis": [41, 118, 119, 120, 122, 123, 125, 132, 133, 136, 412, 413, 418, 426], "our": [366, 377, 379, 382, 383, 384, 387, 389, 390, 392, 396, 397, 398, 401, 402, 404, 405, 407, 410, 413, 415, 416, 422, 423], "out": [198, 394, 405, 407, 412, 417, 423, 426], "outcom": [157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 368, 407, 419, 425], "output": [27, 100, 320, 321, 345, 366, 404, 405, 408, 409, 411, 423, 424], "output_label": 321, "outputscal": 100, "outputscale_initial_valu": 100, "outputscale_prior": 100, "outsid": [27, 264, 281, 282, 318, 326, 394, 409, 422], "outstand": 412, "over": [27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 389, 409, 413, 426], "overal": [192, 386, 387, 389, 390, 392, 409, 410, 415, 418, 426], "overlap": [57, 58, 374, 375, 416], "overrid": [211, 213, 382, 409], "overridden": [382, 410], "overview": [407, 422], "overwritten": 398, "own": [166, 366, 390, 407, 408, 409, 410, 412, 416, 419], "owner": 412, "ownership": 412, "p": [366, 367, 368, 369, 371, 372, 374, 375, 382, 384, 397, 404, 405, 410, 424, 428], "p1": [421, 422, 423], "p1_json": 422, "p1_via_json": 422, "p2": [421, 422, 423], "p2_json": 422, "p2_via_json": 422, "p3c4": [367, 368, 369], "p_cont": 421, "p_disc": 421, "p_g1_amount": 390, "p_g2_amount": 390, "p_g3_amount": 390, "p_i": 30, "pack": 422, "packag": [80, 130, 284, 377, 379, 380, 408, 409, 410, 419, 423, 424, 428], "page": [386, 407, 409, 410], "pair": [290, 407, 419], "pam": 183, "pamclusteringrecommend": 420, "panda": [48, 199, 217, 218, 223, 312, 329, 366, 367, 368, 369, 374, 375, 377, 383, 384, 389, 390, 394, 397, 398, 404, 405, 409, 416, 419, 421, 422, 423], "paper": 426, "paper_fil": 426, "parallel": 410, "param": [385, 387, 406], "param1": [421, 423], "param2": [421, 423], "param_bounds_comp": 409, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 61, 71, 80, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 111, 115, 118, 119, 122, 123, 125, 127, 128, 129, 130, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 194, 197, 198, 199, 200, 203, 204, 205, 211, 213, 215, 219, 221, 223, 225, 227, 230, 232, 233, 236, 240, 243, 250, 252, 254, 256, 258, 260, 262, 264, 266, 267, 270, 272, 278, 280, 281, 282, 286, 287, 290, 291, 296, 297, 298, 301, 303, 306, 307, 308, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 336, 341, 342, 343, 345, 347, 349, 350, 353, 354, 356, 366, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 392, 394, 396, 397, 398, 400, 401, 402, 404, 405, 407, 409, 410, 416, 417, 418, 422, 423, 424, 426, 427], "parameter": [148, 149, 150, 151, 152, 153, 154], "parameter_json": 422, "parameter_nam": [190, 192, 198, 398], "parameterencod": [119, 127, 128, 130, 133], "parametr": 416, "parent": 410, "pars": [334, 409], "parser": 409, "part": [13, 22, 36, 65, 166, 167, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 318, 387, 398, 401, 402, 404, 405, 409, 410, 412, 413, 414, 415, 416, 420, 421, 422, 428], "parti": [412, 423], "partial": [22, 383, 427], "particl": 426, "particular": [27, 198, 219, 382, 398, 407, 408, 410, 412, 415, 419, 421, 422, 423], "particularli": [303, 415], "partit": [183, 225, 227, 409, 420, 423], "pass": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 136, 181, 182, 183, 184, 192, 198, 209, 240, 254, 258, 260, 327, 389, 400, 405, 409, 410, 418, 419, 422], "passthrough": [24, 106, 194, 244], "patch": 383, "patent": 412, "path": [345, 368, 389, 409, 410, 417, 428], "pattern": [130, 410, 426], "patternfingerprint": 130, "pd": [27, 223, 290, 291, 325, 366, 367, 368, 369, 374, 375, 377, 383, 384, 389, 390, 394, 397, 398, 404, 405, 409, 416, 419, 421, 422, 423], "pdf": 426, "peek": 422, "pend": [22, 27, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 407, 409, 427], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 409, 414, 420], "per": [221, 367, 368, 369, 372, 389, 394, 397, 404, 405, 409, 419, 421, 423], "percent": [221, 412], "percentag": [174, 286, 320, 372, 377, 378, 379, 380, 389, 394, 400, 405, 420], "perf_count": 382, "perfectli": 422, "perform": [174, 221, 286, 368, 377, 378, 379, 380, 384, 389, 401, 404, 405, 407, 409, 410, 412, 413, 415, 417, 419, 420, 423, 424, 426], "period": 91, "period_length_initial_valu": 91, "period_length_prior": 91, "periodickernel": 409, "perm_inv_constraint": 389, "permiss": [407, 412], "permut": [49, 52, 53, 291, 409, 416], "permutation_invari": 49, "perpetu": 412, "persist": [409, 411, 415, 417, 422, 424], "perspect": 422, "pertain": 412, "pharmacophor": 130, "pharmacophorefingerprint": 130, "phase": [164, 390], "phaseagent1": 390, "phaseagent2": 390, "phcpho": [367, 368, 369, 371, 372], "phenomenon": 415, "philosophi": 422, "physic": 423, "physiochemicalproperti": 130, "physiochemicalpropertiesfingerprint": 130, "pi": [7, 372, 383, 384], "pi_max": 384, "pi_per_iter": 384, "pi_required_fract": 383, "pi_threshold": 383, "pickl": 409, "pictur": 407, "piec": [392, 407, 415, 416], "piecewis": 92, "piecewisepolynomialkernel": 409, "pin": [22, 409], "pin_discret": 22, "pinned_part": 22, "pip": [407, 409, 410, 428], "pipelin": [404, 405, 409, 410], "pival": [367, 368, 369, 371, 372], "pl": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55], "place": [27, 30, 223, 318, 319, 320, 386, 387, 389, 392, 408, 409, 410, 412, 415, 419, 422, 426], "placehold": 293, "plai": [415, 425], "plain": 244, "plainkernelfactori": [85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 240], "plan": [235, 419], "platt": 426, "pleas": [386, 387, 407, 413, 420], "plot": [80, 221, 367, 368, 369, 404, 405, 409, 424, 426], "plot_abegin_convert_pipelin": 339, "plot_ebegin_float_doubl": 339, "plot_typ": 80, "plotting_them": 345, "plt": [367, 369, 384], "plu": [223, 407], "plugin": 409, "pm": [5, 372], "png": [367, 369], "po16": 419, "poetri": 409, "point": [6, 13, 17, 22, 26, 27, 80, 133, 157, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 198, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 338, 339, 351, 352, 353, 354, 358, 367, 371, 372, 383, 390, 397, 398, 404, 405, 407, 409, 411, 413, 414, 415, 420, 421, 427, 428], "points_per_dim": [384, 397, 398, 404, 405], "polar": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 200, 407, 409, 411, 427, 428], "poli": 384, "polici": 392, "polycollect": 384, "polym": 419, "polynomi": [92, 93], "polynomialkernel": 409, "polytop": 409, "popul": 389, "popular": [419, 424], "posit": [80, 303, 353, 409, 418], "posixpath": 345, "possibl": [138, 198, 199, 200, 219, 303, 318, 369, 383, 384, 389, 394, 407, 409, 412, 415, 416, 417, 419, 420, 421, 422, 423, 425, 426, 428], "possibli": 163, "post": 419, "post_hook": [303, 382, 383, 384], "posterior": [5, 6, 8, 13, 17, 18, 27, 230, 232, 233, 236, 240, 254, 256, 258, 260, 263, 372, 409, 413, 424], "posterior_mean": [230, 392], "posterior_mod": 230, "posteriorstandarddevi": [392, 413], "postprocess": 312, "potassium": [367, 368, 369, 371, 372], "potenti": [192, 326, 407, 408, 409, 410, 415, 418, 421, 428], "power": [93, 412, 416, 420], "pph3": [367, 368, 369], "pr": [409, 410], "practic": [413, 420], "pre": [138, 162, 243, 385, 408, 409, 410], "pre_hook": [303, 382], "precis": [53, 162, 190, 286, 328, 339, 340, 359, 409, 427], "precomput": 125, "predefin": [345, 415, 420], "predict": [8, 18, 27, 68, 184, 230, 232, 233, 236, 240, 254, 256, 258, 260, 407, 409, 413, 414, 415, 423, 424, 426], "predictor": 262, "prefer": [27, 412, 422], "prefix": 313, "preliminari": 426, "prepar": [384, 410, 412, 428], "preprocess": 409, "presenc": 408, "present": [64, 105, 110, 115, 192, 290, 291, 303, 326, 371, 392, 409, 416, 423, 428], "preset": [240, 247, 250, 252, 409], "pressur": [379, 386, 387, 400, 401, 402, 407, 416], "pretrain": [236, 385, 406], "pretti": 328, "pretty_print_df": [389, 409], "prevent": [208, 209, 303, 408, 409, 410], "previou": [162, 383, 384, 409, 415, 417, 420, 426], "previous": [166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 286, 367, 368, 369, 371, 372, 379, 414], "price": 419, "primari": 415, "primarili": 413, "principl": [389, 392, 424], "print": [223, 328, 347, 367, 368, 369, 371, 372, 374, 375, 379, 382, 386, 387, 389, 390, 392, 396, 397, 398, 400, 401, 402, 407, 409, 421, 428], "print_parameter_names_hook": 382, "printer_inst": 382, "prior": [89, 90, 91, 92, 93, 94, 95, 96, 100, 148, 149, 150, 151, 152, 153, 154, 230, 250, 380, 407, 408, 409], "priori": [416, 422, 426], "privat": [409, 411], "probabilist": 413, "probability_of_improv": 384, "probabilityofimprov": [383, 384], "probabl": [7, 15, 17, 372, 381, 383, 406, 409], "problem": [389, 390, 392, 404, 405, 409, 410, 415, 418, 422], "problemat": [307, 408, 419], "proce": [221, 371, 417], "procedur": [413, 426], "proceed": 426, "process": [27, 83, 238, 239, 240, 241, 245, 246, 247, 249, 250, 251, 252, 325, 353, 372, 382, 389, 392, 404, 405, 409, 410, 413, 414, 415, 416, 417, 419, 422, 426], "prod": 380, "prod_constraint": 380, "prod_i": 418, "produc": [111, 223, 407, 410, 423], "product": [54, 99, 192, 198, 199, 200, 299, 376, 406, 407, 409, 412, 416, 427, 428], "product_paramet": [198, 389, 421], "productkernel": 409, "programmat": 389, "progress": [27, 161, 384, 409], "prohibit": 413, "project": [384, 407, 409, 417], "promin": 412, "promis": [383, 414], "proper": 409, "properli": [22, 394, 408, 421], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 113, 115, 118, 119, 120, 122, 123, 125, 127, 128, 130, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 193, 197, 198, 230, 232, 233, 236, 240, 243, 247, 250, 252, 254, 256, 258, 260, 270, 272, 275, 276, 278, 294, 332, 352, 356, 409, 410, 416], "proport": 405, "propos": 415, "protobuf": 409, "protocol": [156, 157, 234, 242, 307, 409], "prototyp": 411, "provid": [13, 27, 41, 80, 82, 111, 125, 136, 138, 157, 162, 163, 166, 167, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 211, 215, 219, 221, 223, 225, 227, 230, 232, 233, 236, 240, 250, 252, 254, 256, 258, 260, 290, 299, 303, 315, 319, 320, 324, 327, 329, 353, 354, 366, 367, 368, 369, 382, 389, 396, 397, 398, 401, 404, 405, 407, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426], "prune": [12, 14], "prune_baselin": [12, 14], "pstd": [6, 409, 413], "pubchem": 130, "pubchemfingerprint": 130, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 113, 115, 118, 119, 120, 122, 123, 125, 127, 128, 130, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 193, 197, 198, 215, 230, 232, 233, 234, 236, 240, 242, 243, 247, 250, 252, 254, 256, 258, 260, 270, 272, 275, 276, 278, 293, 294, 332, 352, 356, 409, 410], "publicli": 412, "publish": 409, "pull": [392, 409], "pure": [8, 10, 13, 18, 158, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 192, 227, 235, 354, 397, 409, 427], "purerecommend": [160, 162, 163, 164, 166, 172, 179, 409], "purpos": [13, 382, 383, 386, 392, 407, 408, 410, 412, 422, 428], "push": 410, "put": [389, 392, 417, 419], "puzzl": 407, "py": [252, 377, 379, 380, 409, 417], "py310": [377, 379, 380], "py312": 410, "pyarrow": 409, "pydant": 409, "pydoclint": [409, 410], "pydocstyl": 410, "pylint": 409, "pymatgen": 408, "pypi": [407, 409], "pyplot": [367, 369, 384], "pyproject": 409, "pytest": [409, 410], "python": [26, 294, 304, 368, 387, 401, 402, 407, 408, 409, 410, 415, 417, 422], "python3": [377, 379, 380], "python310": 408, "pytorch": 409, "pyupgrad": 409, "q": [92, 262, 263, 372, 414], "qei": [9, 372, 401, 402, 409], "qkg": [10, 409], "qlogei": [11, 372, 409], "qlogexpectedimprov": [372, 377, 378, 379, 380, 394, 400], "qlognei": [12, 409], "qnegintegratedposteriorvari": 413, "qnei": [14, 409], "qnipv": [13, 409, 413], "qpi": [15, 372], "qsimpleregret": 17, "qsr": [16, 409], "qt": 17, "qthompsonsampl": [392, 409], "quadrat": [96, 366], "qualiti": 410, "quantif": 426, "quantifi": [392, 413, 426], "quantiti": [27, 51, 417, 418, 424, 428], "quantum": 125, "qucb": [18, 372, 413], "queri": [158, 167, 219, 221, 223, 407, 415, 417, 423], "question": [410, 415, 426], "qupperconfidencebound": 413, "qvarucb": 409, "r": [367, 368, 369, 371, 372], "radial": 94, "radiu": [130, 409, 419], "rais": [13, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 80, 82, 111, 138, 142, 143, 162, 163, 172, 174, 190, 192, 198, 204, 205, 208, 209, 221, 223, 227, 230, 232, 233, 235, 236, 237, 240, 254, 256, 258, 260, 267, 291, 301, 303, 306, 308, 311, 315, 316, 318, 319, 320, 326, 327, 347, 353, 354, 382, 383, 384, 398, 408, 409, 410, 420], "rand": 386, "random": [13, 95, 190, 192, 221, 223, 225, 259, 260, 318, 352, 353, 354, 366, 367, 368, 369, 372, 383, 384, 386, 390, 392, 405, 407, 409, 413, 419, 420, 423, 428], "random_campaign": 366, "random_forest": [260, 372], "random_se": [221, 225, 383, 423], "randomforestmodel": 387, "randomforestsurrog": [372, 409, 424], "randomli": [187, 366, 368, 413, 420], "randomrecommend": [366, 367, 368, 369, 372, 377, 378, 379, 380, 382, 383, 384, 390, 392, 394, 409, 414, 420], "rang": [118, 119, 120, 122, 123, 125, 132, 133, 136, 270, 318, 319, 366, 374, 375, 377, 378, 379, 380, 384, 389, 392, 394, 396, 397, 398, 405, 407, 416, 421, 422, 423, 425, 428], "rank": 425, "rare": 409, "rastrigin": [374, 375, 397, 398], "rate": [149, 230, 392], "rather": [400, 408, 413, 422], "ration": 96, "ravel": [404, 405], "raw": [174, 422], "rbf": 94, "rbfkernel": 409, "rdf": 130, "rdffingerprint": 130, "rdkit": [130, 377, 379, 380, 409, 416, 419], "rdkit2ddescriptor": [130, 368, 377, 379, 380, 409], "rdkit2ddescriptorsfingerprint": 130, "rdkitfingerprint": 130, "re": [383, 397, 398, 410, 420], "reach": [280, 282, 394], "reachabl": 417, "reactant": 419, "reaction": [368, 371, 407, 416, 419, 426], "reactor": [414, 426], "reactora": 426, "reactorb": 426, "reactorc": 426, "read": [125, 192, 345, 368, 371, 407, 409, 410], "read_excel": [367, 368, 369, 383], "readabl": [197, 328, 336, 400, 409, 411, 412, 422], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 221, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 410, 414], "readm": [409, 410], "reagent": [416, 419], "real": [332, 407, 415, 425], "realist": 423, "realiz": [219, 423], "reason": [38, 181, 182, 183, 184, 198, 368, 397, 409, 412, 413, 414, 416, 417, 419, 423], "reassembl": 422, "rebas": 410, "rec": [377, 378, 379, 380, 394, 414, 415], "rec_finish": 414, "rec_next": 414, "rec_pend": 414, "receiv": [412, 417, 422], "recip": 410, "recipi": 412, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 65, 70, 71, 80, 123, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 198, 219, 221, 234, 235, 286, 318, 320, 366, 367, 368, 369, 370, 374, 375, 377, 378, 379, 380, 382, 383, 384, 390, 392, 394, 401, 402, 404, 405, 406, 407, 409, 410, 413, 417, 419, 423, 424, 426, 427, 428], "recommendation_orig": 400, "recommendation_recr": 400, "recommended_arm_idx": 392, "recommender_with_hook": 383, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 80, 160, 162, 163, 164, 169, 234, 382, 384, 409, 414], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 190, 192, 198, 215, 230, 232, 233, 236, 240, 243, 254, 256, 258, 260, 270, 272, 278, 332, 407, 415, 417, 422], "record": [27, 286, 287, 407, 417, 426], "recreat": [247, 400, 422], "recreate_model": 387, "recurs": [296, 297], "redesign": 409, "redistribut": 412, "reduc": [136, 384, 392, 404, 405, 419], "reduct": 427, "ref": 407, "refactor": 409, "refer": [219, 252, 286, 302, 318, 326, 339, 367, 368, 369, 372, 374, 375, 377, 378, 379, 380, 382, 384, 386, 387, 389, 394, 397, 398, 400, 408, 409, 415, 418, 419, 420, 421, 422, 423, 424, 426], "referenc": 410, "refin": [383, 407, 409, 415], "reflect": [166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 384, 409, 410, 413, 416, 419], "regard": [30, 36, 374, 375, 410, 412], "regim": 409, "regist": [303, 381, 383], "register_custom_architectur": 409, "register_hook": [381, 382, 383, 384, 409], "registr": 409, "regress": 254, "regressor": 386, "regret": [16, 17], "regroup": 409, "regular": [17, 264, 396, 408, 409, 414, 426], "reinstal": 407, "rel": [221, 319, 416, 418], "relat": [51, 105, 110, 112, 115, 126, 192, 210, 274, 289, 398, 404, 405, 407, 409, 415, 416, 417, 426], "relationship": [404, 405, 407, 410, 418, 426], "relative_perc": 320, "releas": [407, 409], "relev": [49, 80, 198, 223, 327, 378, 389, 409, 410, 415, 416, 426, 428], "reli": [408, 409], "reliabl": 419, "remain": [52, 227, 281, 366, 389, 392, 394, 398, 404, 405, 412, 419, 422, 423], "remaind": 354, "remind": 409, "remot": 410, "remov": [48, 51, 52, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 192, 198, 389, 410, 416, 421], "renam": [368, 404, 405, 409, 410], "render": [80, 386], "reoccur": 426, "reorder": 409, "reorgan": 409, "repeat": [392, 409, 410, 414, 415], "repetit": [225, 372, 383], "rephras": 416, "replac": [397, 398, 409, 410], "replic": 422, "repo": 409, "report": [157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 392, 408], "repositori": [368, 407, 410], "repr": 386, "repres": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 98, 99, 125, 192, 227, 230, 232, 233, 236, 240, 254, 256, 258, 260, 315, 329, 332, 336, 353, 366, 389, 390, 392, 401, 402, 407, 409, 412, 415, 419, 421, 423, 428], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 197, 198, 215, 230, 232, 233, 234, 236, 240, 243, 254, 256, 258, 260, 270, 272, 278, 308, 310, 315, 318, 328, 332, 347, 377, 378, 379, 380, 386, 388, 394, 400, 409, 414, 415, 419, 422, 423, 427, 428], "reproduc": [383, 392, 409, 412, 427], "reproduct": 412, "request": [27, 70, 71, 111, 162, 163, 164, 205, 243, 284, 353, 354, 409, 414, 415], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 30, 40, 41, 47, 69, 164, 198, 267, 303, 371, 382, 383, 386, 390, 392, 394, 397, 401, 407, 408, 409, 410, 412, 414, 415, 416, 418, 419, 421, 422, 423, 425, 426, 428], "rerun": 386, "reserv": [407, 410], "reset_index": 404, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 378, 380, 389, 422], "resolv": 312, "resort": [264, 410, 422, 428], "resource_track": 408, "resp": [193, 369, 398], "respect": [27, 174, 193, 221, 225, 285, 290, 318, 389, 390, 410, 415, 416, 418, 422, 423, 424, 425, 428], "respons": [412, 415, 420], "restart": [162, 174], "restor": 422, "restr": 17, "restrain": 419, "restrict": [192, 198, 219, 225, 227, 377, 390, 409, 423, 426, 427], "result": [8, 10, 18, 27, 136, 198, 221, 318, 325, 367, 368, 369, 371, 386, 387, 389, 390, 392, 394, 396, 404, 405, 407, 409, 411, 412, 413, 415, 416, 417, 419, 420, 422, 423, 426, 427, 428], "result_baselin": [404, 405], "result_fract": 405, "results_interrupt": 383, "results_uninterrupt": 383, "retain": [412, 416], "retrain": [235, 236, 424], "retriev": [192, 219, 295, 296, 297, 311, 410, 423], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 80, 81, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 105, 106, 108, 110, 111, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 139, 141, 142, 143, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 166, 169, 172, 174, 176, 179, 181, 182, 183, 184, 186, 187, 190, 192, 194, 195, 198, 199, 200, 201, 203, 204, 205, 208, 209, 211, 212, 213, 215, 217, 218, 221, 223, 225, 227, 230, 232, 233, 234, 236, 237, 240, 243, 244, 248, 254, 256, 258, 260, 262, 263, 264, 266, 267, 270, 272, 278, 280, 281, 282, 284, 285, 286, 287, 290, 291, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 341, 342, 343, 345, 346, 347, 353, 354, 356, 361, 362, 363, 364, 366, 377, 383, 384, 386, 389, 392, 404, 409, 415, 416, 423, 424, 428], "return_std": 386, "reus": [164, 409], "reuse_last": 162, "reveal": [384, 390, 405], "review": 410, "revis": [409, 412], "reward": 392, "rework": 409, "rewrit": 409, "rff": 95, "rffkernel": 409, "rh": [41, 43, 44, 374, 375, 390, 416], "right": [41, 154, 326, 332, 367, 369, 378, 392, 407, 408, 410, 412, 416, 418, 419, 425], "right_df": 326, "rihana": 411, "rim": 411, "risk": [408, 412, 415], "roam": 408, "robust": [407, 426], "robustli": 264, "role": [409, 410, 415, 418, 423, 425, 427], "room": [384, 415], "root": [368, 407, 410, 416], "round": [328, 374, 386, 387, 416], "roundtrip": [409, 422], "rout": 422, "row": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 111, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 223, 286, 290, 291, 319, 325, 326, 328, 343, 367, 369, 377, 378, 379, 380, 389, 390, 394, 400, 409, 415, 421, 423], "rowei": 426, "roya": 411, "royalti": 412, "rq": 96, "rqkernel": 409, "ruff": [409, 410], "rule": [382, 409], "run": [221, 225, 367, 368, 369, 383, 384, 404, 405, 407, 408, 409, 410, 415, 422, 423, 428], "run_full_initial_data": 367, "run_impute_mod": 369, "runner": [377, 379, 380], "runtim": [339, 408], "runtimeerror": [27, 162, 382], "rv": 392, "s3": 409, "s41586": [252, 324], "safe": [409, 410, 415], "safeti": 303, "sai": 416, "said": 410, "sake": 389, "same": [51, 160, 162, 163, 164, 198, 204, 223, 230, 232, 233, 236, 240, 254, 256, 258, 260, 298, 372, 383, 386, 387, 389, 392, 400, 408, 414, 416, 417, 422, 423, 426], "sampl": [10, 13, 17, 40, 174, 186, 187, 190, 287, 351, 352, 353, 354, 367, 372, 377, 378, 379, 380, 392, 394, 396, 400, 405, 407, 409, 411, 427], "sample_from_full_factori": [190, 409], "sample_inactive_paramet": 40, "sample_uniform": [190, 396, 409, 423], "sampler": [372, 377, 378, 379, 380, 394, 400], "samples_full_factori": [190, 409], "samples_random": [190, 409], "sampling_algorithm": [352, 413], "sampling_fract": [13, 413], "sampling_method": [13, 413], "sampling_n_point": [13, 413], "sampling_percentag": [174, 420], "satisfi": [36, 37, 38, 198, 374, 375, 389], "save": [345, 367, 369, 386, 409, 423], "savefig": [367, 369], "scalar": [110, 394, 409, 418, 422], "scale": [100, 150, 151, 152, 153, 154, 356, 394, 404, 409, 413, 418], "scalekernel": 409, "scaler": 409, "scatter": 80, "scenario": [227, 366, 367, 368, 369, 383, 389, 404, 405, 414, 416, 418, 426, 427, 428], "scene": [418, 423], "schema": 415, "schembl15068049": [367, 368, 369], "scheme": 409, "scienc": [407, 411], "scientif": [409, 426], "scikit": [130, 407, 409, 411, 419], "scipi": [343, 384, 392, 409], "scope": 366, "screen": [298, 426], "script": [312, 408, 409, 417, 428], "seaborn": [366, 367, 368, 369, 383, 404, 405], "seamlessli": 422, "search": [13, 22, 27, 34, 48, 51, 61, 65, 71, 118, 119, 120, 122, 123, 125, 132, 133, 136, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 198, 202, 221, 225, 227, 230, 232, 233, 236, 240, 254, 256, 258, 260, 286, 326, 327, 366, 369, 371, 373, 376, 377, 378, 379, 380, 382, 383, 384, 392, 394, 395, 400, 405, 409, 411, 414, 415, 416, 417, 422, 423, 427], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 80, 118, 119, 120, 122, 123, 125, 132, 133, 136, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 193, 197, 198, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 366, 368, 371, 382, 383, 384, 386, 387, 389, 390, 392, 396, 400, 401, 402, 404, 406, 407, 409, 415, 416, 417, 419, 421, 422, 423, 428], "searchspace1": 396, "searchspace2": 396, "searchspace3": 396, "searchspace_json": 422, "searchspacetyp": [166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 192, 372, 377, 378, 379, 380, 383, 384, 394, 400, 421], "secfp": 130, "secfpfingerprint": 130, "second": [325, 341, 343, 372, 386, 387, 394, 402, 404, 416, 417], "secondari": [407, 417], "section": [407, 409, 410, 412, 422], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 144, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 197, 198, 221, 225, 227, 230, 232, 233, 234, 236, 240, 243, 250, 252, 254, 256, 258, 260, 270, 272, 278, 283, 301, 307, 320, 325, 332, 356, 367, 368, 369, 374, 375, 382, 383, 387, 390, 398, 407, 410, 415, 417, 418, 419, 420, 422, 423, 427], "seed": [221, 225, 349, 350, 383, 384, 392, 407, 409, 428], "seek": 394, "seem": [339, 402, 408], "seen": 413, "select": [6, 36, 37, 38, 63, 69, 160, 162, 163, 164, 167, 184, 186, 230, 232, 233, 236, 240, 254, 256, 258, 260, 281, 325, 353, 372, 378, 379, 389, 390, 392, 398, 407, 409, 413, 415, 416, 419, 420, 422, 424], "select_recommend": [160, 162, 163, 164], "self": [303, 316, 361, 362, 363, 364, 382, 383, 384, 392, 410], "sell": 412, "semant": [409, 422], "sens": [53, 303, 307, 325, 416, 419], "sent": 412, "separ": [225, 227, 264, 301, 356, 357, 384, 409, 410, 412, 422], "sequenc": [27, 41, 110, 142, 162, 190, 192, 198, 199, 200, 203, 286, 290, 291, 303, 304, 313, 316, 321, 326, 327, 343, 418, 420], "sequenti": [162, 163, 164, 174, 372, 377, 378, 379, 380, 394, 400, 409, 420], "sequential_continu": [174, 420], "sequential_greedy_x": 409, "sequentialgreedyrecommend": 409, "sequentialmetarecommend": [163, 420], "sequentialstrategi": 409, "seri": [27, 36, 37, 38, 48, 119, 122, 123, 125, 133, 136, 270, 272, 278, 377, 389, 409, 416], "serial": [163, 198, 215, 287, 386, 406, 408, 409, 410, 416, 420, 427], "serializ": [407, 416, 420], "serialize_datafram": 422, "serialized_df": 217, "serializetostr": 386, "serialmixin": [20, 27, 31, 36, 87, 105, 120, 146, 160, 190, 192, 198, 233, 243, 270, 272, 278, 332, 409], "serv": [227, 230, 232, 233, 236, 240, 254, 256, 258, 260, 326, 404, 405, 415, 416, 419], "servic": 412, "session": [236, 417, 422], "set": [27, 30, 38, 40, 51, 53, 57, 58, 80, 82, 136, 157, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 221, 225, 247, 285, 318, 324, 325, 345, 349, 350, 367, 368, 369, 370, 372, 377, 379, 382, 387, 388, 389, 390, 392, 394, 398, 407, 409, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 426, 428], "set_box_aspect": 384, "set_dash": 383, "set_random_se": [384, 392, 428], "set_size_inch": [367, 369], "set_x_pend": 22, "set_xlabel": 384, "set_xtick": 384, "set_xticklabel": 384, "set_ylabel": 384, "set_ylim": 384, "set_zlabel": 384, "setpoint": 133, "setup": [221, 383, 416, 423, 428], "sever": [138, 158, 366, 368, 372, 383, 386, 392, 394, 396, 405, 407, 409, 410, 414, 416, 417, 418, 419, 421, 422, 423, 426, 428], "shall": [162, 320, 412, 418], "shap": [80, 407, 409, 411, 424], "shap_valu": 424, "shape": [17, 190, 197, 276, 280, 282, 353, 421, 428], "shapinsight": 409, "shaplei": 80, "share": [409, 412, 426], "shield": [252, 324, 368, 407, 419], "shift": [8, 18, 404], "shifted_hartmann": 404, "ship": [357, 417, 422], "shm": 408, "short": 410, "shortcut": [198, 421, 422], "shorten": [409, 410], "shot": 426, "should": [27, 49, 80, 123, 136, 198, 213, 225, 275, 290, 291, 318, 320, 323, 324, 326, 328, 331, 332, 333, 341, 345, 377, 379, 383, 386, 389, 390, 398, 402, 407, 409, 410, 414, 415, 416, 421, 423, 424, 426, 428], "show": [80, 367, 368, 369, 371, 372, 377, 378, 379, 386, 387, 389, 392, 398, 400, 401, 402, 404, 405, 416], "showcas": 420, "shown": [383, 392, 405, 409], "shrink": 384, "shutdown": 408, "side": [41, 281, 409], "sigma": [151, 152, 153, 154, 280, 394, 411], "signal": [60, 418], "signatur": [76, 267, 301, 303, 384, 409, 410, 416, 422], "significantli": [198, 392, 404, 405], "silenc": 410, "silent": [409, 416], "similar": [163, 408, 416, 417, 419, 420, 421, 422, 426, 428], "similarli": 419, "simpl": [16, 17, 294, 368, 382, 383, 390, 407, 409, 420, 423, 425, 426], "simpler": [410, 422], "simplest": 421, "simplex": [198, 427], "simplex_paramet": [198, 389, 421], "simpli": [307, 382, 383, 410, 416, 419, 420, 421, 422, 425, 426], "simplic": 303, "simplifi": 410, "simul": [72, 320, 379, 384, 407, 409, 426, 427], "simulate_experi": [225, 227, 423], "simulate_scenario": [227, 366, 367, 368, 369, 383, 404, 405, 423], "simulate_transfer_learn": [404, 423], "simulationresult": 392, "simultan": 418, "sinc": [53, 192, 235, 303, 367, 374, 375, 387, 397, 400, 401, 402, 404, 410, 413, 414, 415, 416, 417, 418, 422, 423, 424, 426], "singer": 426, "singl": [17, 27, 36, 49, 80, 102, 115, 190, 192, 198, 221, 270, 272, 278, 332, 340, 347, 353, 359, 367, 368, 369, 378, 383, 389, 394, 404, 405, 407, 409, 416, 417, 418, 419, 421, 426, 427], "single_lin": 347, "singledispatch": 334, "singletargetobject": [27, 270, 272, 278, 367, 368, 369, 371, 372, 377, 378, 379, 380, 383, 386, 387, 400, 401, 402, 407, 409, 424, 427], "site": [377, 379, 380, 408], "situat": [377, 379, 389, 408, 410, 414, 416, 418, 419, 422, 423, 426], "six": [389, 390], "size": [17, 85, 86, 87, 90, 92, 94, 95, 96, 162, 164, 192, 197, 198, 287, 336, 384, 386, 392, 397, 398, 404, 405, 415, 422, 423, 426, 428], "sk": 386, "skeleton": 409, "skfp": 130, "skicit": 409, "skin": 423, "skip": [195, 201, 409, 415], "skl2onnx": 386, "sklearn": [184, 339, 386, 408], "sklearnclusteringrecommend": [181, 182, 183, 409, 414], "slightli": [219, 368, 389, 423], "slot": [388, 392, 406, 409, 416], "slot1_amount": 389, "slot1_label": 389, "slot2_amount": 389, "slot2_label": 389, "slot3_amount": 389, "slot3_label": 389, "slow": [377, 379, 380, 421], "slowest": 409, "small": [288, 292, 374, 389, 404, 405, 409, 413, 419], "smaller": [27, 392, 415, 426], "smallest": [190, 421], "smart": 407, "smartli": 389, "smile": [136, 310, 312, 313, 407, 419], "smoke": 409, "smoke_test": [345, 366, 367, 368, 369, 375, 377, 378, 380, 383, 384, 392, 404, 405], "smooth": [90, 92, 154], "smoothedboxprior": 409, "smoother": 90, "sn": [366, 367, 368, 369, 383, 404, 405], "snippet": 417, "so": [27, 221, 235, 325, 369, 383, 389, 392, 397, 398, 407, 408, 416, 417, 418, 419, 420, 422, 425], "softwar": [407, 412], "sola": 411, "sole": 412, "solut": [415, 421, 422, 426], "solv": [235, 378, 379, 389, 392], "solv_rdkit2ddesc": 379, "solvent": [367, 368, 369, 371, 372, 377, 378, 379, 380, 383, 387, 389, 390, 401, 402, 407, 416, 419], "solvent1": [389, 390], "solvent2": [389, 390], "solvent3": 389, "solvent4": 389, "solvent5": 389, "solvent8": 389, "solvent9": 389, "solvent_1": 416, "solvent_2": 416, "solvent_3": 416, "solvent_data": 383, "solvent_encoding1": 416, "solvent_encoding2": 416, "solvent_mordred_enc": 416, "solvent_rdkit2dd": [377, 380], "solvent_rdkit_enc": 416, "solvent_smil": 383, "solver": 423, "some": [49, 326, 339, 367, 368, 369, 372, 377, 378, 379, 380, 383, 384, 386, 387, 389, 390, 396, 397, 398, 400, 405, 414, 416, 417, 419, 420, 422, 423, 424, 428], "someth": 402, "sometim": [416, 423], "somewhat": 417, "somewher": 415, "soon": [407, 415, 420], "sophist": [409, 422], "sort": 139, "sourabh": 411, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 105, 106, 108, 110, 111, 113, 115, 118, 119, 120, 122, 123, 125, 127, 128, 129, 130, 132, 133, 136, 138, 139, 141, 142, 143, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 166, 169, 172, 174, 176, 179, 181, 182, 183, 184, 186, 187, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 208, 209, 211, 212, 213, 215, 217, 218, 221, 223, 225, 227, 230, 232, 233, 234, 236, 237, 240, 242, 243, 244, 247, 248, 250, 252, 254, 256, 258, 260, 262, 263, 264, 266, 267, 270, 272, 275, 276, 278, 280, 281, 282, 284, 285, 286, 287, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 341, 342, 343, 345, 346, 347, 349, 350, 352, 353, 354, 356, 364, 407, 408, 409, 410, 412], "space": [10, 13, 21, 22, 27, 34, 41, 48, 51, 61, 65, 67, 71, 118, 119, 120, 122, 123, 125, 132, 133, 136, 157, 165, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 198, 201, 202, 221, 225, 227, 230, 232, 233, 236, 240, 254, 256, 258, 260, 286, 326, 353, 366, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 392, 394, 395, 397, 400, 405, 406, 409, 411, 414, 415, 416, 417, 419, 422, 423, 427], "span": [118, 119, 120, 122, 123, 125, 132, 133, 136, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 286, 382, 392, 396], "speak": 426, "spec": [195, 201, 212], "special": [164, 407, 408, 412, 413, 426, 428], "specif": [83, 138, 144, 184, 192, 195, 208, 225, 264, 295, 382, 383, 397, 407, 410, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 49, 75, 82, 125, 136, 138, 157, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 211, 212, 221, 223, 225, 234, 280, 281, 282, 290, 302, 311, 318, 321, 327, 353, 354, 368, 372, 374, 386, 387, 392, 394, 404, 407, 408, 409, 413, 415, 416, 418, 419, 420, 421, 422, 423, 425, 426], "speed": [198, 377, 379, 380, 404, 405, 417, 421], "speed_fast": 421, "speed_norm": 421, "speed_slow": 421, "speedup": 426, "spell": 410, "spellcheck": 409, "sphinx": [409, 410], "split": [166, 414], "sporad": 409, "spread": 425, "sqrt": 416, "squar": [392, 416], "squash": 410, "stabil": [409, 417], "stabl": [83, 144, 283], "stage": [415, 416, 422], "stand": 409, "standard": [6, 264, 386, 409, 419], "star": 389, "start": [221, 366, 382, 383, 384, 390, 392, 408, 409, 414, 419, 420, 422, 423, 426], "startup": 409, "stat": [284, 384, 390, 392], "state": [164, 383, 389, 409, 412, 415], "stateless": [392, 409], "statement": [328, 397, 407, 412], "static": [192, 198, 240, 407, 410, 426], "statist": [287, 405, 407, 417], "statu": 415, "std_threshold": 264, "stem": [408, 426], "step": [195, 201, 221, 389, 392, 407, 410, 415, 418, 422, 424], "sterl": 411, "steven": 368, "still": [138, 198, 318, 383, 392, 414, 416, 417, 419, 426, 428], "stop": [381, 406, 409, 410], "stop_on_pi": 383, "stoppag": 412, "storag": [415, 417, 422], "store": [22, 120, 264, 270, 384, 389, 392, 407, 409, 415, 428], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 111, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 172, 174, 181, 182, 183, 184, 190, 192, 197, 198, 211, 215, 225, 227, 230, 232, 233, 236, 240, 243, 254, 256, 258, 260, 270, 272, 273, 278, 280, 281, 282, 284, 287, 290, 291, 295, 301, 302, 308, 310, 312, 313, 315, 318, 321, 323, 324, 328, 332, 336, 342, 345, 346, 347, 387, 392, 401, 402, 404, 405], "straightforward": [425, 426], "strategi": [13, 174, 192, 219, 366, 392, 409], "stream": [299, 417], "streamingsequentialmetarecommend": [162, 420], "streamingsequentialstrategi": 409, "streamlin": 410, "streamlit": [407, 409], "streibel": 411, "strict": 301, "strictli": [387, 401, 402], "stride": 374, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 135, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 190, 192, 198, 215, 230, 232, 233, 236, 240, 243, 254, 256, 258, 260, 270, 272, 278, 308, 312, 313, 315, 316, 323, 332, 347, 386, 400, 409, 415, 416, 419, 425, 427], "strip": [221, 369, 414], "strong": 409, "strongli": 415, "strtobool": [409, 417], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 45, 108, 211, 407, 408, 409, 410, 411, 415, 419, 422], "studi": [158, 407, 420, 427], "style": [102, 404, 409, 410], "sub": [184, 409, 422], "subclass": [75, 211, 295, 297, 307, 372, 409, 410, 420, 422], "subfold": 417, "subgraph": 419, "subgroup": 390, "subject": 412, "sublicens": 412, "submiss": [409, 412], "submit": [22, 284, 286, 407, 410, 412], "subpackag": [409, 410, 423], "subselectioncondit": [378, 379, 409, 427], "subsequ": [192, 198, 225, 312, 412, 415, 422, 424], "subset": [27, 105, 110, 115, 136, 192, 298, 327, 353, 415, 416], "subspac": [22, 166, 174, 189, 190, 192, 194, 196, 198, 374, 377, 378, 379, 380, 394, 396, 398, 400, 409, 420, 422, 427, 428], "subspace_json": 422, "subspacecontinu": [27, 118, 132, 192, 194, 396, 409, 421], "subspacediscret": [27, 119, 122, 123, 125, 133, 136, 192, 194, 197, 377, 378, 379, 380, 389, 394, 400, 409, 421, 422, 428], "substanc": [130, 136, 311, 368, 371, 377, 379, 380, 390, 409, 416, 419, 426], "substance_12": 416, "substance_3": 416, "substance_43": 416, "substance_data": 409, "substance_encod": 368, "substanceencod": [136, 311, 313, 377, 378, 379, 380, 409, 419], "substanceparamet": [367, 368, 369, 371, 372, 377, 378, 379, 380, 383, 387, 389, 401, 402, 407, 409, 416, 417, 421, 427], "substanti": [136, 428], "substrat": 426, "subtyp": 422, "success": [272, 353, 392, 422], "success_valu": 272, "suffic": 410, "suffici": [383, 421, 422], "suggest": 423, "suit": 410, "suitabl": [184, 198, 221, 308, 410, 413, 415, 419, 423, 424, 426], "sum": [55, 98, 198, 366, 376, 377, 378, 379, 383, 389, 390, 392, 406, 416, 418, 421], "sum_": [416, 418], "sum_constraint": 389, "sum_constraint_1": 380, "sum_constraint_2": 380, "sum_toler": 389, "summar": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 118, 119, 120, 122, 123, 125, 132, 133, 136, 270, 272, 278], "summari": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 118, 119, 120, 122, 123, 125, 132, 133, 136, 270, 272, 278, 409, 410], "superior": 413, "supersed": 412, "support": [10, 80, 163, 227, 230, 232, 233, 236, 240, 254, 256, 258, 260, 339, 372, 377, 378, 379, 380, 383, 384, 386, 389, 394, 400, 409, 410, 411, 412, 416, 419, 420, 421, 423, 424], "supports_transfer_learn": [230, 232, 233, 236, 240, 254, 256, 258, 260, 424], "suppos": [286, 416], "sure": [389, 396, 407, 410], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 66, 80, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 172, 174, 181, 182, 183, 184, 230, 232, 234, 236, 240, 242, 243, 247, 250, 252, 254, 256, 258, 260, 377, 378, 379, 380, 384, 392, 394, 400, 406, 407, 409, 411, 416, 419, 420, 426, 427], "surrogate_model": [172, 174, 372, 384, 386, 387, 392, 401, 402, 409], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 80, 172, 174, 233, 409], "svg": 345, "sw": 378, "swiss": 411, "switch": [49, 161, 163, 164, 264, 372, 377, 378, 379, 380, 392, 394, 400, 407, 409, 416, 420], "switch1": 378, "switch2": 378, "switch2_left": 378, "switch2_right": 378, "switch_1": 416, "switch_2": 416, "switch_aft": [164, 401, 402, 420], "switzerland": 411, "sy": 408, "symmetri": 416, "syntax": [407, 409], "synthet": [374, 375, 384, 404, 405], "system": [368, 392, 407, 408, 412, 417, 423, 426], "t": [262, 263, 300, 308, 367, 368, 369, 371, 372, 379, 384, 404, 405, 422, 423], "t1": [422, 423], "t2": 422, "t3": 422, "t_1": 418, "t_2": 418, "t_3": 418, "t_i": 418, "tabl": [328, 409, 416], "tabular": 423, "tag": [407, 409, 422], "tailor": 415, "take": [45, 90, 119, 133, 138, 230, 232, 233, 236, 240, 250, 254, 256, 258, 260, 273, 382, 389, 409, 414, 415, 416, 418, 419, 420, 426], "taken": [162, 383, 409, 415, 418], "tantamount": 413, "target": [27, 67, 102, 105, 106, 110, 114, 115, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 198, 219, 221, 222, 223, 230, 232, 233, 236, 240, 254, 256, 258, 260, 264, 272, 275, 276, 278, 303, 318, 321, 327, 341, 342, 348, 366, 367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 383, 384, 386, 387, 392, 397, 398, 400, 401, 402, 404, 405, 406, 407, 409, 414, 415, 417, 422, 423, 424, 427], "target_1": [378, 379, 380, 394, 418, 425], "target_2": [394, 418, 425], "target_3": [394, 418], "target_3a": 425, "target_3b": 425, "target_cumbest": [366, 404, 405], "target_max": 415, "target_transform": 394, "targetmod": [278, 422, 425], "targetnam": 221, "targettransform": [278, 409, 425], "task": [123, 192, 227, 230, 232, 233, 236, 240, 254, 256, 258, 260, 270, 272, 278, 392, 409, 415, 420, 422, 423, 426], "task_idx": [192, 409], "task_param": [404, 405, 423], "task_paramet": 422, "task_parameter_json": 422, "task_parameter_reconstruct": 422, "taskparamet": [205, 404, 405, 409, 422, 423, 427], "tb": 428, "technic": [198, 414, 423, 426], "techniqu": [184, 420], "technologi": 411, "telemetri": [409, 411, 427], "tell": 285, "temp": [377, 379, 411], "temp_c": [367, 368, 369, 383], "temperatur": [367, 369, 371, 372, 377, 379, 382, 386, 387, 400, 416, 419, 421, 426], "temperature_resolut": 377, "temperature_valu": 383, "temporari": [101, 107, 175, 192, 350, 383, 409, 417, 422], "temporarili": [409, 428], "temporary_se": 428, "tempt": 426, "tenac": 409, "tend": 384, "tensor": [22, 41, 230, 262, 263, 321, 329, 332, 356, 358, 404, 409], "term": [93, 219, 383, 392, 410, 412, 415, 421, 422, 423, 426], "termin": [383, 384, 408, 412], "terminologi": 427, "tert": [367, 368, 369, 371, 372], "test": [198, 221, 236, 318, 392, 404, 405, 407, 408, 409, 410, 415, 423, 428], "test_funct": [374, 375, 384, 397, 398, 404, 405], "test_scenario": [367, 369], "testabl": [72, 221], "testfunct": [374, 375, 397, 398], "testfunctionclass": [374, 375, 397, 398], "text": [30, 346, 386, 412, 416, 417, 418], "th": [291, 416], "than": [27, 58, 71, 133, 162, 163, 164, 190, 192, 205, 291, 307, 347, 354, 368, 379, 383, 390, 413, 416, 417, 419, 422], "thei": [138, 158, 167, 281, 323, 327, 372, 380, 383, 389, 392, 396, 409, 410, 414, 415, 416, 419, 420, 421, 422, 425, 426, 428], "them": [34, 250, 319, 345, 372, 407, 408, 410, 414, 416, 417, 419, 420, 422, 426], "theme": [345, 409], "theori": 412, "therebi": 198, "therefor": [164, 230, 232, 233, 236, 240, 254, 256, 258, 260, 372, 408, 415, 422, 426], "therein": 409, "thereof": 412, "thf": 416, "thi": [10, 13, 17, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 219, 223, 225, 227, 230, 232, 233, 234, 235, 236, 240, 250, 254, 256, 258, 260, 264, 287, 290, 303, 304, 307, 312, 318, 320, 322, 324, 326, 328, 345, 366, 382, 383, 384, 386, 387, 389, 390, 392, 396, 400, 401, 402, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428], "think": [392, 419], "third": [394, 412, 423], "thompson": [17, 411], "thomson": 17, "those": [138, 164, 166, 219, 353, 372, 408, 412, 416, 423], "though": 426, "three": [368, 389, 390, 394, 407, 415, 416, 418, 420, 421, 426], "threshold": [38, 125, 136, 264, 324, 374, 379, 380, 383, 389, 409, 416, 419], "thresholdcondit": [54, 55, 374, 379, 380, 389, 427], "through": [27, 192, 280, 290, 318, 327, 387, 389, 392, 394, 407, 409, 410, 412, 416, 422, 423, 427], "throughout": 164, "throw": [312, 416, 419], "thrown": [223, 369, 383, 401, 408, 418], "thu": [174, 303, 327, 367, 368, 374, 375, 377, 378, 379, 380, 386, 387, 389, 392, 394, 397, 398, 400, 408, 410, 415, 417, 419, 420, 422, 423, 426, 428], "tick": 384, "time": [10, 174, 287, 354, 375, 382, 389, 392, 407, 409, 414, 415, 416, 419, 422, 423, 428], "timeout": [409, 417], "timer": 382, "titl": 412, "tl": 404, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 41, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 383, 384, 409], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 190, 192, 198, 215, 230, 232, 233, 236, 240, 243, 254, 256, 258, 260, 270, 272, 278, 332], "to_factori": [85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100], "to_fram": 366, "to_gpytorch": [85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 146, 148, 149, 150, 151, 152, 153, 154, 409], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 190, 192, 198, 215, 230, 232, 233, 236, 240, 243, 254, 256, 258, 260, 270, 272, 278, 332, 386, 387, 400, 415, 422], "to_keep": 325, "to_ndarrai": 332, "to_object": [270, 272, 278, 366, 374, 375, 384, 392, 397, 398, 404, 405, 418, 423], "to_polar": [36, 37, 38], "to_searchspac": [118, 119, 120, 122, 123, 125, 132, 133, 136, 190, 198, 392, 396, 409], "to_subspac": [118, 119, 122, 123, 125, 132, 133, 136, 409], "to_tensor": [332, 383, 384, 386, 409], "to_tupl": 332, "togeth": [34, 62, 291, 372, 392, 398, 407, 409], "toggl": 27, "toggle_discrete_candid": [27, 409], "toler": [27, 38, 133, 198, 286, 326, 367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 383, 386, 387, 389, 394, 397, 398, 400, 401, 402, 407, 409, 416, 419], "tolist": 374, "toluen": 419, "toml": 409, "too": [374, 423, 426], "tool": [309, 409, 422], "toolbox": 407, "top": [409, 410], "topic": 415, "topolog": 419, "topologicaltors": 130, "topologicaltorsionfingerprint": 130, "torch": [321, 332, 383, 384, 386, 404, 409], "toronto": 411, "tort": 412, "total": [164, 353, 389, 390, 392, 421], "total_bas": 390, "total_phase_ag": 390, "toward": [8, 18, 148, 318, 416], "tox": [377, 379, 380, 407, 409, 410], "tracebackexcept": 408, "track": [157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 198, 383, 412], "trade": [8, 18, 412], "trademark": 412, "tradit": [368, 388, 389, 406, 407, 409], "train": [68, 80, 157, 162, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 227, 230, 232, 233, 234, 235, 236, 240, 254, 256, 258, 260, 264, 385, 404, 405, 409, 423], "train_i": 386, "train_x": 386, "training_funct": 405, "trajectori": [219, 366, 383, 392, 423], "transfer": [226, 227, 230, 232, 233, 236, 240, 254, 256, 258, 260, 372, 377, 378, 379, 380, 394, 400, 404, 406, 407, 409, 412, 419, 424, 427], "transform": [27, 68, 105, 110, 115, 119, 120, 122, 123, 125, 133, 136, 190, 192, 198, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 270, 272, 276, 278, 313, 321, 327, 332, 333, 356, 377, 378, 379, 380, 400, 409, 412, 417, 419, 424, 425], "transform_rep_exp2comp": 409, "transit": 409, "translat": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 409, 412, 419], "transmiss": 422, "transmit": 287, "travers": 409, "treasur": 427, "treat": [136, 368, 407, 416, 419, 425, 428], "tree": 409, "tremend": 368, "trend": 426, "tri": 421, "triangl": 282, "triangular": [276, 282, 394, 425], "tricyclohexylphosphin": [367, 368, 369], "trigger": [162, 290, 383, 387, 392, 409, 410, 414, 418, 422], "trivial": [243, 256, 418, 419], "true": [6, 12, 14, 27, 30, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 80, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 192, 198, 240, 272, 281, 286, 296, 297, 301, 307, 308, 325, 326, 347, 368, 372, 374, 375, 377, 378, 379, 380, 384, 386, 387, 389, 392, 394, 397, 398, 400, 401, 402, 404, 405, 409, 415, 416, 417, 419, 422], "truncat": [407, 417], "trust": [386, 417], "truth": 308, "truthi": 417, "try": [318, 367, 368, 369, 383, 386, 387, 402, 408, 409, 428], "tune": 407, "tupl": [27, 37, 41, 85, 86, 87, 90, 92, 94, 95, 96, 98, 99, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 139, 190, 192, 197, 198, 263, 290, 301, 304, 316, 318, 329, 332, 336, 356], "turn": [190, 198, 336, 396, 407, 408, 409, 416, 417], "turnaround": 423, "twice": 418, "two": [30, 51, 57, 58, 111, 164, 174, 219, 291, 294, 321, 341, 353, 366, 367, 369, 372, 382, 389, 392, 394, 398, 404, 405, 407, 409, 410, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 425], "twofold": 392, "twophasemetarecommend": [367, 369, 372, 377, 378, 379, 380, 383, 384, 386, 387, 392, 394, 398, 400, 401, 402, 407, 420], "twophasestrategi": 409, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 80, 81, 82, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 106, 108, 110, 111, 115, 118, 119, 120, 122, 123, 125, 132, 133, 135, 136, 138, 139, 141, 142, 143, 146, 148, 149, 150, 151, 152, 153, 154, 157, 160, 162, 163, 164, 166, 169, 172, 174, 176, 179, 181, 182, 183, 184, 186, 187, 190, 192, 193, 194, 195, 198, 199, 200, 201, 203, 204, 205, 208, 209, 211, 212, 213, 215, 217, 218, 221, 223, 225, 227, 230, 232, 233, 234, 236, 237, 240, 243, 244, 248, 254, 256, 258, 260, 262, 263, 264, 266, 267, 270, 272, 273, 278, 280, 281, 282, 284, 285, 286, 287, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 332, 333, 334, 336, 338, 339, 341, 342, 343, 345, 346, 347, 353, 354, 356, 358, 361, 362, 363, 364, 368, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389, 390, 392, 394, 400, 401, 402, 407, 409, 410, 412, 413, 416, 418, 419, 420, 421, 426, 427], "typealia": 273, "typeerror": [27, 80, 82, 221, 236, 303, 318, 319, 354, 383, 384], "typeguard": 300, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 110, 115, 118, 119, 120, 122, 123, 125, 132, 133, 136, 138, 146, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 190, 192, 198, 203, 211, 212, 215, 230, 232, 233, 236, 240, 243, 254, 256, 258, 260, 263, 270, 272, 278, 297, 298, 299, 300, 316, 321, 327, 332], "typic": [13, 303, 347, 368, 407, 414, 415, 419, 422, 428], "typing_extens": 410, "typo": [409, 410], "u": [17, 366, 367, 368, 369, 382, 384, 389, 390, 392, 396, 405, 407, 413, 416, 418], "ucb": [8, 372, 409, 413, 422], "ultim": 410, "ultra": [401, 402], "un": 409, "unabl": 386, "unavail": 409, "unawar": 414, "unbound": [332, 382], "uncaught": 409, "uncertainti": [13, 372, 427], "uncharacter": 426, "uncorrel": [324, 426], "undefin": 230, "under": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 287, 327, 380, 384, 392, 407, 408, 412, 414, 419], "underflow": 73, "underli": [27, 51, 383, 392, 407, 415, 420, 422], "underscor": 409, "understand": [407, 426], "undesir": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 416, 419, 428], "undo": 408, "unequ": 380, "unevenli": 419, "unfinish": 414, "unfortun": 426, "unhandl": 409, "uniform": [190, 230, 319, 320, 409], "uniformli": 353, "uniniti": 307, "uninstal": [74, 407], "unintend": [77, 303, 409, 410], "unintention": 428, "union": [111, 221, 225, 280, 281, 282, 342, 398, 412, 421], "uniqu": [52, 138, 389, 409, 419], "unit": [197, 336], "unknown": [353, 366, 392, 409, 424, 426], "unlabel": 321, "unless": [407, 410, 412, 417, 419, 422], "unlik": [12, 14, 389, 428], "unlock": 427, "unmaintain": 409, "unmatch": 301, "unmatchedattributeerror": 301, "unmeasur": [221, 369], "unnecessari": [409, 415], "unpromis": 383, "unreach": 409, "unrealist": 423, "unrecogn": 318, "unrestrict": 303, "unsaf": 409, "unspecifi": [409, 422], "unsqueez": [383, 384], "unstructur": [213, 422], "unstructure_bas": 211, "unsupport": [190, 223], "until": [160, 162, 163, 164, 221, 392, 407, 423], "untouch": 319, "untransform": [27, 424], "unusedobjectwarn": [383, 409], "unveil": 405, "unwant": 34, "up": [27, 198, 221, 223, 366, 367, 368, 369, 370, 377, 379, 382, 384, 388, 389, 390, 398, 404, 405, 407, 408, 409, 413, 416, 428], "updat": [27, 368, 371, 409, 410, 414], "upgrad": 409, "upon": [166, 243, 408, 409, 410, 416, 421, 424, 426], "upper": [8, 18, 154, 192, 198, 280, 281, 282, 332, 372, 384, 394, 404, 405, 409, 425, 428], "upper_bound": [377, 378, 379, 380, 400, 421], "upperconfidencebound": [413, 422], "upstream": 410, "url": [417, 426], "us": [13, 17, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 62, 65, 80, 90, 110, 111, 125, 130, 133, 136, 138, 157, 160, 162, 163, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 190, 192, 198, 199, 200, 212, 221, 223, 225, 230, 232, 233, 236, 237, 240, 254, 256, 258, 260, 276, 286, 287, 293, 303, 304, 312, 313, 318, 320, 321, 326, 334, 338, 339, 345, 353, 358, 366, 374, 375, 381, 382, 383, 384, 385, 388, 389, 390, 396, 400, 401, 402, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428], "usa": 411, "usabl": [307, 408, 409, 419, 422], "usag": [335, 407, 409, 416, 417, 420], "use_comp_rep": [80, 82], "use_torch": [321, 374, 375, 384, 397, 398, 404, 405], "user": [48, 49, 60, 69, 77, 125, 128, 198, 230, 232, 233, 236, 240, 254, 256, 258, 260, 267, 284, 320, 326, 371, 372, 377, 394, 402, 407, 408, 409, 410, 415, 416, 417, 418, 419, 421, 422, 423, 426], "userguid": 283, "usernam": [284, 409, 417], "userwarn": 408, "uses_shap_explain": 80, "usort": 409, "usr": 130, "usrcat": 130, "usrcatfingerprint": 130, "usrfingerprint": 130, "usual": [221, 367, 368, 369, 401, 408, 419], "util": [174, 190, 198, 286, 293, 294, 332, 352, 356, 366, 368, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 389, 392, 394, 397, 398, 404, 405, 407, 409, 413, 414, 418, 419, 420, 422, 423, 424, 426, 427], "uv": 409, "v": 426, "val": [45, 108, 308, 404], "val_from_param1": 53, "val_from_param2": 53, "valid": [27, 30, 31, 32, 33, 34, 37, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 138, 192, 195, 198, 201, 236, 326, 377, 399, 401, 406, 408, 409, 410, 415, 416, 423], "validate_compat": 236, "validate_config": [27, 402, 409, 415], "valu": [6, 8, 18, 22, 27, 30, 36, 37, 38, 41, 49, 51, 67, 80, 89, 90, 91, 92, 93, 94, 95, 96, 100, 105, 110, 111, 115, 119, 122, 123, 125, 127, 128, 130, 133, 136, 138, 141, 142, 143, 181, 182, 183, 184, 190, 192, 198, 199, 200, 219, 221, 223, 225, 230, 232, 233, 236, 240, 254, 256, 258, 260, 272, 273, 275, 280, 281, 282, 287, 290, 298, 301, 308, 315, 318, 319, 320, 323, 326, 327, 328, 332, 334, 341, 342, 343, 361, 362, 363, 364, 367, 368, 369, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389, 392, 394, 397, 398, 400, 401, 402, 404, 405, 407, 409, 410, 413, 415, 416, 417, 418, 419, 425, 426, 427, 428], "valuabl": [420, 423], "valueerror": [13, 27, 57, 58, 80, 82, 111, 138, 142, 143, 190, 192, 198, 204, 221, 223, 230, 232, 233, 236, 240, 254, 256, 258, 260, 267, 291, 301, 306, 308, 311, 315, 318, 320, 326, 327, 347, 353, 354, 387, 398, 408], "var": [392, 427], "vari": [27, 198, 368, 418], "variabl": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 118, 119, 120, 122, 123, 125, 132, 133, 136, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 230, 232, 233, 236, 240, 254, 256, 258, 260, 270, 285, 287, 340, 345, 359, 397, 407, 409, 410, 416, 419, 420, 422], "varianc": [8, 13, 18, 89, 256, 322, 409, 413], "variance_initial_valu": 89, "variance_prior": 89, "variant": [372, 404, 426], "varieti": [397, 410, 422, 423], "variou": [332, 389, 395, 409, 414, 420, 423], "varucb": 409, "vector": [30, 386, 411], "vendor": 419, "verbal": 412, "verbos": [387, 409], "veri": [377, 379, 394, 414, 417, 419, 428], "verifi": [307, 374, 377, 378, 379, 380, 389, 390, 396, 398, 400, 407, 410], "versa": [404, 426], "versatil": 420, "version": [192, 284, 339, 377, 379, 380, 389, 392, 396, 404, 405, 407, 408, 409, 410, 412, 422], "vert": 384, "via": [13, 17, 26, 27, 80, 164, 174, 186, 230, 232, 233, 234, 236, 240, 254, 256, 258, 260, 286, 295, 303, 318, 325, 326, 369, 375, 382, 383, 386, 396, 407, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426], "via_init": 422, "via_json": 422, "viabl": [71, 394], "vice": [404, 426], "view": [190, 198, 384, 421], "view_init": 384, "violat": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "viridi": 384, "virtual": 410, "visibl": 409, "visual": [368, 404, 405, 425], "volum": 426, "vpn": [407, 417], "vsa": 130, "vsafingerprint": 130, "vulner": [409, 410], "w_i": 418, "wa": [13, 63, 66, 67, 74, 77, 138, 164, 198, 230, 232, 233, 236, 240, 254, 256, 258, 260, 315, 318, 354, 368, 408, 409, 410, 412, 417, 419, 422, 426], "wai": [192, 382, 389, 390, 395, 396, 404, 407, 414, 417, 419, 421, 422, 423, 425, 426, 428], "wall": 10, "want": [48, 372, 377, 389, 392, 398, 405, 407, 410, 416, 417, 419, 420, 422, 425], "warn": [59, 304, 377, 379, 380, 383, 397, 398, 409, 410], "warranti": [407, 412], "watch": 382, "water": [377, 378, 379, 380, 389, 416, 419], "we": [22, 219, 366, 367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389, 390, 392, 394, 396, 397, 398, 400, 401, 402, 404, 405, 407, 408, 410, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428], "web": 410, "weber": 411, "weight": [102, 110, 111, 343, 394, 418, 422], "weight_kdalton": 419, "welcom": 410, "well": [284, 345, 372, 383, 388, 410, 415, 416, 419, 423], "were": [166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 318, 369, 372, 405, 408, 409, 414, 416, 417, 419, 421], "what": [138, 162, 192, 219, 318, 356, 366, 386, 394, 402, 410, 413, 415, 419, 426, 427], "whatsnew": 294, "when": [27, 49, 133, 162, 164, 172, 174, 192, 198, 230, 232, 233, 236, 237, 240, 254, 256, 258, 260, 267, 301, 303, 307, 318, 321, 347, 354, 372, 377, 378, 380, 382, 387, 389, 390, 392, 394, 407, 408, 409, 410, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 425, 426, 428], "whenev": [22, 162, 318, 422], "where": [17, 22, 30, 34, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 157, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 219, 227, 230, 232, 233, 236, 240, 254, 256, 258, 260, 290, 318, 353, 367, 368, 369, 372, 377, 379, 389, 392, 407, 408, 409, 410, 412, 414, 415, 416, 418, 419, 421, 422, 423, 425, 426], "wherea": 422, "wherev": [412, 414], "whether": [22, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 82, 118, 119, 120, 122, 123, 125, 132, 133, 136, 174, 190, 198, 230, 232, 233, 236, 240, 254, 256, 258, 260, 285, 320, 326, 332, 389, 409, 412, 415, 417, 420, 425], "which": [13, 27, 36, 37, 38, 77, 80, 105, 110, 115, 123, 138, 157, 158, 164, 166, 169, 172, 174, 179, 181, 182, 183, 184, 186, 187, 192, 198, 225, 227, 230, 232, 233, 236, 240, 254, 256, 258, 260, 264, 286, 287, 303, 307, 318, 320, 324, 326, 328, 341, 342, 345, 356, 366, 368, 372, 375, 382, 383, 389, 390, 392, 396, 397, 398, 402, 404, 405, 407, 408, 409, 410, 412, 413, 415, 416, 419, 421, 422, 423, 424, 425, 426, 428], "while": [192, 195, 201, 383, 392, 394, 405, 408, 412, 413, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426], "whilst": 318, "whim": 130, "whimfingerprint": 130, "whole": 412, "whom": 412, "whose": [111, 138, 192, 223, 298, 301, 321, 366, 382, 389, 414, 423], "wide": 423, "wider": 425, "width": 328, "wieczorek": 411, "william": 426, "willing": 415, "win": [230, 392], "win_rat": 392, "window": [409, 417], "winerror": 408, "wise": 343, "wish": 422, "within": [27, 118, 119, 120, 122, 123, 125, 132, 133, 136, 286, 326, 396, 412, 416, 417, 419, 424, 426, 427, 428], "without": [163, 404, 405, 407, 409, 412, 414, 415, 416, 417, 419, 423, 426, 428], "work": [22, 261, 290, 321, 377, 379, 380, 383, 394, 400, 402, 407, 409, 410, 411, 412, 416, 417, 418, 420, 422, 423], "workaround": [408, 409], "workflow": [386, 407, 415, 420, 422, 427], "world": [407, 415], "worldwid": 412, "worst": [221, 223, 225, 369], "would": [52, 73, 138, 219, 221, 227, 235, 382, 389, 392, 407, 410, 414, 416, 417, 419, 420, 421, 422, 423, 426, 428], "wrap": [85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 240, 244, 262, 263, 303, 407, 409, 418], "wrapper": [1, 21, 225, 227, 236, 304, 404, 405, 407, 420], "write": [407, 408, 412, 422], "written": [397, 398, 410, 412], "wrong": [402, 409], "wrongli": 408, "www": [407, 412], "x": [22, 106, 194, 221, 223, 244, 300, 304, 316, 329, 341, 356, 366, 367, 368, 369, 377, 378, 379, 380, 383, 384, 389, 394, 400, 404, 405, 407, 409, 421, 424], "x0": 421, "x1": 421, "x2": 421, "x_": [366, 374, 375, 396, 397, 398], "x_1": [374, 375, 396, 397, 398, 416], "x_2": [374, 375, 396, 397, 398, 416], "x_3": [374, 375, 396, 397, 398, 416], "x_4": [374, 375, 396, 397, 398], "x_5": 398, "x_6": 398, "x_i": 416, "x_pend": 22, "xlsx": [367, 368, 369, 383], "xpho": [367, 368, 369], "xxxx": 408, "xylen": [367, 368, 369, 371, 372], "y": [252, 308, 324, 341, 366, 367, 368, 369, 383, 384, 386, 389, 404, 405, 407, 426], "ye": 308, "year": 426, "yet": [22, 160, 162, 163, 164, 409, 414, 420], "yield": [6, 90, 367, 368, 369, 371, 372, 377, 383, 386, 387, 389, 398, 400, 401, 402, 407, 409, 413, 418, 422], "yield_cumbest": [367, 368, 369, 383], "yml": 409, "you": [27, 48, 368, 372, 374, 382, 387, 389, 392, 397, 398, 401, 407, 408, 410, 412, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428], "your": [368, 382, 389, 392, 398, 407, 408, 409, 410, 412, 415, 417, 419, 422, 423, 424, 425, 426, 428], "your_branch_nam": 410, "yourself": 392, "z": [384, 407], "zdir": 384, "zero": [8, 18, 148, 322, 389, 392, 426], "zip": [383, 384], "\u00b5fmt": 409, "\u0161o\u0161i\u0107": [407, 411]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedImprovement", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "SHAPInsight", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objective", "baybe.objective.Objective", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.deprecation", "baybe.objectives.deprecation.structure_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.single", "SingleTargetObjective", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "Surrogate", "SurrogateProtocol", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "classproperty", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.plotting", "baybe.utils.plotting.create_example_plots", "baybe.utils.plotting.indent", "baybe.utils.plotting.to_string", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 410, "0": 409, "01": 409, "02": 409, "03": 409, "04": 409, "05": 409, "06": 409, "07": 409, "08": 409, "09": 409, "1": 409, "10": 409, "11": 409, "12": 409, "13": 409, "14": 409, "15": 409, "16": 409, "17": 409, "19": 409, "2": 409, "2022": 409, "2023": 409, "2024": 409, "21": 409, "23": 409, "24": 409, "27": 409, "28": 409, "29": 409, "3": 409, "4": 409, "5": 409, "6": 409, "7": 409, "8": 409, "9": 409, "A": 407, "The": [392, 401, 407, 422, 423, 426], "abbrevi": 422, "acqf": 2, "acquisit": [1, 2, 19, 21, 23, 24, 25, 372, 414], "acquisitionfunct": 20, "action": 426, "activ": 413, "ad": [371, 409, 414, 415, 426, 428], "add_fake_measur": 318, "add_noise_to_perturb_degenerate_row": 319, "add_parameter_nois": 320, "addendum": 394, "addit": [389, 420], "additivekernel": 98, "advanc": [407, 424], "altern": 422, "amount": 389, "an": 392, "arm": [391, 392], "arm64": 408, "arrai": 423, "arrays_to_datafram": 321, "assembli": 422, "asynchron": 414, "attr": 410, "augment": [289, 290, 291], "automat": 422, "avail": [372, 424], "avx": 408, "back": 407, "backtest": [365, 404], "bandit": [229, 391, 392], "base": [19, 29, 84, 104, 106, 117, 145, 156, 159, 168, 171, 178, 231, 269, 367, 368, 369, 374, 375, 389, 390, 398, 423], "basic": [88, 147, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 370, 371, 415, 417, 422], "basickernel": 85, "batch": 415, "batchify_ensemble_predictor": 262, "batchify_mean_var_predict": 263, "batteri": 407, "bayb": [0, 1, 2, 19, 21, 23, 24, 25, 26, 28, 29, 35, 39, 42, 43, 44, 45, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 88, 97, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 114, 116, 117, 121, 124, 126, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 155, 156, 158, 159, 161, 165, 167, 168, 170, 171, 173, 175, 176, 177, 178, 180, 185, 188, 189, 191, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 235, 237, 238, 239, 241, 244, 245, 246, 248, 249, 251, 253, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 371, 407, 410], "bayesian": [170, 171, 173, 175, 176, 407, 420], "bayesianlinearsurrog": 254, "bayesianrecommend": 172, "bell_transform": 280, "bernoulli": 392, "betabernoullimultiarmedbanditsurrog": 230, "betaprior": 148, "binari": [271, 273], "binarytarget": 272, "black": [366, 392], "block_deserialization_hook": 208, "block_serialization_hook": 209, "boolean": [305, 306, 307, 308], "both": 400, "botorch": [173, 397], "botorchrecommend": 174, "bound": [382, 418, 421], "box": [366, 392], "break": 409, "build": [392, 421], "bytes_to_human_read": 336, "cach": [415, 417], "callabl": [374, 375, 398, 423], "campaign": [26, 27, 366, 367, 368, 369, 372, 374, 375, 377, 378, 380, 383, 386, 387, 394, 397, 398, 400, 401, 415], "cardinalityconstraint": 30, "case": 392, "catch_constant_target": 264, "categor": 121, "categoricalencod": 127, "categoricalparamet": [122, 419], "chang": 409, "changelog": 409, "check_if_in": 306, "chemic": 407, "chemistri": [309, 310, 311, 312, 313], "choicevalu": 273, "class": 410, "classproperti": 294, "clone": 407, "closer_el": 341, "closest_el": 342, "cluster": [180, 420], "code": 410, "columntransform": 356, "compar": 400, "compon": 382, "composit": 97, "compositekernel": 86, "condit": [35, 36, 416], "config": [401, 402, 415], "configur": [386, 387, 401, 422], "constraint": [28, 29, 31, 35, 39, 42, 43, 44, 45, 46, 56, 57, 58, 373, 374, 375, 376, 377, 378, 379, 380, 389, 390, 416, 421, 428], "construct": [367, 368, 369, 374, 375, 389, 397, 398, 418, 421], "constructor": [421, 422], "continu": [39, 189, 373, 375, 389, 396, 413, 416, 419, 421, 426, 428], "continuouscardinalityconstraint": 40, "continuousconstraint": 32, "continuouslinearconstraint": [41, 416], "continuouslinearequalityconstraint": 43, "continuouslinearinequalityconstraint": 44, "continuousnonlinearconstraint": 33, "continuousparamet": 118, "contribut": 410, "contributor": 411, "conveni": 418, "convent": 410, "convers": [314, 315, 316, 418, 422], "convert": [210, 386], "convert_acqf": 24, "convert_bound": 333, "copi": 422, "core": [191, 194, 195, 207, 208, 209, 210, 211, 212, 213, 220, 221, 239, 246, 248], "cpu": 408, "creat": [366, 367, 368, 369, 372, 374, 375, 377, 378, 379, 380, 386, 387, 394, 396, 397, 400, 401, 404, 405, 415, 421], "create_example_plot": 345, "creation": [367, 368, 369, 389, 390, 415, 428], "current": 424, "custom": [124, 235, 237, 366, 377, 381, 382, 385, 386, 387, 424], "customdiscreteparamet": [125, 419], "customencod": 128, "customonnxsurrog": 236, "data": [367, 368, 369, 421, 426], "datafram": [317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 374, 375, 398, 421, 422, 423], "de": [400, 422], "default": [249, 421, 422], "defaultkernelfactori": 250, "defin": [366, 374, 375, 382, 383, 384, 394, 397, 398, 402, 404, 405, 407], "definit": 383, "depend": [378, 407, 419], "deprec": [42, 43, 44, 45, 107, 108, 409], "deprecationerror": 60, "descript": 394, "deseri": 422, "deserialize_datafram": 217, "design": [407, 410], "desir": [109, 111], "desirabilityobject": [110, 418], "develop": 410, "df_apply_dependency_augment": 290, "df_apply_permutation_augment": 291, "df_drop_single_value_column": 322, "df_drop_string_column": 323, "df_uncorrelated_featur": 324, "dictionari": [401, 402], "differ": 372, "dimens": 398, "discret": [46, 196, 199, 200, 201, 376, 377, 378, 379, 389, 397, 416, 419, 420, 421], "discretecardinalityconstraint": 47, "discreteconstraint": 34, "discretecustomconstraint": [48, 416], "discretedependenciesconstraint": [49, 416], "discreteexcludeconstraint": [50, 416], "discretelinkedparametersconstraint": [51, 416], "discretenolabelduplicatesconstraint": [52, 416], "discreteparamet": 119, "discretepermutationinvarianceconstraint": [53, 416], "discreteproductconstraint": [54, 416], "discretesamplingmethod": 352, "discretesumconstraint": [55, 416], "discuss": 392, "disk": 417, "do": 423, "docstr": 410, "document": 387, "dtypefloatnumpi": 338, "dtypefloatonnx": 339, "dtypefloattorch": 358, "dummi": 293, "duplic": 389, "dure": 428, "edbo": 251, "edbokernelfactori": 252, "effici": 428, "emptysearchspaceerror": 61, "encod": 419, "end": 407, "enum": [112, 126, 274], "environ": 417, "equival": 422, "estim": 428, "exampl": [367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 386, 387, 394, 397, 398, 400, 401, 402, 406, 407], "except": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "exceptiongroup": 408, "exclus": [379, 380], "expect": 426, "expectedimprov": 3, "experi": [377, 378, 379, 380, 386, 387, 394, 400, 407, 414, 423], "experiment": [415, 417], "expir": 409, "explicit": 421, "extend": 410, "extract": 424, "fake": 428, "farthest_point_sampl": 353, "featur": 417, "field": 422, "file": [401, 402], "filter_df": 325, "find_subclass": 295, "finite_float": 361, "fix": [408, 409], "float": 417, "fpsrecommend": 186, "fraction_to_float": 315, "from": [401, 407, 409, 415, 421, 422], "full": [367, 368, 369, 421], "function": [366, 367, 368, 369, 372, 374, 375, 383, 394, 397, 398, 410, 414], "further": 415, "fuzzy_row_match": 326, "gammaprior": 149, "gaussian_process": [238, 239, 241, 244, 245, 246, 248, 249, 251], "gaussianmixtureclusteringrecommend": 181, "gaussianprocesspreset": 247, "gaussianprocesssurrog": 240, "gener": [404, 405, 410, 420], "geom_mean": 343, "get": [371, 415], "get_base_structure_hook": 211, "get_baseclass": 296, "get_canonical_smil": 310, "get_fingerprint_class": 311, "get_model_params_valid": 266, "get_parameters_from_datafram": 138, "get_subclass": 297, "get_transform_object": 327, "get_transform_paramet": 203, "get_user_detail": 284, "github": 407, "global": 413, "group_duplicate_valu": 298, "guid": 427, "halfcauchyprior": 150, "halfnormalprior": 151, "hilberts_factori": 299, "hook": [381, 382, 383, 384], "hybrid": [374, 398, 416], "imaginari": 392, "implicit": 418, "import": [366, 367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 382, 384, 386, 387, 389, 390, 392, 394, 396, 397, 398, 400, 401, 402, 404, 405], "improv": 384, "includ": 407, "inclus": 367, "incompatibilityerror": 62, "incompatibleacquisitionfunctionerror": 63, "incompatibleexplainererror": 64, "incompatiblesearchspaceerror": 65, "incomplet": 369, "incorpor": 380, "indent": 346, "independentgaussiansurrog": 232, "index": 407, "indic": 407, "infiniteintervalerror": 331, "influenc": 428, "inform": [415, 420], "initi": [367, 372], "insight": [78, 79, 81, 82], "instal": [407, 408], "instanc": 382, "instead": [386, 387], "instruct": 417, "internet": 417, "interrupt": 383, "interv": [330, 331, 332, 333, 334], "invalidsurrogatemodelerror": 66, "invalidtargetvalueerror": 67, "invari": 389, "invok": 422, "irrelev": 426, "is_abstract": 307, "is_all_inst": 300, "is_en": 285, "is_shap_explain": 81, "issu": [407, 408], "iter": [374, 375, 386, 387, 394], "json": [415, 422], "kernel": [83, 84, 87, 88, 97], "kernel_factori": [241, 244], "kernelfactori": 242, "kmeansclusteringrecommend": 182, "known": [407, 408], "leak": 408, "learn": [403, 405, 413, 423, 426], "licens": [407, 412], "limit": [424, 425], "linear": [253, 375], "linear_transform": 281, "linearkernel": 89, "link": 387, "local": [407, 413], "logexpectedimprov": 4, "lognormalprior": 152, "look_up_target": 223, "lookup": [222, 223, 367, 368, 369, 374, 375, 383, 398, 404, 405, 423], "loop": [366, 367, 368, 369, 404, 405, 407], "maco": 408, "maintain": [407, 411], "make_explainer_for_surrog": 82, "make_gp_from_preset": 248, "mandatori": 418, "manual": [377, 378, 379, 380], "mark": 414, "match": 425, "match_attribut": 301, "maternkernel": 90, "max": 425, "mean": 423, "meanpredictionsurrog": 256, "measur": [371, 386, 387, 415, 428], "mechan": [367, 368, 369, 423], "memori": [335, 336, 428], "memorys": 197, "meta": [158, 159, 161, 420], "metarecommend": 160, "method": [382, 410, 413], "min": 425, "miss": 423, "mixin": 214, "mixtur": [388, 389, 390], "mode": [394, 425], "model": [372, 386, 387, 389, 390, 392, 424], "modelnottrainederror": 68, "monitor": 384, "monkeypatch": [382, 383, 384], "multi": [391, 392, 393, 394], "multipl": 423, "naiv": [165, 255], "naivehybridspacerecommend": 166, "name": 419, "name_to_smil": 312, "necessari": [367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 386, 387, 394, 397, 398, 400, 401, 402], "nest": 422, "ngboost": 257, "ngboostsurrog": 258, "nois": 428, "nomcacquisitionfunctionerror": 69, "non_inf_float": 362, "non_nan_float": 363, "none": 423, "nonpredict": [177, 178, 180, 185], "nonpredictiverecommend": 179, "nonstring_to_tupl": 316, "norecommenderslefterror": 70, "normalprior": 153, "notenoughpointslefterror": 71, "nothingtosimulateerror": 72, "numer": [131, 277, 337, 338, 339, 340, 341, 342, 343], "numericalcontinuousparamet": [132, 419], "numericaldiscreteparamet": [133, 419], "numericaltarget": [278, 425], "numericalunderflowerror": 73, "object": [101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 367, 368, 369, 372, 374, 375, 377, 378, 379, 380, 394, 397, 400, 404, 405, 407, 418, 422], "onli": 417, "onnx": 386, "optim": [366, 404, 405, 407, 415, 428], "option": [407, 419, 420], "optionalimporterror": 74, "order": 389, "other": 372, "output": [386, 387], "overrid": 410, "packag": [407, 417], "pamclusteringrecommend": 183, "parallel": 415, "paramet": [116, 117, 120, 121, 124, 126, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143, 367, 368, 369, 372, 387, 389, 390, 415, 419, 421, 428], "parameter_cartesian_prod_panda": 199, "parameter_cartesian_prod_polar": 200, "parameterencod": 129, "partial": [21, 414], "partialacquisitionfunct": 22, "pass": 387, "pend": 414, "perform": [367, 394, 397, 398], "periodickernel": 91, "permut": 389, "piecewisepolynomialkernel": 92, "plainkernelfactori": 243, "plot": [344, 345, 346, 347, 366, 383, 384], "point": 417, "polar": [408, 417], "polynomialkernel": 93, "posteriormean": 5, "posteriorstandarddevi": 6, "pre": 386, "precis": 417, "preset": [245, 246, 248, 249, 251], "pretrain": 386, "pretty_print_df": 328, "print": [377, 378, 380, 394], "prior": [144, 145, 146, 147], "probabilityofimprov": 7, "probabl": 384, "problem": [366, 383, 408], "product": [380, 421], "productkernel": 99, "pull": 410, "pure": [167, 168, 170, 171, 173, 175, 176, 177, 178, 180, 185, 413, 420], "purerecommend": 169, "pycharm": 408, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedimprov": 12, "qnegintegratedposteriorvari": 13, "qnoisyexpectedimprov": 14, "qprobabilityofimprov": 15, "qsimpleregret": 16, "qthompsonsampl": 17, "quick": 407, "qupperconfidencebound": 18, "random": [348, 349, 350], "random_forest": 259, "randomforestsurrog": 260, "randomrecommend": 187, "rbfkernel": 94, "recommend": [155, 156, 158, 159, 161, 165, 167, 168, 170, 171, 173, 175, 176, 177, 178, 180, 185, 371, 372, 386, 387, 397, 398, 400, 414, 415, 420], "recommenderprotocol": 157, "reduct": 413, "refers_to": 302, "regist": 382, "register_custom_architectur": 237, "register_hook": 303, "relat": 408, "remov": 409, "represent": [389, 390, 421], "reproduc": 428, "request": 410, "restrict": 421, "result": [366, 383, 384, 414], "rffkernel": 95, "role": 426, "rqkernel": 96, "run": [366, 374, 375, 392], "sampl": [185, 413, 420], "sample_numerical_df": 354, "sampling_algorithm": [351, 353, 354], "scalar": [111, 113, 424], "scale": 355, "scalekernel": 100, "scenario": [224, 225, 423], "scope": 417, "search": [389, 390, 396, 404, 407, 413, 420, 421, 428], "searchspac": [188, 189, 191, 192, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 367, 369, 372, 374, 375, 377, 378, 379, 380, 394, 395, 397, 398, 405], "searchspacetyp": 193, "see": 426, "select_constructor_hook": 212, "semaphor": 408, "sequenti": [161, 415], "sequential_greedi": [175, 176], "sequentialgreedyrecommend": 176, "sequentialmetarecommend": 162, "serial": [206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 399, 400, 415, 422], "serialize_datafram": 218, "serialmixin": 215, "set": [366, 383, 384, 396, 404, 405], "set_random_se": 349, "setup": [371, 377, 378, 379, 380, 386, 387, 389, 390, 392, 394, 400], "shap": [79, 81, 82], "shapinsight": 80, "signatur": 382, "simplex": [389, 421], "simul": [219, 220, 221, 222, 223, 224, 225, 226, 227, 366, 367, 368, 369, 383, 392, 404, 405, 423], "simulate_experi": 221, "simulate_scenario": 225, "simulate_transfer_learn": 227, "singl": [114, 423], "singletargetobject": [115, 418], "sklearnclusteringrecommend": 184, "slot": [389, 390], "smile": 135, "smiles_to_fingerprint_featur": 313, "smoothedboxprior": 154, "some": [374, 375, 394], "sort_paramet": 139, "space": [389, 390, 396, 398, 404, 407, 413, 420, 421, 428], "span": 389, "stage": 386, "start": 407, "stop": 383, "str_to_acqf": 25, "strategi": [372, 407], "streamingsequentialmetarecommend": 163, "string": [401, 422], "strtobool": 308, "structure_constraint": 45, "structure_object": 108, "studi": 424, "sub": 413, "subselectioncondit": [37, 416], "subspac": 421, "subspacecontinu": 190, "subspacediscret": 198, "substanc": [134, 135, 389, 407], "substanceencod": 130, "substanceparamet": [136, 419], "suggest": 408, "suitabl": 372, "sum": 380, "support": [408, 414], "surrog": [228, 229, 231, 233, 235, 237, 238, 239, 241, 244, 245, 246, 248, 249, 251, 253, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 372, 385, 386, 387, 424], "surrogateprotocol": 234, "synchron": 410, "synthet": [397, 398], "tabl": [367, 368, 369, 404, 405, 407], "target": [268, 269, 270, 271, 273, 274, 277, 279, 280, 281, 282, 382, 393, 394, 418, 425, 428], "targetmod": 275, "targettransform": 276, "task": [404, 405], "taskparamet": [123, 419, 426], "technologi": 426, "telemetri": [283, 284, 285, 286, 287, 407, 417], "telemetry_record_recommended_measurement_percentag": 286, "telemetry_record_valu": 287, "temporary_se": 350, "terminologi": [389, 422, 423, 426], "test": [374, 375, 397, 398], "theoret": 389, "thi": [367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 380, 394, 397, 398], "thresholdcondit": [38, 416], "through": 426, "to_kernel_factori": 244, "to_object": 106, "to_searchspac": 194, "to_str": 347, "to_tensor": 329, "to_tupl": 304, "toler": 415, "tool": 410, "torch": [357, 358, 359, 408], "tradit": 390, "train": 386, "transfer": [403, 405, 423, 426], "transfer_learn": [226, 227], "transform": [279, 280, 281, 282, 394], "treasur": 426, "triangular_transform": 282, "trigger": [382, 384], "two": 402, "twophasemetarecommend": 164, "type": 422, "uncertainti": 413, "unidentifiedsubclasserror": 75, "uninstal": 417, "uninterrupt": 383, "unlock": 426, "unmatchedattributeerror": 76, "unreleas": 409, "unstructure_bas": 213, "unusedobjectwarn": 77, "upperconfidencebound": 8, "us": [367, 368, 369, 371, 372, 377, 378, 379, 380, 386, 387, 392, 394, 397, 398, 421, 422, 423, 424], "use_fallback_constructor_hook": 334, "user": 427, "util": [23, 24, 25, 137, 138, 139, 216, 217, 218, 261, 262, 263, 264, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 428], "v": [382, 389, 408, 415], "valid": [56, 57, 58, 140, 141, 142, 143, 202, 203, 204, 205, 265, 266, 267, 360, 361, 362, 363, 364, 387, 402], "validate_cardinality_constraints_are_nonoverlap": 57, "validate_constraint": 58, "validate_custom_architecture_cl": 267, "validate_decorrel": 141, "validate_is_finit": 142, "validate_not_nan": 364, "validate_paramet": 205, "validate_parameter_nam": 204, "validate_searchspace_from_config": 195, "validate_simplex_subspace_from_config": 201, "validate_unique_valu": 143, "valu": [421, 422, 423], "variabl": 417, "varname_numpy_use_single_precis": 340, "varname_torch_use_single_precis": 359, "verif": [377, 378, 379, 380, 389, 390, 402], "verifi": 375, "we": 423, "what": 423, "window": 408, "within": 421, "without": 408, "workflow": [410, 414], "wrap": [374, 375, 398], "write": 410}})