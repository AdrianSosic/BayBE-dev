Search.setIndex({"alltitles": {"Acquisition function": [[367, "acquisition-function"]], "AcquisitionFunction": [[20, null]], "Active Learning": [[407, null]], "Added": [[403, "added"], [403, "id4"], [403, "id13"], [403, "id19"], [403, "id23"], [403, "id30"], [403, "id35"], [403, "id41"], [403, "id47"], [403, "id51"], [403, "id55"], [403, "id59"], [403, "id64"], [403, "id68"], [403, "id71"], [403, "id75"], [403, "id79"], [403, "id83"], [403, "id86"], [403, "id90"], [403, "id94"], [403, "id98"], [403, "id102"], [403, "id108"], [403, "id111"]], "Addendum: Description of transformation functions": [[387, "addendum-description-of-transformation-functions"]], "Adding Irrelevant Data": [[420, null]], "Adding Partial Results": [[408, "adding-partial-results"]], "Adding measurements": [[409, "adding-measurements"]], "Additional Options for Discrete Search Spaces": [[414, null]], "AdditiveKernel": [[90, null]], "Advanced Example: Chemical Substances": [[401, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[385, "an-imaginary-use-case"]], "Asynchronous Workflows": [[408, null]], "Automatic field conversion": [[416, "automatic-field-conversion"]], "Available models": [[418, "available-models"]], "Available recommenders suitable for initial recommendation": [[367, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[367, "available-surrogate-models"]], "Backtesting": [[357, null], [398, null]], "Basic Instructions": [[411, "basic-instructions"]], "Basic creation": [[409, "basic-creation"]], "Basic example for using BayBE": [[366, null]], "Basic string assembly": [[416, "basic-string-assembly"]], "BasicKernel": [[77, null]], "Basics": [[365, null], [409, "basics"]], "Batch optimization": [[409, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[401, null]], "Bayesian Recommenders": [[414, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[246, null]], "BayesianRecommender": [[164, null]], "Bernoulli Multi Armed Bandit": [[385, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[222, null]], "BetaPrior": [[140, null]], "BinaryTarget": [[264, null]], "BotorchRecommender": [[166, null]], "Bound methods": [[378, "bound-methods"]], "Breaking Changes": [[403, "breaking-changes"], [403, "id3"]], "Building from the Product of Parameter Values": [[415, "building-from-the-product-of-parameter-values"], [415, "id2"]], "Building the Model": [[385, "building-the-model"]], "Caching of recommendations": [[409, "caching-of-recommendations"]], "Campaign": [[27, null]], "Campaign Stopping": [[379, null]], "Campaigns": [[409, null]], "CardinalityConstraint": [[30, null]], "CategoricalEncoding": [[119, null]], "CategoricalParameter": [[114, null], [413, "categoricalparameter"]], "Changed": [[403, "changed"], [403, "id5"], [403, "id10"], [403, "id14"], [403, "id20"], [403, "id24"], [403, "id27"], [403, "id31"], [403, "id36"], [403, "id42"], [403, "id48"], [403, "id52"], [403, "id56"], [403, "id60"], [403, "id65"], [403, "id69"], [403, "id72"], [403, "id76"], [403, "id80"], [403, "id84"], [403, "id87"], [403, "id91"], [403, "id95"], [403, "id99"], [403, "id103"]], "Changelog": [[403, null]], "Clustering Recommenders": [[414, "clustering-recommenders"]], "Code Design": [[404, "code-design"]], "ColumnTransformer": [[348, null]], "Comparing recommendations in both objects": [[394, "comparing-recommendations-in-both-objects"]], "CompositeKernel": [[78, null]], "Condition": [[37, null]], "Conditions": [[410, "conditions"]], "Constraint": [[31, null]], "Constraints": [[410, null]], "Constraints Continuous": [[368, null]], "Constraints Discrete": [[371, null]], "Construct the campaign and run some iterations": [[369, "construct-the-campaign-and-run-some-iterations"], [370, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[415, "constructing-full-search-spaces"]], "Constructing a campaign and performing the simulation loop": [[364, "constructing-a-campaign-and-performing-the-simulation-loop"]], "Constructing campaigns": [[358, "constructing-campaigns"]], "Constructing campaigns for the simulation loop": [[359, "constructing-campaigns-for-the-simulation-loop"], [360, "constructing-campaigns-for-the-simulation-loop"], [361, "constructing-campaigns-for-the-simulation-loop"], [362, "constructing-campaigns-for-the-simulation-loop"], [363, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[415, "constructing-from-a-dataframe"], [415, "id1"], [415, "id3"]], "Constructing hybrid recommenders": [[392, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[389, "constructing-the-campaign-and-performing-a-recommendation"], [390, "constructing-the-campaign-and-performing-a-recommendation"], [391, "constructing-the-campaign-and-performing-a-recommendation"], [392, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[362, "constructing-the-hybrid-searchspace"], [392, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[410, "continuous-constraints"]], "Continuous Constraints in Single Precision": [[411, null]], "Continuous Parameters": [[413, "continuous-parameters"]], "Continuous Subspaces": [[415, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[41, null]], "ContinuousConstraint": [[32, null]], "ContinuousLinearConstraint": [[33, null]], "ContinuousLinearEqualityConstraint": [[42, null], [410, "continuouslinearequalityconstraint"]], "ContinuousLinearInequalityConstraint": [[43, null], [410, "continuouslinearinequalityconstraint"]], "ContinuousNonlinearConstraint": [[34, null]], "ContinuousParameter": [[110, null]], "Contributing to BayBE": [[404, null]], "Contributors": [[405, null], [405, "id1"]], "Convenience construction and implicit conversion": [[412, null]], "Convert model to onnx": [[382, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[382, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[383, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[382, "create-campaign"]], "Creating a Simplex-Bound Discrete Subspace": [[415, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign": [[409, "creating-a-campaign"]], "Creating a campaign from the configuration file": [[395, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[372, "creating-and-printing-the-campaign"], [373, "creating-and-printing-the-campaign"], [375, "creating-and-printing-the-campaign"], [376, "creating-and-printing-the-campaign"], [387, "creating-and-printing-the-campaign"]], "Creating multiple target object": [[364, "creating-multiple-target-object"]], "Creating the Objective": [[361, "creating-the-objective"]], "Creating the Optimization Objective": [[398, "creating-the-optimization-objective"], [399, "creating-the-optimization-objective"]], "Creating the Search Space": [[398, "creating-the-search-space"]], "Creating the Searchspace": [[399, "creating-the-searchspace"]], "Creating the campaign": [[367, "creating-the-campaign"], [383, "creating-the-campaign"], [394, "creating-the-campaign"]], "Creating the constraint": [[372, "creating-the-constraint"], [374, "creating-the-constraint"], [375, "creating-the-constraint"]], "Creating the constraints": [[373, "creating-the-constraints"], [376, "creating-the-constraints"]], "Creating the objective": [[387, "creating-the-objective"]], "Creating the objective object": [[364, "creating-the-objective-object"]], "Creating the recommender object": [[367, "creating-the-recommender-object"]], "Creating the searchspace": [[364, "creating-the-searchspace"]], "Creating the searchspace and the objective": [[358, "creating-the-searchspace-and-the-objective"], [359, "creating-the-searchspace-and-the-objective"], [360, "creating-the-searchspace-and-the-objective"], [363, "creating-the-searchspace-and-the-objective"], [369, "creating-the-searchspace-and-the-objective"], [370, "creating-the-searchspace-and-the-objective"], [372, "creating-the-searchspace-and-the-objective"], [373, "creating-the-searchspace-and-the-objective"], [374, "creating-the-searchspace-and-the-objective"], [375, "creating-the-searchspace-and-the-objective"], [376, "creating-the-searchspace-and-the-objective"], [389, "creating-the-searchspace-and-the-objective"], [390, "creating-the-searchspace-and-the-objective"], [391, "creating-the-searchspace-and-the-objective"]], "Creation from a JSON config": [[409, "creation-from-a-json-config"]], "Custom Hooks": [[377, null]], "Custom Surrogates": [[381, null]], "CustomDiscreteParameter": [[117, null], [413, "customdiscreteparameter"]], "CustomEncoding": [[120, null]], "CustomONNXSurrogate": [[228, null]], "Dataframe deserialization": [[416, "dataframe-deserialization"]], "DefaultKernelFactory": [[242, null]], "Defining config dictionaries": [[396, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[379, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[380, "defining-the-hook"]], "Defining the Hooks": [[378, "defining-the-hooks"]], "Defining the Optimization Objective": [[401, "defining-the-optimization-objective"]], "Defining the Search Space": [[401, "defining-the-search-space"]], "Defining the Tasks": [[398, "defining-the-tasks"], [399, "defining-the-tasks"]], "Defining the custom test function": [[390, "defining-the-custom-test-function"]], "Defining the targets": [[387, "defining-the-targets"]], "Defining the test function": [[358, "defining-the-test-function"], [359, "defining-the-test-function"], [364, "defining-the-test-function"], [369, "defining-the-test-function"], [370, "defining-the-test-function"], [389, "defining-the-test-function"], [391, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[392, "defining-the-test-function-and-the-hybrid-dimensions"]], "Defining the test function.": [[362, "defining-the-test-function"]], "Deprecations": [[403, "deprecations"], [403, "id8"], [403, "id17"], [403, "id33"], [403, "id39"], [403, "id45"], [403, "id62"]], "Deserialization from configuration strings": [[416, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[102, null], [412, "desirabilityobjective"]], "Developer Tools": [[404, "developer-tools"]], "Discrete Constraints": [[410, "discrete-constraints"]], "Discrete Parameters": [[413, "discrete-parameters"]], "Discrete Subspaces": [[415, "discrete-subspaces"]], "DiscreteCardinalityConstraint": [[45, null]], "DiscreteConstraint": [[35, null]], "DiscreteCustomConstraint": [[46, null], [410, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[47, null], [410, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[48, null], [410, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[49, null], [410, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[50, null], [410, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[111, null]], "DiscretePermutationInvarianceConstraint": [[51, null], [410, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[52, null]], "DiscreteSamplingMethod": [[344, null]], "DiscreteSumConstraint": [[53, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[410, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[385, "discussion"]], "Disk Caching": [[411, "disk-caching"]], "Dummy": [[285, null]], "EDBOKernelFactory": [[244, null]], "Environment Variables": [[411, null]], "Equivalent copies": [[416, null]], "Example Searchspace and objective parameters": [[367, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[369, null]], "Example for creating campaigns from configs": [[395, null]], "Example for custom parameter passing in surrogate models": [[383, null]], "Example for full simulation loop using a custom analytical test function": [[359, null]], "Example for full simulation loop using a custom analytical test function in a hybrid": [[362, null]], "Example for full simulation loop using a table-based lookup mechanism": [[361, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[363, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[360, null]], "Example for full simulation loop using the multi target mode for custom analytic": [[364, null]], "Example for linear constraints in a continuous searchspace": [[370, null]], "Example for surrogate model with a custom pretrained model": [[382, null]], "Example for the serialization of a campaign": [[394, null]], "Example for using a custom BoTorch test function in a continuous searchspace": [[390, null]], "Example for using a mixture use case in a discrete searchspace": [[375, null]], "Example for using a synthetic BoTorch test function in a continuous searchspace": [[389, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[391, null]], "Example for using custom constraints in discrete searchspaces": [[372, null]], "Example for using dependency constraints in discrete searchspaces": [[373, null]], "Example for using different strategies": [[367, null]], "Example for using exclusion constraints in discrete searchspaces": [[374, null]], "Example for using exclusion constraints incorporating sums and products": [[376, null]], "Example for using synthetic test functions in hybrid spaces": [[392, null]], "Example for using the multi target mode for the objective": [[387, null]], "Example for validation of a config file": [[396, null]], "Examples": [[400, null]], "Expectations": [[420, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[382, "experiment-setup"], [383, "experiment-setup"]], "Experiment setup": [[372, "experiment-setup"], [373, "experiment-setup"], [374, "experiment-setup"], [375, "experiment-setup"], [376, "experiment-setup"], [394, "experiment-setup"]], "Experiment setup and creating the searchspace": [[387, "experiment-setup-and-creating-the-searchspace"]], "Expired Deprecations (from 0.6.*)": [[403, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[403, "expired-deprecations-from-0-7"]], "Extending BayBE\u2019s Functionality": [[404, "extending-baybe-s-functionality"]], "FPSRecommender": [[178, null]], "Fixed": [[403, "fixed"], [403, "id7"], [403, "id11"], [403, "id16"], [403, "id21"], [403, "id25"], [403, "id32"], [403, "id37"], [403, "id43"], [403, "id49"], [403, "id57"], [403, "id61"], [403, "id66"], [403, "id73"], [403, "id77"], [403, "id81"], [403, "id88"], [403, "id92"], [403, "id96"], [403, "id100"], [403, "id104"], [403, "id106"], [403, "id109"]], "Floating Point Precision": [[411, "floating-point-precision"]], "From GitHub": [[401, "from-github"]], "From Local Clone": [[401, "from-local-clone"]], "From Package Index": [[401, "from-package-index"]], "From the Default Constructor": [[415, "from-the-default-constructor"]], "Further information": [[409, "further-information"]], "GammaPrior": [[141, null]], "GaussianMixtureClusteringRecommender": [[173, null]], "GaussianProcessPreset": [[239, null]], "GaussianProcessSurrogate": [[232, null]], "General Information": [[414, "general-information"]], "General Workflow": [[404, "general-workflow"]], "Generating Lookup Tables": [[398, "generating-lookup-tables"], [399, "generating-lookup-tables"]], "Getting a recommendation and adding measurements": [[366, "getting-a-recommendation-and-adding-measurements"]], "Getting recommendations": [[409, "getting-recommendations"]], "Global Uncertainty Reduction": [[407, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[142, null]], "HalfNormalPrior": [[143, null]], "Hook instance vs. target instance": [[378, null]], "How to avoid": [[402, "how-to-avoid"]], "Hybrid constraints": [[410, null]], "Imports": [[358, "imports"], [378, "imports"], [380, "imports"], [385, "imports"], [398, "imports"], [399, "imports"]], "Inclusion of initial data": [[360, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[224, null]], "Indices and Tables": [[401, "indices-and-tables"]], "Interval": [[324, null]], "Invoking alternative constructors": [[416, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[382, "iterate-with-recommendations-and-measurements"], [383, "iterate-with-recommendations-and-measurements"]], "JSON de-/serialization": [[416, "json-de-serialization"]], "KMeansClusteringRecommender": [[174, null]], "Kernel": [[79, null]], "KernelFactory": [[234, null]], "License": [[406, null]], "Limitations": [[419, "limitations"]], "LinearKernel": [[81, null]], "Links for documentation": [[383, "links-for-documentation"]], "Local Uncertainty Reduction": [[407, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[144, null]], "Lookup functionality and data creation": [[360, "lookup-functionality-and-data-creation"], [361, "lookup-functionality-and-data-creation"], [363, "lookup-functionality-and-data-creation"]], "MATCH mode": [[419, "match-mode"]], "MIN and MAX mode": [[419, "min-and-max-mode"]], "Maintainers": [[405, "maintainers"]], "Mandatory target bounds": [[412, null]], "Manual verification of the constraint": [[372, "manual-verification-of-the-constraint"], [375, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[373, "manual-verification-of-the-constraints"], [374, "manual-verification-of-the-constraints"], [376, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[408, "marking-experiments-as-pending"]], "MaternKernel": [[82, null]], "MeanPredictionSurrogate": [[248, null]], "MemorySize": [[189, null]], "Meta Recommenders": [[414, "meta-recommenders"]], "MetaRecommender": [[152, null]], "Metadata": [[415, "metadata"]], "Model Outputs": [[382, "model-outputs"], [383, "model-outputs"]], "Monitoring the Probability of Improvement": [[380, null]], "Monkeypatching": [[378, "monkeypatching"], [379, null], [380, "monkeypatching"]], "Multi Target": [[386, null]], "Multi-Armed Bandit": [[384, null]], "NGBoostSurrogate": [[250, null]], "NaiveHybridSpaceRecommender": [[158, null]], "Necessary imports": [[382, "necessary-imports"], [383, "necessary-imports"], [390, "necessary-imports"], [394, "necessary-imports"], [395, "necessary-imports"], [396, "necessary-imports"]], "Necessary imports for this example": [[359, "necessary-imports-for-this-example"], [360, "necessary-imports-for-this-example"], [361, "necessary-imports-for-this-example"], [362, "necessary-imports-for-this-example"], [363, "necessary-imports-for-this-example"], [364, "necessary-imports-for-this-example"], [366, "necessary-imports-for-this-example"], [367, "necessary-imports-for-this-example"], [369, "necessary-imports-for-this-example"], [370, "necessary-imports-for-this-example"], [372, "necessary-imports-for-this-example"], [373, "necessary-imports-for-this-example"], [374, "necessary-imports-for-this-example"], [375, "necessary-imports-for-this-example"], [376, "necessary-imports-for-this-example"], [387, "necessary-imports-for-this-example"], [389, "necessary-imports-for-this-example"], [391, "necessary-imports-for-this-example"], [392, "necessary-imports-for-this-example"]], "Nesting objects": [[416, "nesting-objects"]], "NonPredictiveRecommender": [[171, null]], "NormalPrior": [[145, null]], "NumericalContinuousParameter": [[124, null], [413, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[125, null], [413, "numericaldiscreteparameter"]], "NumericalTarget": [[270, null], [419, "numericaltarget"]], "Objective": [[97, null], [412, null]], "Optional Dependencies": [[401, "optional-dependencies"]], "Optional dependency": [[413, null]], "Optional: Defining the Optimization Strategy": [[401, "optional-defining-the-optimization-strategy"]], "Other parameters": [[367, "other-parameters"]], "PAMClusteringRecommender": [[175, null]], "Parameter": [[112, null]], "Parameter encoding": [[413, null]], "Parameter names": [[413, null]], "Parameter tolerances": [[409, null]], "ParameterEncoding": [[121, null]], "Parameters": [[413, null]], "Parameters for a full simulation loop": [[358, "parameters-for-a-full-simulation-loop"], [359, "parameters-for-a-full-simulation-loop"], [360, "parameters-for-a-full-simulation-loop"], [361, "parameters-for-a-full-simulation-loop"], [362, "parameters-for-a-full-simulation-loop"], [363, "parameters-for-a-full-simulation-loop"], [364, "parameters-for-a-full-simulation-loop"]], "PartialAcquisitionFunction": [[22, null]], "Performing some iterations": [[387, "performing-some-iterations"]], "Performing the simulation loop": [[358, "performing-the-simulation-loop"], [359, "performing-the-simulation-loop"], [360, "performing-the-simulation-loop"]], "PeriodicKernel": [[83, null]], "PiecewisePolynomialKernel": [[84, null]], "PlainKernelFactory": [[235, null]], "Plotting the Results": [[379, "plotting-the-results"], [380, "plotting-the-results"]], "Polars": [[411, "polars"]], "PolynomialKernel": [[85, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Prior": [[138, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[379, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[91, null]], "Pure Recommenders": [[414, "pure-recommenders"]], "PureRecommender": [[161, null]], "Purely Continuous Search Spaces": [[407, null]], "PyCharm vs. exceptiongroup": [[402, null]], "RBFKernel": [[86, null]], "RFFKernel": [[87, null]], "RQKernel": [[88, null]], "RandomForestSurrogate": [[252, null]], "RandomRecommender": [[179, null]], "RecommenderProtocol": [[149, null]], "Recommenders": [[414, null]], "Registering Custom Hooks": [[378, null]], "Removed": [[403, "removed"], [403, "id6"], [403, "id15"], [403, "id28"], [403, "id38"], [403, "id44"], [403, "id53"]], "Representation of Data within Discrete Subspaces": [[415, "representation-of-data-within-discrete-subspaces"]], "Restricting Search Spaces Using Constraints": [[415, "restricting-search-spaces-using-constraints"]], "Reversing the inequality": [[410, null]], "Running the Simulation": [[385, "running-the-simulation"]], "SKLearnClusteringRecommender": [[176, null]], "Sampling Recommenders": [[414, "sampling-recommenders"]], "Scalarizer": [[105, null]], "ScaleKernel": [[92, null]], "Search Spaces": [[415, null]], "SearchSpace": [[184, null]], "SearchSpaceType": [[185, null]], "Searchspaces": [[388, null]], "Seeing Transfer Learning in Action": [[420, "seeing-transfer-learning-in-action"]], "Sequential vs. parallel experimentation": [[409, null]], "SequentialMetaRecommender": [[154, null]], "SerialMixin": [[207, null]], "Serialization": [[393, null], [409, "serialization"], [416, null]], "Serialization and de-serialization": [[394, "serialization-and-de-serialization"]], "Settings": [[379, "settings"], [380, "settings"], [398, "settings"], [399, "settings"]], "Setup": [[366, "setup"], [385, "setup"]], "Signature components": [[378, null]], "Simulating Multiple Scenarios": [[417, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[417, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[417, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[379, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[379, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[417, null]], "Simulation Loop": [[398, "simulation-loop"], [399, "simulation-loop"]], "Simulation loop using a BoTorch test function": [[358, null]], "SingleTargetObjective": [[107, null], [412, "singletargetobjective"]], "SmoothedBoxPrior": [[146, null]], "StreamingSequentialMetaRecommender": [[155, null]], "Sub-Sampling Method": [[407, null]], "SubSelectionCondition": [[38, null], [410, "subselectioncondition"]], "SubspaceContinuous": [[182, null]], "SubspaceDiscrete": [[190, null]], "SubstanceEncoding": [[122, null]], "SubstanceParameter": [[128, null], [413, "substanceparameter"]], "Supported Acquisition Functions": [[408, null]], "Supported Recommenders": [[408, null]], "Surrogate": [[225, null]], "SurrogateProtocol": [[226, null]], "Surrogates": [[418, null]], "Synchronizing Pull Requests": [[404, "synchronizing-pull-requests"]], "Target": [[262, null]], "TargetMode": [[267, null]], "TargetTransformation": [[268, null]], "Targets": [[419, null]], "TaskParameter": [[115, null], [413, "taskparameter"]], "Technology": [[420, null]], "Telemetry": [[411, "telemetry"]], "Telemetry Scope": [[411, null]], "Terminology": [[416, null], [420, null]], "Terminology Continued": [[420, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[417, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[385, "the-black-box-model"]], "The Lookup Functionality": [[417, "the-lookup-functionality"]], "The Optimization Loop": [[401, "the-optimization-loop"]], "The Problem": [[402, "the-problem"]], "The Role of the TaskParameter": [[420, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[395, "the-configuration-dictionary-as-a-string"]], "The type field": [[416, "the-type-field"]], "ThresholdCondition": [[39, null], [410, "thresholdcondition"]], "Transfer Learning": [[397, null], [399, null], [420, null]], "Triggering the Hook": [[380, "triggering-the-hook"]], "Triggering the Hooks": [[378, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[156, null]], "Uninstalling Internet Packages": [[411, null]], "Unlocking Data Treasures Through Transfer Learning": [[420, "unlocking-data-treasures-through-transfer-learning"]], "UpperConfidenceBound": [[8, null]], "User Guide": [[421, null]], "Using Explicit Bounds": [[415, "using-explicit-bounds"]], "Using a Callable": [[417, "using-a-callable"]], "Using a Dataframe": [[417, "using-a-dataframe"]], "Using abbreviations": [[416, "using-abbreviations"]], "Using configuration instead": [[382, "using-configuration-instead"], [383, "using-configuration-instead"]], "Using custom models": [[418, "using-custom-models"]], "Using default values": [[416, "using-default-values"]], "Validation of model parameters": [[383, "validation-of-model-parameters"]], "Verification of the two dictionaries": [[396, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[370, "verify-the-constraints"]], "When to encounter": [[402, "when-to-encounter"]], "Writing Docstrings": [[404, "writing-docstrings"]], "Writing attrs classes": [[404, "writing-attrs-classes"]], "[0.1.0] - 2022-10-01": [[403, "id110"]], "[0.10.0] - 2024-08-02": [[403, "id2"]], "[0.11.0] - 2024-09-09": [[403, "id1"]], "[0.2.0] - 2022-11-10": [[403, "id107"]], "[0.2.1] - 2022-12-01": [[403, "id105"]], "[0.2.2] - 2023-01-13": [[403, "id101"]], "[0.2.3] - 2023-03-14": [[403, "id97"]], "[0.2.4] - 2023-03-24": [[403, "id93"]], "[0.3.0] - 2023-06-27": [[403, "id89"]], "[0.3.1] - 2023-07-17": [[403, "id85"]], "[0.3.2] - 2023-07-24": [[403, "id82"]], "[0.4.0] - 2023-08-16": [[403, "id78"]], "[0.4.1] - 2023-08-23": [[403, "id74"]], "[0.4.2] - 2023-08-29": [[403, "id70"]], "[0.5.0] - 2023-09-15": [[403, "id67"]], "[0.5.1] - 2023-10-19": [[403, "id63"]], "[0.6.0] - 2023-11-17": [[403, "id58"]], "[0.6.1] - 2023-11-27": [[403, "id54"]], "[0.7.0] - 2023-12-04": [[403, "id50"]], "[0.7.1] - 2023-12-07": [[403, "id46"]], "[0.7.2] - 2024-01-24": [[403, "id40"]], "[0.7.3] - 2024-02-09": [[403, "id34"]], "[0.7.4] - 2024-02-28": [[403, "id29"]], "[0.8.0] - 2024-02-29": [[403, "id26"]], "[0.8.1] - 2024-03-11": [[403, "id22"]], "[0.8.2] - 2024-03-27": [[403, "id18"]], "[0.9.0] - 2024-05-21": [[403, "id12"]], "[0.9.1] - 2024-06-04": [[403, "id9"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[19, null]], "baybe.acquisition.partial": [[21, null]], "baybe.acquisition.utils": [[23, null]], "baybe.acquisition.utils.convert_acqf": [[24, null]], "baybe.acquisition.utils.str_to_acqf": [[25, null]], "baybe.campaign": [[26, null]], "baybe.constraints": [[28, null]], "baybe.constraints.base": [[29, null]], "baybe.constraints.conditions": [[36, null]], "baybe.constraints.continuous": [[40, null]], "baybe.constraints.discrete": [[44, null]], "baybe.constraints.validation": [[54, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[55, null]], "baybe.constraints.validation.validate_constraints": [[56, null]], "baybe.exceptions": [[57, null]], "baybe.exceptions.DeprecationError": [[58, null]], "baybe.exceptions.EmptySearchSpaceError": [[59, null]], "baybe.exceptions.IncompatibilityError": [[60, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[61, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[62, null]], "baybe.exceptions.InvalidSurrogateModelError": [[63, null]], "baybe.exceptions.InvalidTargetValueError": [[64, null]], "baybe.exceptions.ModelNotTrainedError": [[65, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[66, null]], "baybe.exceptions.NoRecommendersLeftError": [[67, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[68, null]], "baybe.exceptions.NothingToSimulateError": [[69, null]], "baybe.exceptions.NumericalUnderflowError": [[70, null]], "baybe.exceptions.OptionalImportError": [[71, null]], "baybe.exceptions.UnidentifiedSubclassError": [[72, null]], "baybe.exceptions.UnmatchedAttributeError": [[73, null]], "baybe.exceptions.UnusedObjectWarning": [[74, null]], "baybe.kernels": [[75, null]], "baybe.kernels.base": [[76, null]], "baybe.kernels.basic": [[80, null]], "baybe.kernels.composite": [[89, null]], "baybe.objective": [[93, null]], "baybe.objective.Objective": [[94, null]], "baybe.objectives": [[95, null]], "baybe.objectives.base": [[96, null]], "baybe.objectives.base.to_objective": [[98, null]], "baybe.objectives.deprecation": [[99, null]], "baybe.objectives.deprecation.structure_objective": [[100, null]], "baybe.objectives.desirability": [[101, null]], "baybe.objectives.desirability.scalarize": [[103, null]], "baybe.objectives.enum": [[104, null]], "baybe.objectives.single": [[106, null]], "baybe.parameters": [[108, null]], "baybe.parameters.base": [[109, null]], "baybe.parameters.categorical": [[113, null]], "baybe.parameters.custom": [[116, null]], "baybe.parameters.enum": [[118, null]], "baybe.parameters.numerical": [[123, null]], "baybe.parameters.substance": [[126, null]], "baybe.parameters.substance.Smiles": [[127, null]], "baybe.parameters.utils": [[129, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[130, null]], "baybe.parameters.utils.sort_parameters": [[131, null]], "baybe.parameters.validation": [[132, null]], "baybe.parameters.validation.validate_decorrelation": [[133, null]], "baybe.parameters.validation.validate_is_finite": [[134, null]], "baybe.parameters.validation.validate_unique_values": [[135, null]], "baybe.priors": [[136, null]], "baybe.priors.base": [[137, null]], "baybe.priors.basic": [[139, null]], "baybe.recommenders": [[147, null]], "baybe.recommenders.base": [[148, null]], "baybe.recommenders.meta": [[150, null]], "baybe.recommenders.meta.base": [[151, null]], "baybe.recommenders.meta.sequential": [[153, null]], "baybe.recommenders.naive": [[157, null]], "baybe.recommenders.pure": [[159, null]], "baybe.recommenders.pure.base": [[160, null]], "baybe.recommenders.pure.bayesian": [[162, null]], "baybe.recommenders.pure.bayesian.base": [[163, null]], "baybe.recommenders.pure.bayesian.botorch": [[165, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[167, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[168, null]], "baybe.recommenders.pure.nonpredictive": [[169, null]], "baybe.recommenders.pure.nonpredictive.base": [[170, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[172, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[177, null]], "baybe.searchspace": [[180, null]], "baybe.searchspace.continuous": [[181, null]], "baybe.searchspace.core": [[183, null]], "baybe.searchspace.core.to_searchspace": [[186, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[187, null]], "baybe.searchspace.discrete": [[188, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[191, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[192, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[193, null]], "baybe.searchspace.validation": [[194, null]], "baybe.searchspace.validation.get_transform_parameters": [[195, null]], "baybe.searchspace.validation.validate_parameter_names": [[196, null]], "baybe.searchspace.validation.validate_parameters": [[197, null]], "baybe.serialization": [[198, null]], "baybe.serialization.core": [[199, null]], "baybe.serialization.core.block_deserialization_hook": [[200, null]], "baybe.serialization.core.block_serialization_hook": [[201, null]], "baybe.serialization.core.converter": [[202, null]], "baybe.serialization.core.get_base_structure_hook": [[203, null]], "baybe.serialization.core.select_constructor_hook": [[204, null]], "baybe.serialization.core.unstructure_base": [[205, null]], "baybe.serialization.mixin": [[206, null]], "baybe.serialization.utils": [[208, null]], "baybe.serialization.utils.deserialize_dataframe": [[209, null]], "baybe.serialization.utils.serialize_dataframe": [[210, null]], "baybe.simulation": [[211, null]], "baybe.simulation.core": [[212, null]], "baybe.simulation.core.simulate_experiment": [[213, null]], "baybe.simulation.lookup": [[214, null]], "baybe.simulation.lookup.look_up_targets": [[215, null]], "baybe.simulation.scenarios": [[216, null]], "baybe.simulation.scenarios.simulate_scenarios": [[217, null]], "baybe.simulation.transfer_learning": [[218, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[219, null]], "baybe.surrogates": [[220, null]], "baybe.surrogates.bandit": [[221, null]], "baybe.surrogates.base": [[223, null]], "baybe.surrogates.custom": [[227, null]], "baybe.surrogates.custom.register_custom_architecture": [[229, null]], "baybe.surrogates.gaussian_process": [[230, null]], "baybe.surrogates.gaussian_process.core": [[231, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[233, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[236, null]], "baybe.surrogates.gaussian_process.presets": [[237, null]], "baybe.surrogates.gaussian_process.presets.core": [[238, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[240, null]], "baybe.surrogates.gaussian_process.presets.default": [[241, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[243, null]], "baybe.surrogates.linear": [[245, null]], "baybe.surrogates.naive": [[247, null]], "baybe.surrogates.ngboost": [[249, null]], "baybe.surrogates.random_forest": [[251, null]], "baybe.surrogates.utils": [[253, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[254, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[255, null]], "baybe.surrogates.utils.catch_constant_targets": [[256, null]], "baybe.surrogates.validation": [[257, null]], "baybe.surrogates.validation.get_model_params_validator": [[258, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[259, null]], "baybe.targets": [[260, null]], "baybe.targets.base": [[261, null]], "baybe.targets.binary": [[263, null]], "baybe.targets.binary.ChoiceValue": [[265, null]], "baybe.targets.enum": [[266, null]], "baybe.targets.numerical": [[269, null]], "baybe.targets.transforms": [[271, null]], "baybe.targets.transforms.bell_transform": [[272, null]], "baybe.targets.transforms.linear_transform": [[273, null]], "baybe.targets.transforms.triangular_transform": [[274, null]], "baybe.telemetry": [[275, null]], "baybe.telemetry.get_user_details": [[276, null]], "baybe.telemetry.is_enabled": [[277, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[278, null]], "baybe.telemetry.telemetry_record_value": [[279, null]], "baybe.utils": [[280, null]], "baybe.utils.augmentation": [[281, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[282, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[283, null]], "baybe.utils.basic": [[284, null]], "baybe.utils.basic.find_subclass": [[287, null]], "baybe.utils.basic.get_baseclasses": [[288, null]], "baybe.utils.basic.get_subclasses": [[289, null]], "baybe.utils.basic.group_duplicate_values": [[290, null]], "baybe.utils.basic.hilberts_factory": [[291, null]], "baybe.utils.basic.match_attributes": [[292, null]], "baybe.utils.basic.refers_to": [[293, null]], "baybe.utils.basic.register_hooks": [[294, null]], "baybe.utils.basic.to_tuple": [[295, null]], "baybe.utils.boolean": [[296, null]], "baybe.utils.boolean.check_if_in": [[297, null]], "baybe.utils.boolean.is_abstract": [[298, null]], "baybe.utils.boolean.strtobool": [[299, null]], "baybe.utils.botorch_wrapper": [[300, null]], "baybe.utils.botorch_wrapper.botorch_function_wrapper": [[301, null]], "baybe.utils.chemistry": [[302, null]], "baybe.utils.chemistry.get_canonical_smiles": [[303, null]], "baybe.utils.chemistry.is_valid_smiles": [[304, null]], "baybe.utils.chemistry.name_to_smiles": [[305, null]], "baybe.utils.chemistry.smiles_to_fp_features": [[306, null]], "baybe.utils.chemistry.smiles_to_molecules": [[307, null]], "baybe.utils.chemistry.smiles_to_mordred_features": [[308, null]], "baybe.utils.chemistry.smiles_to_rdkit_features": [[309, null]], "baybe.utils.conversion": [[310, null]], "baybe.utils.conversion.fraction_to_float": [[311, null]], "baybe.utils.conversion.nonstring_to_tuple": [[312, null]], "baybe.utils.dataframe": [[313, null]], "baybe.utils.dataframe.add_fake_results": [[314, null]], "baybe.utils.dataframe.add_parameter_noise": [[315, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[316, null]], "baybe.utils.dataframe.df_drop_string_columns": [[317, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[318, null]], "baybe.utils.dataframe.fuzzy_row_match": [[319, null]], "baybe.utils.dataframe.pretty_print_df": [[320, null]], "baybe.utils.dataframe.to_tensor": [[321, null]], "baybe.utils.interval": [[322, null]], "baybe.utils.interval.InfiniteIntervalError": [[323, null]], "baybe.utils.interval.convert_bounds": [[325, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[326, null]], "baybe.utils.memory": [[327, null]], "baybe.utils.memory.bytes_to_human_readable": [[328, null]], "baybe.utils.numerical": [[329, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[330, null]], "baybe.utils.numerical.DTypeFloatONNX": [[331, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[332, null]], "baybe.utils.numerical.closer_element": [[333, null]], "baybe.utils.numerical.closest_element": [[334, null]], "baybe.utils.numerical.geom_mean": [[335, null]], "baybe.utils.plotting": [[336, null]], "baybe.utils.plotting.create_example_plots": [[337, null]], "baybe.utils.plotting.indent": [[338, null]], "baybe.utils.plotting.to_string": [[339, null]], "baybe.utils.random": [[340, null]], "baybe.utils.random.set_random_seed": [[341, null]], "baybe.utils.random.temporary_seed": [[342, null]], "baybe.utils.sampling_algorithms": [[343, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[345, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[346, null]], "baybe.utils.scaling": [[347, null]], "baybe.utils.torch": [[349, null]], "baybe.utils.torch.DTypeFloatTorch": [[350, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[351, null]], "baybe.utils.validation": [[352, null]], "baybe.utils.validation.finite_float": [[353, null]], "baybe.utils.validation.non_inf_float": [[354, null]], "baybe.utils.validation.non_nan_float": [[355, null]], "baybe.utils.validation.validate_not_nan": [[356, null]], "classproperty": [[286, null]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNoisyExpectedImprovement": [[12, null]], "qNegIntegratedPosteriorVariance": [[13, null]], "qNoisyExpectedImprovement": [[14, null]], "qProbabilityOfImprovement": [[15, null]], "qSimpleRegret": [[16, null]], "qThompsonSampling": [[17, null]], "qUpperConfidenceBound": [[18, null]], "\u201cPre-training\u201d stage": [[382, "pre-training-stage"]], "\u26a1 Quick Start": [[401, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[401, "maintainers"]], "\ud83d\udcbb Installation": [[401, "installation"]], "\ud83d\udcc4 License": [[401, "license"]], "\ud83d\udce1 Telemetry": [[401, "telemetry"]], "\ud83d\udee0\ufe0f Known Issues": [[401, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousLinearConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objective", "_autosummary/baybe.objective.Objective", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.deprecation", "_autosummary/baybe.objectives.deprecation.structure_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.botorch_wrapper", "_autosummary/baybe.utils.botorch_wrapper.botorch_function_wrapper", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.is_valid_smiles", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fp_features", "_autosummary/baybe.utils.chemistry.smiles_to_molecules", "_autosummary/baybe.utils.chemistry.smiles_to_mordred_features", "_autosummary/baybe.utils.chemistry.smiles_to_rdkit_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_results", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.plotting", "_autosummary/baybe.utils.plotting.create_example_plots", "_autosummary/baybe.utils.plotting.indent", "_autosummary/baybe.utils.plotting.to_string", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "examples/Backtesting/Backtesting", "examples/Backtesting/botorch_analytical", "examples/Backtesting/custom_analytical", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/hybrid", "examples/Backtesting/impute_mode", "examples/Backtesting/multi_target", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/mixture_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space_botorch_function", "examples/Searchspaces/continuous_space_custom_function", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objective.rst", "_autosummary/baybe.objective.Objective.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.deprecation.rst", "_autosummary/baybe.objectives.deprecation.structure_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.botorch_wrapper.rst", "_autosummary/baybe.utils.botorch_wrapper.botorch_function_wrapper.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.is_valid_smiles.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fp_features.rst", "_autosummary/baybe.utils.chemistry.smiles_to_molecules.rst", "_autosummary/baybe.utils.chemistry.smiles_to_mordred_features.rst", "_autosummary/baybe.utils.chemistry.smiles_to_rdkit_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_results.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.plotting.rst", "_autosummary/baybe.utils.plotting.create_example_plots.rst", "_autosummary/baybe.utils.plotting.indent.rst", "_autosummary/baybe.utils.plotting.to_string.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/botorch_analytical.md", "examples/Backtesting/custom_analytical.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/hybrid.md", "examples/Backtesting/impute_mode.md", "examples/Backtesting/multi_target.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/mixture_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space_botorch_function.md", "examples/Searchspaces/continuous_space_custom_function.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuouslinearconstraint method)": [[33, "baybe.constraints.base.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearequalityconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearinequalityconstraint method)": [[43, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[46, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[49, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[51, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[52, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[53, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[58, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[59, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[60, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[61, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[62, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[63, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[64, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[65, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[66, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[67, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[68, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[69, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[70, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[71, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[72, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[73, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[74, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[77, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[78, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[79, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[81, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[82, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[83, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[84, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[85, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[86, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[87, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[88, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[90, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[91, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[92, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[97, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[102, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[107, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[110, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[111, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[112, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[114, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[115, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[124, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[128, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[138, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[140, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[141, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[142, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[143, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[144, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[145, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[146, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[149, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[152, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[154, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[155, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[156, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[158, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[161, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[164, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[166, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[171, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[173, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[174, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[178, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[179, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[184, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[189, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[222, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[224, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[225, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[226, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[228, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[232, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[234, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[235, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[242, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[244, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[246, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[248, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[250, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[252, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[262, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[264, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[270, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[286, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[285, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[323, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[324, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[348, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[58, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[59, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[60, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[61, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[62, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[63, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[64, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[65, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[66, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[67, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[68, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[69, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[70, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[71, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[72, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[73, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[74, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[119, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[120, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[122, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[323, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[146, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[20, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[164, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[164, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function_cls", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function_cls", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[20, "baybe.acquisition.base.AcquisitionFunction", false]], "active_values (baybe.parameters.categorical.taskparameter attribute)": [[115, "baybe.parameters.categorical.TaskParameter.active_values", false]], "add_fake_results() (in module baybe.utils.dataframe)": [[314, "baybe.utils.dataframe.add_fake_results", false]], "add_measurements() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.add_measurements", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[315, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[90, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[158, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender attribute)": [[161, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[164, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[171, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[173, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[174, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[178, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[179, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[158, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender attribute)": [[161, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[164, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[171, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[173, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[174, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[178, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[179, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[158, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender attribute)": [[161, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[164, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[171, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[173, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[174, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[178, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[179, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[140, "baybe.priors.basic.BetaPrior.alpha", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[146, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[92, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[90, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[91, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basickernel (class in baybe.kernels.base)": [[77, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[254, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[255, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[239, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[19, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[21, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[23, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[26, "module-baybe.campaign", false]], "baybe.constraints": [[28, "module-baybe.constraints", false]], "baybe.constraints.base": [[29, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[36, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[40, "module-baybe.constraints.continuous", false]], "baybe.constraints.discrete": [[44, "module-baybe.constraints.discrete", false]], "baybe.constraints.validation": [[54, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[57, "module-baybe.exceptions", false]], "baybe.kernels": [[75, "module-baybe.kernels", false]], "baybe.kernels.base": [[76, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[80, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[89, "module-baybe.kernels.composite", false]], "baybe.objective": [[93, "module-baybe.objective", false]], "baybe.objectives": [[95, "module-baybe.objectives", false]], "baybe.objectives.base": [[96, "module-baybe.objectives.base", false]], "baybe.objectives.deprecation": [[99, "module-baybe.objectives.deprecation", false]], "baybe.objectives.desirability": [[101, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[104, "module-baybe.objectives.enum", false]], "baybe.objectives.single": [[106, "module-baybe.objectives.single", false]], "baybe.parameters": [[108, "module-baybe.parameters", false]], "baybe.parameters.base": [[109, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[113, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[116, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[118, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[123, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[126, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[129, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[132, "module-baybe.parameters.validation", false]], "baybe.priors": [[136, "module-baybe.priors", false]], "baybe.priors.base": [[137, "module-baybe.priors.base", false]], "baybe.priors.basic": [[139, "module-baybe.priors.basic", false]], "baybe.recommenders": [[147, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[148, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[150, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[151, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[153, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[157, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[159, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[160, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[162, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[163, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[165, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[167, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[169, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[170, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[172, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[177, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[180, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[181, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[183, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[188, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[194, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[198, "module-baybe.serialization", false]], "baybe.serialization.core": [[199, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[206, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[208, "module-baybe.serialization.utils", false]], "baybe.simulation": [[211, "module-baybe.simulation", false]], "baybe.simulation.core": [[212, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[214, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[216, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[218, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[220, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[221, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[223, "module-baybe.surrogates.base", false]], "baybe.surrogates.custom": [[227, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[230, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[231, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[233, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[237, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[238, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[241, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[243, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[245, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[247, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[249, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[251, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[253, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[257, "module-baybe.surrogates.validation", false]], "baybe.targets": [[260, "module-baybe.targets", false]], "baybe.targets.base": [[261, "module-baybe.targets.base", false]], "baybe.targets.binary": [[263, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[266, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[269, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[271, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[275, "module-baybe.telemetry", false]], "baybe.utils": [[280, "module-baybe.utils", false]], "baybe.utils.augmentation": [[281, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[284, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[296, "module-baybe.utils.boolean", false]], "baybe.utils.botorch_wrapper": [[300, "module-baybe.utils.botorch_wrapper", false]], "baybe.utils.chemistry": [[302, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[310, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[313, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[322, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[327, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[329, "module-baybe.utils.numerical", false]], "baybe.utils.plotting": [[336, "module-baybe.utils.plotting", false]], "baybe.utils.random": [[340, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[343, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[347, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[349, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[352, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[246, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[164, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[268, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[272, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[140, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[222, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[140, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[264, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[200, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[201, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorch_function_wrapper() (in module baybe.utils.botorch_wrapper)": [[301, "baybe.utils.botorch_wrapper.botorch_function_wrapper", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[166, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[124, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[270, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[328, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[27, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[30, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[256, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[119, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[114, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[324, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[297, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[265, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[286, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[333, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[334, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.base.continuouslinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousLinearConstraint.coefficients", false]], "coefficients (baybe.constraints.continuous.continuouslinearequalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.coefficients", false]], "coefficients (baybe.constraints.continuous.continuouslinearinequalityconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[348, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[111, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[114, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[115, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[128, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[184, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[189, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[110, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[111, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[112, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[114, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[115, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[124, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[128, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[184, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[189, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[189, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[158, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[161, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[164, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[171, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[173, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[174, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[178, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[179, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[78, "baybe.kernels.base.CompositeKernel", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[141, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[37, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[31, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[184, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[184, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[158, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[324, "baybe.utils.interval.Interval.contains", false]], "contains_mordred (baybe.searchspace.core.searchspace property)": [[184, "baybe.searchspace.core.SearchSpace.contains_mordred", false]], "contains_rdkit (baybe.searchspace.core.searchspace property)": [[184, "baybe.searchspace.core.SearchSpace.contains_rdkit", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[184, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[185, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[32, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.base)": [[33, "baybe.constraints.base.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint (class in baybe.constraints.continuous)": [[42, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint (class in baybe.constraints.continuous)": [[43, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[110, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[24, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[325, "baybe.utils.interval.convert_bounds", false]], "converter (in module baybe.serialization.core)": [[202, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[324, "baybe.utils.interval.Interval.create", false]], "create_example_plots() (in module baybe.utils.plotting)": [[337, "baybe.utils.plotting.create_example_plots", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[120, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[117, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[120, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[228, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[128, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[128, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_iterator() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[155, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.default_iterator", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[228, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[242, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[51, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[58, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[209, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[102, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[282, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[283, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[316, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[317, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[318, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[158, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[184, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[185, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[35, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[46, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[49, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[50, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[111, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[344, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[330, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[331, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[350, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[285, "baybe.utils.basic.Dummy", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[244, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[185, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[59, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[111, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[114, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[115, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[128, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[184, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuouslinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearequalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearinequalityconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[46, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[51, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuouslinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearequalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearinequalityconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[46, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[51, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuouslinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearequalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearinequalityconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[46, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[51, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[37, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[189, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[189, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[189, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[264, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[345, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "find_subclass() (in module baybe.utils.basic)": [[287, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[353, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[222, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[224, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[225, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[226, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[228, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[232, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[246, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[248, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[250, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[252, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[348, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[344, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[178, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[311, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_config() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[184, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[20, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[30, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[31, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[32, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuouslinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[35, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[37, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[39, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearequalityconstraint class method)": [[42, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearinequalityconstraint class method)": [[43, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[46, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[51, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[77, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[78, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[79, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[81, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[82, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[83, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[84, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[85, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[86, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[87, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[88, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[90, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[91, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[92, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[97, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[102, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[107, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[110, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[111, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[112, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[114, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[115, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[124, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[128, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[138, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[140, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[141, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[142, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[143, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[144, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[145, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[146, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[152, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[154, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[155, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[156, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[184, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[207, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[222, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[224, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[225, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[228, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[232, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[235, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[246, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[248, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[250, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[252, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[262, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[264, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[270, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[324, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[20, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[30, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[31, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[32, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuouslinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[35, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[37, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[39, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearequalityconstraint class method)": [[42, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearinequalityconstraint class method)": [[43, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[46, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[51, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[77, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[78, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[79, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[81, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[82, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[83, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[84, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[85, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[86, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[87, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[88, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[90, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[91, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[92, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[97, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[102, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[107, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[110, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[111, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[112, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[114, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[115, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[124, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[128, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[138, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[140, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[141, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[142, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[143, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[144, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[145, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[146, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[152, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[154, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[155, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[156, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[184, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[207, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[222, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[224, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[225, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[228, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[232, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[235, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[246, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[248, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[250, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[252, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[262, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[264, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[270, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[324, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[184, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[232, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[184, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[319, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[141, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[173, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[239, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[232, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[105, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[335, "baybe.utils.numerical.geom_mean", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[203, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[288, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[303, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[184, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[152, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[154, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[155, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[156, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[46, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[49, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[51, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[52, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[53, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[46, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[49, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[51, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[52, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[53, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[258, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[152, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[154, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[155, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[156, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[184, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[130, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[289, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[164, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[166, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[195, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[276, "baybe.telemetry.get_user_details", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[290, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[142, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[143, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[291, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[185, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "incompatibilityerror": [[60, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[61, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatiblesearchspaceerror": [[62, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "indent() (in module baybe.utils.plotting)": [[338, "baybe.utils.plotting.indent", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[224, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infiniteintervalerror": [[323, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[156, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[119, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[324, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[63, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[64, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[298, "baybe.utils.boolean.is_abstract", false]], "is_bounded (baybe.utils.interval.interval property)": [[324, "baybe.utils.interval.Interval.is_bounded", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[30, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[31, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[32, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuouslinearconstraint property)": [[33, "baybe.constraints.base.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[35, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearequalityconstraint property)": [[42, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearinequalityconstraint property)": [[43, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[46, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[49, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[50, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[51, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[52, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[53, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[110, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[111, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[112, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[114, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[115, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[124, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[128, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[324, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[30, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[31, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[32, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuouslinearconstraint property)": [[33, "baybe.constraints.base.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[35, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearequalityconstraint property)": [[42, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearinequalityconstraint property)": [[43, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[46, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[49, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[50, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[51, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[52, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[53, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[110, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[111, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[112, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[114, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[115, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[124, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[128, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[277, "baybe.telemetry.is_enabled", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[324, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[324, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[110, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[111, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[112, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[114, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[115, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[124, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[128, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[324, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[110, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[111, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[112, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[114, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[115, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[124, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[128, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[324, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_valid_smiles() (in module baybe.utils.chemistry)": [[304, "baybe.utils.chemistry.is_valid_smiles", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[235, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[79, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[232, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[234, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[174, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[82, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[83, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[84, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[86, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[87, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[88, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[82, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[83, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[84, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[86, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[87, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[88, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[268, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[273, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[81, "baybe.kernels.basic.LinearKernel", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[144, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[145, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[144, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[215, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[324, "baybe.utils.interval.Interval.lower", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[240, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[348, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "mark_as_measured() (baybe.searchspace.discrete.subspacediscrete method)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.mark_as_measured", false]], "match (baybe.targets.enum.targetmode attribute)": [[267, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[292, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[82, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[267, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[105, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[248, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[189, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete attribute)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[152, "baybe.recommenders.meta.base.MetaRecommender", false]], "min (baybe.targets.enum.targetmode attribute)": [[267, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[154, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[270, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[173, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[174, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[173, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[174, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[246, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[250, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[252, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[65, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [19, "module-baybe.acquisition.base", false], [21, "module-baybe.acquisition.partial", false], [23, "module-baybe.acquisition.utils", false], [26, "module-baybe.campaign", false], [28, "module-baybe.constraints", false], [29, "module-baybe.constraints.base", false], [36, "module-baybe.constraints.conditions", false], [40, "module-baybe.constraints.continuous", false], [44, "module-baybe.constraints.discrete", false], [54, "module-baybe.constraints.validation", false], [57, "module-baybe.exceptions", false], [75, "module-baybe.kernels", false], [76, "module-baybe.kernels.base", false], [80, "module-baybe.kernels.basic", false], [89, "module-baybe.kernels.composite", false], [93, "module-baybe.objective", false], [95, "module-baybe.objectives", false], [96, "module-baybe.objectives.base", false], [99, "module-baybe.objectives.deprecation", false], [101, "module-baybe.objectives.desirability", false], [104, "module-baybe.objectives.enum", false], [106, "module-baybe.objectives.single", false], [108, "module-baybe.parameters", false], [109, "module-baybe.parameters.base", false], [113, "module-baybe.parameters.categorical", false], [116, "module-baybe.parameters.custom", false], [118, "module-baybe.parameters.enum", false], [123, "module-baybe.parameters.numerical", false], [126, "module-baybe.parameters.substance", false], [129, "module-baybe.parameters.utils", false], [132, "module-baybe.parameters.validation", false], [136, "module-baybe.priors", false], [137, "module-baybe.priors.base", false], [139, "module-baybe.priors.basic", false], [147, "module-baybe.recommenders", false], [148, "module-baybe.recommenders.base", false], [150, "module-baybe.recommenders.meta", false], [151, "module-baybe.recommenders.meta.base", false], [153, "module-baybe.recommenders.meta.sequential", false], [157, "module-baybe.recommenders.naive", false], [159, "module-baybe.recommenders.pure", false], [160, "module-baybe.recommenders.pure.base", false], [162, "module-baybe.recommenders.pure.bayesian", false], [163, "module-baybe.recommenders.pure.bayesian.base", false], [165, "module-baybe.recommenders.pure.bayesian.botorch", false], [167, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [169, "module-baybe.recommenders.pure.nonpredictive", false], [170, "module-baybe.recommenders.pure.nonpredictive.base", false], [172, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [177, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [180, "module-baybe.searchspace", false], [181, "module-baybe.searchspace.continuous", false], [183, "module-baybe.searchspace.core", false], [188, "module-baybe.searchspace.discrete", false], [194, "module-baybe.searchspace.validation", false], [198, "module-baybe.serialization", false], [199, "module-baybe.serialization.core", false], [206, "module-baybe.serialization.mixin", false], [208, "module-baybe.serialization.utils", false], [211, "module-baybe.simulation", false], [212, "module-baybe.simulation.core", false], [214, "module-baybe.simulation.lookup", false], [216, "module-baybe.simulation.scenarios", false], [218, "module-baybe.simulation.transfer_learning", false], [220, "module-baybe.surrogates", false], [221, "module-baybe.surrogates.bandit", false], [223, "module-baybe.surrogates.base", false], [227, "module-baybe.surrogates.custom", false], [230, "module-baybe.surrogates.gaussian_process", false], [231, "module-baybe.surrogates.gaussian_process.core", false], [233, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [237, "module-baybe.surrogates.gaussian_process.presets", false], [238, "module-baybe.surrogates.gaussian_process.presets.core", false], [241, "module-baybe.surrogates.gaussian_process.presets.default", false], [243, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [245, "module-baybe.surrogates.linear", false], [247, "module-baybe.surrogates.naive", false], [249, "module-baybe.surrogates.ngboost", false], [251, "module-baybe.surrogates.random_forest", false], [253, "module-baybe.surrogates.utils", false], [257, "module-baybe.surrogates.validation", false], [260, "module-baybe.targets", false], [261, "module-baybe.targets.base", false], [263, "module-baybe.targets.binary", false], [266, "module-baybe.targets.enum", false], [269, "module-baybe.targets.numerical", false], [271, "module-baybe.targets.transforms", false], [275, "module-baybe.telemetry", false], [280, "module-baybe.utils", false], [281, "module-baybe.utils.augmentation", false], [284, "module-baybe.utils.basic", false], [296, "module-baybe.utils.boolean", false], [300, "module-baybe.utils.botorch_wrapper", false], [302, "module-baybe.utils.chemistry", false], [310, "module-baybe.utils.conversion", false], [313, "module-baybe.utils.dataframe", false], [322, "module-baybe.utils.interval", false], [327, "module-baybe.utils.memory", false], [329, "module-baybe.utils.numerical", false], [336, "module-baybe.utils.plotting", false], [340, "module-baybe.utils.random", false], [343, "module-baybe.utils.sampling_algorithms", false], [347, "module-baybe.utils.scaling", false], [349, "module-baybe.utils.torch", false], [352, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[122, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[122, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.n_fits_done", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[184, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[158, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[110, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[111, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[112, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[114, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[115, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[124, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[128, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[262, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[264, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[270, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[305, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[250, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[66, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "non_inf_float() (in module baybe.utils.validation)": [[354, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[355, "baybe.utils.validation.non_nan_float", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[171, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[312, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[67, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[145, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[68, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[69, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[82, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[87, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuouslinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearequalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearinequalityconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[46, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[51, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[124, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[270, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[70, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[97, "baybe.objectives.base.Objective", false]], "objective() (in module baybe.objective)": [[94, "baybe.objective.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[85, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[85, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[119, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[228, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[228, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[39, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "optionalimporterror": [[71, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[92, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[92, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[112, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[191, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[192, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[184, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameterencoding (class in baybe.parameters.enum)": [[121, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuouslinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearequalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearinequalityconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[46, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[51, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[184, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[83, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[83, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[83, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[84, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[235, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "polynomialkernel (class in baybe.kernels.basic)": [[85, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[222, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[224, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[225, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[228, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[232, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[246, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[248, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[250, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[252, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[222, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[222, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[85, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[320, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[222, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[138, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[91, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[161, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[84, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[344, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[252, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[179, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[141, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[86, "baybe.kernels.basic.RBFKernel", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[122, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "recommend() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[149, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[152, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[154, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[155, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[156, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[158, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[161, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[164, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[166, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[171, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[173, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[174, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[178, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[179, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[156, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[149, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[154, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[155, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "refers_to() (in module baybe.utils.basic)": [[293, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[229, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[294, "baybe.utils.basic.register_hooks", false]], "rffkernel (class in baybe.kernels.basic)": [[87, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.base.continuouslinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousLinearConstraint.rhs", false]], "rhs (baybe.constraints.continuous.continuouslinearequalityconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.rhs", false]], "rhs (baybe.constraints.continuous.continuouslinearinequalityconstraint attribute)": [[43, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[88, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[346, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[103, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[102, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[105, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[142, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[143, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[144, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[145, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[92, "baybe.kernels.composite.ScaleKernel", false]], "searchspace (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[184, "baybe.searchspace.core.SearchSpace", false]], "searchspacetype (class in baybe.searchspace.core)": [[185, "baybe.searchspace.core.SearchSpaceType", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[204, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[152, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[154, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[155, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[156, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[38, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[168, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[154, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[210, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[207, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[341, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[146, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[213, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[217, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[219, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[107, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[127, "baybe.parameters.substance.Smiles", false]], "smiles_to_fp_features() (in module baybe.utils.chemistry)": [[306, "baybe.utils.chemistry.smiles_to_fp_features", false]], "smiles_to_molecules() (in module baybe.utils.chemistry)": [[307, "baybe.utils.chemistry.smiles_to_molecules", false]], "smiles_to_mordred_features() (in module baybe.utils.chemistry)": [[308, "baybe.utils.chemistry.smiles_to_mordred_features", false]], "smiles_to_rdkit_features() (in module baybe.utils.chemistry)": [[309, "baybe.utils.chemistry.smiles_to_rdkit_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[146, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[131, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[25, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[155, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[299, "baybe.utils.boolean.strtobool", false]], "structure_objective() (in module baybe.objectives.deprecation)": [[100, "baybe.objectives.deprecation.structure_objective", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[38, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[182, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[122, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[128, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[264, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuouslinearconstraint method)": [[33, "baybe.constraints.base.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearequalityconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearinequalityconstraint method)": [[43, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[46, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[49, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[51, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[52, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[53, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[110, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[111, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[112, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[114, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[115, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[124, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[128, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[262, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[264, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[270, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[222, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[224, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[225, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[228, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[232, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[246, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[248, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[250, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[252, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[225, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[164, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[166, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[226, "baybe.surrogates.base.SurrogateProtocol", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[156, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[262, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[267, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[97, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[102, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[107, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[268, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[184, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[115, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[278, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[279, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[342, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[39, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[39, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.base.continuouslinearconstraint method)": [[33, "baybe.constraints.base.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearequalityconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearinequalityconstraint method)": [[43, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[222, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[224, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[225, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[226, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[228, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[232, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[246, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[248, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[250, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[252, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuouslinearconstraint method)": [[33, "baybe.constraints.base.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[37, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearequalityconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearinequalityconstraint method)": [[43, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[46, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[49, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[51, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[52, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[53, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[77, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[78, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[79, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[81, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[82, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[83, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[84, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[85, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[86, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[87, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[88, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[90, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[91, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[92, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[97, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[102, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[107, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[110, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[111, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[112, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[114, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[115, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[124, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[128, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[138, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[140, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[141, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[142, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[143, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[144, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[145, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[146, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[152, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[154, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[155, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[156, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[184, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[207, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[222, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[224, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[225, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[228, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[232, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[235, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[246, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[248, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[250, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[252, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[262, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[264, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[270, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[324, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[77, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[78, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[79, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[81, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[82, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[83, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[84, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[85, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[86, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[87, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[88, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[90, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[91, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[92, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[77, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[78, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[79, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[81, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[82, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[83, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[84, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[85, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[86, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[87, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[88, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[90, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[91, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[92, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[138, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[140, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[141, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[142, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[143, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[144, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[145, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[146, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuouslinearconstraint method)": [[33, "baybe.constraints.base.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[37, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearequalityconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearEqualityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearinequalityconstraint method)": [[43, "baybe.constraints.continuous.ContinuousLinearInequalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[45, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[46, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[47, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[48, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[49, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[51, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[52, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[53, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[77, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[78, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[79, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[81, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[82, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[83, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[84, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[85, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[86, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[87, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[88, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[90, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[91, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[92, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[97, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[102, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[107, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[110, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[111, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[112, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[114, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[115, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[124, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[128, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[138, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[140, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[141, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[142, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[143, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[144, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[145, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[146, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[152, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[154, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[155, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[156, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[184, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[207, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[222, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[224, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[225, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[228, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[232, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[235, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[246, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[248, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[250, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[252, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[262, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[264, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[270, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[324, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[236, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[324, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[262, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[264, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[270, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[98, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[37, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[110, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[111, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[112, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[114, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[115, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[124, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[128, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[186, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.plotting)": [[339, "baybe.utils.plotting.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[110, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[111, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[114, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[115, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[124, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[128, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[324, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[321, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[324, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[295, "baybe.utils.basic.to_tuple", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[39, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "transform() (baybe.objectives.base.objective method)": [[97, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[102, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[107, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[111, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[114, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[115, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[128, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[182, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[184, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[190, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[262, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[264, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[270, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[348, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[270, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[268, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[274, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[156, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[184, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[72, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[73, "baybe.exceptions.UnmatchedAttributeError", false]], "unstructure_base() (in module baybe.serialization.core)": [[205, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[74, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[324, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[326, "baybe.utils.interval.use_fallback_constructor_hook", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[55, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[228, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[56, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[259, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[133, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[134, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[356, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[196, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[197, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[187, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[193, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[135, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[46, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[111, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[114, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[115, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[117, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[125, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[128, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[81, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[81, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[332, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[351, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[102, "baybe.objectives.desirability.DesirabilityObjective.weights", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [26, 0, 0, "-", "campaign"], [28, 0, 0, "-", "constraints"], [57, 0, 0, "-", "exceptions"], [75, 0, 0, "-", "kernels"], [93, 0, 0, "-", "objective"], [95, 0, 0, "-", "objectives"], [108, 0, 0, "-", "parameters"], [136, 0, 0, "-", "priors"], [147, 0, 0, "-", "recommenders"], [180, 0, 0, "-", "searchspace"], [198, 0, 0, "-", "serialization"], [211, 0, 0, "-", "simulation"], [220, 0, 0, "-", "surrogates"], [260, 0, 0, "-", "targets"], [275, 0, 0, "-", "telemetry"], [280, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [19, 0, 0, "-", "base"], [21, 0, 0, "-", "partial"], [23, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNoisyExpectedImprovement"], [13, 1, 1, "", "qNegIntegratedPosteriorVariance"], [14, 1, 1, "", "qNoisyExpectedImprovement"], [15, 1, 1, "", "qProbabilityOfImprovement"], [16, 1, 1, "", "qSimpleRegret"], [17, 1, 1, "", "qThompsonSampling"], [18, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 2, 1, "", "get_integration_points"], [13, 3, 1, "", "sampling_fraction"], [13, 3, 1, "", "sampling_method"], [13, 3, 1, "", "sampling_n_points"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "n_mc_samples"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 3, 1, "", "beta"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.base": [[20, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.partial": [[22, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "botorch_acqf"], [22, 3, 1, "", "pin_discrete"], [22, 3, 1, "", "pinned_part"], [22, 2, 1, "", "set_X_pending"]], "baybe.acquisition.utils": [[24, 4, 1, "", "convert_acqf"], [25, 4, 1, "", "str_to_acqf"]], "baybe.campaign": [[27, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "add_measurements"], [27, 2, 1, "", "from_config"], [27, 2, 1, "", "from_dict"], [27, 2, 1, "", "from_json"], [27, 2, 1, "", "get_surrogate"], [27, 5, 1, "", "measurements"], [27, 3, 1, "", "n_batches_done"], [27, 3, 1, "", "n_fits_done"], [27, 3, 1, "", "objective"], [27, 5, 1, "", "parameters"], [27, 2, 1, "", "posterior"], [27, 2, 1, "", "recommend"], [27, 3, 1, "", "recommender"], [27, 3, 1, "", "searchspace"], [27, 5, 1, "", "targets"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_json"], [27, 2, 1, "", "validate_config"]], "baybe.constraints": [[29, 0, 0, "-", "base"], [36, 0, 0, "-", "conditions"], [40, 0, 0, "-", "continuous"], [44, 0, 0, "-", "discrete"], [54, 0, 0, "-", "validation"]], "baybe.constraints.base": [[30, 1, 1, "", "CardinalityConstraint"], [31, 1, 1, "", "Constraint"], [32, 1, 1, "", "ContinuousConstraint"], [33, 1, 1, "", "ContinuousLinearConstraint"], [34, 1, 1, "", "ContinuousNonlinearConstraint"], [35, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[30, 2, 1, "", "__init__"], [30, 3, 1, "", "eval_during_augmentation"], [30, 3, 1, "", "eval_during_creation"], [30, 3, 1, "", "eval_during_modeling"], [30, 2, 1, "", "from_dict"], [30, 2, 1, "", "from_json"], [30, 5, 1, "", "is_continuous"], [30, 5, 1, "", "is_discrete"], [30, 3, 1, "", "max_cardinality"], [30, 3, 1, "", "min_cardinality"], [30, 3, 1, "", "numerical_only"], [30, 3, 1, "", "parameters"], [30, 2, 1, "", "summary"], [30, 2, 1, "", "to_dict"], [30, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "eval_during_augmentation"], [31, 3, 1, "", "eval_during_creation"], [31, 3, 1, "", "eval_during_modeling"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 5, 1, "", "is_continuous"], [31, 5, 1, "", "is_discrete"], [31, 3, 1, "", "numerical_only"], [31, 3, 1, "", "parameters"], [31, 2, 1, "", "summary"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint": [[32, 2, 1, "", "__init__"], [32, 3, 1, "", "eval_during_augmentation"], [32, 3, 1, "", "eval_during_creation"], [32, 3, 1, "", "eval_during_modeling"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "from_json"], [32, 5, 1, "", "is_continuous"], [32, 5, 1, "", "is_discrete"], [32, 3, 1, "", "numerical_only"], [32, 3, 1, "", "parameters"], [32, 2, 1, "", "summary"], [32, 2, 1, "", "to_dict"], [32, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousLinearConstraint": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "coefficients"], [33, 3, 1, "", "eval_during_augmentation"], [33, 3, 1, "", "eval_during_creation"], [33, 3, 1, "", "eval_during_modeling"], [33, 2, 1, "", "from_dict"], [33, 2, 1, "", "from_json"], [33, 5, 1, "", "is_continuous"], [33, 5, 1, "", "is_discrete"], [33, 3, 1, "", "numerical_only"], [33, 3, 1, "", "parameters"], [33, 3, 1, "", "rhs"], [33, 2, 1, "", "summary"], [33, 2, 1, "", "to_botorch"], [33, 2, 1, "", "to_dict"], [33, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 5, 1, "", "is_continuous"], [34, 5, 1, "", "is_discrete"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint": [[35, 2, 1, "", "__init__"], [35, 3, 1, "", "eval_during_augmentation"], [35, 3, 1, "", "eval_during_creation"], [35, 3, 1, "", "eval_during_modeling"], [35, 2, 1, "", "from_dict"], [35, 2, 1, "", "from_json"], [35, 2, 1, "", "get_invalid"], [35, 2, 1, "", "get_invalid_polars"], [35, 5, 1, "", "is_continuous"], [35, 5, 1, "", "is_discrete"], [35, 3, 1, "", "numerical_only"], [35, 3, 1, "", "parameters"], [35, 2, 1, "", "summary"], [35, 2, 1, "", "to_dict"], [35, 2, 1, "", "to_json"]], "baybe.constraints.conditions": [[37, 1, 1, "", "Condition"], [38, 1, 1, "", "SubSelectionCondition"], [39, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[37, 2, 1, "", "evaluate"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"], [37, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "evaluate"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 5, 1, "", "selection"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"], [38, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.ThresholdCondition": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "evaluate"], [39, 2, 1, "", "from_dict"], [39, 2, 1, "", "from_json"], [39, 3, 1, "", "operator"], [39, 3, 1, "", "threshold"], [39, 2, 1, "", "to_dict"], [39, 2, 1, "", "to_json"], [39, 2, 1, "", "to_polars"], [39, 3, 1, "", "tolerance"]], "baybe.constraints.continuous": [[41, 1, 1, "", "ContinuousCardinalityConstraint"], [42, 1, 1, "", "ContinuousLinearEqualityConstraint"], [43, 1, 1, "", "ContinuousLinearInequalityConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[41, 2, 1, "", "__init__"], [41, 3, 1, "", "eval_during_augmentation"], [41, 3, 1, "", "eval_during_creation"], [41, 3, 1, "", "eval_during_modeling"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 5, 1, "", "is_continuous"], [41, 5, 1, "", "is_discrete"], [41, 3, 1, "", "max_cardinality"], [41, 3, 1, "", "min_cardinality"], [41, 3, 1, "", "numerical_only"], [41, 3, 1, "", "parameters"], [41, 2, 1, "", "sample_inactive_parameters"], [41, 2, 1, "", "summary"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearEqualityConstraint": [[42, 2, 1, "", "__init__"], [42, 3, 1, "", "coefficients"], [42, 3, 1, "", "eval_during_augmentation"], [42, 3, 1, "", "eval_during_creation"], [42, 3, 1, "", "eval_during_modeling"], [42, 2, 1, "", "from_dict"], [42, 2, 1, "", "from_json"], [42, 5, 1, "", "is_continuous"], [42, 5, 1, "", "is_discrete"], [42, 3, 1, "", "numerical_only"], [42, 3, 1, "", "parameters"], [42, 3, 1, "", "rhs"], [42, 2, 1, "", "summary"], [42, 2, 1, "", "to_botorch"], [42, 2, 1, "", "to_dict"], [42, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearInequalityConstraint": [[43, 2, 1, "", "__init__"], [43, 3, 1, "", "coefficients"], [43, 3, 1, "", "eval_during_augmentation"], [43, 3, 1, "", "eval_during_creation"], [43, 3, 1, "", "eval_during_modeling"], [43, 2, 1, "", "from_dict"], [43, 2, 1, "", "from_json"], [43, 5, 1, "", "is_continuous"], [43, 5, 1, "", "is_discrete"], [43, 3, 1, "", "numerical_only"], [43, 3, 1, "", "parameters"], [43, 3, 1, "", "rhs"], [43, 2, 1, "", "summary"], [43, 2, 1, "", "to_botorch"], [43, 2, 1, "", "to_dict"], [43, 2, 1, "", "to_json"]], "baybe.constraints.discrete": [[45, 1, 1, "", "DiscreteCardinalityConstraint"], [46, 1, 1, "", "DiscreteCustomConstraint"], [47, 1, 1, "", "DiscreteDependenciesConstraint"], [48, 1, 1, "", "DiscreteExcludeConstraint"], [49, 1, 1, "", "DiscreteLinkedParametersConstraint"], [50, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [51, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [52, 1, 1, "", "DiscreteProductConstraint"], [53, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[45, 2, 1, "", "__init__"], [45, 3, 1, "", "eval_during_augmentation"], [45, 3, 1, "", "eval_during_creation"], [45, 3, 1, "", "eval_during_modeling"], [45, 2, 1, "", "from_dict"], [45, 2, 1, "", "from_json"], [45, 2, 1, "", "get_invalid"], [45, 2, 1, "", "get_invalid_polars"], [45, 5, 1, "", "is_continuous"], [45, 5, 1, "", "is_discrete"], [45, 3, 1, "", "max_cardinality"], [45, 3, 1, "", "min_cardinality"], [45, 3, 1, "", "numerical_only"], [45, 3, 1, "", "parameters"], [45, 2, 1, "", "summary"], [45, 2, 1, "", "to_dict"], [45, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[46, 2, 1, "", "__init__"], [46, 3, 1, "", "eval_during_augmentation"], [46, 3, 1, "", "eval_during_creation"], [46, 3, 1, "", "eval_during_modeling"], [46, 2, 1, "", "from_dict"], [46, 2, 1, "", "from_json"], [46, 2, 1, "", "get_invalid"], [46, 2, 1, "", "get_invalid_polars"], [46, 5, 1, "", "is_continuous"], [46, 5, 1, "", "is_discrete"], [46, 3, 1, "", "numerical_only"], [46, 3, 1, "", "parameters"], [46, 2, 1, "", "summary"], [46, 2, 1, "", "to_dict"], [46, 2, 1, "", "to_json"], [46, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[47, 2, 1, "", "__init__"], [47, 3, 1, "", "affected_parameters"], [47, 3, 1, "", "conditions"], [47, 3, 1, "", "eval_during_augmentation"], [47, 3, 1, "", "eval_during_creation"], [47, 3, 1, "", "eval_during_modeling"], [47, 2, 1, "", "from_dict"], [47, 2, 1, "", "from_json"], [47, 2, 1, "", "get_invalid"], [47, 2, 1, "", "get_invalid_polars"], [47, 5, 1, "", "is_continuous"], [47, 5, 1, "", "is_discrete"], [47, 3, 1, "", "numerical_only"], [47, 3, 1, "", "parameters"], [47, 3, 1, "", "permutation_invariant"], [47, 2, 1, "", "summary"], [47, 2, 1, "", "to_dict"], [47, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[48, 2, 1, "", "__init__"], [48, 3, 1, "", "combiner"], [48, 3, 1, "", "conditions"], [48, 3, 1, "", "eval_during_augmentation"], [48, 3, 1, "", "eval_during_creation"], [48, 3, 1, "", "eval_during_modeling"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "from_json"], [48, 2, 1, "", "get_invalid"], [48, 2, 1, "", "get_invalid_polars"], [48, 5, 1, "", "is_continuous"], [48, 5, 1, "", "is_discrete"], [48, 3, 1, "", "numerical_only"], [48, 3, 1, "", "parameters"], [48, 2, 1, "", "summary"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[49, 2, 1, "", "__init__"], [49, 3, 1, "", "eval_during_augmentation"], [49, 3, 1, "", "eval_during_creation"], [49, 3, 1, "", "eval_during_modeling"], [49, 2, 1, "", "from_dict"], [49, 2, 1, "", "from_json"], [49, 2, 1, "", "get_invalid"], [49, 2, 1, "", "get_invalid_polars"], [49, 5, 1, "", "is_continuous"], [49, 5, 1, "", "is_discrete"], [49, 3, 1, "", "numerical_only"], [49, 3, 1, "", "parameters"], [49, 2, 1, "", "summary"], [49, 2, 1, "", "to_dict"], [49, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[50, 2, 1, "", "__init__"], [50, 3, 1, "", "eval_during_augmentation"], [50, 3, 1, "", "eval_during_creation"], [50, 3, 1, "", "eval_during_modeling"], [50, 2, 1, "", "from_dict"], [50, 2, 1, "", "from_json"], [50, 2, 1, "", "get_invalid"], [50, 2, 1, "", "get_invalid_polars"], [50, 5, 1, "", "is_continuous"], [50, 5, 1, "", "is_discrete"], [50, 3, 1, "", "numerical_only"], [50, 3, 1, "", "parameters"], [50, 2, 1, "", "summary"], [50, 2, 1, "", "to_dict"], [50, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "dependencies"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 5, 1, "", "is_continuous"], [51, 5, 1, "", "is_discrete"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "condition"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 5, 1, "", "is_continuous"], [52, 5, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "condition"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 5, 1, "", "is_continuous"], [53, 5, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.validation": [[55, 4, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [56, 4, 1, "", "validate_constraints"]], "baybe.exceptions": [[58, 6, 1, "", "DeprecationError"], [59, 6, 1, "", "EmptySearchSpaceError"], [60, 6, 1, "", "IncompatibilityError"], [61, 6, 1, "", "IncompatibleAcquisitionFunctionError"], [62, 6, 1, "", "IncompatibleSearchSpaceError"], [63, 6, 1, "", "InvalidSurrogateModelError"], [64, 6, 1, "", "InvalidTargetValueError"], [65, 6, 1, "", "ModelNotTrainedError"], [66, 6, 1, "", "NoMCAcquisitionFunctionError"], [67, 6, 1, "", "NoRecommendersLeftError"], [68, 6, 1, "", "NotEnoughPointsLeftError"], [69, 6, 1, "", "NothingToSimulateError"], [70, 6, 1, "", "NumericalUnderflowError"], [71, 6, 1, "", "OptionalImportError"], [72, 6, 1, "", "UnidentifiedSubclassError"], [73, 6, 1, "", "UnmatchedAttributeError"], [74, 6, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[59, 2, 1, "", "__init__"], [59, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.kernels": [[76, 0, 0, "-", "base"], [80, 0, 0, "-", "basic"], [89, 0, 0, "-", "composite"]], "baybe.kernels.base": [[77, 1, 1, "", "BasicKernel"], [78, 1, 1, "", "CompositeKernel"], [79, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "from_dict"], [77, 2, 1, "", "from_json"], [77, 2, 1, "", "to_dict"], [77, 2, 1, "", "to_factory"], [77, 2, 1, "", "to_gpytorch"], [77, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "from_dict"], [78, 2, 1, "", "from_json"], [78, 2, 1, "", "to_dict"], [78, 2, 1, "", "to_factory"], [78, 2, 1, "", "to_gpytorch"], [78, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "from_dict"], [79, 2, 1, "", "from_json"], [79, 2, 1, "", "to_dict"], [79, 2, 1, "", "to_factory"], [79, 2, 1, "", "to_gpytorch"], [79, 2, 1, "", "to_json"]], "baybe.kernels.basic": [[81, 1, 1, "", "LinearKernel"], [82, 1, 1, "", "MaternKernel"], [83, 1, 1, "", "PeriodicKernel"], [84, 1, 1, "", "PiecewisePolynomialKernel"], [85, 1, 1, "", "PolynomialKernel"], [86, 1, 1, "", "RBFKernel"], [87, 1, 1, "", "RFFKernel"], [88, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "from_dict"], [81, 2, 1, "", "from_json"], [81, 2, 1, "", "to_dict"], [81, 2, 1, "", "to_factory"], [81, 2, 1, "", "to_gpytorch"], [81, 2, 1, "", "to_json"], [81, 3, 1, "", "variance_initial_value"], [81, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.MaternKernel": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "from_dict"], [82, 2, 1, "", "from_json"], [82, 3, 1, "", "lengthscale_initial_value"], [82, 3, 1, "", "lengthscale_prior"], [82, 3, 1, "", "nu"], [82, 2, 1, "", "to_dict"], [82, 2, 1, "", "to_factory"], [82, 2, 1, "", "to_gpytorch"], [82, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "from_dict"], [83, 2, 1, "", "from_json"], [83, 3, 1, "", "lengthscale_initial_value"], [83, 3, 1, "", "lengthscale_prior"], [83, 3, 1, "", "period_length_initial_value"], [83, 3, 1, "", "period_length_prior"], [83, 2, 1, "", "to_dict"], [83, 2, 1, "", "to_factory"], [83, 2, 1, "", "to_gpytorch"], [83, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "from_dict"], [84, 2, 1, "", "from_json"], [84, 3, 1, "", "lengthscale_initial_value"], [84, 3, 1, "", "lengthscale_prior"], [84, 3, 1, "", "q"], [84, 2, 1, "", "to_dict"], [84, 2, 1, "", "to_factory"], [84, 2, 1, "", "to_gpytorch"], [84, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "from_dict"], [85, 2, 1, "", "from_json"], [85, 3, 1, "", "offset_initial_value"], [85, 3, 1, "", "offset_prior"], [85, 3, 1, "", "power"], [85, 2, 1, "", "to_dict"], [85, 2, 1, "", "to_factory"], [85, 2, 1, "", "to_gpytorch"], [85, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "from_dict"], [86, 2, 1, "", "from_json"], [86, 3, 1, "", "lengthscale_initial_value"], [86, 3, 1, "", "lengthscale_prior"], [86, 2, 1, "", "to_dict"], [86, 2, 1, "", "to_factory"], [86, 2, 1, "", "to_gpytorch"], [86, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "from_dict"], [87, 2, 1, "", "from_json"], [87, 3, 1, "", "lengthscale_initial_value"], [87, 3, 1, "", "lengthscale_prior"], [87, 3, 1, "", "num_samples"], [87, 2, 1, "", "to_dict"], [87, 2, 1, "", "to_factory"], [87, 2, 1, "", "to_gpytorch"], [87, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "from_dict"], [88, 2, 1, "", "from_json"], [88, 3, 1, "", "lengthscale_initial_value"], [88, 3, 1, "", "lengthscale_prior"], [88, 2, 1, "", "to_dict"], [88, 2, 1, "", "to_factory"], [88, 2, 1, "", "to_gpytorch"], [88, 2, 1, "", "to_json"]], "baybe.kernels.composite": [[90, 1, 1, "", "AdditiveKernel"], [91, 1, 1, "", "ProductKernel"], [92, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[90, 2, 1, "", "__init__"], [90, 3, 1, "", "base_kernels"], [90, 2, 1, "", "from_dict"], [90, 2, 1, "", "from_json"], [90, 2, 1, "", "to_dict"], [90, 2, 1, "", "to_factory"], [90, 2, 1, "", "to_gpytorch"], [90, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel": [[91, 2, 1, "", "__init__"], [91, 3, 1, "", "base_kernels"], [91, 2, 1, "", "from_dict"], [91, 2, 1, "", "from_json"], [91, 2, 1, "", "to_dict"], [91, 2, 1, "", "to_factory"], [91, 2, 1, "", "to_gpytorch"], [91, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel": [[92, 2, 1, "", "__init__"], [92, 3, 1, "", "base_kernel"], [92, 2, 1, "", "from_dict"], [92, 2, 1, "", "from_json"], [92, 3, 1, "", "outputscale_initial_value"], [92, 3, 1, "", "outputscale_prior"], [92, 2, 1, "", "to_dict"], [92, 2, 1, "", "to_factory"], [92, 2, 1, "", "to_gpytorch"], [92, 2, 1, "", "to_json"]], "baybe.objective": [[94, 4, 1, "", "Objective"]], "baybe.objectives": [[96, 0, 0, "-", "base"], [99, 0, 0, "-", "deprecation"], [101, 0, 0, "-", "desirability"], [104, 0, 0, "-", "enum"], [106, 0, 0, "-", "single"]], "baybe.objectives.base": [[97, 1, 1, "", "Objective"], [98, 4, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "from_dict"], [97, 2, 1, "", "from_json"], [97, 5, 1, "", "targets"], [97, 2, 1, "", "to_dict"], [97, 2, 1, "", "to_json"], [97, 2, 1, "", "transform"]], "baybe.objectives.deprecation": [[100, 4, 1, "", "structure_objective"]], "baybe.objectives.desirability": [[102, 1, 1, "", "DesirabilityObjective"], [103, 4, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "from_dict"], [102, 2, 1, "", "from_json"], [102, 3, 1, "", "scalarizer"], [102, 5, 1, "", "targets"], [102, 2, 1, "", "to_dict"], [102, 2, 1, "", "to_json"], [102, 2, 1, "", "transform"], [102, 3, 1, "", "weights"]], "baybe.objectives.enum": [[105, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[105, 3, 1, "", "GEOM_MEAN"], [105, 3, 1, "", "MEAN"]], "baybe.objectives.single": [[107, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "from_dict"], [107, 2, 1, "", "from_json"], [107, 5, 1, "", "targets"], [107, 2, 1, "", "to_dict"], [107, 2, 1, "", "to_json"], [107, 2, 1, "", "transform"]], "baybe.parameters": [[109, 0, 0, "-", "base"], [113, 0, 0, "-", "categorical"], [116, 0, 0, "-", "custom"], [118, 0, 0, "-", "enum"], [123, 0, 0, "-", "numerical"], [126, 0, 0, "-", "substance"], [129, 0, 0, "-", "utils"], [132, 0, 0, "-", "validation"]], "baybe.parameters.base": [[110, 1, 1, "", "ContinuousParameter"], [111, 1, 1, "", "DiscreteParameter"], [112, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[110, 2, 1, "", "__init__"], [110, 5, 1, "", "comp_rep_columns"], [110, 2, 1, "", "from_dict"], [110, 2, 1, "", "from_json"], [110, 5, 1, "", "is_continuous"], [110, 5, 1, "", "is_discrete"], [110, 2, 1, "", "is_in_range"], [110, 3, 1, "", "is_numerical"], [110, 3, 1, "", "name"], [110, 2, 1, "", "summary"], [110, 2, 1, "", "to_dict"], [110, 2, 1, "", "to_json"], [110, 2, 1, "", "to_searchspace"], [110, 2, 1, "", "to_subspace"]], "baybe.parameters.base.DiscreteParameter": [[111, 2, 1, "", "__init__"], [111, 5, 1, "", "comp_df"], [111, 5, 1, "", "comp_rep_columns"], [111, 3, 1, "", "encoding"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 5, 1, "", "is_continuous"], [111, 5, 1, "", "is_discrete"], [111, 2, 1, "", "is_in_range"], [111, 3, 1, "", "is_numerical"], [111, 3, 1, "", "name"], [111, 2, 1, "", "summary"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_json"], [111, 2, 1, "", "to_searchspace"], [111, 2, 1, "", "to_subspace"], [111, 2, 1, "", "transform"], [111, 5, 1, "", "values"]], "baybe.parameters.base.Parameter": [[112, 2, 1, "", "__init__"], [112, 5, 1, "", "comp_rep_columns"], [112, 2, 1, "", "from_dict"], [112, 2, 1, "", "from_json"], [112, 5, 1, "", "is_continuous"], [112, 5, 1, "", "is_discrete"], [112, 2, 1, "", "is_in_range"], [112, 3, 1, "", "is_numerical"], [112, 3, 1, "", "name"], [112, 2, 1, "", "summary"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_json"], [112, 2, 1, "", "to_searchspace"]], "baybe.parameters.categorical": [[114, 1, 1, "", "CategoricalParameter"], [115, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[114, 2, 1, "", "__init__"], [114, 5, 1, "", "comp_df"], [114, 5, 1, "", "comp_rep_columns"], [114, 3, 1, "", "encoding"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 5, 1, "", "is_continuous"], [114, 5, 1, "", "is_discrete"], [114, 2, 1, "", "is_in_range"], [114, 3, 1, "", "is_numerical"], [114, 3, 1, "", "name"], [114, 2, 1, "", "summary"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_json"], [114, 2, 1, "", "to_searchspace"], [114, 2, 1, "", "to_subspace"], [114, 2, 1, "", "transform"], [114, 5, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter": [[115, 2, 1, "", "__init__"], [115, 3, 1, "", "active_values"], [115, 5, 1, "", "comp_df"], [115, 5, 1, "", "comp_rep_columns"], [115, 3, 1, "", "encoding"], [115, 2, 1, "", "from_dict"], [115, 2, 1, "", "from_json"], [115, 5, 1, "", "is_continuous"], [115, 5, 1, "", "is_discrete"], [115, 2, 1, "", "is_in_range"], [115, 3, 1, "", "is_numerical"], [115, 3, 1, "", "name"], [115, 2, 1, "", "summary"], [115, 2, 1, "", "to_dict"], [115, 2, 1, "", "to_json"], [115, 2, 1, "", "to_searchspace"], [115, 2, 1, "", "to_subspace"], [115, 2, 1, "", "transform"], [115, 5, 1, "", "values"]], "baybe.parameters.custom": [[117, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[117, 2, 1, "", "__init__"], [117, 5, 1, "", "comp_df"], [117, 5, 1, "", "comp_rep_columns"], [117, 3, 1, "", "data"], [117, 3, 1, "", "decorrelate"], [117, 3, 1, "", "encoding"], [117, 2, 1, "", "from_dict"], [117, 2, 1, "", "from_json"], [117, 5, 1, "", "is_continuous"], [117, 5, 1, "", "is_discrete"], [117, 2, 1, "", "is_in_range"], [117, 3, 1, "", "is_numerical"], [117, 3, 1, "", "name"], [117, 2, 1, "", "summary"], [117, 2, 1, "", "to_dict"], [117, 2, 1, "", "to_json"], [117, 2, 1, "", "to_searchspace"], [117, 2, 1, "", "to_subspace"], [117, 2, 1, "", "transform"], [117, 5, 1, "", "values"]], "baybe.parameters.enum": [[119, 1, 1, "", "CategoricalEncoding"], [120, 1, 1, "", "CustomEncoding"], [121, 1, 1, "", "ParameterEncoding"], [122, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[119, 3, 1, "", "INT"], [119, 3, 1, "", "OHE"], [119, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[120, 3, 1, "", "CUSTOM"], [120, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[122, 3, 1, "", "MORDRED"], [122, 3, 1, "", "MORGAN_FP"], [122, 3, 1, "", "RDKIT"], [122, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[124, 1, 1, "", "NumericalContinuousParameter"], [125, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[124, 2, 1, "", "__init__"], [124, 3, 1, "", "bounds"], [124, 5, 1, "", "comp_rep_columns"], [124, 2, 1, "", "from_dict"], [124, 2, 1, "", "from_json"], [124, 5, 1, "", "is_continuous"], [124, 5, 1, "", "is_discrete"], [124, 2, 1, "", "is_in_range"], [124, 3, 1, "", "is_numerical"], [124, 3, 1, "", "name"], [124, 2, 1, "", "summary"], [124, 2, 1, "", "to_dict"], [124, 2, 1, "", "to_json"], [124, 2, 1, "", "to_searchspace"], [124, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[125, 2, 1, "", "__init__"], [125, 5, 1, "", "comp_df"], [125, 5, 1, "", "comp_rep_columns"], [125, 3, 1, "", "encoding"], [125, 2, 1, "", "from_dict"], [125, 2, 1, "", "from_json"], [125, 5, 1, "", "is_continuous"], [125, 5, 1, "", "is_discrete"], [125, 2, 1, "", "is_in_range"], [125, 3, 1, "", "is_numerical"], [125, 3, 1, "", "name"], [125, 2, 1, "", "summary"], [125, 2, 1, "", "to_dict"], [125, 2, 1, "", "to_json"], [125, 2, 1, "", "to_searchspace"], [125, 2, 1, "", "to_subspace"], [125, 3, 1, "", "tolerance"], [125, 2, 1, "", "transform"], [125, 5, 1, "", "values"]], "baybe.parameters.substance": [[127, 3, 1, "", "Smiles"], [128, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[128, 2, 1, "", "__init__"], [128, 5, 1, "", "comp_df"], [128, 5, 1, "", "comp_rep_columns"], [128, 3, 1, "", "data"], [128, 3, 1, "", "decorrelate"], [128, 3, 1, "", "encoding"], [128, 2, 1, "", "from_dict"], [128, 2, 1, "", "from_json"], [128, 5, 1, "", "is_continuous"], [128, 5, 1, "", "is_discrete"], [128, 2, 1, "", "is_in_range"], [128, 3, 1, "", "is_numerical"], [128, 3, 1, "", "name"], [128, 2, 1, "", "summary"], [128, 2, 1, "", "to_dict"], [128, 2, 1, "", "to_json"], [128, 2, 1, "", "to_searchspace"], [128, 2, 1, "", "to_subspace"], [128, 2, 1, "", "transform"], [128, 5, 1, "", "values"]], "baybe.parameters.utils": [[130, 4, 1, "", "get_parameters_from_dataframe"], [131, 4, 1, "", "sort_parameters"]], "baybe.parameters.validation": [[133, 4, 1, "", "validate_decorrelation"], [134, 4, 1, "", "validate_is_finite"], [135, 4, 1, "", "validate_unique_values"]], "baybe.priors": [[137, 0, 0, "-", "base"], [139, 0, 0, "-", "basic"]], "baybe.priors.base": [[138, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "from_dict"], [138, 2, 1, "", "from_json"], [138, 2, 1, "", "to_dict"], [138, 2, 1, "", "to_gpytorch"], [138, 2, 1, "", "to_json"]], "baybe.priors.basic": [[140, 1, 1, "", "BetaPrior"], [141, 1, 1, "", "GammaPrior"], [142, 1, 1, "", "HalfCauchyPrior"], [143, 1, 1, "", "HalfNormalPrior"], [144, 1, 1, "", "LogNormalPrior"], [145, 1, 1, "", "NormalPrior"], [146, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[140, 2, 1, "", "__init__"], [140, 3, 1, "", "alpha"], [140, 3, 1, "", "beta"], [140, 2, 1, "", "from_dict"], [140, 2, 1, "", "from_json"], [140, 2, 1, "", "to_dict"], [140, 2, 1, "", "to_gpytorch"], [140, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior": [[141, 2, 1, "", "__init__"], [141, 3, 1, "", "concentration"], [141, 2, 1, "", "from_dict"], [141, 2, 1, "", "from_json"], [141, 3, 1, "", "rate"], [141, 2, 1, "", "to_dict"], [141, 2, 1, "", "to_gpytorch"], [141, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "from_dict"], [142, 2, 1, "", "from_json"], [142, 3, 1, "", "scale"], [142, 2, 1, "", "to_dict"], [142, 2, 1, "", "to_gpytorch"], [142, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "from_dict"], [143, 2, 1, "", "from_json"], [143, 3, 1, "", "scale"], [143, 2, 1, "", "to_dict"], [143, 2, 1, "", "to_gpytorch"], [143, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "from_dict"], [144, 2, 1, "", "from_json"], [144, 3, 1, "", "loc"], [144, 3, 1, "", "scale"], [144, 2, 1, "", "to_dict"], [144, 2, 1, "", "to_gpytorch"], [144, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "from_dict"], [145, 2, 1, "", "from_json"], [145, 3, 1, "", "loc"], [145, 3, 1, "", "scale"], [145, 2, 1, "", "to_dict"], [145, 2, 1, "", "to_gpytorch"], [145, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior": [[146, 2, 1, "", "__init__"], [146, 3, 1, "", "a"], [146, 3, 1, "", "b"], [146, 2, 1, "", "from_dict"], [146, 2, 1, "", "from_json"], [146, 3, 1, "", "sigma"], [146, 2, 1, "", "to_dict"], [146, 2, 1, "", "to_gpytorch"], [146, 2, 1, "", "to_json"]], "baybe.recommenders": [[148, 0, 0, "-", "base"], [150, 0, 0, "-", "meta"], [157, 0, 0, "-", "naive"], [159, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[149, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "recommend"]], "baybe.recommenders.meta": [[151, 0, 0, "-", "base"], [153, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[152, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "from_dict"], [152, 2, 1, "", "from_json"], [152, 2, 1, "", "get_current_recommender"], [152, 2, 1, "", "get_next_recommender"], [152, 2, 1, "", "recommend"], [152, 2, 1, "", "select_recommender"], [152, 2, 1, "", "to_dict"], [152, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential": [[154, 1, 1, "", "SequentialMetaRecommender"], [155, 1, 1, "", "StreamingSequentialMetaRecommender"], [156, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "from_dict"], [154, 2, 1, "", "from_json"], [154, 2, 1, "", "get_current_recommender"], [154, 2, 1, "", "get_next_recommender"], [154, 3, 1, "", "mode"], [154, 2, 1, "", "recommend"], [154, 3, 1, "", "recommenders"], [154, 2, 1, "", "select_recommender"], [154, 2, 1, "", "to_dict"], [154, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "default_iterator"], [155, 2, 1, "", "from_dict"], [155, 2, 1, "", "from_json"], [155, 2, 1, "", "get_current_recommender"], [155, 2, 1, "", "get_next_recommender"], [155, 2, 1, "", "recommend"], [155, 3, 1, "", "recommenders"], [155, 2, 1, "", "select_recommender"], [155, 2, 1, "", "to_dict"], [155, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "from_dict"], [156, 2, 1, "", "from_json"], [156, 2, 1, "", "get_current_recommender"], [156, 2, 1, "", "get_next_recommender"], [156, 3, 1, "", "initial_recommender"], [156, 2, 1, "", "recommend"], [156, 3, 1, "", "recommender"], [156, 2, 1, "", "select_recommender"], [156, 3, 1, "", "switch_after"], [156, 2, 1, "", "to_dict"], [156, 2, 1, "", "to_json"]], "baybe.recommenders.naive": [[158, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[158, 2, 1, "", "__init__"], [158, 3, 1, "", "allow_recommending_already_measured"], [158, 3, 1, "", "allow_recommending_pending_experiments"], [158, 3, 1, "", "allow_repeated_recommendations"], [158, 3, 1, "", "compatibility"], [158, 3, 1, "", "cont_recommender"], [158, 3, 1, "", "disc_recommender"], [158, 2, 1, "", "recommend"]], "baybe.recommenders.pure": [[160, 0, 0, "-", "base"], [162, 0, 0, "-", "bayesian"], [169, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[161, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[161, 2, 1, "", "__init__"], [161, 3, 1, "", "allow_recommending_already_measured"], [161, 3, 1, "", "allow_recommending_pending_experiments"], [161, 3, 1, "", "allow_repeated_recommendations"], [161, 3, 1, "", "compatibility"], [161, 2, 1, "", "recommend"]], "baybe.recommenders.pure.bayesian": [[163, 0, 0, "-", "base"], [165, 0, 0, "-", "botorch"], [167, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[164, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[164, 2, 1, "", "__init__"], [164, 3, 1, "", "acquisition_function"], [164, 3, 1, "", "acquisition_function_cls"], [164, 3, 1, "", "allow_recommending_already_measured"], [164, 3, 1, "", "allow_recommending_pending_experiments"], [164, 3, 1, "", "allow_repeated_recommendations"], [164, 3, 1, "", "compatibility"], [164, 2, 1, "", "get_surrogate"], [164, 2, 1, "", "recommend"], [164, 5, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch": [[166, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[166, 2, 1, "", "__init__"], [166, 3, 1, "", "acquisition_function"], [166, 3, 1, "", "acquisition_function_cls"], [166, 3, 1, "", "allow_recommending_already_measured"], [166, 3, 1, "", "allow_recommending_pending_experiments"], [166, 3, 1, "", "allow_repeated_recommendations"], [166, 3, 1, "", "compatibility"], [166, 2, 1, "", "get_surrogate"], [166, 3, 1, "", "hybrid_sampler"], [166, 2, 1, "", "recommend"], [166, 3, 1, "", "sampling_percentage"], [166, 3, 1, "", "sequential_continuous"], [166, 5, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[168, 4, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[170, 0, 0, "-", "base"], [172, 0, 0, "-", "clustering"], [177, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[171, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[171, 2, 1, "", "__init__"], [171, 3, 1, "", "allow_recommending_already_measured"], [171, 3, 1, "", "allow_recommending_pending_experiments"], [171, 3, 1, "", "allow_repeated_recommendations"], [171, 3, 1, "", "compatibility"], [171, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering": [[173, 1, 1, "", "GaussianMixtureClusteringRecommender"], [174, 1, 1, "", "KMeansClusteringRecommender"], [175, 1, 1, "", "PAMClusteringRecommender"], [176, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[173, 2, 1, "", "__init__"], [173, 3, 1, "", "allow_recommending_already_measured"], [173, 3, 1, "", "allow_recommending_pending_experiments"], [173, 3, 1, "", "allow_repeated_recommendations"], [173, 3, 1, "", "compatibility"], [173, 3, 1, "", "model_cluster_num_parameter_name"], [173, 3, 1, "", "model_params"], [173, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[174, 2, 1, "", "__init__"], [174, 3, 1, "", "allow_recommending_already_measured"], [174, 3, 1, "", "allow_recommending_pending_experiments"], [174, 3, 1, "", "allow_repeated_recommendations"], [174, 3, 1, "", "compatibility"], [174, 3, 1, "", "model_cluster_num_parameter_name"], [174, 3, 1, "", "model_params"], [174, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[175, 2, 1, "", "__init__"], [175, 3, 1, "", "allow_recommending_already_measured"], [175, 3, 1, "", "allow_recommending_pending_experiments"], [175, 3, 1, "", "allow_repeated_recommendations"], [175, 3, 1, "", "compatibility"], [175, 3, 1, "", "model_cluster_num_parameter_name"], [175, 3, 1, "", "model_params"], [175, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[176, 2, 1, "", "__init__"], [176, 3, 1, "", "allow_recommending_already_measured"], [176, 3, 1, "", "allow_recommending_pending_experiments"], [176, 3, 1, "", "allow_repeated_recommendations"], [176, 3, 1, "", "compatibility"], [176, 3, 1, "", "model_cluster_num_parameter_name"], [176, 3, 1, "", "model_params"], [176, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling": [[178, 1, 1, "", "FPSRecommender"], [179, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[178, 2, 1, "", "__init__"], [178, 3, 1, "", "allow_recommending_already_measured"], [178, 3, 1, "", "allow_recommending_pending_experiments"], [178, 3, 1, "", "allow_repeated_recommendations"], [178, 3, 1, "", "compatibility"], [178, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[179, 2, 1, "", "__init__"], [179, 3, 1, "", "allow_recommending_already_measured"], [179, 3, 1, "", "allow_recommending_pending_experiments"], [179, 3, 1, "", "allow_repeated_recommendations"], [179, 3, 1, "", "compatibility"], [179, 2, 1, "", "recommend"]], "baybe.searchspace": [[181, 0, 0, "-", "continuous"], [183, 0, 0, "-", "core"], [188, 0, 0, "-", "discrete"], [194, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[182, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[182, 2, 1, "", "__init__"], [182, 5, 1, "", "comp_rep_bounds"], [182, 5, 1, "", "comp_rep_columns"], [182, 5, 1, "", "constraints_cardinality"], [182, 3, 1, "", "constraints_lin_eq"], [182, 3, 1, "", "constraints_lin_ineq"], [182, 3, 1, "", "constraints_nonlin"], [182, 2, 1, "", "empty"], [182, 2, 1, "", "from_bounds"], [182, 2, 1, "", "from_dataframe"], [182, 2, 1, "", "from_dict"], [182, 2, 1, "", "from_json"], [182, 2, 1, "", "from_parameter"], [182, 2, 1, "", "from_product"], [182, 5, 1, "", "full_factorial"], [182, 2, 1, "", "get_parameters_by_name"], [182, 5, 1, "", "is_empty"], [182, 5, 1, "", "parameter_names"], [182, 3, 1, "", "parameters"], [182, 2, 1, "", "sample_from_full_factorial"], [182, 2, 1, "", "sample_uniform"], [182, 2, 1, "", "samples_full_factorial"], [182, 2, 1, "", "samples_random"], [182, 2, 1, "", "to_dict"], [182, 2, 1, "", "to_json"], [182, 2, 1, "", "to_searchspace"], [182, 2, 1, "", "transform"]], "baybe.searchspace.core": [[184, 1, 1, "", "SearchSpace"], [185, 1, 1, "", "SearchSpaceType"], [186, 4, 1, "", "to_searchspace"], [187, 4, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[184, 2, 1, "", "__init__"], [184, 5, 1, "", "comp_rep_bounds"], [184, 5, 1, "", "comp_rep_columns"], [184, 5, 1, "", "constraints"], [184, 5, 1, "", "constraints_augmentable"], [184, 5, 1, "", "contains_mordred"], [184, 5, 1, "", "contains_rdkit"], [184, 3, 1, "", "continuous"], [184, 3, 1, "", "discrete"], [184, 2, 1, "", "estimate_product_space_size"], [184, 2, 1, "", "from_dataframe"], [184, 2, 1, "", "from_dict"], [184, 2, 1, "", "from_json"], [184, 2, 1, "", "from_parameter"], [184, 2, 1, "", "from_product"], [184, 2, 1, "", "get_comp_rep_parameter_indices"], [184, 2, 1, "", "get_parameters_by_name"], [184, 5, 1, "", "n_tasks"], [184, 5, 1, "", "parameter_names"], [184, 5, 1, "", "parameters"], [184, 5, 1, "", "task_idx"], [184, 2, 1, "", "to_dict"], [184, 2, 1, "", "to_json"], [184, 2, 1, "", "transform"], [184, 5, 1, "", "type"]], "baybe.searchspace.core.SearchSpaceType": [[185, 3, 1, "", "CONTINUOUS"], [185, 3, 1, "", "DISCRETE"], [185, 3, 1, "", "EITHER"], [185, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[189, 1, 1, "", "MemorySize"], [190, 1, 1, "", "SubspaceDiscrete"], [191, 4, 1, "", "parameter_cartesian_prod_pandas"], [192, 4, 1, "", "parameter_cartesian_prod_polars"], [193, 4, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[189, 2, 1, "", "__init__"], [189, 3, 1, "", "comp_rep_bytes"], [189, 5, 1, "", "comp_rep_human_readable"], [189, 3, 1, "", "comp_rep_shape"], [189, 3, 1, "", "exp_rep_bytes"], [189, 5, 1, "", "exp_rep_human_readable"], [189, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[190, 2, 1, "", "__init__"], [190, 3, 1, "", "comp_rep"], [190, 5, 1, "", "comp_rep_bounds"], [190, 5, 1, "", "comp_rep_columns"], [190, 3, 1, "", "constraints"], [190, 2, 1, "", "empty"], [190, 3, 1, "", "empty_encoding"], [190, 2, 1, "", "estimate_product_space_size"], [190, 3, 1, "", "exp_rep"], [190, 2, 1, "", "from_dataframe"], [190, 2, 1, "", "from_dict"], [190, 2, 1, "", "from_json"], [190, 2, 1, "", "from_parameter"], [190, 2, 1, "", "from_product"], [190, 2, 1, "", "from_simplex"], [190, 2, 1, "", "get_candidates"], [190, 2, 1, "", "get_parameters_by_name"], [190, 5, 1, "", "is_empty"], [190, 2, 1, "", "mark_as_measured"], [190, 3, 1, "", "metadata"], [190, 5, 1, "", "parameter_names"], [190, 3, 1, "", "parameters"], [190, 2, 1, "", "to_dict"], [190, 2, 1, "", "to_json"], [190, 2, 1, "", "to_searchspace"], [190, 2, 1, "", "transform"]], "baybe.searchspace.validation": [[195, 4, 1, "", "get_transform_parameters"], [196, 4, 1, "", "validate_parameter_names"], [197, 4, 1, "", "validate_parameters"]], "baybe.serialization": [[199, 0, 0, "-", "core"], [206, 0, 0, "-", "mixin"], [208, 0, 0, "-", "utils"]], "baybe.serialization.core": [[200, 4, 1, "", "block_deserialization_hook"], [201, 4, 1, "", "block_serialization_hook"], [202, 7, 1, "", "converter"], [203, 4, 1, "", "get_base_structure_hook"], [204, 4, 1, "", "select_constructor_hook"], [205, 4, 1, "", "unstructure_base"]], "baybe.serialization.mixin": [[207, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[207, 2, 1, "", "from_dict"], [207, 2, 1, "", "from_json"], [207, 2, 1, "", "to_dict"], [207, 2, 1, "", "to_json"]], "baybe.serialization.utils": [[209, 4, 1, "", "deserialize_dataframe"], [210, 4, 1, "", "serialize_dataframe"]], "baybe.simulation": [[212, 0, 0, "-", "core"], [214, 0, 0, "-", "lookup"], [216, 0, 0, "-", "scenarios"], [218, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[213, 4, 1, "", "simulate_experiment"]], "baybe.simulation.lookup": [[215, 4, 1, "", "look_up_targets"]], "baybe.simulation.scenarios": [[217, 4, 1, "", "simulate_scenarios"]], "baybe.simulation.transfer_learning": [[219, 4, 1, "", "simulate_transfer_learning"]], "baybe.surrogates": [[221, 0, 0, "-", "bandit"], [223, 0, 0, "-", "base"], [227, 0, 0, "-", "custom"], [230, 0, 0, "-", "gaussian_process"], [245, 0, 0, "-", "linear"], [247, 0, 0, "-", "naive"], [249, 0, 0, "-", "ngboost"], [251, 0, 0, "-", "random_forest"], [253, 0, 0, "-", "utils"], [257, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[222, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[222, 2, 1, "", "__init__"], [222, 2, 1, "", "fit"], [222, 2, 1, "", "from_dict"], [222, 2, 1, "", "from_json"], [222, 2, 1, "", "posterior"], [222, 2, 1, "", "posterior_means"], [222, 2, 1, "", "posterior_modes"], [222, 3, 1, "", "prior"], [222, 3, 1, "", "supports_transfer_learning"], [222, 2, 1, "", "to_botorch"], [222, 2, 1, "", "to_dict"], [222, 2, 1, "", "to_json"]], "baybe.surrogates.base": [[224, 1, 1, "", "IndependentGaussianSurrogate"], [225, 1, 1, "", "Surrogate"], [226, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[224, 2, 1, "", "__init__"], [224, 2, 1, "", "fit"], [224, 2, 1, "", "from_dict"], [224, 2, 1, "", "from_json"], [224, 2, 1, "", "posterior"], [224, 3, 1, "", "supports_transfer_learning"], [224, 2, 1, "", "to_botorch"], [224, 2, 1, "", "to_dict"], [224, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate": [[225, 2, 1, "", "__init__"], [225, 2, 1, "", "fit"], [225, 2, 1, "", "from_dict"], [225, 2, 1, "", "from_json"], [225, 2, 1, "", "posterior"], [225, 3, 1, "", "supports_transfer_learning"], [225, 2, 1, "", "to_botorch"], [225, 2, 1, "", "to_dict"], [225, 2, 1, "", "to_json"]], "baybe.surrogates.base.SurrogateProtocol": [[226, 2, 1, "", "__init__"], [226, 2, 1, "", "fit"], [226, 2, 1, "", "to_botorch"]], "baybe.surrogates.custom": [[228, 1, 1, "", "CustomONNXSurrogate"], [229, 4, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[228, 2, 1, "", "__init__"], [228, 2, 1, "", "default_model"], [228, 2, 1, "", "fit"], [228, 2, 1, "", "from_dict"], [228, 2, 1, "", "from_json"], [228, 3, 1, "", "onnx_input_name"], [228, 3, 1, "", "onnx_str"], [228, 2, 1, "", "posterior"], [228, 3, 1, "", "supports_transfer_learning"], [228, 2, 1, "", "to_botorch"], [228, 2, 1, "", "to_dict"], [228, 2, 1, "", "to_json"], [228, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.gaussian_process": [[231, 0, 0, "-", "core"], [233, 0, 0, "-", "kernel_factory"], [237, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[232, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[232, 2, 1, "", "__init__"], [232, 2, 1, "", "fit"], [232, 2, 1, "", "from_dict"], [232, 2, 1, "", "from_json"], [232, 2, 1, "", "from_preset"], [232, 3, 1, "", "kernel_factory"], [232, 2, 1, "", "posterior"], [232, 3, 1, "", "supports_transfer_learning"], [232, 2, 1, "", "to_botorch"], [232, 2, 1, "", "to_dict"], [232, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory": [[234, 1, 1, "", "KernelFactory"], [235, 1, 1, "", "PlainKernelFactory"], [236, 4, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[234, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[235, 2, 1, "", "__init__"], [235, 2, 1, "", "from_dict"], [235, 2, 1, "", "from_json"], [235, 3, 1, "", "kernel"], [235, 2, 1, "", "to_dict"], [235, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.presets": [[238, 0, 0, "-", "core"], [241, 0, 0, "-", "default"], [243, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[239, 1, 1, "", "GaussianProcessPreset"], [240, 4, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[239, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[242, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[242, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[244, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[244, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[246, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[246, 2, 1, "", "__init__"], [246, 2, 1, "", "fit"], [246, 2, 1, "", "from_dict"], [246, 2, 1, "", "from_json"], [246, 3, 1, "", "model_params"], [246, 2, 1, "", "posterior"], [246, 3, 1, "", "supports_transfer_learning"], [246, 2, 1, "", "to_botorch"], [246, 2, 1, "", "to_dict"], [246, 2, 1, "", "to_json"]], "baybe.surrogates.naive": [[248, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[248, 2, 1, "", "__init__"], [248, 2, 1, "", "fit"], [248, 2, 1, "", "from_dict"], [248, 2, 1, "", "from_json"], [248, 2, 1, "", "posterior"], [248, 3, 1, "", "supports_transfer_learning"], [248, 2, 1, "", "to_botorch"], [248, 2, 1, "", "to_dict"], [248, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost": [[250, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[250, 2, 1, "", "__init__"], [250, 2, 1, "", "fit"], [250, 2, 1, "", "from_dict"], [250, 2, 1, "", "from_json"], [250, 3, 1, "", "model_params"], [250, 2, 1, "", "posterior"], [250, 3, 1, "", "supports_transfer_learning"], [250, 2, 1, "", "to_botorch"], [250, 2, 1, "", "to_dict"], [250, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest": [[252, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[252, 2, 1, "", "__init__"], [252, 2, 1, "", "fit"], [252, 2, 1, "", "from_dict"], [252, 2, 1, "", "from_json"], [252, 3, 1, "", "model_params"], [252, 2, 1, "", "posterior"], [252, 3, 1, "", "supports_transfer_learning"], [252, 2, 1, "", "to_botorch"], [252, 2, 1, "", "to_dict"], [252, 2, 1, "", "to_json"]], "baybe.surrogates.utils": [[254, 4, 1, "", "batchify_ensemble_predictor"], [255, 4, 1, "", "batchify_mean_var_prediction"], [256, 4, 1, "", "catch_constant_targets"]], "baybe.surrogates.validation": [[258, 4, 1, "", "get_model_params_validator"], [259, 4, 1, "", "validate_custom_architecture_cls"]], "baybe.targets": [[261, 0, 0, "-", "base"], [263, 0, 0, "-", "binary"], [266, 0, 0, "-", "enum"], [269, 0, 0, "-", "numerical"], [271, 0, 0, "-", "transforms"]], "baybe.targets.base": [[262, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[262, 2, 1, "", "__init__"], [262, 2, 1, "", "from_dict"], [262, 2, 1, "", "from_json"], [262, 3, 1, "", "name"], [262, 2, 1, "", "summary"], [262, 2, 1, "", "to_dict"], [262, 2, 1, "", "to_json"], [262, 2, 1, "", "to_objective"], [262, 2, 1, "", "transform"]], "baybe.targets.binary": [[264, 1, 1, "", "BinaryTarget"], [265, 7, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[264, 2, 1, "", "__init__"], [264, 3, 1, "", "failure_value"], [264, 2, 1, "", "from_dict"], [264, 2, 1, "", "from_json"], [264, 3, 1, "", "name"], [264, 3, 1, "", "success_value"], [264, 2, 1, "", "summary"], [264, 2, 1, "", "to_dict"], [264, 2, 1, "", "to_json"], [264, 2, 1, "", "to_objective"], [264, 2, 1, "", "transform"]], "baybe.targets.enum": [[267, 1, 1, "", "TargetMode"], [268, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[267, 3, 1, "", "MATCH"], [267, 3, 1, "", "MAX"], [267, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[268, 3, 1, "", "BELL"], [268, 3, 1, "", "LINEAR"], [268, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[270, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[270, 2, 1, "", "__init__"], [270, 3, 1, "", "bounds"], [270, 2, 1, "", "from_dict"], [270, 2, 1, "", "from_json"], [270, 3, 1, "", "mode"], [270, 3, 1, "", "name"], [270, 2, 1, "", "summary"], [270, 2, 1, "", "to_dict"], [270, 2, 1, "", "to_json"], [270, 2, 1, "", "to_objective"], [270, 2, 1, "", "transform"], [270, 3, 1, "", "transformation"]], "baybe.targets.transforms": [[272, 4, 1, "", "bell_transform"], [273, 4, 1, "", "linear_transform"], [274, 4, 1, "", "triangular_transform"]], "baybe.telemetry": [[276, 4, 1, "", "get_user_details"], [277, 4, 1, "", "is_enabled"], [278, 4, 1, "", "telemetry_record_recommended_measurement_percentage"], [279, 4, 1, "", "telemetry_record_value"]], "baybe.utils": [[281, 0, 0, "-", "augmentation"], [284, 0, 0, "-", "basic"], [296, 0, 0, "-", "boolean"], [300, 0, 0, "-", "botorch_wrapper"], [302, 0, 0, "-", "chemistry"], [310, 0, 0, "-", "conversion"], [313, 0, 0, "-", "dataframe"], [322, 0, 0, "-", "interval"], [327, 0, 0, "-", "memory"], [329, 0, 0, "-", "numerical"], [336, 0, 0, "-", "plotting"], [340, 0, 0, "-", "random"], [343, 0, 0, "-", "sampling_algorithms"], [347, 0, 0, "-", "scaling"], [349, 0, 0, "-", "torch"], [352, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[282, 4, 1, "", "df_apply_dependency_augmentation"], [283, 4, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.basic": [[285, 1, 1, "", "Dummy"], [286, 1, 1, "", "classproperty"], [287, 4, 1, "", "find_subclass"], [288, 4, 1, "", "get_baseclasses"], [289, 4, 1, "", "get_subclasses"], [290, 4, 1, "", "group_duplicate_values"], [291, 4, 1, "", "hilberts_factory"], [292, 4, 1, "", "match_attributes"], [293, 4, 1, "", "refers_to"], [294, 4, 1, "", "register_hooks"], [295, 4, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[285, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[286, 2, 1, "", "__init__"]], "baybe.utils.boolean": [[297, 4, 1, "", "check_if_in"], [298, 4, 1, "", "is_abstract"], [299, 4, 1, "", "strtobool"]], "baybe.utils.botorch_wrapper": [[301, 4, 1, "", "botorch_function_wrapper"]], "baybe.utils.chemistry": [[303, 4, 1, "", "get_canonical_smiles"], [304, 4, 1, "", "is_valid_smiles"], [305, 4, 1, "", "name_to_smiles"], [306, 4, 1, "", "smiles_to_fp_features"], [307, 4, 1, "", "smiles_to_molecules"], [308, 4, 1, "", "smiles_to_mordred_features"], [309, 4, 1, "", "smiles_to_rdkit_features"]], "baybe.utils.conversion": [[311, 4, 1, "", "fraction_to_float"], [312, 4, 1, "", "nonstring_to_tuple"]], "baybe.utils.dataframe": [[314, 4, 1, "", "add_fake_results"], [315, 4, 1, "", "add_parameter_noise"], [316, 4, 1, "", "df_drop_single_value_columns"], [317, 4, 1, "", "df_drop_string_columns"], [318, 4, 1, "", "df_uncorrelated_features"], [319, 4, 1, "", "fuzzy_row_match"], [320, 4, 1, "", "pretty_print_df"], [321, 4, 1, "", "to_tensor"]], "baybe.utils.interval": [[323, 6, 1, "", "InfiniteIntervalError"], [324, 1, 1, "", "Interval"], [325, 4, 1, "", "convert_bounds"], [326, 4, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[323, 2, 1, "", "__init__"], [323, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[324, 2, 1, "", "__init__"], [324, 5, 1, "", "center"], [324, 2, 1, "", "contains"], [324, 2, 1, "", "create"], [324, 2, 1, "", "from_dict"], [324, 2, 1, "", "from_json"], [324, 5, 1, "", "is_bounded"], [324, 5, 1, "", "is_degenerate"], [324, 5, 1, "", "is_fully_unbounded"], [324, 5, 1, "", "is_half_bounded"], [324, 5, 1, "", "is_left_bounded"], [324, 5, 1, "", "is_right_bounded"], [324, 3, 1, "", "lower"], [324, 2, 1, "", "to_dict"], [324, 2, 1, "", "to_json"], [324, 2, 1, "", "to_ndarray"], [324, 2, 1, "", "to_tensor"], [324, 2, 1, "", "to_tuple"], [324, 3, 1, "", "upper"]], "baybe.utils.memory": [[328, 4, 1, "", "bytes_to_human_readable"]], "baybe.utils.numerical": [[330, 3, 1, "", "DTypeFloatNumpy"], [331, 3, 1, "", "DTypeFloatONNX"], [332, 7, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [333, 4, 1, "", "closer_element"], [334, 4, 1, "", "closest_element"], [335, 4, 1, "", "geom_mean"]], "baybe.utils.plotting": [[337, 4, 1, "", "create_example_plots"], [338, 4, 1, "", "indent"], [339, 4, 1, "", "to_string"]], "baybe.utils.random": [[341, 4, 1, "", "set_random_seed"], [342, 4, 1, "", "temporary_seed"]], "baybe.utils.sampling_algorithms": [[344, 1, 1, "", "DiscreteSamplingMethod"], [345, 4, 1, "", "farthest_point_sampling"], [346, 4, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[344, 3, 1, "", "FPS"], [344, 3, 1, "", "Random"]], "baybe.utils.scaling": [[348, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[348, 2, 1, "", "__init__"], [348, 2, 1, "", "fit"], [348, 3, 1, "", "mapping"], [348, 2, 1, "", "transform"]], "baybe.utils.torch": [[350, 7, 1, "", "DTypeFloatTorch"], [351, 7, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[353, 4, 1, "", "finite_float"], [354, 4, 1, "", "non_inf_float"], [355, 4, 1, "", "non_nan_float"], [356, 4, 1, "", "validate_not_nan"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception", "7": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 166, 182, 184, 190, 207, 222, 224, 225, 228, 232, 235, 246, 248, 250, 252, 262, 264, 270, 291, 321, 324, 357, 361, 370, 374, 378, 379, 382, 383, 384, 385, 386, 389, 393, 397, 398, 399, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420], "0": [8, 18, 30, 33, 41, 42, 43, 45, 82, 117, 125, 128, 146, 166, 190, 213, 215, 272, 273, 274, 282, 283, 299, 315, 318, 331, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 406, 407, 410, 412, 413, 415, 416, 419], "00": [392, 415], "000": [374, 375, 394], "001": 410, "001495619000024817": 378, "003823": 387, "005": [360, 361, 363, 366, 367, 375], "01": [146, 358, 359, 362, 364, 369, 370, 376, 379, 391, 392, 399], "02": 399, "020": 375, "021": [244, 318], "024605": 392, "03213": [244, 318], "033737": 392, "038473": 389, "040152": 390, "05": 399, "053253": 391, "057": [360, 361, 363, 366, 367, 378], "06": [190, 256], "07": [372, 374, 376], "078": 376, "08": [361, 399], "087006": 389, "091": 375, "091858": 392, "09653736976391157": 385, "0f": 379, "0min": [367, 375, 379, 383, 395], "1": [22, 27, 41, 43, 82, 103, 117, 128, 154, 156, 166, 182, 213, 215, 217, 219, 272, 273, 274, 279, 282, 283, 290, 299, 315, 331, 335, 345, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 406, 409, 410, 412, 413, 415, 416, 417, 419], "10": [215, 244, 318, 358, 359, 361, 364, 372, 373, 374, 379, 382, 383, 385, 387, 394, 395, 396, 398, 399, 401, 408, 413], "100": [364, 366, 367, 372, 373, 374, 375, 376, 379, 382, 383, 387, 394, 399, 412, 413, 419], "100881": 389, "102": 391, "1024": [306, 413], "1038": [244, 318], "105": [360, 361, 363, 366, 367, 378, 387, 415], "11": [286, 387, 402], "111": 394, "1147": 374, "1148": 374, "1149": 374, "1150": 374, "12": [364, 375, 391, 392, 404, 415], "120": [360, 361, 363, 366, 367, 372, 374, 378, 413], "120000": 391, "124": 391, "1268824": [360, 361, 363], "128": 10, "13": [398, 415], "1337": [379, 380, 408], "14": [361, 372, 373, 374, 376, 415], "141495": 387, "142318": 387, "14448993259018328": 385, "1454": 403, "15": [215, 358, 374, 375, 398, 399, 401, 409, 415], "150": [372, 376, 410], "1500": 413, "151": 374, "153": [360, 361, 363, 366, 367, 378], "153192": 387, "153733": 389, "16": [320, 331, 364, 395], "161": 392, "172": 392, "172642": 387, "177": 394, "18": [367, 375, 392, 409], "180": 372, "187": 367, "188": 394, "189760": 367, "19": 387, "191488": 387, "192": 374, "194": 387, "1e": [190, 256], "2": [8, 18, 82, 84, 103, 215, 282, 283, 290, 314, 335, 345, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 374, 375, 376, 379, 380, 382, 383, 385, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 406, 409, 410, 412, 413, 415, 416, 417, 419], "20": [128, 215, 360, 361, 363, 364, 379, 380, 387, 403, 413, 420], "200": [361, 372, 374, 382, 383, 385, 394], "2004": 406, "2007": 420, "201": 391, "2021": 361, "2022": 401, "2024": 401, "21": 372, "22": [367, 387], "221": [387, 403], "222": 387, "223441": 367, "226": 387, "227": 387, "230": 387, "234372": 387, "24": [359, 362, 373, 415], "241": 413, "242": 387, "25": [375, 379, 387, 392, 398, 415], "250": 407, "254": 391, "26": 415, "27": 415, "273064": 387, "277": 387, "278": [367, 387], "279": 387, "280": 387, "281088": 387, "282": 366, "284198": 392, "287": 364, "288479": 390, "29": [366, 401], "298796": 390, "2d": 413, "3": [215, 282, 283, 286, 290, 320, 338, 358, 359, 360, 361, 362, 363, 364, 367, 370, 372, 373, 374, 375, 376, 378, 379, 380, 383, 385, 387, 389, 390, 391, 392, 394, 395, 398, 399, 401, 402, 404, 406, 409, 410, 413, 415, 416, 419, 420], "30": [358, 364, 376, 380, 387, 413], "305989": 387, "3078f3": 403, "31": [364, 375], "32": [366, 373, 375, 395, 413], "324875": 392, "33": [373, 375, 387], "336526": 387, "34": [373, 375], "342456": 387, "343": 366, "35": 373, "356851": 387, "358777": 392, "36": 375, "367966": 389, "368713": 387, "369303": 389, "37": 387, "373071": 390, "374071": 367, "376076": 391, "389623": 390, "39": [374, 413], "398957": 387, "3d": 380, "4": [282, 283, 306, 320, 358, 359, 362, 364, 367, 369, 370, 372, 373, 374, 375, 376, 380, 382, 385, 387, 389, 390, 391, 392, 401, 406, 409, 410, 413, 415], "40": [412, 413], "403730": 387, "412": 376, "42": 385, "436413": 390, "444415": 387, "447": 372, "448": 372, "449": 372, "45": [387, 419], "450": 372, "454714": 392, "459148": 387, "470318": 366, "470956": 389, "49": 376, "490525": 392, "490554": 387, "495412": 387, "499635": 390, "5": [82, 128, 282, 283, 359, 360, 362, 363, 364, 369, 372, 373, 374, 375, 376, 379, 382, 383, 387, 391, 392, 394, 395, 396, 398, 399, 401, 406, 407, 408, 409, 410, 413, 415, 420], "50": [361, 375, 376, 383, 385, 387, 398, 399, 406, 407, 413, 415, 419], "500": [380, 413], "506051": 392, "5066666666666667": 385, "51": 387, "511": 364, "52": 387, "521762": 390, "524567": 389, "5313": 295, "54": [387, 401], "55": [387, 419], "554693": 387, "56": [373, 387], "57": 389, "571295": 389, "581686": 392, "59": [389, 401], "590": 361, "6": [282, 283, 320, 360, 361, 362, 363, 372, 373, 374, 375, 376, 385, 387, 392, 394, 406, 410, 415], "60": [387, 412], "612156": 387, "62": 385, "632016": 387, "639570": 390, "641696": 387, "642657": 366, "65": 385, "654331": 387, "659294": 390, "66368270ffd51418ec58bd793f2d9b1b": 420, "681794": 390, "683888": 387, "69": [360, 361, 363, 387, 389], "690631": 390, "694897": 387, "7": [128, 282, 283, 318, 373, 376, 380, 387, 398, 406, 413, 415], "706667": 391, "71": 413, "715561": 387, "720893": 389, "730049": 390, "736192": 389, "74": 387, "747398": 390, "75": [375, 415], "750527": 387, "755238": 389, "778": 394, "784911": 389, "79": 401, "7gz": 413, "7hf": 413, "8": [283, 359, 360, 362, 363, 372, 374, 376, 385, 387, 401, 406, 410], "80": 410, "81": 387, "829007": 389, "8389": 295, "8417": 295, "85": 394, "857": 374, "858713": 392, "86": 367, "861": 376, "861551": 387, "862": 376, "863": 376, "864": 376, "87": [387, 394], "88": 394, "8859": 382, "889": 394, "89": [361, 391, 394], "8jq": 413, "9": [372, 374, 376, 380, 387, 406, 409, 415, 416], "90": [360, 361, 363, 366, 367, 378, 387, 394, 415], "935417": 387, "943950": 387, "947393": 387, "947660": 387, "948302": 390, "95": 387, "96": [361, 392], "960149": 392, "961847": 387, "968063": 389, "97": 387, "986870": 387, "99": 387, "999": 410, "A": [0, 8, 18, 22, 35, 37, 38, 39, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 62, 64, 65, 66, 67, 70, 72, 74, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 100, 102, 103, 107, 117, 125, 128, 130, 139, 140, 141, 142, 143, 144, 145, 146, 149, 154, 155, 156, 158, 161, 164, 166, 168, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 191, 192, 207, 208, 213, 215, 217, 219, 222, 224, 225, 228, 232, 234, 235, 242, 244, 246, 248, 250, 252, 258, 262, 264, 270, 272, 273, 274, 282, 286, 288, 289, 290, 292, 300, 301, 314, 318, 328, 335, 343, 345, 348, 373, 383, 385, 387, 395, 396, 402, 403, 404, 406, 410, 413, 414, 415, 416, 417, 419, 420], "AND": [48, 374, 406, 410], "AS": [401, 406], "And": 382, "As": [359, 360, 361, 363, 380, 385, 387, 398, 399, 401, 403, 410, 414, 415, 417], "At": 419, "But": 419, "By": [102, 115, 130, 190, 298, 404, 411, 414, 415], "FOR": 406, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 136, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 189, 190, 213, 219, 222, 224, 225, 226, 228, 232, 235, 242, 244, 246, 248, 250, 252, 262, 264, 270, 275, 294, 319, 324, 337, 348, 358, 359, 360, 361, 362, 363, 364, 366, 367, 373, 378, 379, 380, 385, 387, 390, 392, 398, 399, 401, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420], "If": [6, 13, 27, 35, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 103, 130, 134, 135, 154, 155, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 195, 196, 197, 213, 215, 217, 219, 222, 224, 225, 228, 232, 246, 248, 250, 252, 273, 278, 283, 288, 289, 292, 294, 297, 299, 307, 308, 309, 311, 314, 315, 318, 319, 337, 339, 345, 346, 367, 369, 379, 391, 392, 395, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 419, 420], "In": [27, 33, 42, 43, 51, 152, 154, 155, 156, 166, 184, 211, 213, 292, 320, 359, 360, 361, 363, 364, 366, 379, 380, 382, 385, 387, 390, 391, 392, 395, 401, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420], "It": [22, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 211, 227, 248, 314, 360, 364, 366, 367, 373, 383, 385, 387, 390, 391, 392, 394, 395, 396, 398, 401, 408, 409, 410, 411, 413, 414, 415, 417], "Its": [215, 382], "No": [375, 403], "Not": [406, 410], "OF": [401, 406], "OR": [401, 406], "Of": [367, 377, 400, 416], "On": [382, 385], "One": [119, 360, 363, 401], "Or": 411, "Such": [367, 410, 417], "That": [184, 215, 222, 224, 225, 228, 232, 246, 248, 250, 252, 273, 359, 367, 372, 390, 404, 415, 417, 420], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 103, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 130, 136, 138, 140, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 189, 190, 195, 202, 203, 205, 207, 211, 213, 215, 217, 222, 224, 225, 226, 228, 232, 235, 246, 248, 250, 252, 254, 256, 258, 259, 262, 264, 267, 270, 272, 273, 274, 276, 278, 279, 282, 283, 286, 288, 289, 290, 292, 294, 297, 298, 299, 301, 311, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 328, 333, 334, 335, 337, 339, 341, 342, 345, 346, 359, 360, 361, 362, 363, 364, 367, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 387, 390, 391, 392, 396, 398, 399, 403, 404, 406, 409, 410, 411, 412, 413, 414, 415, 418, 419, 421], "Their": 367, "Then": 380, "There": [69, 256, 331, 401, 404, 408, 415], "These": [276, 357, 359, 361, 362, 363, 364, 365, 368, 371, 377, 381, 384, 386, 388, 390, 393, 397, 404, 408, 410, 411, 413, 415], "To": [359, 360, 367, 379, 380, 385, 394, 398, 399, 401, 402, 404, 408, 409, 411, 413, 417], "Will": 407, "With": [314, 379, 380, 385, 398, 399, 401, 408, 410, 413, 416], "_": [134, 135, 187, 193, 200, 337, 379, 399], "________________________________________________________________________________": [367, 375, 379, 383, 395], "_______________________________________smiles_to_mordred_featur": [367, 375, 379, 383, 395], "__class__": [378, 385], "__excepthook__": 402, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 189, 190, 222, 224, 225, 226, 228, 232, 234, 235, 242, 244, 246, 248, 250, 252, 262, 264, 270, 285, 286, 323, 324, 348, 415, 416], "__name__": [378, 385], "__new__": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 119, 120, 122, 323], "__str__": 403, "__version__": 403, "_c": 289, "_cumbest": 213, "_default_my_attribut": 404, "_fit": 259, "_iterbest": 213, "_measur": 213, "_n_last_measur": 154, "_nbase": [306, 308, 309], "_nestedsequ": [103, 272, 273, 274, 334], "_no_tl": 398, "_option": 403, "_posterior": 259, "_smiles_to_mordred_featur": [367, 375, 379, 383, 395], "_step": 154, "_supportsarrai": [103, 272, 273, 274, 334], "_surrogate_model": [379, 380], "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 182, 184, 190, 195, 203, 204, 207, 222, 224, 225, 228, 232, 235, 246, 248, 250, 252, 262, 264, 270, 290, 291, 312, 324], "_target": 403, "_tparamet": 130, "_tsurrog": 255, "_u": 290, "_validate_my_attribut": 404, "a1": 283, "a2": 283, "ab": [375, 376], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 287, 293, 403, 421], "abc": [20, 30, 31, 32, 33, 34, 35, 37, 77, 78, 79, 97, 111, 112, 138, 152, 161, 164, 171, 176, 224, 225, 262, 298], "abil": [407, 420], "abl": [380, 408, 410, 413, 416], "about": [22, 27, 112, 128, 262, 279, 360, 361, 363, 389, 390, 391, 392, 401, 403, 404, 413, 415], "abov": [256, 274, 298, 318, 367, 374, 376, 378, 379, 401, 404, 406, 407, 408, 409, 410, 411, 413, 416, 420], "absenc": 412, "absolut": [125, 315, 401], "abstract": [20, 30, 31, 32, 33, 34, 35, 37, 77, 78, 79, 97, 110, 111, 112, 138, 152, 161, 164, 171, 225, 262, 288, 289, 298, 403, 410, 420], "abstractli": 385, "acceler": [401, 403, 405, 420], "accept": [27, 154, 232, 301, 319, 379, 380, 390, 403, 406, 412, 413, 417, 419], "access": [182, 190, 222, 224, 225, 228, 232, 246, 248, 250, 252, 360, 361, 363, 372, 378, 399, 403, 410, 416], "accord": [41, 150, 304, 407, 410, 411, 414], "accordingli": [166, 409, 416], "account": 408, "accumul": [140, 385, 420], "accur": 409, "acet": [360, 361, 363, 366, 367], "achiev": [17, 190, 380, 385, 401, 404, 407, 409, 410], "ack": 401, "acq_funct": 367, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 379, 380, 385], "acqf1": 416, "acqf2": 416, "acqf_valu": 379, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 61, 66, 164, 166, 372, 373, 374, 375, 376, 379, 380, 385, 387, 394, 401, 403, 407, 414, 416], "acquisition_funct": [164, 166, 359, 367, 385, 395, 396, 403], "acquisition_function_cl": [164, 166, 403], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 22, 24, 25, 164, 166, 385, 416], "across": [385, 398, 408, 414, 420], "act": [403, 406, 410], "action": [17, 378, 385, 403, 421], "activ": [13, 30, 115, 156, 379, 380, 385, 401, 403, 404, 410, 411, 412, 414, 420, 421], "active_dim": [77, 78, 79, 82, 84, 86, 87, 88], "active_valu": [115, 398, 399, 420], "actual": [154, 184, 211, 362, 375, 390, 391, 403, 415, 417, 420], "ad": [27, 190, 278, 282, 314, 345, 404, 407, 411, 412, 413, 419, 421], "adapt": [244, 299, 318], "add": [27, 205, 215, 314, 367, 382, 383, 387, 389, 390, 391, 392, 398, 401, 406, 408, 409, 410, 415, 420], "add_collection3d": 380, "add_fake_result": [366, 367, 372, 373, 374, 375, 376, 382, 383, 387, 403], "add_measur": [27, 366, 367, 369, 370, 372, 373, 374, 375, 376, 380, 382, 383, 385, 387, 389, 390, 391, 392, 401, 403, 408, 409, 411], "add_subplot": 380, "addendum": 406, "addit": [27, 97, 102, 107, 154, 166, 184, 205, 213, 215, 217, 315, 359, 360, 361, 362, 363, 364, 367, 389, 390, 391, 392, 399, 401, 403, 405, 406, 409, 410, 411, 412, 413, 415, 416, 417, 420], "addition": [378, 401], "additivekernel": 403, "adher": [403, 404], "adjust": [359, 361, 367, 391, 403], "adopt": 367, "adrian": [401, 405], "advanc": [385, 403, 411, 416, 420], "advantag": 404, "advic": 404, "advis": [406, 415, 417], "affect": [47, 282, 378, 394, 410], "affected_paramet": [47, 372, 373, 374, 375, 376, 410], "affili": [401, 411], "afford": 409, "aforement": 184, "after": [156, 190, 294, 366, 367, 372, 373, 374, 375, 376, 380, 387, 394, 401, 409, 416], "afterward": 416, "again": [379, 408, 410, 414, 420], "against": [73, 278, 292, 406, 420], "agraw": 405, "agre": [362, 401, 406], "agreement": 406, "ai": [75, 136, 331], "aim": 409, "akin": 408, "al": [361, 401, 413], "aldrich": 405, "alex": 405, "alexand": [401, 405], "algorithm": [159, 166, 314, 343, 345, 387, 401, 403, 408, 414], "alia": [127, 168], "alias": 403, "align": [182, 294, 379, 415, 420], "all": [19, 20, 29, 31, 37, 47, 49, 76, 77, 78, 79, 96, 97, 102, 107, 109, 112, 115, 117, 121, 128, 137, 138, 148, 151, 152, 154, 160, 161, 163, 166, 170, 171, 184, 191, 192, 215, 222, 223, 225, 261, 262, 282, 292, 314, 360, 361, 363, 367, 369, 370, 372, 373, 378, 379, 380, 385, 387, 389, 391, 398, 399, 401, 403, 404, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420], "allclos": [369, 370], "alleg": 406, "allow": [17, 30, 41, 45, 49, 125, 130, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 184, 190, 217, 279, 297, 319, 360, 361, 363, 367, 398, 399, 401, 403, 407, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419], "allow_extra": [182, 184, 190, 195, 403], "allow_miss": [182, 184, 190, 195, 403], "allow_recommending_already_measur": [158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 190, 367, 379, 385, 395, 396, 403, 414], "allow_recommending_pending_experi": [158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 403, 408, 414], "allow_repeated_recommend": [158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 190, 367, 379, 385, 395, 396, 403, 414], "almost": 361, "alon": [403, 406], "along": [335, 406, 413, 420], "alongsid": 406, "alpha": [140, 380], "alphabet": [131, 403], "alreadi": [27, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 190, 367, 392, 401, 403, 407, 408, 414, 415, 420], "also": [51, 130, 222, 224, 225, 228, 232, 246, 248, 250, 252, 279, 292, 294, 359, 360, 369, 370, 375, 379, 380, 382, 383, 387, 389, 391, 392, 394, 398, 399, 401, 403, 404, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420], "alter": [403, 409], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 256, 335, 378, 401, 403, 421], "although": [392, 395, 415, 417], "alwai": [13, 37, 200, 201, 382, 401, 407, 409, 410, 417, 420], "ambigu": [125, 415], "amend": 410, "among": [30, 401, 420], "amount": [283, 338, 346, 390, 398, 399, 408, 413], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 61, 63, 66, 71, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 98, 100, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 130, 138, 140, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 203, 205, 207, 211, 213, 215, 217, 222, 224, 225, 228, 229, 232, 235, 246, 248, 250, 252, 254, 255, 262, 264, 270, 282, 291, 292, 294, 297, 305, 312, 318, 319, 320, 323, 324, 325, 334, 337, 339, 345, 346, 360, 363, 365, 367, 374, 375, 376, 378, 379, 382, 383, 387, 389, 390, 391, 392, 394, 395, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420], "analog": [184, 314, 415, 416], "analogi": [150, 414], "analyt": [3, 4, 7, 8, 66, 357, 390, 400, 417, 420], "analyz": 404, "angl": 380, "ani": [55, 56, 103, 110, 111, 112, 114, 115, 117, 128, 130, 133, 134, 135, 184, 190, 200, 201, 205, 209, 210, 217, 246, 250, 252, 272, 273, 274, 279, 282, 292, 294, 295, 297, 298, 319, 324, 326, 334, 339, 353, 354, 355, 356, 378, 398, 399, 401, 402, 403, 404, 406, 408, 409, 411, 413, 416, 417, 420], "annot": [294, 378, 406], "anonym": [401, 411], "anoth": [47, 325, 361, 373, 374, 382, 383, 392, 404, 410, 420], "ansatz": 403, "answer": 409, "anymor": 420, "anyth": 299, "anywher": 369, "apach": [401, 406], "apart": [404, 409], "api": [33, 42, 43, 301, 401, 402, 416], "appar": 416, "appear": [292, 402, 403, 406, 416], "append": [369, 370, 380, 389, 390, 391, 392, 399], "appendix": 406, "appli": [27, 37, 38, 39, 51, 166, 184, 211, 213, 292, 305, 315, 348, 367, 368, 371, 372, 374, 375, 376, 378, 379, 380, 398, 399, 402, 403, 406, 410, 412, 414, 415, 416, 417, 419, 420], "applic": [339, 401, 404, 406, 413, 414, 417], "approach": [190, 379, 385, 401, 407, 409, 414, 416, 420], "appropri": [94, 190, 385, 404, 406], "approxim": [10, 17], "ar": [6, 12, 14, 27, 30, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 60, 67, 68, 69, 102, 103, 115, 128, 130, 135, 149, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 195, 213, 215, 217, 219, 222, 224, 225, 228, 232, 246, 248, 250, 252, 274, 276, 278, 279, 282, 283, 288, 289, 290, 292, 294, 298, 299, 314, 316, 319, 337, 345, 359, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 383, 385, 387, 389, 391, 394, 395, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420], "arang": [369, 380, 413], "arbitrari": [155, 184, 326, 390, 403, 410, 413, 414, 417, 420], "arbitrarili": [412, 416], "architectur": [259, 403, 418, 420], "ard_num_dim": [77, 78, 79, 82, 84, 86, 87, 88], "area": 380, "arg": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 81, 83, 85, 90, 91, 92, 138, 140, 141, 142, 143, 144, 145, 146, 149, 168, 226, 229, 234, 323, 404], "argument": [74, 75, 130, 136, 152, 154, 155, 156, 182, 190, 226, 294, 367, 383, 387, 403, 410, 415, 416, 417, 420], "aris": [50, 406, 410, 416], "arithmet": [105, 412], "arizona": 405, "arm": [221, 222, 400, 405], "arm_index": 385, "around": [175, 217, 219, 387, 403, 414, 416], "arr": [272, 273, 274, 335], "arrai": [103, 272, 273, 274, 285, 321, 330, 334, 335, 345, 380, 403, 414, 418], "arriv": 401, "aryl": [360, 361, 363, 366, 401, 413], "ascend": 387, "ask": [401, 403, 404, 409], "aspect": [365, 369, 370, 389, 392, 408, 411], "assembl": 416, "assembli": 421, "assert": [56, 372, 373, 374, 375, 376, 382, 383, 394, 403, 406, 409, 410, 416], "assess": 417, "assign": [314, 379, 413], "associ": [184, 385, 406, 409, 411, 412, 420], "assum": [22, 227, 294, 358, 359, 360, 361, 362, 363, 364, 367, 369, 370, 372, 373, 374, 375, 376, 382, 383, 385, 387, 389, 390, 391, 392, 394, 401, 406, 410, 413, 416, 419], "assumpt": 417, "assur": 410, "asynchron": [401, 414, 421], "atol": [369, 370], "attach": [22, 294, 378, 379, 380, 406], "attempt": [65, 71, 227, 337, 385, 402, 403, 408, 410, 414], "attent": 156, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 189, 190, 222, 224, 225, 228, 232, 235, 242, 244, 246, 248, 250, 252, 262, 264, 270, 292, 295, 324, 348, 356, 403], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 73, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 105, 107, 110, 111, 112, 114, 115, 117, 119, 120, 122, 124, 125, 126, 128, 130, 133, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 185, 189, 190, 199, 203, 205, 222, 224, 225, 228, 232, 235, 239, 242, 244, 246, 248, 250, 252, 259, 262, 263, 264, 267, 268, 270, 292, 312, 324, 329, 344, 348, 349, 352, 353, 354, 355, 356, 403, 404, 406, 414, 416, 418, 419], "audit": [401, 403, 404], "augment": [30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 184, 254, 255, 256, 403, 409], "author": 406, "authorship": 406, "auto": [12, 14, 403, 405], "auto_tutori": 331, "autodoc": 403, "automat": [27, 100, 166, 232, 319, 380, 391, 403, 404, 412, 414, 415, 420, 421], "avail": [2, 105, 117, 119, 120, 122, 128, 152, 154, 155, 156, 190, 213, 215, 239, 267, 268, 279, 344, 345, 346, 362, 363, 366, 369, 370, 387, 389, 391, 392, 401, 403, 404, 406, 408, 409, 413, 414, 415, 416, 417, 420, 421], "available_acq_funct": 367, "averag": [248, 379, 380, 399, 413, 417], "avoid": [184, 295, 335, 403, 404, 408, 409, 413, 415], "awai": 419, "awar": [398, 399, 407, 416], "ax": [337, 358, 361, 379, 380, 398, 399], "axes3d": [337, 380], "axi": [182, 213, 335, 375, 376, 379, 380, 385, 387, 398, 399, 415], "azim": 380, "azur": 403, "b": [50, 146, 244, 282, 290, 318, 361, 373, 383, 385, 395, 396, 401, 404, 406, 409, 413, 416], "b1": 283, "b2": 283, "back": [0, 394, 404], "backend": 279, "backport": 402, "backtest": [211, 212, 218, 360, 361, 363, 367, 379, 397, 400, 401, 403, 414, 417], "backtick": 404, "backward": [93, 99, 167, 168, 184, 403], "bad": [387, 409, 411, 419], "bad_interv": 314, "badg": 403, "bai": 401, "baird": 405, "balanc": [102, 385, 401], "banana": 404, "bandit": [222, 367, 400, 401, 403, 405], "banner": 403, "bar": [382, 383, 394, 395, 396, 401, 403], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 105, 107, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 149, 152, 153, 154, 155, 156, 158, 161, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 184, 185, 189, 190, 203, 205, 207, 222, 224, 225, 226, 227, 228, 232, 234, 235, 239, 242, 244, 246, 248, 250, 252, 256, 258, 262, 264, 267, 268, 270, 285, 286, 287, 288, 289, 324, 337, 344, 345, 348, 366, 367, 379, 380, 382, 385, 401, 403, 406, 407, 411, 413, 414, 416, 418], "base_data": 379, "base_kernel": [90, 91, 92], "base_nam": [337, 358, 361, 379, 380, 398, 399], "base_predictor": 254, "base_smil": 379, "baselin": [361, 398, 401, 413], "bashrc": 411, "basi": [86, 401, 406], "basic": [77, 81, 82, 83, 84, 85, 86, 87, 88, 140, 141, 142, 143, 144, 145, 146, 213, 285, 286, 358, 359, 360, 361, 362, 363, 364, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 387, 389, 390, 391, 392, 393, 394, 397, 400, 403, 404, 412, 413, 417, 421], "basic_transfer_learn": 399, "basickernel": [81, 82, 83, 84, 85, 86, 87, 88, 403], "batch": [27, 149, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 216, 254, 255, 367, 372, 373, 374, 375, 376, 380, 387, 389, 390, 391, 392, 394, 398, 399, 403, 408, 414, 417], "batch_quant": [27, 403], "batch_shap": [77, 78, 79, 82, 84, 86, 87, 88], "batch_siz": [27, 41, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 213, 217, 219, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 387, 389, 390, 391, 392, 394, 395, 398, 399, 401, 403, 408, 409, 411, 417], "batchnr": 387, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 105, 107, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 185, 189, 190, 207, 222, 224, 225, 226, 228, 232, 234, 235, 239, 242, 244, 246, 248, 250, 252, 262, 264, 267, 268, 270, 285, 286, 324, 344, 348, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420], "baybe_cach": 411, "baybe_cache_dir": [403, 411], "baybe_deactivate_polar": 411, "baybe_debug_fake_hosthash": 403, "baybe_debug_fake_userhash": 403, "baybe_numpy_use_single_precis": [332, 403, 411], "baybe_telemetry_en": [401, 411], "baybe_telemetry_endpoint": [403, 411], "baybe_telemetry_host": 403, "baybe_telemetry_hostnam": [403, 411], "baybe_telemetry_usernam": [403, 411], "baybe_telemetry_vpn_check": [403, 411], "baybe_telemetry_vpn_check_timeout": [403, 411], "baybe_torch_use_single_precis": [351, 403, 411], "bayesian": [0, 158, 164, 166, 211, 213, 217, 219, 227, 246, 385, 403, 407, 409, 421], "bayesian_recommend": 380, "bayesianlinearmodel": 383, "bayesianlinearsurrog": [367, 418], "bayesianrecommend": [158, 166, 227, 403, 414], "bayesianridg": 382, "bcw07": 420, "becaus": [69, 125, 184, 190, 219, 298, 378, 379, 399, 404, 407, 409, 410, 411, 412, 413, 416, 420], "becom": [184, 407, 409, 410, 416, 419], "been": [22, 65, 66, 152, 154, 155, 156, 190, 222, 224, 225, 228, 232, 246, 248, 250, 252, 319, 360, 361, 367, 401, 402, 403, 406, 408, 414, 417, 420], "befor": [65, 156, 213, 222, 224, 225, 228, 232, 246, 248, 250, 252, 294, 363, 367, 373, 379, 401, 404, 411, 413, 415, 417], "begin": [154, 372, 374, 394, 414], "behalf": 406, "behav": [380, 394, 416], "behavior": [166, 362, 403, 411, 412, 414, 415, 417, 420], "behind": [412, 416, 419], "being": [92, 314, 337, 385, 402, 410, 411, 413, 415], "bell": [268, 272, 387, 419], "belong": [378, 416], "below": [256, 274, 374, 378, 379, 404, 406, 407, 409, 410, 412, 416, 419, 420], "benchmark": 401, "benefici": [406, 407, 411], "benefit": [410, 420], "benzo": 420, "bernoulli": [222, 384, 400, 405], "besid": [401, 412, 419], "best": [12, 14, 213, 215, 217, 363, 385, 401, 411, 414, 417], "bet": 409, "beta": [8, 18, 140, 222, 367, 403, 407], "betabernoullimultiarmedbanditsurrog": [367, 385, 403], "betaprior": [222, 403], "better": [10, 314, 361, 403, 409, 410, 413], "between": [30, 47, 125, 155, 182, 190, 242, 362, 378, 380, 385, 387, 392, 398, 399, 401, 403, 408, 409, 410, 411, 413, 414, 415, 416, 419, 420], "beyond": 401, "bias": 413, "binar": 403, "binari": [264, 394, 403, 416], "binarytarget": [265, 385, 403], "bind": [378, 380, 406], "bit": [306, 413], "black": [211, 417, 420], "blank": 404, "blob": 244, "block": [379, 401, 402, 403, 411, 416], "bodi": 378, "bonilla": 420, "bool": [6, 12, 14, 22, 27, 30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 103, 110, 111, 112, 114, 115, 117, 124, 125, 128, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 195, 222, 224, 225, 228, 232, 246, 248, 250, 252, 264, 265, 272, 273, 274, 277, 278, 288, 289, 292, 293, 298, 299, 304, 308, 309, 319, 324, 334, 339, 385], "boolean": [30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 110, 111, 112, 114, 115, 117, 124, 125, 128, 195, 367, 411], "boost": [250, 399], "both": [10, 130, 184, 190, 219, 274, 294, 373, 379, 382, 385, 387, 398, 399, 401, 407, 410, 413, 415, 416, 419], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 33, 42, 43, 158, 166, 168, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 300, 301, 357, 359, 369, 370, 380, 388, 392, 398, 399, 400, 403, 411, 414], "botorch_acqf": [22, 379, 380], "botorch_analyt": 358, "botorch_function_wrapp": [358, 369, 370, 380, 389, 391, 392, 398, 399], "botorch_wrapp": [358, 369, 370, 380, 389, 391, 392, 398, 399], "botorchrecommend": [158, 168, 359, 362, 367, 372, 373, 374, 375, 376, 379, 380, 382, 383, 385, 387, 392, 394, 395, 396, 401, 403, 408, 409, 414], "bottom": 409, "bound": [8, 18, 30, 124, 130, 146, 182, 184, 190, 195, 255, 270, 271, 289, 294, 324, 325, 358, 359, 362, 364, 367, 369, 370, 380, 387, 389, 390, 391, 392, 398, 399, 403, 413, 416, 419, 421], "boundari": [190, 272, 273, 387], "boundary_onli": 190, "bounded": 403, "bounds_transform_func": 403, "box": [146, 211, 417, 420], "brain": [417, 420], "branch": [401, 404], "break": [227, 416], "brettpho": [360, 361, 363, 366, 367], "briefli": [417, 420], "bring": [401, 403], "bro": 244, "broad": 416, "brute": [166, 414], "bu": [360, 361, 363, 366, 367], "budget": 409, "bug": [403, 404], "build": [182, 190, 227, 379, 402, 403, 404, 410, 416, 420, 421], "built": [190, 382, 401, 404, 409, 414], "builtin": 286, "bump": 403, "button": 403, "butyl": [360, 361, 363, 366, 367], "butylphenylphosphin": [360, 361, 363, 366, 367], "butyornitril": [360, 361, 363, 366, 367], "bypass": [130, 379], "byte": [103, 189, 228, 272, 273, 274, 328, 334, 403], "c": [50, 282, 290, 360, 361, 363, 366, 367, 372, 373, 374, 375, 376, 379, 383, 395, 396, 401, 406, 409, 413, 416], "c1": [360, 361, 363, 366, 367, 372, 373, 374, 375, 376, 379, 413], "c1c2": [360, 361, 363, 366, 367], "c1ccccc1": [360, 361, 363, 372, 374, 379], "c1ccoc1": 410, "c2": [360, 361, 363, 366, 367, 372, 374, 375, 376, 379], "c2ccccc2": [360, 361, 363, 379], "c2oc": [360, 361, 363, 366, 367, 379], "c2p": [360, 361, 363, 366, 367, 379], "c3": [360, 361, 363, 366, 367, 372, 374, 375, 379], "c3c": [360, 361, 363, 379], "c3ccccc3": [360, 361, 363, 366, 367, 379], "c4": [360, 361, 363, 372, 374, 379], "c4ccccc": 367, "c4ccccc4": [360, 361, 363, 366, 367, 379], "c5": [372, 374], "c6": [372, 374], "c_i": [42, 43, 410], "cach": [278, 403, 416, 421], "cached_recommend": 278, "calcul": [278, 335, 359, 362, 364, 369, 375, 380, 389, 390, 391, 392, 398, 411, 413, 415], "calibr": 420, "call": [33, 42, 43, 74, 152, 154, 155, 156, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 278, 279, 294, 359, 360, 361, 362, 363, 367, 375, 378, 379, 383, 395, 396, 401, 402, 403, 407, 409, 410, 411, 413, 416, 417, 420], "callabl": [46, 73, 130, 203, 211, 213, 215, 217, 219, 254, 255, 258, 259, 286, 291, 292, 294, 378, 403, 421], "callable_": 292, "callback": 417, "campaign": [213, 216, 217, 219, 314, 315, 365, 366, 374, 377, 380, 385, 396, 398, 399, 400, 401, 403, 407, 408, 410, 412, 413, 415, 416, 417, 418, 420, 421], "campaign1": 417, "campaign2": 417, "campaign_json": 409, "campaign_oh": 361, "campaign_rand": [360, 361, 363], "campaign_recr": 394, "campaign_stop": 379, "campaign_with_hook": 379, "campaignstoppedexcept": 379, "can": [13, 17, 22, 30, 37, 38, 39, 50, 97, 102, 107, 111, 117, 125, 128, 149, 158, 159, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 211, 215, 222, 224, 225, 226, 227, 228, 232, 246, 248, 250, 252, 256, 265, 277, 279, 292, 294, 298, 314, 315, 319, 331, 358, 359, 360, 361, 362, 363, 364, 367, 368, 371, 372, 373, 374, 378, 379, 380, 382, 383, 385, 387, 389, 390, 391, 392, 395, 398, 399, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420], "canada": 405, "candid": [12, 14, 27, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 190, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 379, 399, 403, 407, 408, 409, 414, 415], "candidates_comp_rep": 379, "cannot": [13, 72, 73, 227, 228, 256, 299, 337, 385, 403, 406, 408, 410, 411, 413, 414, 416, 418, 420], "canon": [303, 416], "capabl": [357, 384, 386, 393, 397, 399, 403, 409, 420], "captur": 413, "cardin": [30, 41, 45, 55, 56, 182, 403, 405], "cardinalityconstraint": [41, 45, 403], "care": [404, 410, 412], "carefulli": 411, "carlo": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 66, 217, 358, 359, 361, 362, 363, 364, 379, 385, 398, 399, 408, 417], "carri": [294, 378, 406], "cartesian": [184, 190, 191, 192, 401, 403, 415], "case": [152, 154, 155, 156, 219, 256, 294, 314, 320, 359, 379, 391, 392, 395, 401, 404, 407, 408, 409, 410, 411, 413, 416, 417, 419, 420], "cast": [33, 42, 43, 403, 411], "cat_1": 387, "cat_1_22": 387, "cat_1_33": 387, "cat_2": 387, "catch_constant_target": 403, "categor": [27, 114, 115, 119, 190, 197, 319, 401, 403, 413, 415, 419], "categori": [361, 379, 401, 403, 416, 419], "categorial_1": 409, "categorical": [372, 373, 374, 376, 387, 394], "categorical_1": [387, 409], "categorical_2": [387, 409], "categorical_paramet": 416, "categorical_parameter_json": 416, "categorical_parameter_reconstruct": 416, "categoricalencod": [114, 115], "categoricalp": [372, 373, 374, 376, 387, 394], "categoricalparamet": [115, 190, 361, 372, 373, 374, 376, 383, 385, 387, 394, 395, 396, 401, 403, 415, 416, 421], "cattr": [202, 203, 205, 396, 402, 403, 404], "cauchi": 142, "caus": [125, 282, 286, 403, 406], "caution": 420, "cc": [360, 361, 363, 366, 367, 372, 374, 375, 376, 379, 413, 420], "cc1": [360, 361, 363, 366, 367, 413], "ccc": [372, 374, 375, 383, 401], "cccc": [360, 361, 363, 366, 367, 372, 374], "ccccc": [372, 374, 395, 396], "cccccc": [372, 374], "cccccccco": [410, 413], "ccccoc": [360, 361, 363, 366, 367], "ccoccoccn": [395, 396], "cdot": [410, 412], "ceil": 379, "cell": [382, 413, 417, 420], "cell_lin": 420, "center": [272, 274, 324, 387, 409], "central": [403, 409], "certain": [47, 73, 156, 203, 205, 211, 279, 314, 338, 373, 379, 385, 401, 404, 410, 414, 415, 416, 420], "cesium": [360, 361, 363, 366, 367], "ch": 338, "chai": 420, "chain": [35, 286, 410], "challeng": [404, 416], "chanc": 402, "chang": [47, 154, 314, 367, 391, 401, 402, 404, 406, 409, 411, 415, 420], "charact": 406, "characterist": 286, "charg": 406, "check": [27, 110, 111, 112, 114, 115, 117, 124, 125, 128, 278, 293, 296, 297, 298, 299, 319, 324, 333, 391, 392, 394, 401, 403, 404, 411, 415, 416], "checker": 403, "checkout": 404, "chem": [401, 403, 413], "chemic": [122, 305, 307, 308, 309, 361, 366, 403, 405, 410, 413, 420], "cheminformat": [128, 401, 403], "chemistri": [117, 367, 375, 379, 383, 395], "child": [173, 174, 175, 176], "chocol": 404, "choic": [213, 215, 345, 378, 385, 392, 403, 410, 412, 413, 414, 415, 416, 417, 419], "choos": [150, 358, 385, 387, 389, 391, 392, 401, 406, 407, 409, 414, 417, 418, 419], "chose": [391, 414, 416], "chosen": [63, 158, 213, 215, 219, 341, 342, 367, 375, 385, 403, 407, 410, 413, 415], "christoph": 420, "ci": [370, 398, 399, 403, 404], "circumv": [402, 416], "cl": [100, 200, 204, 256, 288, 289, 293, 298, 326], "claim": 406, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 203, 205, 206, 207, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 284, 285, 286, 287, 288, 289, 293, 298, 300, 306, 322, 324, 339, 343, 344, 347, 348, 367, 378, 379, 382, 385, 395, 403, 409, 410, 412, 414, 415, 416, 418], "classic": [385, 412], "classifi": 413, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 182, 184, 190, 207, 222, 224, 225, 228, 232, 235, 246, 248, 250, 252, 262, 264, 270, 286, 324, 403], "classvalidationerror": [396, 402], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 110, 111, 112, 114, 115, 117, 124, 125, 128, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 222, 224, 225, 228, 232, 246, 248, 250, 252], "clean": [316, 317, 318, 403, 404], "clear": [331, 420], "click": 385, "clone": 404, "close": [213, 219, 267, 379, 398, 399, 417], "closer": [333, 413], "closest": [278, 319, 334], "closest_el": 403, "closur": [211, 417], "cluster": [173, 174, 175, 176, 367, 403, 405, 421], "clustering_x": 403, "cmap": 380, "cn": [360, 361, 363, 366, 367], "co1": [360, 361, 363, 379], "co2": [360, 361, 363, 379], "co3": [360, 361, 363, 379], "coars": [383, 394, 395, 396, 401], "coc": [383, 395, 396, 401], "cococ": [395, 396], "code": [227, 361, 362, 383, 385, 391, 395, 396, 401, 402, 403, 406, 410, 411, 413, 420], "coeffici": [33, 42, 43, 369, 370, 410], "coerc": 403, "collect": [27, 55, 56, 80, 90, 91, 130, 131, 139, 154, 156, 182, 190, 196, 197, 208, 215, 280, 282, 284, 292, 314, 343, 345, 364, 367, 380, 385, 398, 399, 401, 403, 409, 411], "color": 380, "column": [37, 38, 39, 97, 102, 103, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 130, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 213, 215, 217, 219, 282, 283, 308, 309, 316, 317, 318, 320, 348, 361, 366, 372, 373, 374, 375, 376, 379, 387, 389, 390, 391, 392, 394, 398, 399, 403, 409, 415, 416, 417], "column_group": 283, "com": [244, 295, 318, 401, 403], "comb": 375, "combin": [35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 130, 184, 190, 191, 192, 286, 305, 360, 361, 363, 372, 374, 375, 378, 379, 387, 401, 406, 410, 412, 414, 415, 417, 420], "combine_func": 94, "come": [385, 401, 409, 416, 420], "comment": 403, "commerci": 406, "commit": [401, 403, 404], "common": [139, 359, 382, 403, 404, 406, 409, 410, 413, 416], "commonli": 412, "commun": [406, 412, 413, 420], "comp_df": [111, 114, 115, 117, 125, 128, 403], "comp_rep": [190, 380, 382, 403, 415], "comp_rep_bound": [182, 184, 190, 403], "comp_rep_byt": 189, "comp_rep_column": [110, 111, 112, 114, 115, 117, 124, 125, 128, 182, 184, 190, 403], "comp_rep_human_read": 189, "comp_rep_shap": 189, "comp_rep_tensor": [379, 380], "compar": [130, 154, 362, 385, 398, 401, 403, 404, 413, 419], "comparison": [379, 398, 399, 414, 416], "compat": [93, 99, 130, 158, 161, 164, 166, 167, 168, 171, 173, 174, 175, 176, 178, 179, 184, 185, 195, 215, 228, 294, 356, 367, 372, 373, 374, 375, 376, 378, 380, 387, 394, 403, 414], "compens": 403, "compil": 406, "complaint": 404, "complet": [380, 408, 410, 412, 416], "complex": [103, 272, 273, 274, 334, 394, 398, 399, 404, 407, 408, 410, 420], "compli": 406, "complianc": 401, "complic": 420, "compon": [60, 404, 407, 409, 410, 411, 416, 420], "compos": [89, 416], "composit": [78, 90, 91, 92], "compositekernel": [90, 91, 92, 403], "compound": 305, "comprehens": [401, 418], "compress": 416, "comput": [22, 27, 70, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 182, 184, 189, 190, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 256, 262, 264, 270, 306, 308, 309, 335, 372, 373, 374, 375, 376, 378, 387, 394, 403, 406, 407, 409, 411, 415, 416], "computation": 166, "concat": [379, 387, 398, 399], "concaten": 362, "concentr": [140, 141, 360, 361, 363, 366, 367, 372, 378, 379, 410], "concentrati": 372, "concentration_valu": 379, "concept": [282, 412, 413, 416], "concis": 403, "concret": [403, 416], "conda": 403, "condit": [30, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 314, 361, 369, 373, 374, 375, 376, 401, 403, 406, 420, 421], "conduct": [27, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 217, 222, 224, 225, 228, 232, 246, 248, 250, 252, 358, 359, 360, 361, 362, 363, 364, 401, 404, 409, 420], "confid": [8, 18, 367], "config": [382, 383, 393, 400, 403, 421], "config_json": 27, "configur": [27, 68, 69, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 211, 213, 219, 222, 224, 225, 226, 228, 232, 238, 246, 248, 250, 252, 314, 337, 345, 365, 366, 388, 392, 396, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 419, 420, 421], "confirm": 380, "conflict": [401, 404, 412], "confront": [385, 401], "connect": [51, 314, 403, 411, 419], "consecut": [152, 154, 155, 156], "consequ": [155, 363, 410, 414, 415, 417], "consequenti": 406, "consid": [8, 18, 27, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 102, 115, 154, 184, 190, 195, 217, 278, 314, 319, 385, 387, 398, 399, 401, 403, 404, 408, 410, 412, 413, 414, 416], "consider": [184, 408], "consist": [150, 189, 380, 404, 406], "consol": 402, "consolid": 414, "consortium": 405, "conspicu": 406, "constant": [248, 256, 273, 387, 403, 404, 413, 415], "constitut": 406, "constrain": [403, 410, 419, 420], "constraint": [30, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 112, 182, 184, 190, 285, 382, 383, 387, 394, 395, 396, 400, 401, 403, 405, 413, 421], "constraint_1": 374, "constraint_2": 374, "constraint_3": 374, "constraints_augment": 184, "constraints_cardin": 182, "constraints_lin_eq": 182, "constraints_lin_ineq": 182, "constraints_nonlin": 182, "constru": 406, "construct": [27, 182, 184, 190, 228, 258, 398, 399, 401, 403, 407, 416, 421], "constructor": [173, 174, 175, 176, 184, 204, 246, 250, 252, 395, 396, 403, 407, 409, 412, 421], "consult": 401, "consum": [154, 378], "consumpt": 411, "cont_ind": [362, 392], "cont_indic": [362, 389, 391, 392], "cont_paramet": [362, 392], "cont_recommend": [158, 392], "contact": [401, 405], "contain": [27, 30, 37, 38, 39, 56, 59, 62, 97, 102, 103, 107, 130, 134, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 189, 190, 191, 192, 196, 211, 213, 215, 217, 222, 224, 225, 228, 232, 246, 248, 250, 252, 262, 264, 270, 272, 273, 274, 282, 283, 294, 306, 308, 309, 314, 315, 324, 335, 337, 339, 345, 361, 362, 363, 379, 380, 385, 392, 398, 399, 403, 404, 406, 409, 410, 414, 415, 416, 417], "contains_mordr": 184, "contains_rdkit": 184, "content": [42, 43, 130, 154, 184, 215, 346, 403, 406, 416], "context": [152, 154, 155, 156, 211, 226, 342, 378, 385, 398, 399, 403, 409, 413, 416, 417, 420], "contextu": 420, "continu": [10, 13, 22, 27, 30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 62, 110, 111, 112, 114, 115, 117, 124, 125, 128, 158, 166, 182, 184, 185, 190, 191, 192, 219, 222, 224, 225, 228, 232, 246, 248, 250, 252, 362, 367, 369, 372, 373, 374, 375, 376, 387, 388, 392, 394, 400, 401, 403, 409, 414, 416, 421], "continuous_subspac": 415, "continuouscardinalityconstraint": [55, 182, 403], "continuousconstraint": [33, 34, 182, 410, 411], "continuouslinearconstraint": [42, 43], "continuouslinearequalityconstraint": [182, 369, 370, 421], "continuouslinearinequalityconstraint": [182, 370, 421], "continuousnonlinearconstraint": [41, 182, 403], "continuousparamet": [124, 182, 403], "contract": 406, "contrast": [190, 298, 385], "contribut": [401, 403, 406], "contributor": [401, 406], "contributori": 406, "control": [13, 17, 130, 140, 166, 182, 190, 359, 362, 387, 391, 401, 403, 406, 407, 411, 412, 413, 414, 419], "convei": 416, "conveni": [403, 415, 416], "convent": [184, 404], "convers": [27, 155, 382, 403, 406, 421], "convert": [24, 98, 186, 199, 295, 299, 305, 307, 311, 312, 320, 321, 325, 328, 331, 383, 395, 396, 403, 409, 411, 416], "convert_sklearn": 382, "convert_sklearn_bayesian_ridg": 382, "cooki": 404, "coordin": 345, "copi": [379, 401, 403, 406], "copyright": [401, 406], "core": [27, 182, 184, 185, 190, 195, 217, 219, 222, 224, 225, 226, 228, 232, 239, 246, 248, 250, 252, 367, 403, 419], "coregion": 420, "coretest": 403, "corpu": 413, "correct": [259, 380, 401, 403, 404, 416], "correctli": [392, 403], "correl": [117, 128, 318, 413, 420], "correspond": [22, 27, 41, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 203, 211, 213, 215, 222, 224, 225, 228, 232, 246, 248, 250, 252, 272, 278, 294, 297, 299, 305, 307, 314, 320, 366, 367, 385, 392, 398, 399, 401, 403, 404, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420], "corrupt": 315, "cost": [361, 385], "costli": [184, 187, 193, 409], "could": [30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 125, 311, 367, 378, 379, 399, 403, 408, 410, 413, 417, 419, 420], "count": [279, 379, 410], "counterclaim": 406, "counterpart": [294, 415], "coupl": 380, "cours": [398, 399, 404, 416, 420], "cov": [403, 404], "cover": [298, 314], "coverag": [403, 404], "cp": [360, 361, 363, 379], "crash": 403, "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 25, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 130, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 182, 184, 190, 191, 192, 207, 215, 222, 224, 225, 226, 228, 232, 235, 240, 246, 248, 250, 252, 262, 264, 270, 314, 324, 337, 339, 345, 362, 366, 378, 379, 380, 392, 393, 400, 401, 402, 403, 404, 410, 411, 416, 417, 419, 421], "create_example_plot": [358, 361, 379, 380, 398, 399], "create_from_config": [382, 383], "create_pi_plot": 380, "creation": [30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 130, 187, 190, 193, 362, 373, 375, 376, 382, 383, 390, 415, 416, 421], "criteria": 380, "criterion": [379, 407], "critic": 403, "cross": [398, 406], "crucial": 419, "cube": 410, "cultur": [413, 420], "curran": 420, "current": [10, 27, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 217, 219, 227, 277, 331, 379, 380, 407, 409, 410, 411, 413, 417, 419, 420], "curv": [272, 380, 387, 410, 419], "custom": [30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 110, 111, 112, 114, 115, 117, 120, 124, 125, 128, 130, 228, 259, 262, 264, 270, 294, 320, 357, 367, 371, 379, 385, 388, 392, 400, 401, 403, 410, 413, 414, 420, 421], "custom_analyt": [362, 364], "custom_conversion_funct": 382, "custom_filt": 410, "custom_funct": 372, "customari": 406, "customconstraint": 372, "customdiscreteparamet": [403, 421], "customencod": 117, "customonnxsurrog": [367, 382, 403], "customparamet": 413, "cycl": [154, 401], "cyclic": 154, "d": [22, 50, 103, 282, 290, 335, 345, 380, 383, 395, 396, 398, 399, 401, 406, 420], "d102": 404, "d401": 372, "damag": 406, "daniel": 405, "darmstadt": [401, 405, 411], "dashboard": 403, "data": [13, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 97, 102, 107, 117, 125, 128, 149, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 213, 217, 219, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 262, 264, 270, 279, 281, 285, 306, 314, 315, 319, 330, 331, 346, 350, 357, 358, 359, 362, 366, 367, 369, 370, 372, 373, 374, 375, 376, 379, 383, 387, 389, 391, 394, 395, 396, 398, 399, 400, 401, 403, 407, 408, 409, 410, 411, 413, 414, 416, 417, 421], "data_typ": 382, "databas": [27, 387, 401, 416], "dataclass": [378, 385], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 97, 102, 107, 111, 114, 115, 117, 125, 128, 130, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 189, 190, 191, 192, 195, 209, 210, 213, 215, 217, 219, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 262, 264, 270, 278, 282, 283, 305, 306, 308, 309, 346, 360, 366, 367, 372, 373, 374, 375, 376, 379, 380, 382, 383, 387, 394, 398, 399, 403, 408, 409, 410, 413, 421], "datapoint": 403, "dataset": [154, 211, 417], "datatyp": 403, "date": 406, "de": [202, 393, 401, 402, 403, 404, 409, 410, 414, 421], "deactiv": [401, 403, 411], "deal": [363, 408, 413], "debug": 403, "decid": [125, 319, 385, 392, 407], "declar": [47, 51, 56, 176, 373, 404, 410], "decod": 382, "decor": [92, 256, 286, 378, 403], "decorrel": [117, 128, 133, 395, 396, 413], "decreas": [154, 273, 387, 416, 420], "deduc": [369, 370, 389, 391], "dedupl": 403, "deep": 379, "deepcopi": 403, "def": [359, 362, 364, 372, 378, 379, 380, 385, 390, 398, 404, 410], "default": [39, 102, 115, 117, 128, 130, 158, 173, 174, 175, 176, 182, 184, 190, 202, 222, 239, 242, 360, 363, 367, 383, 387, 392, 401, 403, 404, 409, 411, 412, 413, 421], "default_iter": 155, "default_model": 228, "defaultkernelfactori": [367, 372, 373, 374, 375, 376, 387, 394], "defaultscal": 403, "defend": 406, "defin": [22, 27, 33, 38, 42, 43, 46, 120, 149, 154, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 190, 211, 232, 234, 235, 259, 315, 318, 348, 360, 361, 363, 366, 367, 372, 373, 374, 376, 382, 383, 385, 403, 404, 406, 409, 413, 415, 416, 417, 419], "definit": [182, 190, 298, 401, 403, 406, 412], "degener": [324, 403], "degr": 394, "degre": 416, "degree_c": [382, 383, 394], "deliber": 406, "delici": 404, "deliveri": 413, "demand": 399, "demo": 403, "demonstr": [357, 360, 362, 365, 368, 371, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 393, 394, 397, 398, 399, 403, 412, 415, 416, 420], "denot": [22, 362, 375], "densiti": 380, "depend": [47, 51, 71, 94, 184, 190, 211, 262, 264, 270, 273, 282, 361, 367, 371, 375, 400, 403, 404, 410, 411, 415, 417, 419, 420], "dependenciesconstraint": 403, "deprec": [27, 58, 164, 166, 182, 229, 286, 361, 372, 374, 376], "deprecationwarn": 379, "depth": 415, "deriv": [173, 174, 175, 176, 190, 298, 406, 410, 415], "descend": 273, "describ": [115, 173, 174, 175, 176, 222, 224, 225, 228, 232, 246, 248, 250, 252, 367, 372, 378, 379, 385, 387, 404, 406, 408, 409, 410, 412, 413, 416, 417], "descript": 404, "descriptor": [122, 128, 306, 308, 309, 403, 413, 420], "deseri": [200, 204, 209, 394, 402, 403, 409, 421], "deserialize_datafram": 416, "design": [0, 17, 22, 213, 378, 382, 385, 406, 407, 412, 414, 416], "desir": [94, 102, 105, 364, 386, 387, 400, 401, 403, 407, 409, 411, 412, 414, 416, 419], "desirabilityobject": [364, 387, 401, 403, 416, 421], "desktop": 403, "despit": 403, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 136, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 189, 190, 213, 217, 222, 224, 225, 226, 228, 232, 235, 242, 244, 246, 248, 250, 252, 262, 264, 270, 275, 276, 301, 324, 348, 358, 359, 360, 362, 363, 364, 367, 369, 370, 387, 389, 392, 401, 402, 403, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420], "detect": [285, 319, 404], "determin": [27, 100, 190, 298, 328, 333, 345, 360, 385, 406, 411, 414], "determinist": 345, "detriment": 413, "dev": [401, 403, 404], "develop": [401, 403, 408, 413], "deviat": [6, 256, 382, 403], "df": [130, 182, 184, 190, 195, 210, 215, 282, 283, 305, 316, 317, 318, 320, 346, 372, 385, 401, 410, 415, 416], "dfa": [282, 283], "di": [360, 361, 363, 366, 367, 405], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 100, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 173, 174, 175, 176, 182, 184, 187, 190, 193, 203, 204, 205, 207, 217, 222, 224, 225, 228, 232, 235, 246, 248, 250, 252, 262, 264, 270, 276, 290, 292, 314, 324, 348, 379, 382, 398, 399, 403], "dict_bas": [360, 361, 363, 366, 367], "dict_ligand": [360, 361, 363, 366, 367], "dict_solv": [360, 361, 363, 366, 367, 372, 373, 374, 375, 376, 410], "dictat": [184, 398, 399], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 182, 184, 190, 203, 205, 207, 217, 222, 224, 225, 228, 232, 235, 246, 248, 250, 252, 256, 262, 264, 270, 290, 292, 314, 324, 359, 360, 361, 362, 363, 366, 413, 417], "diff": 404, "differ": [49, 102, 182, 184, 185, 190, 211, 219, 278, 283, 314, 315, 348, 361, 362, 364, 372, 378, 385, 387, 391, 392, 398, 399, 401, 403, 404, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419, 420], "differenti": [417, 420], "difficult": 420, "digit": 320, "dilemma": 385, "dim": [22, 358, 369, 370, 380, 382, 389, 391, 392, 398, 399], "dimens": [22, 345, 358, 359, 362, 364, 369, 370, 380, 382, 389, 390, 391, 398, 399, 403, 413, 415, 420], "dimension": [103, 110, 111, 112, 114, 115, 117, 124, 125, 128, 242, 345, 362, 390, 398, 399, 403], "dimethylisoxazol": 420, "direct": [360, 361, 363, 366, 401, 406, 413], "directli": [298, 399, 401, 403, 410, 412, 416], "directori": [337, 392, 403], "disabl": [277, 403, 404, 409], "disadvantag": 416, "disappear": 403, "disc_ind": [362, 392], "disc_indic": [362, 389, 391, 392], "disc_paramet": [362, 392], "disc_recommend": [158, 392], "disclaim": 406, "discourag": 409, "discret": [13, 22, 27, 30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 62, 110, 111, 112, 114, 115, 117, 124, 125, 128, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 185, 189, 190, 219, 344, 358, 359, 362, 364, 366, 369, 376, 379, 380, 382, 387, 388, 392, 394, 399, 400, 401, 403, 407, 409, 416, 417, 421], "discrete_param": [380, 398, 399], "discrete_spac": [358, 369, 370, 389, 392], "discrete_subspac": 415, "discretecardinalityconstraint": 403, "discreteconstraint": [45, 46, 47, 48, 49, 50, 51, 52, 53, 190, 410], "discretecust": 372, "discretecustomconstraint": [372, 403, 421], "discretedep": 373, "discretedependenciesconstraint": [51, 56, 373, 375, 421], "discreteexcl": 374, "discreteexcludeconstraint": [374, 403, 421], "discretelinkedparametersconstraint": [403, 421], "discretenola": 375, "discretenolabelduplicatesconstraint": [51, 375, 403, 421], "discreteparamet": [114, 117, 125, 128, 190, 403], "discreteperm": 375, "discretepermutationinvarianceconstraint": [375, 421], "discreteprod": 376, "discreteproductconstraint": [376, 403, 421], "discretesamplingmethod": [13, 166, 346, 403, 407], "discretesumc": [375, 376], "discretesumconstraint": [369, 375, 376, 403, 421], "discuss": [387, 406, 410, 415, 417], "disjoint": 190, "disk": [403, 421], "dispatch": 93, "displai": [320, 359, 379, 406], "distanc": [125, 278, 319, 345], "distinct": [378, 409, 414], "distinguish": [42, 43, 403, 410, 413, 420], "distribut": [27, 136, 139, 222, 224, 225, 228, 232, 246, 248, 250, 252, 387, 392, 401, 403, 406, 407, 408], "distutil": 299, "div": 382, "divers": 418, "divis": 335, "dmac": [360, 361, 363, 366, 367], "dmf": 410, "do": [184, 190, 227, 362, 375, 378, 382, 383, 385, 392, 394, 395, 396, 398, 401, 406, 408, 410, 411, 413, 414, 416, 420, 421], "do_baybe_work": 411, "doc": [75, 136, 286, 401, 403], "doc101": 404, "doc103": 404, "docstr": 403, "doctest": 403, "document": [331, 382, 401, 403, 404, 405, 406, 409, 417], "doe": [26, 27, 35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 211, 213, 215, 217, 222, 224, 225, 227, 228, 232, 246, 248, 250, 252, 259, 294, 305, 307, 314, 331, 363, 367, 379, 382, 383, 390, 395, 396, 398, 399, 403, 406, 410, 412, 417, 418, 420], "doi": [244, 318], "domain": [222, 224, 225, 228, 232, 246, 248, 250, 252, 401, 415], "done": [27, 363, 366, 372, 373, 374, 375, 376, 382, 383, 387, 391, 394, 403, 407, 410, 411], "dont_recommend": [372, 373, 374, 375, 376, 387, 394, 415], "doubl": [331, 404, 411], "down": 416, "downsid": 155, "draft": 403, "dramat": 420, "drastic": 413, "draw": [10, 87, 182, 385], "draw_arm": 385, "drawn": 17, "drive": [380, 420], "driven": [314, 407], "drop": [308, 309, 316, 317, 318, 379, 403, 410], "dropna": [308, 309], "dtype": [103, 272, 273, 274, 306, 334], "due": [279, 375, 399, 401, 403, 407, 410, 411, 413, 414, 415, 416, 419], "duplic": [51, 135, 285, 290, 375, 403, 410], "dure": [27, 30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 184, 190, 211, 292, 345, 364, 385, 398, 399, 401, 403, 404, 405, 409, 410, 411, 415, 416, 417], "dynam": [385, 416], "e": [17, 22, 27, 30, 47, 49, 50, 62, 117, 130, 156, 184, 190, 211, 262, 264, 270, 279, 285, 288, 289, 306, 308, 309, 314, 319, 324, 353, 360, 361, 363, 383, 385, 401, 402, 403, 404, 407, 408, 410, 411, 413, 414, 415, 416, 417, 420], "each": [17, 27, 33, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 130, 149, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 184, 213, 215, 217, 219, 227, 283, 306, 308, 309, 314, 337, 361, 362, 363, 367, 380, 385, 387, 392, 398, 399, 404, 406, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420], "eagerli": 403, "earli": [379, 403], "earlier": [158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 190, 402], "earn": 385, "earned_reward": 385, "easi": [305, 404, 416], "easier": 404, "easiest": [401, 404], "easili": [379, 404, 409, 413, 415, 416, 420], "ecosystem": 416, "edbo": [242, 244, 318, 403], "edbokernelfactori": [242, 403], "edit": [401, 404], "editor": 420, "editori": 406, "edwin": 420, "effect": [49, 219, 378, 379, 385, 399, 407, 410, 413, 414, 417, 420], "effici": [190, 401, 403, 415], "ei": [3, 358, 359, 367], "either": [22, 185, 213, 219, 232, 256, 361, 362, 374, 387, 390, 392, 401, 406, 412, 414, 415, 417], "elabor": 406, "elaps": 378, "elapsedtimeprint": 378, "electron": [405, 406], "eleg": [398, 416], "element": [37, 38, 39, 46, 190, 219, 278, 285, 297, 319, 333, 334, 339, 398, 399, 403, 410], "elev": 380, "elif": [389, 391, 392], "elimin": 407, "els": [298, 299, 304, 358, 359, 360, 361, 362, 363, 364, 369, 370, 372, 373, 375, 376, 379, 380, 385, 389, 391, 392, 398, 399], "elsewher": 382, "emd": 405, "emdgroup": [275, 401], "emelin": 405, "emerg": 409, "empir": 385, "emploi": [27, 385, 414], "employe": [401, 411], "empow": 418, "empti": [182, 184, 190, 197, 283, 294, 305, 320, 362, 387, 392, 394, 403, 415], "empty_encod": [184, 190], "emptysearchspaceerror": 197, "emul": [17, 402, 403], "en": [75, 136], "enabl": [277, 278, 359, 360, 361, 362, 363, 398, 401, 402, 403, 409, 410, 412, 414, 416, 417, 419, 420], "encod": [30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 124, 125, 128, 184, 190, 222, 224, 225, 228, 232, 246, 248, 250, 252, 360, 361, 363, 366, 367, 372, 373, 374, 375, 376, 379, 383, 385, 387, 394, 395, 396, 398, 399, 401, 403, 410, 415, 416, 420], "encompass": 409, "encount": [345, 403, 404, 412], "end": [0, 274, 324, 379, 383, 385, 387, 394, 406, 410, 416], "endeavor": 407, "endpoint": [403, 411], "enforc": [332, 351, 403, 404], "engin": [402, 414, 416], "enhanc": [22, 401], "enlarg": 413, "enough": [182, 416], "ensembl": 254, "ensur": [130, 360, 361, 363, 401, 410, 416], "enter": [64, 190, 415], "entir": [278, 324, 346, 403, 404, 407, 411], "entiti": 406, "entri": [27, 33, 35, 38, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 205, 222, 224, 225, 228, 232, 246, 248, 250, 252, 278, 283, 314, 319, 346, 363, 372, 373, 374, 375, 376, 403, 410, 411, 419], "enum": [105, 119, 120, 121, 122, 185, 239, 267, 268, 344, 403, 416], "enumer": [104, 118, 266, 380, 398, 399, 412], "env": [403, 404], "envar_nam": 411, "environ": [277, 332, 351, 358, 359, 360, 361, 362, 363, 364, 370, 372, 373, 375, 376, 379, 380, 382, 385, 398, 399, 401, 403, 404, 421], "envvar": 275, "envvar_nam": 411, "eq": [372, 375], "equal": [33, 42, 43, 102, 156, 182, 385, 387, 394, 403, 412, 415, 416, 419], "equat": [410, 417], "equidist": 413, "equip": 410, "equival": [17, 30, 51, 370, 407, 410], "error": [154, 164, 166, 213, 215, 217, 229, 292, 335, 363, 383, 385, 403, 410, 412, 413, 414, 417], "esian": 401, "especi": 404, "essenti": [409, 414], "establish": [379, 398, 399, 420], "ester": [360, 361, 363, 366, 367], "estim": [184, 189, 190, 222, 385, 403, 418], "estimate_product_space_s": [184, 190], "estimated_win_r": 385, "estimation_bia": 385, "estimation_vari": 385, "et": [361, 401, 413], "etc": [37, 38, 39, 112, 184, 262, 264, 270, 420], "ethanol": 410, "euclidean": 345, "eval_during_augment": [30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53], "eval_during_cr": [30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53], "eval_during_model": [30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53], "evalu": [22, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 254, 255, 299, 389, 390, 391, 392, 403, 409, 411, 420], "even": [256, 317, 398, 399, 406, 408, 409, 413, 417, 418, 420], "event": [27, 278, 379, 406], "everi": [184, 408], "everyth": [404, 410], "evolv": [380, 404], "exact": [27, 319, 378, 403, 408, 410, 413, 414], "exactli": [184, 403, 408, 409, 415, 416], "exampl": [130, 215, 282, 283, 290, 298, 357, 358, 365, 368, 371, 377, 378, 379, 380, 381, 384, 385, 386, 388, 393, 397, 398, 399, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420], "example_input_nam": 382, "exceed": 379, "except": [294, 305, 312, 322, 323, 360, 361, 363, 379, 383, 395, 396, 401, 402, 403, 404, 406], "excepthook": 402, "exceptiongroup": 403, "exclud": [50, 190, 316, 374, 403, 406, 410], "exclude_list": 318, "exclus": [48, 371, 400, 406, 410, 417], "execut": [27, 58, 213, 294, 361, 402, 403, 404, 406, 411, 416, 417, 420], "exemplari": 409, "exercis": 406, "exhaust": [154, 414], "exist": [92, 184, 278, 286, 294, 403, 404, 407, 409, 410, 416, 420], "exp": 375, "exp_rep": [190, 372, 373, 374, 375, 376, 415], "exp_rep_byt": 189, "exp_rep_human_read": 189, "exp_rep_shap": 189, "expect": [3, 4, 9, 11, 12, 14, 46, 226, 234, 294, 359, 367, 373, 380, 382, 385, 396, 403, 404, 409, 410, 412, 413, 416, 417, 419], "expens": [10, 166, 369], "experi": [0, 27, 149, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 211, 213, 222, 224, 225, 228, 232, 246, 248, 250, 252, 358, 359, 360, 361, 362, 363, 364, 366, 367, 389, 390, 391, 392, 403, 407, 409, 410, 412, 413, 414, 419, 420, 421], "experiment": [27, 97, 102, 107, 111, 114, 115, 117, 125, 128, 149, 152, 153, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 184, 189, 190, 211, 222, 224, 225, 228, 232, 246, 248, 250, 252, 264, 314, 315, 372, 373, 374, 375, 376, 380, 387, 394, 401, 403, 407, 408, 410, 411, 412, 413, 415, 416, 417, 419, 420], "explain": [367, 380, 403], "explan": [409, 418], "explicit": [130, 155, 375, 378, 379, 383, 395, 396, 403, 411, 416, 420, 421], "explicitli": [182, 190, 378, 392, 399, 406, 420], "exploit": [8, 17, 18, 385], "explor": [8, 18, 27, 362, 385, 407, 414, 415, 420], "exploratori": 407, "exponenti": 190, "expos": [27, 378, 403], "exposur": 403, "expr": [35, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53], "express": [35, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 401, 403, 406, 410], "extend": 420, "extens": [403, 414], "extra": [361, 403], "extract": [195, 380, 398], "extract_pi": 380, "f": [299, 358, 359, 360, 361, 362, 363, 364, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 387, 389, 390, 391, 392, 398, 399], "f1": 417, "f2": 417, "face": [222, 224, 225, 228, 232, 246, 248, 250, 252, 385], "facilit": 414, "fact": [17, 380, 410, 412], "factor": [130, 409], "factori": [130, 182, 232, 233, 234, 235, 236, 242, 244, 291, 367, 372, 373, 374, 375, 376, 387, 394, 403], "fail": [392, 396, 403], "failur": [264, 406], "failure_valu": 264, "fairli": 412, "fake": [215, 314, 366, 367, 382, 383, 387, 403, 417], "fall": [379, 409, 419], "fallback": [100, 190, 326, 337, 382, 403, 415], "fals": [6, 30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 110, 111, 112, 114, 115, 117, 124, 125, 128, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 222, 228, 246, 248, 250, 252, 264, 273, 278, 288, 289, 292, 298, 299, 304, 319, 339, 367, 372, 373, 374, 375, 376, 387, 394, 395, 396, 401, 408, 411], "famili": 410, "familiar": [358, 359, 360, 361, 362, 363, 364, 367, 369, 370, 372, 373, 374, 375, 376, 382, 383, 387, 389, 390, 391, 392, 394], "fang": 405, "fantasi": 10, "farthest": [178, 344, 345, 367, 401, 403, 405, 407, 414], "farthest_point_sampl": 403, "fashion": [272, 274], "fast": [372, 374, 376, 415, 419], "faster": 190, "fault": 74, "favicon": 403, "fc": [360, 361, 363, 379], "feasibl": 409, "featur": [87, 128, 318, 402, 404, 410, 420], "fed": 401, "fee": 406, "feed": [401, 420], "feedback": 405, "feel": 379, "few": [385, 403, 404, 407, 416, 420], "field": [204, 312, 339, 403, 415, 420, 421], "fifti": 406, "fig": 380, "figur": [337, 380], "file": [337, 360, 361, 363, 382, 383, 392, 401, 403, 406, 411, 416, 420], "filenotfounderror": [360, 361, 363, 379], "fill": [27, 215, 380], "filler": 410, "filter": [35, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 184, 190, 316, 372, 410, 415, 420], "filter_attribut": 403, "filterwarn": 379, "final": [361, 366, 379, 399], "find": [184, 292, 334, 337, 401, 407, 409, 410, 420], "fine": [383, 394, 395, 396, 401], "finer": [130, 401], "fingerprint": [122, 306, 413], "finish": 408, "finit": [154, 211, 219, 323, 353, 385, 413, 417], "first": [184, 217, 333, 345, 361, 364, 366, 367, 372, 378, 379, 382, 383, 387, 392, 396, 398, 399, 401, 402, 403, 409, 410, 412, 413, 414, 415, 420], "fit": [27, 176, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 346, 348, 360, 361, 363, 372, 373, 374, 375, 376, 382, 387, 394, 403, 406, 410, 413], "fit_gpytorch_ml": 403, "fit_gpytorch_mll_torch": 403, "fitnr": 387, "fitzner": [401, 405], "fix": [211, 235, 379, 380, 385, 389, 390, 391, 392, 404, 409, 413, 417, 420], "flag": [22, 27, 47, 166, 184, 185, 190, 195, 319, 403, 408, 409, 411, 414], "flake8": 403, "flexibl": [378, 403, 416], "flexibli": 414, "float": [8, 13, 18, 33, 39, 42, 43, 81, 82, 83, 84, 85, 86, 87, 88, 92, 94, 102, 103, 117, 124, 125, 128, 133, 134, 140, 141, 142, 143, 144, 145, 146, 166, 189, 190, 213, 217, 222, 256, 264, 265, 272, 273, 274, 279, 306, 311, 314, 315, 318, 324, 328, 330, 331, 333, 334, 335, 350, 353, 354, 355, 359, 362, 364, 378, 380, 382, 385, 387, 390, 398, 403, 404, 417, 421], "float64": 350, "floattensortyp": 382, "fly": 416, "fn": 286, "focu": [8, 18, 409], "focus": [107, 392, 401], "folder": [361, 401, 404, 411, 418], "follow": [184, 213, 215, 217, 359, 360, 361, 362, 363, 367, 369, 370, 372, 373, 374, 375, 376, 378, 379, 383, 385, 387, 392, 395, 396, 398, 399, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420], "footprint": [10, 184], "forbid": 356, "forc": [166, 403, 414], "forest": [251, 252], "forgiv": 419, "fork": 404, "form": [43, 190, 211, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 314, 401, 406, 407, 409, 412, 413, 414, 415, 416, 417], "format": [33, 42, 43, 276, 301, 320, 325, 328, 382, 383, 394, 395, 401, 402, 403, 404, 409, 411, 416], "format_except": 402, "former": 403, "formul": 420, "forrest": 403, "found": [72, 130, 182, 190, 292, 331, 334, 337, 359, 379, 387, 401, 404, 409, 410, 414, 420], "foundat": 414, "fourier": 87, "fourth": 410, "fp": [344, 362, 403, 407], "fpsrecommend": [367, 382, 383, 394, 395, 396, 401, 408, 414], "frac": [375, 399, 412], "frac1": [373, 375], "frac2": 375, "frac3": 375, "frac_resolut": 373, "fraction": [13, 82, 311, 375, 379, 407, 410, 411], "fraction1": [373, 375], "fraction2": 375, "fraction3": 375, "fraction_1": 410, "fraction_2": 410, "fraction_3": 410, "frame": 315, "frame1": 373, "frame2": 373, "frame_1": 410, "frame_2": 410, "framea": 373, "framea_a": 373, "frameb": 373, "framework": [409, 413], "free": [404, 406, 411], "freedom": 416, "frequenc": 87, "frequent": 385, "fresh": 379, "frictionless": 416, "friendli": 403, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 130, 136, 138, 140, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 207, 215, 217, 219, 222, 224, 225, 228, 232, 235, 240, 244, 246, 248, 250, 252, 256, 262, 264, 270, 273, 274, 294, 298, 299, 301, 305, 315, 316, 318, 324, 335, 337, 346, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 387, 389, 390, 391, 392, 393, 394, 396, 398, 399, 400, 402, 404, 406, 407, 410, 412, 413, 414, 417, 419, 420, 421], "from_bound": [182, 403, 415], "from_config": [27, 395, 396, 409], "from_datafram": [182, 184, 190, 403, 415, 416], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 182, 184, 190, 207, 222, 224, 225, 228, 232, 235, 246, 248, 250, 252, 262, 264, 270, 324, 382], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 182, 184, 190, 207, 222, 224, 225, 228, 232, 235, 246, 248, 250, 252, 262, 264, 270, 324, 382, 383, 394, 409, 416], "from_paramet": [182, 184, 190, 403], "from_preset": 232, "from_product": [182, 184, 190, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 403, 410, 415, 416, 417], "from_record": 416, "from_simplex": [190, 403, 415], "frozenset": 375, "fsspec": 403, "fulfil": [42, 43, 379], "full": [22, 182, 331, 357, 400, 403, 409, 420, 421], "full_factori": 182, "full_lik": 380, "full_lookup": [360, 361, 363], "fulli": [401, 403, 404, 417], "fulltest": 404, "func": 404, "func_nam": 398, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 33, 36, 42, 43, 46, 54, 61, 66, 74, 86, 93, 96, 99, 101, 106, 129, 132, 164, 166, 167, 183, 188, 194, 198, 199, 207, 208, 211, 212, 214, 216, 217, 218, 223, 227, 233, 238, 253, 257, 258, 261, 268, 271, 272, 273, 274, 275, 278, 279, 281, 284, 296, 300, 301, 302, 310, 313, 315, 320, 322, 327, 329, 336, 337, 340, 343, 352, 366, 372, 373, 374, 375, 376, 378, 380, 385, 388, 394, 398, 399, 400, 401, 402, 403, 407, 409, 410, 412, 414, 415, 418, 419, 420, 421], "function_nam": [398, 399], "fundament": [413, 416], "furo": 403, "further": [359, 362, 364, 394, 401, 408, 415, 417, 418, 420, 421], "furthermor": [387, 389, 390, 391, 392], "furyl": [360, 361, 363], "futur": [51, 184, 227, 379, 398, 419], "fuzzi": 278, "fuzzy_row_match": [190, 278], "g": [47, 49, 50, 62, 117, 130, 184, 190, 262, 264, 270, 285, 306, 308, 309, 319, 385, 401, 403, 404, 407, 408, 410, 411, 413, 414, 415, 417], "gain": [190, 409], "gamma": 141, "gammaprior": 403, "gather": [156, 398, 399, 407, 420], "gaussian": [75, 173, 224, 230, 231, 232, 233, 237, 238, 239, 241, 242, 243, 244, 272, 367, 387, 403, 410, 414, 420], "gaussian_kd": 380, "gaussian_process": [77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 232, 234, 235, 239, 242, 244, 367, 403], "gaussianmixtureclusteringrecommend": 414, "gaussianprocesspreset": [232, 240], "gaussianprocesssurrog": [240, 367, 372, 373, 374, 375, 376, 380, 387, 394, 395, 396, 403, 418], "gcf": [359, 360, 362, 363], "ge": 370, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 121, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 189, 190, 222, 224, 225, 228, 232, 235, 242, 244, 246, 248, 250, 252, 262, 264, 270, 276, 298, 324, 340, 348, 364, 367, 378, 401, 403, 405, 406, 407, 408, 409, 410, 411, 413, 416, 417, 418, 419, 420, 421], "geom_mean": [94, 102, 105, 387, 412], "geometr": [105, 335, 387, 412], "germani": [401, 405, 411], "get": [27, 35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 152, 154, 155, 156, 164, 166, 182, 232, 314, 367, 379, 389, 390, 391, 392, 401, 403, 408, 421], "get_candid": [190, 379], "get_cmap": 380, "get_comp_rep_parameter_indic": 184, "get_current_recommend": [152, 154, 155, 156], "get_integration_point": 13, "get_invalid": [35, 45, 46, 47, 48, 49, 50, 51, 52, 53], "get_invalid_polar": [35, 45, 46, 47, 48, 49, 50, 51, 52, 53], "get_lin": 379, "get_next_recommend": [152, 154, 155, 156], "get_parameters_by_nam": [182, 184, 190], "get_parameters_from_datafram": [182, 190], "get_subclass": 367, "get_surrog": [27, 164, 166, 403], "git": [401, 404], "github": [244, 275, 295, 318, 382, 403, 404, 405], "give": [382, 383, 399, 406, 409, 412, 416], "given": [25, 27, 30, 37, 38, 39, 56, 72, 115, 128, 130, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 195, 196, 211, 215, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 256, 267, 279, 283, 288, 289, 292, 293, 294, 297, 298, 303, 307, 311, 314, 324, 325, 333, 335, 338, 339, 345, 348, 372, 373, 374, 375, 376, 379, 385, 387, 392, 398, 399, 409, 415, 417], "glass_transition_tempc": 413, "global": [13, 341, 403, 421], "gmean": 335, "gmm": 173, "go": [282, 401], "goal": [362, 385, 412, 420], "goe": 418, "good": [314, 379, 387, 409, 411, 419], "good_interv": 314, "good_reference_valu": 314, "goodwil": 406, "googl": [403, 404], "govern": 401, "gp": [222, 224, 225, 228, 232, 246, 248, 250, 252, 403], "gpytorch": [75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 136, 138, 140, 141, 142, 143, 144, 145, 146, 403], "gradient": [10, 250, 403, 411], "grant": 406, "granular": [383, 394, 395, 396, 401], "granularity_coar": 394, "granularity_fin": 394, "great": [385, 416], "greater": 156, "greatli": 404, "greedi": [166, 358, 359, 362, 403, 414], "grid": [398, 399], "grid_d": [398, 399], "grossli": 406, "group": [283, 290, 348, 401, 403, 409], "groupbi": [217, 219], "gt": [375, 376], "gu16": 413, "guarante": [410, 414], "guid": [366, 401, 403, 404, 407, 409, 412, 415, 417, 420], "guidelin": [403, 404, 407], "ha": [27, 42, 43, 47, 65, 66, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 222, 224, 225, 228, 232, 246, 248, 250, 252, 282, 292, 294, 298, 319, 345, 346, 361, 367, 373, 387, 392, 401, 403, 404, 406, 408, 409, 410, 413, 415, 416, 417, 419, 420], "had": [211, 410, 413, 417], "half": [125, 142, 143, 324, 392, 408], "halfcauchyprior": 403, "halfnormalprior": 403, "hamster": 420, "hand": [33, 42, 43, 128, 385, 398, 399, 401, 409, 416], "handl": [112, 213, 215, 256, 322, 364, 372, 373, 385, 387, 403, 409, 412, 417], "happen": [154, 387, 392, 399, 402, 403, 404, 415, 416, 420], "happili": 412, "hard": [403, 420], "harmless": 406, "hartman": 398, "hartmann": [380, 398, 399], "hasattr": [358, 369, 370, 389, 391, 392], "hash": [276, 401, 411], "hashabledict": 403, "have": [22, 27, 35, 37, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 128, 176, 184, 190, 195, 211, 227, 259, 283, 290, 292, 306, 314, 319, 331, 359, 360, 361, 366, 367, 372, 373, 375, 378, 380, 385, 387, 391, 392, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413, 414, 416, 417, 420], "he": 367, "head": 403, "header": 339, "heart": 420, "help": [385, 416, 420], "helper": [378, 380, 382, 416], "henc": [305, 385, 394, 410, 413], "here": [50, 331, 359, 360, 362, 363, 364, 366, 369, 370, 375, 378, 379, 383, 389, 390, 391, 392, 394, 398, 399, 401, 408, 410, 412, 413, 414, 415, 416, 417, 419, 420], "herebi": 406, "herein": [406, 409], "hierarch": 416, "hierarchi": [72, 403, 404, 409, 416], "high": [242, 385, 403, 404, 407, 409, 410, 413, 416], "higher": [8, 18, 128, 385, 402, 410, 414], "highest": [407, 416], "highlight": [401, 420], "hint": 404, "histogram": 279, "histori": 404, "hold": [41, 290, 406, 416], "homepag": [401, 403], "hood": 413, "hook": [100, 190, 199, 203, 294, 400, 402, 403, 404], "hopp": [401, 405], "host": [401, 403, 411], "hostnam": [276, 411], "hot": [119, 361, 385, 401, 403, 413], "how": [48, 213, 215, 345, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 377, 379, 380, 381, 382, 383, 385, 390, 392, 394, 395, 396, 399, 401, 409, 410, 411, 412, 417, 419, 420], "howev": [130, 190, 227, 294, 358, 375, 378, 385, 389, 391, 392, 402, 404, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 420], "html": [33, 42, 43, 75, 136, 275, 286, 301, 331, 382, 403], "http": [33, 42, 43, 75, 136, 244, 275, 286, 295, 301, 318, 331, 401, 403, 406, 420], "hue": [358, 359, 360, 361, 362, 363, 379, 398, 399], "human": [189, 328, 394, 403, 405, 416], "hybrid": [21, 22, 62, 157, 158, 166, 179, 184, 185, 357, 367, 368, 372, 373, 374, 375, 376, 387, 388, 394, 400, 401, 403, 414, 415], "hybrid_recommend": 392, "hybrid_sampl": [166, 362, 367, 414], "hyperparamet": 367, "hyperrectangl": [182, 415], "hypothesi": [401, 403, 404], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 62, 64, 65, 66, 67, 69, 89, 92, 103, 110, 111, 112, 114, 115, 117, 124, 125, 128, 130, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 197, 211, 213, 215, 217, 219, 222, 224, 225, 226, 227, 228, 232, 242, 246, 248, 250, 252, 256, 259, 267, 272, 273, 274, 277, 278, 279, 283, 286, 288, 289, 292, 294, 295, 297, 298, 299, 304, 305, 314, 315, 319, 320, 323, 324, 331, 333, 334, 337, 339, 345, 346, 353, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 375, 378, 379, 380, 382, 383, 385, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420], "ideal": [408, 410], "ident": [130, 282, 283, 413, 416, 420], "identif": 385, "identifi": [35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 217, 290, 305, 319, 379, 403, 410, 413, 416, 417, 420], "idx_offset": [33, 42, 43], "ignor": [154, 166, 184, 191, 192, 213, 215, 217, 292, 318, 363, 379, 392, 403, 410, 416, 417], "ignore_exampl": 403, "ignore_list": 317, "ii": 406, "iii": 406, "iloc": 408, "imag": [385, 403], "imagin": 385, "immedi": [337, 378, 409], "immut": 403, "impact": [361, 399, 411], "imperfect": 315, "implement": [17, 35, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 103, 149, 159, 219, 226, 296, 372, 379, 390, 398, 403, 404, 405, 407, 414, 415, 420], "impli": [401, 406, 410, 413], "implicitli": 416, "import": [71, 102, 215, 379, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420], "importantli": 362, "impos": [375, 410, 417], "imposs": [401, 411, 416], "improv": [3, 4, 7, 9, 11, 12, 14, 15, 367, 370, 377, 379, 400, 401, 403, 406, 411], "imput": [213, 215, 357, 363, 400, 401, 417], "impute_mod": [213, 215, 217, 363, 417], "inabl": [401, 406], "inaccuraci": 401, "inact": 41, "inc": 420, "incident": 406, "includ": [56, 97, 102, 107, 156, 213, 288, 289, 317, 360, 373, 375, 383, 395, 396, 399, 401, 403, 404, 406, 407, 408, 410], "inclus": 406, "incom": 416, "incompat": [60, 61, 62, 228, 374, 410], "incompatibilityerror": 27, "incompatibleacquisitionfunctionerror": 408, "incomplet": 403, "inconsist": 403, "incorpor": [406, 408, 418], "incorrectli": 403, "increas": [10, 154, 217, 273, 274, 387, 398, 399, 403, 407, 413, 420], "increment": 190, "incur": 406, "indefinit": [154, 213], "indemn": 406, "indemnifi": 406, "indent": 339, "independ": [158, 224, 248, 382, 403, 414, 417], "independentgaussiansurrog": [228, 246, 248, 250, 403], "index": [35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 184, 217, 282, 283, 319, 369, 370, 382, 383, 387, 389, 390, 391, 392, 394, 403, 413, 415], "indexkernel": 403, "indic": [27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 74, 110, 111, 112, 114, 115, 117, 124, 125, 128, 184, 282, 283, 345, 362, 392, 403, 406, 414, 418], "indirect": [288, 289, 406], "individu": [47, 48, 90, 91, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 213, 320, 379, 406, 409, 412, 414, 420], "induc": 385, "industri": 420, "ineffici": 190, "inequ": [43, 182, 415], "inf": [372, 373, 374, 375, 376, 394], "infer": [130, 228, 398, 399, 403, 415], "inferencesess": 228, "infin": 134, "infinit": [154, 155, 291, 323, 353, 354, 403, 413], "influenc": [158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 415], "influenti": 420, "info": [279, 403], "inform": [22, 112, 262, 360, 361, 363, 380, 389, 390, 391, 392, 399, 401, 403, 404, 406, 408, 411, 413, 415, 420, 421], "infring": 406, "ingest": [190, 213, 413, 414], "ingredi": 410, "inher": 17, "inherit": 404, "init": 258, "initi": [81, 82, 83, 84, 85, 86, 87, 88, 92, 155, 156, 158, 173, 174, 175, 176, 178, 190, 213, 217, 278, 345, 357, 362, 372, 373, 374, 375, 376, 379, 380, 387, 394, 399, 400, 403, 405, 409, 411, 413, 414, 416, 417, 420], "initial_data": [213, 217, 360, 399, 417], "initial_recommend": [156, 367, 379, 380, 382, 383, 385, 394, 395, 396, 401, 414], "initial_recommender_cl": 403, "initial_strategi": 403, "initial_typ": 382, "inject": 416, "inner": [150, 414, 416], "inplac": [361, 398, 399], "input": [37, 38, 39, 103, 125, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 272, 290, 311, 312, 315, 319, 324, 326, 333, 345, 382, 387, 390, 398, 399, 403, 416, 417, 420], "input_dim": 382, "inputtransform": 348, "insid": [379, 382, 383, 402, 416], "insight": 379, "inspect": [298, 378], "instabl": 410, "instal": [402, 403, 404, 411, 413], "instanc": [37, 38, 39, 47, 50, 152, 154, 155, 156, 184, 190, 314, 373, 379, 401, 404, 408, 409, 410, 411, 413, 415, 416, 417], "instanti": [228, 379, 409], "instead": [27, 154, 278, 305, 401, 402, 403, 409, 410, 412, 413, 416, 417, 419, 420], "institut": [405, 406], "instruct": [401, 403, 419, 421], "instrument_nam": 279, "int": [10, 13, 17, 27, 30, 33, 41, 42, 43, 45, 77, 78, 79, 82, 84, 85, 86, 87, 88, 103, 119, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 189, 190, 213, 217, 219, 264, 265, 272, 273, 274, 279, 306, 320, 334, 338, 341, 342, 345, 346, 348, 372, 374, 376, 385, 387, 399, 404, 413], "integ": [30, 119, 184, 217, 392, 403, 404, 413], "integr": [13, 403, 404, 407, 409], "intend": [366, 375, 378, 398, 414, 415], "intens": 413, "intention": 406, "interact": [26, 27, 366, 401, 402, 409, 416], "interconnect": 409, "interest": 412, "interfac": [149, 226, 234, 378, 380, 403, 406, 409], "intermedi": [176, 345], "intern": [27, 51, 154, 379, 387, 403, 410, 411, 413, 414, 415, 416], "internet": 401, "internship": 405, "interpol": [82, 242, 403], "interpret": [184, 211, 311, 383, 389, 390, 391, 392, 395, 396, 399, 411, 415, 417], "interrupt": 58, "intersect": [362, 392], "interv": [124, 270, 272, 273, 274, 387, 403, 409, 413, 416, 419], "intrins": 420, "introduc": [402, 403, 410, 413, 414, 417], "intuit": 409, "invalid": [35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 63, 190, 305, 319, 346, 383, 395, 402, 409, 410, 415], "invalid_config": 396, "invalid_surrogate_model": 383, "invalid_typ": 396, "invari": [47, 50, 51, 282, 283, 375, 410], "invers": [203, 416], "investig": [211, 417], "invok": 421, "involv": [27, 190, 378, 401, 410, 411, 412, 413, 415, 416, 420], "io": 275, "irrelev": 410, "irrespect": [278, 319], "irrevoc": 406, "is_bound": [324, 403], "is_continu": [30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 110, 111, 112, 114, 115, 117, 124, 125, 128], "is_degener": 324, "is_discret": [30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 110, 111, 112, 114, 115, 117, 124, 125, 128], "is_empti": [182, 190, 403], "is_finit": 403, "is_fully_unbound": 324, "is_half_bound": 324, "is_in_rang": [110, 111, 112, 114, 115, 117, 124, 125, 128], "is_left_bound": 324, "is_numer": [110, 111, 112, 114, 115, 117, 124, 125, 128, 403], "is_right_bound": 324, "iso": 382, "isoxazol": 420, "issu": [227, 286, 295, 403, 406], "item": [38, 110, 111, 112, 114, 115, 117, 124, 125, 128, 385, 398, 399, 413], "iter": [27, 124, 154, 155, 184, 190, 213, 227, 270, 291, 315, 325, 359, 360, 364, 372, 373, 374, 375, 376, 379, 380, 385, 389, 390, 391, 392, 398, 399, 401, 403, 407, 409, 413, 414, 417], "iterrow": [369, 370, 389, 390, 391, 392], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 130, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 158, 182, 184, 190, 207, 219, 222, 224, 225, 228, 232, 235, 246, 248, 250, 252, 262, 264, 270, 279, 282, 287, 294, 298, 314, 324, 328, 367, 378, 380, 385, 399, 401, 402, 404, 406, 407, 408, 410, 411, 412, 414, 415, 416, 417, 420], "itself": [378, 398, 402, 420], "j": [361, 401, 413, 420], "jackiepho": [360, 361, 363], "januari": 406, "javadi": 405, "jin": 405, "join": [375, 402], "joint": 409, "jointli": 409, "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 182, 184, 190, 207, 222, 224, 225, 228, 232, 235, 246, 248, 250, 252, 262, 264, 270, 324, 337, 382, 383, 394, 395, 403, 421], "json_str": 416, "juli": 405, "julian": 405, "jump": [403, 420], "jupyt": 382, "just": [385, 404, 416], "k": [125, 174, 345, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 379, 389, 390, 391, 392, 403, 414], "kde": 380, "keep": [46, 128, 182, 190, 362, 379, 403, 404, 415], "kei": [290, 314, 361, 404], "kept": 413, "kernel": [77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 232, 233, 234, 235, 236, 242, 244, 367, 372, 373, 374, 375, 376, 387, 394, 403, 410, 420], "kernel_factori": [77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 232, 234, 235], "kernel_or_factori": 232, "kernelfactori": [232, 235, 236, 242, 244, 403], "keyword": [362, 363, 367, 392, 399, 403, 408, 415, 417], "kgaa": [401, 405, 411], "kian": 420, "kickstart": 416, "kind": [166, 401, 403, 406, 413, 414], "kiter": [372, 373, 374, 375, 376, 387], "kmean": 367, "kmeansclusteringrecommend": [367, 414], "knob": 401, "know": [362, 385, 390, 395, 401, 416, 420], "knowledg": [10, 401, 403, 420], "known": [410, 420], "koller": 420, "kwarg": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 81, 83, 85, 90, 91, 92, 138, 140, 141, 142, 143, 144, 145, 146, 149, 168, 226, 229, 234, 323], "l0": 30, "l1": 413, "l664": 244, "label": [50, 51, 117, 128, 279, 375, 401, 403, 410, 413, 415, 417], "labelpad": 380, "lambda": [372, 374, 375, 376, 379, 380, 398], "land": 403, "languag": [286, 401], "larg": [128, 190, 369, 370, 389, 403, 411, 413], "larger": [82, 125, 346, 367, 374, 409, 410, 416, 420], "largest": [345, 385, 407], "last": [27, 154, 385, 404, 409, 414], "last_call_tim": 378, "lastli": 380, "latent": 413, "later": [125, 391, 402, 409, 416], "latest": [401, 404, 409], "latter": [17, 282, 298, 379, 409, 420], "law": [401, 406], "lawsuit": 406, "layout": 403, "lazi": [192, 349, 403], "lazili": [403, 411], "lazyfram": [35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 192], "le": 370, "lead": [70, 387, 403, 416], "lean": 404, "learn": [13, 218, 219, 222, 224, 225, 228, 232, 246, 248, 250, 252, 367, 372, 373, 374, 375, 376, 385, 387, 394, 398, 400, 401, 403, 410, 413, 418, 419, 421], "least": [154, 401, 406, 408, 409], "leav": 416, "lee": 405, "left": [67, 68, 146, 213, 319, 324, 373, 403, 412], "left_df": 319, "legal": 406, "legend": [360, 363], "len": [373, 375, 379, 380, 385], "length": [83, 154, 155, 222], "lengthi": 409, "lengthscal": [82, 83, 84, 86, 87, 88], "lengthscale_initial_valu": [82, 83, 84, 86, 87, 88], "lengthscale_prior": [82, 83, 84, 86, 87, 88], "less": [283, 379, 380, 385, 409], "let": [361, 378, 379, 380, 382, 383, 399, 401, 410, 412, 416], "level": [315, 403, 404, 408, 409, 410, 414, 416], "leverag": [379, 409, 414], "li": 413, "liabil": 406, "liabl": 406, "licensor": 406, "lie": [27, 222, 224, 225, 228, 232, 246, 248, 250, 252, 314], "life": [401, 404, 405], "lifecycl": 409, "ligand": [360, 361, 363, 366, 367, 379, 401, 413], "ligand_data": 379, "ligand_smil": 379, "like": [176, 217, 285, 380, 385, 401, 403, 404, 408, 409, 410, 413, 416, 417, 420], "likelihood": 222, "limit": [242, 279, 380, 401, 405, 406, 410, 415, 421], "line": [324, 339, 359, 360, 362, 363, 379, 385, 403, 404, 407, 409, 413, 417, 420], "linear": [33, 81, 182, 246, 268, 273, 364, 367, 368, 387, 400, 403, 404, 415, 419], "linear_model": 382, "linear_regressor": 382, "linearkernel": 403, "linearli": [242, 273, 274, 387, 403], "lineplot": [358, 359, 360, 361, 362, 363, 379, 398, 399], "link": [49, 403, 406, 413], "linspac": [358, 359, 362, 364, 372, 373, 374, 375, 376, 380, 382, 383, 391, 392, 394, 398, 399], "lint": [401, 403, 404], "linter": [403, 404], "list": [30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 94, 115, 130, 135, 154, 155, 182, 184, 190, 191, 192, 195, 196, 197, 213, 217, 219, 278, 288, 289, 290, 297, 306, 307, 308, 309, 314, 316, 317, 318, 319, 345, 358, 359, 360, 362, 364, 367, 372, 373, 374, 375, 376, 380, 385, 387, 389, 390, 391, 392, 399, 401, 404, 406, 410, 412, 414, 415, 417], "liter": [94, 154, 213, 215, 217, 315, 345, 404], "literatur": 403, "litig": 406, "littl": 402, "liver": [417, 420], "load": [337, 349, 379, 382, 395, 396, 403], "loc": [144, 145, 360, 363], "local": [402, 404, 411, 421], "locat": [144, 145, 408, 411, 420], "lockfil": 403, "log": [144, 279, 401, 411], "logarithm": [4, 11, 12, 335], "logei": [4, 403], "logic": [150, 314, 403, 410, 414], "lognormalprior": 403, "logo": 403, "long": [409, 416], "longer": 403, "look": [215, 367, 369, 370, 385, 407, 409, 410, 416, 419], "look_up_target": 213, "lookup": [211, 213, 217, 219, 301, 319, 357, 358, 359, 362, 390, 400, 403, 421], "lookup_df": 215, "lookup_test_task": 399, "lookup_training_task": 399, "lookup_withmiss": 363, "loop": [211, 213, 219, 372, 373, 374, 375, 376, 379, 387, 403, 408, 417], "loss": 406, "lost": 416, "low": [242, 362, 385, 402, 403, 413, 416], "lower": [146, 272, 273, 274, 324, 360, 363, 380, 387, 398, 399, 413, 419], "lower_bound": 415, "lst_exclud": 316, "luxuri": 409, "machin": [385, 401, 404, 407, 411, 413, 419, 420], "machineri": [17, 166, 402, 404, 420], "made": [71, 190, 213, 345, 363, 401, 402, 406, 410, 411, 415, 417], "magic": 420, "magnitud": 315, "mai": [27, 184, 294, 401, 406, 409, 416], "mail": 406, "main": [26, 27, 401, 403], "maintain": [256, 404, 415], "major": [403, 417], "make": [8, 18, 51, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 254, 255, 256, 286, 360, 363, 367, 369, 401, 402, 404, 406, 409, 410, 413, 416, 417, 420], "malfunct": 406, "manag": [26, 182, 183, 184, 190, 342, 403, 406], "mandatori": [403, 419], "mani": [346, 359, 362, 391, 392, 401, 409, 413, 416, 419, 420], "manipul": 415, "manner": 411, "manual": [392, 402, 415, 416], "map": [117, 128, 215, 217, 272, 273, 274, 292, 348, 359, 360, 361, 362, 363, 387, 417, 419], "margin": 403, "mark": [190, 406, 414, 420, 421], "mark_as_measur": 190, "markdown": [383, 395, 396, 403], "marker": [358, 360, 361, 363, 379, 398, 399], "markers": [358, 361, 379, 398, 399], "market": 385, "marketplac": 403, "martin": [401, 405], "mask_bad1": 372, "mask_bad2": 372, "mask_bad3": 372, "mask_good": [372, 410], "mass": 140, "master": 244, "match": [27, 73, 130, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 195, 262, 264, 267, 270, 278, 292, 294, 319, 362, 378, 380, 387, 392, 401, 403, 408, 409, 412, 414, 416, 421], "match_attribut": 403, "match_targeta": 419, "match_targetb": 419, "materi": [385, 420], "matern": 82, "maternkernel": 403, "math": [375, 379], "mathemat": 403, "matplotlib": [359, 360, 362, 363, 380, 403], "matter": [404, 412], "max": [215, 267, 360, 361, 363, 364, 366, 367, 372, 373, 374, 375, 376, 379, 380, 382, 383, 385, 387, 394, 395, 396, 401, 403, 412, 416, 421], "max_cardin": [30, 41, 45], "max_column": 320, "max_colwidth": 320, "max_nonzero": 190, "max_row": 320, "max_sum": [190, 415], "max_target": 419, "max_yield": [360, 363], "maxim": [6, 262, 264, 267, 270, 364, 366, 380, 385, 387, 401, 419], "maximum": [6, 30, 41, 45, 128, 182, 184, 190, 272, 320, 387, 403, 410, 415], "mc": [385, 408], "md": 403, "me2pph": [360, 361, 363], "mean": [5, 8, 17, 18, 51, 94, 105, 152, 154, 155, 156, 174, 211, 213, 215, 217, 222, 248, 256, 335, 363, 364, 367, 382, 385, 387, 403, 404, 406, 407, 408, 409, 410, 412, 413, 414, 416, 421], "meaning": 412, "meaningless": 407, "meanpredictionsurrog": [256, 367, 418], "meantim": [404, 410], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 190, 211, 213, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 278, 319, 360, 361, 363, 367, 369, 370, 378, 379, 380, 387, 389, 390, 391, 392, 401, 403, 404, 407, 408, 411, 412, 413, 414, 415, 417, 419, 420, 421], "mechan": [8, 18, 58, 102, 103, 105, 211, 214, 215, 219, 294, 326, 345, 362, 378, 379, 380, 398, 399, 403, 406, 416, 417, 420], "mechanist": 401, "media": [406, 413, 420], "mediocr": 419, "medium": [383, 394, 401, 406, 413], "medoid": [175, 403, 414], "meet": [314, 406], "member": [298, 410], "memori": [10, 184, 189, 190, 367, 375, 379, 383, 395, 403, 411], "memorys": [184, 190], "mention": 407, "merchant": 406, "merck": [401, 405, 411], "mere": [406, 412], "merg": 404, "meshgrid": [398, 399], "messag": 379, "meta": [67, 152, 154, 155, 156, 159, 372, 373, 374, 375, 376, 387, 394, 401, 403, 421], "metadata": [27, 182, 190, 276, 403, 421], "metarecommend": [154, 155, 156, 403], "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 189, 190, 207, 222, 224, 225, 226, 228, 232, 234, 235, 242, 244, 246, 248, 250, 252, 255, 258, 259, 262, 264, 270, 285, 286, 294, 298, 324, 337, 344, 345, 346, 348, 380, 383, 395, 396, 403, 404, 405, 409, 411, 412, 413, 415, 416, 417, 420], "methodtyp": [378, 379, 380], "methyldiphenylphosphin": [360, 361, 363], "methylisoxazol": 420, "metric": [385, 401, 411, 413], "micromamba": 403, "midpoint": 419, "might": [47, 51, 128, 184, 361, 367, 369, 373, 375, 392, 399, 402, 408, 409, 410, 411, 415, 417, 420], "mimic": [75, 136, 410], "min": [267, 358, 359, 362, 364, 369, 370, 380, 387, 389, 390, 391, 392, 398, 399, 401, 403, 412, 416, 421], "min_cardin": [30, 41, 45], "min_nonzero": 190, "min_target": 419, "mind": 385, "miniconda": 403, "minim": [6, 262, 264, 267, 270, 364, 387, 398, 399, 419], "minimum": [30, 41, 45, 125, 182, 184, 190], "minor": 403, "mirror": [409, 416], "miss": [27, 213, 215, 363, 403, 404, 417], "mix": [219, 375, 401, 410, 413, 416, 420], "mixin": 207, "mixtur": [173, 371, 400, 403, 410, 413, 414, 420], "mobil": 403, "mode": [94, 117, 128, 154, 213, 222, 262, 264, 267, 270, 273, 292, 314, 357, 358, 359, 360, 361, 362, 363, 366, 367, 369, 370, 372, 373, 374, 375, 376, 379, 380, 382, 383, 389, 390, 391, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 412, 414, 416, 421], "model": [13, 27, 30, 31, 32, 33, 34, 35, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 63, 65, 75, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 222, 224, 225, 226, 227, 228, 232, 246, 248, 250, 252, 256, 258, 259, 331, 369, 370, 381, 398, 399, 401, 403, 405, 407, 408, 409, 410, 413, 414, 416, 419, 420, 421], "model_cl": 259, "model_cluster_num_parameter_nam": [173, 174, 175, 176], "model_from_config": 382, "model_from_python": 382, "model_init": 258, "model_json": 382, "model_param": [173, 174, 175, 176, 246, 250, 252, 383, 403], "modelnottrainederror": [222, 224, 225, 228, 232, 246, 248, 250, 252], "modif": [402, 406], "modifi": [27, 215, 256, 315, 406, 415], "modul": [0, 1, 28, 75, 95, 108, 126, 136, 147, 150, 159, 162, 169, 180, 198, 199, 211, 220, 230, 237, 260, 263, 280, 329, 349, 352, 401, 403, 404], "modular": 404, "mol": 307, "molecul": [49, 122, 128, 305, 306, 307, 413], "molecular": 413, "moment": [219, 242, 404, 419], "monitor": [403, 411], "monkeypatch": 402, "mont": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 66, 217, 358, 359, 361, 362, 363, 364, 379, 385, 398, 399, 408, 417], "monte_carlo_run": [217, 364, 379], "mordr": [122, 128, 184, 308, 360, 361, 363, 366, 367, 373, 375, 379, 383, 395, 396, 401, 403, 410, 413], "mordredcommun": [403, 413], "more": [8, 10, 18, 51, 56, 68, 128, 154, 155, 182, 190, 197, 213, 256, 275, 278, 298, 339, 362, 363, 364, 367, 375, 380, 398, 401, 403, 404, 406, 408, 409, 410, 411, 412, 413, 415, 416, 419], "morgan": [122, 306, 413], "morgan_fp": [122, 361, 413], "morgangener": [361, 372, 374, 376], "most": [190, 213, 359, 362, 365, 385, 401, 404, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420], "motiv": 403, "move": [403, 416], "mpl_toolkit": 380, "mplot3d": 380, "mse": 385, "mu": [144, 145], "much": [361, 362, 412, 413], "multi": [221, 222, 357, 400, 403, 405, 408, 420], "multiarmedbandit": 385, "multipl": [37, 102, 152, 154, 155, 156, 216, 217, 315, 359, 360, 361, 362, 363, 373, 385, 401, 403, 408, 410, 412, 419, 420, 421], "multipli": [43, 91, 410], "multitask": 403, "must": [47, 97, 102, 107, 184, 190, 215, 219, 294, 315, 367, 378, 379, 385, 387, 403, 404, 406, 407, 410, 411, 412, 413], "mutual": 417, "my_attribut": 404, "my_valu": 411, "mypi": [286, 295, 401, 403, 404], "mystr": 404, "n": [22, 222, 283, 299, 345, 360, 361, 363, 366, 367, 372, 373, 374, 375, 376, 383, 385, 387, 389, 390, 391, 392, 394], "n_arm": 385, "n_batches_don": 27, "n_bit": 306, "n_cluster": [174, 175], "n_compon": 173, "n_doe_iter": [213, 217, 219, 358, 359, 360, 361, 362, 363, 364, 379, 380, 398, 399, 417], "n_estim": 383, "n_fits_don": 27, "n_interrupted_campaign": 379, "n_iter": [369, 370, 372, 373, 374, 375, 376, 385, 387], "n_mc_iter": [217, 219, 358, 359, 361, 362, 363, 364, 379, 398, 399, 417], "n_mc_run": 385, "n_mc_sampl": 17, "n_pis_ov": 379, "n_pis_over_requir": 379, "n_point": [182, 346], "n_sampl": 345, "n_task": 184, "n_task_param": 403, "naiv": [158, 248, 256, 362, 367, 403, 415], "naive_hybrid_campaign": 362, "naive_hybrid_recommend": 362, "naivehybridrecommend": 403, "naivehybridspacerecommend": [362, 392, 403, 414], "nake": [278, 411], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 41, 42, 43, 56, 110, 111, 112, 114, 115, 117, 124, 125, 128, 130, 131, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 196, 205, 217, 228, 262, 264, 270, 282, 287, 292, 293, 294, 305, 306, 308, 309, 314, 316, 332, 337, 339, 351, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 403, 404, 406, 408, 410, 411, 412, 415, 416, 417, 419, 420], "name_or_abbr": [287, 293], "namedtupl": 385, "namespac": [167, 403, 404], "nan": [27, 134, 222, 308, 309, 353, 355, 356, 387], "nativ": [382, 403], "natur": [250, 361, 404, 410, 414, 416, 419], "navig": [401, 409], "nbase": [306, 308, 309], "nbviewer": 382, "nd": 401, "ndarrai": [103, 272, 273, 274, 321, 324, 335, 345, 380, 385, 403], "ne": 375, "nearli": 419, "necessari": [378, 404, 409, 410, 412, 413, 415, 417], "necessarili": [406, 409, 410, 415, 420], "need": [22, 27, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 195, 219, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 294, 319, 358, 359, 360, 361, 362, 363, 364, 367, 372, 375, 376, 378, 380, 382, 385, 387, 389, 390, 391, 392, 398, 399, 401, 403, 404, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420], "neg": [13, 403], "negat": [6, 399, 403, 410, 420], "neglig": 406, "neither": [219, 315], "nest": [339, 409, 421], "neural": 420, "neurip": 420, "never": [374, 375], "nevertheless": [298, 402], "new": [27, 94, 97, 102, 107, 154, 156, 182, 215, 227, 272, 273, 274, 282, 314, 315, 318, 366, 379, 380, 394, 401, 403, 404, 409, 410, 420], "new_rec": 409, "newli": [401, 404, 411, 420], "next": [27, 152, 154, 155, 156, 375, 378, 380, 394, 398, 399, 401, 407, 408, 409, 414, 416], "ngboost": [250, 367, 403], "ngboostmodel": 383, "ngboostsurrog": [367, 383, 418], "nice": [380, 402], "nicknam": 305, "nintern": 387, "no_duplicates_constraint": 375, "no_grad": 380, "no_tl": 398, "nois": [213, 315, 399, 403], "noise_level": 315, "noise_perc": [213, 217, 417], "noise_std": [398, 399], "noise_typ": 315, "noised_hartmann": 398, "noisi": [12, 14, 398, 401, 403, 420], "non": [27, 55, 56, 158, 184, 213, 219, 222, 224, 225, 228, 232, 246, 248, 250, 252, 292, 294, 298, 346, 353, 354, 355, 390, 398, 403, 406, 408, 415, 416], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 39, 51, 55, 56, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 92, 94, 111, 124, 125, 130, 133, 134, 135, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 187, 190, 193, 196, 197, 200, 201, 203, 205, 213, 215, 217, 219, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 258, 259, 270, 278, 279, 294, 314, 315, 316, 317, 318, 324, 325, 337, 348, 353, 354, 355, 356, 367, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 387, 394, 415, 417, 419], "nonetheless": 420, "nonlinear": [34, 182], "nonpredict": [171, 173, 174, 175, 176, 178, 179], "nonpredictiverecommend": [176, 178, 179, 403], "nonzero": [30, 190, 403], "noqa": [372, 404], "nor": 315, "norecommenderslefterror": [154, 155], "noreturn": 229, "normal": [143, 144, 145, 372, 374, 375, 376, 387, 402, 406, 412, 415], "normaliz": 412, "normalprior": 403, "not_a_param": 383, "notabl": 403, "note": [27, 30, 51, 184, 213, 217, 219, 227, 228, 314, 315, 359, 360, 361, 362, 363, 367, 373, 375, 378, 382, 383, 387, 389, 390, 391, 392, 394, 395, 396, 401, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420], "notebook": 382, "noteworthi": 409, "noth": [13, 27, 30, 33, 39, 41, 42, 43, 45, 69, 102, 115, 156, 158, 164, 166, 173, 174, 175, 176, 182, 184, 190, 222, 232, 246, 250, 252, 270, 406, 413], "notic": [378, 404, 406, 416], "notimplementederror": [35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 103, 197, 200, 201, 219, 222, 224, 225, 227, 228, 232, 246, 248, 250, 252], "notwithstand": 406, "now": [359, 360, 361, 362, 363, 364, 366, 367, 372, 374, 375, 378, 379, 380, 385, 387, 394, 395, 398, 399, 401, 403, 413, 420], "np": [103, 358, 359, 362, 364, 369, 370, 372, 373, 374, 375, 376, 380, 382, 383, 385, 391, 392, 394, 398, 399, 410, 413], "nrecommend": [366, 367, 387, 389, 390, 391, 392], "nu": 82, "num": 328, "num_disc_1": [387, 409], "num_disc_2": 387, "num_experi": [213, 358, 359, 360, 361, 362, 363, 364, 379, 398, 399], "num_fantasi": 10, "num_parameter_1": 376, "num_parameter_2": 376, "num_parameter_3": 376, "num_parameter_4": 376, "num_parameter_5": 376, "num_parameter_6": 376, "num_sampl": 87, "num_valu": [372, 373, 374, 375, 376, 387, 394, 415], "number": [10, 13, 17, 27, 41, 87, 128, 149, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 213, 217, 219, 222, 306, 320, 324, 328, 340, 345, 346, 358, 359, 360, 361, 362, 363, 364, 369, 370, 372, 373, 374, 376, 380, 385, 389, 390, 391, 398, 399, 401, 403, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417], "numer": [27, 30, 31, 32, 33, 34, 35, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 70, 110, 111, 112, 114, 115, 117, 124, 125, 128, 182, 190, 215, 270, 278, 315, 319, 346, 366, 369, 375, 403, 410, 411, 412, 413, 415, 417, 419], "numerical_measurements_must_be_within_toler": [27, 190, 278, 319, 403, 409], "numerical_onli": [30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53], "numericalcontinuousparamet": [33, 42, 43, 182, 362, 369, 370, 389, 390, 392, 399, 415, 421], "numericaldi": [372, 373, 374, 375, 376, 387, 394], "numericaldiscreteparamet": [190, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 387, 391, 392, 394, 395, 396, 398, 399, 401, 415, 416, 421], "numericaltarget": [215, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 374, 375, 376, 379, 380, 382, 383, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 403, 412, 416, 421], "numericcontinu": [362, 392], "numparam1": 376, "numparam2": 376, "numparam3": 376, "numparam4": 376, "numparam5": 376, "numparam6": 376, "numpi": [321, 324, 330, 332, 358, 359, 362, 364, 369, 370, 372, 373, 374, 375, 376, 380, 382, 383, 385, 391, 392, 394, 398, 399, 403, 410], "nuniqu": 375, "nyou": [358, 389, 391, 392], "o": [358, 359, 360, 361, 362, 363, 364, 366, 367, 370, 372, 373, 374, 375, 376, 379, 380, 383, 385, 398, 399, 401, 410, 411, 413], "o2": [360, 361, 363, 379], "obj": [133, 134, 135, 201], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 102, 105, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 130, 138, 140, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 189, 190, 191, 192, 201, 202, 205, 207, 222, 224, 225, 226, 228, 232, 235, 246, 248, 250, 252, 262, 264, 270, 285, 286, 292, 294, 307, 315, 319, 324, 337, 348, 362, 366, 378, 379, 380, 382, 383, 385, 392, 395, 396, 402, 403, 404, 406, 409, 410, 414, 415, 417, 418, 419, 421], "objective_json": 416, "oblig": 406, "observ": [211, 385, 417, 419], "obtain": [213, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 361, 380, 385, 399, 401, 403, 409, 416, 420], "oc": [360, 361, 363, 366, 367, 379], "oc1": [360, 361, 363, 379], "occur": [50, 404], "occurr": 410, "octanol": [410, 413], "off": [8, 18, 219, 299, 373, 401, 403, 410, 411, 419], "offer": [294, 380, 385, 391, 406, 407, 413, 414, 416, 417, 418, 420], "offset": [33, 42, 43, 85], "offset_initial_valu": 85, "offset_prior": 85, "often": [385, 407, 410, 411, 413, 416], "oftentim": 416, "oh": [114, 119, 361, 383, 385, 387, 394, 395, 396, 401, 415, 416], "ok": 387, "old": 420, "omit": [217, 294, 378, 401, 416], "onc": [217, 379, 413, 417], "one": [17, 27, 56, 110, 111, 112, 114, 115, 117, 124, 125, 128, 130, 140, 149, 150, 154, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 184, 197, 215, 232, 256, 282, 283, 339, 359, 360, 361, 362, 363, 367, 369, 385, 387, 396, 398, 399, 401, 403, 404, 406, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420], "onehot": 361, "ones": [184, 278, 319, 361, 392, 403, 408, 420], "ongo": [379, 420], "onli": [8, 10, 18, 30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 82, 128, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 184, 190, 215, 219, 256, 278, 279, 294, 295, 298, 314, 319, 324, 339, 345, 346, 358, 360, 367, 372, 373, 375, 379, 380, 382, 383, 389, 390, 391, 392, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420], "onlin": 385, "onnx": [227, 228, 331, 381, 401, 403, 418], "onnx_input_nam": [228, 382], "onnx_str": [228, 382], "onto": 404, "open": [401, 404], "opentelemetri": [401, 403, 411], "oper": [39, 48, 203, 256, 329, 369, 374, 375, 376, 402, 403, 408, 410, 414, 416], "operator_convert": 382, "opposit": 410, "opt": [401, 411], "optim": [17, 27, 33, 42, 43, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 211, 213, 217, 219, 222, 224, 225, 228, 232, 246, 248, 250, 252, 314, 361, 362, 364, 365, 366, 369, 370, 379, 380, 385, 387, 392, 403, 405, 407, 410, 411, 412, 413, 414, 415, 417, 419, 420], "optimize_acqf": [33, 42, 43, 166], "optimize_acqf_": [33, 42, 43], "optimize_acqf_discret": 166, "optimize_acqf_mix": 166, "option": [27, 71, 81, 82, 83, 84, 85, 86, 87, 88, 92, 111, 114, 115, 117, 125, 128, 130, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 203, 205, 213, 217, 219, 246, 250, 252, 258, 270, 294, 314, 316, 317, 318, 337, 363, 367, 382, 383, 385, 403, 404, 407, 409, 410, 412, 415, 416, 417, 418, 419], "oracl": 417, "orchestr": [404, 409], "order": [184, 190, 375, 379, 385, 401, 403, 404, 409, 410, 413, 416, 420], "ordin": 419, "ore": 416, "org": [33, 42, 43, 244, 286, 301, 318, 382, 401, 406], "organ": 404, "origin": [22, 282, 283, 290, 394, 403, 404, 406, 413, 414, 416], "orthogon": 404, "other": [47, 89, 182, 283, 359, 360, 363, 366, 369, 370, 375, 379, 385, 389, 392, 398, 399, 401, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420], "otherwis": [110, 111, 112, 114, 115, 117, 124, 125, 128, 375, 406, 407, 412, 420], "our": [362, 372, 374, 378, 379, 380, 383, 385, 389, 390, 391, 392, 395, 396, 398, 399, 401, 404, 407, 409, 410, 416, 417], "out": [190, 387, 399, 401, 406, 411, 417, 420], "outcom": [149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 361, 401, 413, 419], "output": [92, 315, 337, 390, 398, 399, 402, 403, 405], "outputscal": 92, "outputscale_initial_valu": 92, "outputscale_prior": 92, "outsid": [27, 256, 273, 274, 314, 319, 387, 403, 416], "outstand": 406, "over": [27, 30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 403, 407, 420], "overal": [184, 382, 383, 385, 403, 404, 409, 412, 420], "overlap": [55, 56, 308, 309, 369, 370, 389, 410], "overrid": [203, 205, 378], "overridden": 378, "overview": 416, "overwritten": 392, "own": [158, 401, 402, 403, 404, 406, 410, 413], "owner": 406, "ownership": 406, "p": [360, 361, 363, 366, 367, 378, 379, 380, 398, 399, 404], "p1": [415, 416], "p1_json": 416, "p1_via_json": 416, "p2": [415, 416], "p2_json": 416, "p2_via_json": 416, "p3c4": [360, 361, 363, 379], "p_i": 30, "pack": 416, "packag": [276, 403, 404, 413], "page": [382, 401, 403, 404], "pair": [282, 401, 413], "pam": 175, "pamclusteringrecommend": 414, "panda": [46, 191, 209, 210, 215, 305, 321, 360, 361, 363, 372, 379, 380, 387, 398, 399, 403, 410, 413, 415, 416], "paper": 420, "paper_fil": 420, "parallel": 404, "param": [381, 383, 400, 415], "param1": [415, 417], "param2": [415, 417], "param_bounds_comp": 403, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 68, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 103, 107, 110, 111, 114, 115, 117, 119, 120, 121, 122, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 186, 189, 190, 191, 192, 195, 196, 197, 203, 205, 207, 211, 213, 215, 217, 219, 222, 224, 225, 228, 232, 235, 242, 244, 246, 248, 250, 252, 254, 256, 258, 259, 262, 264, 270, 272, 273, 274, 278, 279, 282, 283, 288, 289, 290, 292, 294, 297, 298, 299, 301, 304, 305, 306, 307, 308, 309, 311, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 328, 333, 334, 335, 337, 339, 341, 342, 345, 346, 348, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 385, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 403, 404, 410, 411, 412, 416, 417, 420, 421], "parameter": [140, 141, 142, 143, 144, 145, 146], "parameter_json": 416, "parameter_nam": [182, 184, 190], "parameterencod": [111, 119, 120, 122, 125], "parametr": 410, "parent": 404, "pars": [326, 403], "parser": 403, "part": [13, 22, 37, 62, 158, 159, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 314, 383, 392, 395, 396, 398, 399, 403, 404, 406, 407, 408, 409, 410, 414, 415, 416], "parti": 406, "partial": [22, 379, 421], "particl": 420, "particular": [27, 35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 190, 211, 378, 392, 401, 404, 406, 409, 413, 415, 416, 417], "particularli": [294, 409], "partit": [175, 217, 219, 403, 414, 417], "pass": [27, 35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 173, 174, 175, 176, 184, 190, 201, 232, 246, 250, 252, 394, 399, 403, 404, 412, 416], "passthrough": [24, 98, 186, 236], "patch": 379, "patent": 406, "path": [337, 361, 403, 404, 411], "pattern": [404, 420], "pd": [27, 215, 282, 283, 315, 319, 360, 361, 363, 372, 379, 380, 387, 398, 399, 403, 410, 413, 415, 416], "pdf": 420, "peek": 416, "pend": [22, 27, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 401, 403, 421], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 403, 408, 414], "per": [213, 358, 359, 360, 361, 362, 363, 364, 367, 387, 391, 398, 399, 403, 413, 415, 417], "percent": [213, 406], "percentag": [166, 278, 315, 367, 372, 373, 374, 375, 376, 387, 394, 399, 414], "perf_count": 378, "perfectli": 416, "perform": [166, 213, 278, 361, 362, 372, 373, 374, 375, 376, 380, 395, 398, 399, 401, 404, 406, 407, 409, 411, 413, 414, 417, 420], "period": 83, "period_length_initial_valu": 83, "period_length_prior": 83, "periodickernel": 403, "perm_inv_constraint": 375, "permiss": [401, 406], "permut": [47, 50, 51, 283, 375, 403, 410], "permutation_invari": 47, "permutationinvarianceconstraint": 375, "perpetu": 406, "persist": [409, 411, 416], "perspect": 416, "pertain": 406, "phase": 156, "phcpho": [360, 361, 363, 366, 367], "phenomenon": 409, "philosophi": 416, "physic": 417, "pi": [7, 367, 379, 380], "pi_max": 380, "pi_per_iter": 380, "pi_required_fract": 379, "pi_threshold": 379, "pickl": 403, "pictur": 401, "piec": [385, 401, 409, 410], "piecewis": 84, "piecewisepolynomialkernel": 403, "pin": [22, 403], "pin_discret": 22, "pinned_part": 22, "pip": [401, 403, 404], "pipelin": [398, 399, 403, 404], "pival": [360, 361, 363, 366, 367], "pl": [35, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53], "place": [27, 30, 215, 314, 315, 382, 383, 385, 402, 404, 406, 409, 413, 416, 420], "placehold": 285, "plai": [409, 419], "plain": 236, "plainkernelfactori": [77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 232], "plan": [227, 413], "platt": 420, "pleas": [361, 372, 374, 376, 382, 383, 401, 407], "plot": [213, 358, 359, 360, 361, 362, 363, 398, 399, 403, 420], "plot_abegin_convert_pipelin": 331, "plot_ebegin_float_doubl": 331, "plotting_them": 337, "plt": [359, 360, 362, 363, 380], "plu": [215, 401], "plugin": 403, "pm": [5, 367], "png": [359, 360, 362, 363], "po16": 413, "poetri": 403, "point": [6, 13, 17, 22, 26, 27, 125, 149, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 190, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 330, 331, 343, 344, 345, 346, 350, 359, 360, 362, 364, 366, 367, 375, 379, 391, 392, 398, 399, 401, 403, 405, 407, 408, 409, 414, 415, 417, 421], "points_per_dim": [358, 359, 362, 364, 380, 391, 392, 398, 399], "polar": [35, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 192, 401, 403, 405, 421], "poli": 380, "polici": 385, "polycollect": 380, "polym": 413, "polynomi": [84, 85], "polynomialkernel": 403, "polytop": 403, "posit": [294, 345, 403, 412], "posixpath": 337, "possibl": [130, 190, 191, 192, 211, 294, 314, 362, 363, 379, 380, 387, 401, 403, 406, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420], "possibli": 155, "post": 413, "post_hook": [294, 378, 379, 380], "posterior": [5, 6, 8, 13, 17, 18, 27, 222, 224, 225, 228, 232, 246, 248, 250, 252, 255, 367, 403, 407], "posterior_mean": [222, 385], "posterior_mod": 222, "posteriorstandarddevi": [385, 407], "postprocess": 305, "potassium": [360, 361, 363, 366, 367], "potenti": [184, 319, 401, 402, 403, 404, 409, 412, 415], "power": [85, 406, 410, 414], "pph3": [360, 361, 363], "pr": [403, 404], "practic": [407, 414], "pre": [130, 154, 235, 381, 403, 404, 415], "pre_hook": [294, 378], "precis": [51, 154, 182, 278, 320, 331, 332, 351, 403, 421], "precomput": 117, "predefin": [337, 409, 414], "predict": [8, 18, 27, 65, 176, 222, 224, 225, 228, 232, 246, 248, 250, 252, 401, 403, 407, 408, 409, 417, 420], "predictor": 254, "prefer": [27, 406, 416], "prefix": [306, 308, 309], "preliminari": 420, "prepar": [380, 404, 406], "preprocess": 403, "present": [184, 282, 283, 294, 319, 366, 385, 403, 410, 417], "preset": [232, 239, 242, 244, 403], "pressur": [374, 382, 383, 394, 395, 396, 401, 410], "pretrain": [228, 381, 400], "pretti": 320, "pretty_print_df": 403, "prevent": [200, 201, 294, 402, 404, 415], "previou": [154, 379, 380, 403, 409, 411, 414, 420], "previous": [158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 278, 360, 361, 363, 366, 367, 374, 408], "price": 413, "primari": 409, "primarili": 407, "principl": 385, "print": [215, 320, 339, 358, 360, 361, 363, 364, 366, 367, 369, 370, 374, 378, 382, 383, 385, 389, 390, 391, 392, 394, 395, 396, 401, 403], "print_parameter_names_hook": 378, "printer_inst": 378, "prior": [81, 82, 83, 84, 85, 86, 87, 88, 92, 140, 141, 142, 143, 144, 145, 146, 222, 242, 376, 401, 402, 403, 417], "priori": [410, 416, 420], "privat": [403, 405], "probabilist": 407, "probability_of_improv": 380, "probabilityofimprov": [379, 380], "probabl": [7, 15, 17, 367, 377, 379, 400, 403], "problem": [385, 398, 399, 403, 404, 409, 412, 416], "problemat": [298, 402, 413], "proce": [213, 366, 411], "procedur": [407, 420], "proceed": 420, "process": [27, 75, 230, 231, 232, 233, 237, 238, 239, 241, 242, 243, 244, 345, 364, 367, 378, 385, 398, 399, 403, 404, 407, 408, 409, 410, 411, 413, 416, 420], "prod": [375, 376], "prod_constraint": 376, "prod_i": 412, "produc": [103, 215, 401, 404, 417], "product": [52, 91, 184, 190, 191, 192, 291, 371, 400, 401, 403, 406, 410, 421], "product_paramet": [190, 415], "productkernel": 403, "progress": [27, 153, 380, 403], "prohibit": 407, "project": [380, 401, 403, 411], "promin": 406, "promis": [379, 408], "proper": [403, 417], "properli": [22, 387, 402, 415], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 105, 107, 110, 111, 112, 114, 115, 117, 119, 120, 122, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 185, 189, 190, 222, 224, 225, 228, 232, 235, 239, 242, 244, 246, 248, 250, 252, 262, 264, 267, 268, 270, 286, 324, 344, 348, 403, 404, 410], "proport": 399, "propos": 409, "protobuf": 403, "protocol": [148, 149, 226, 234, 298, 403], "prototyp": 405, "provid": [13, 27, 33, 42, 43, 103, 117, 128, 130, 149, 154, 155, 158, 159, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 195, 203, 207, 211, 213, 215, 217, 219, 222, 224, 225, 228, 232, 242, 244, 246, 248, 250, 252, 282, 291, 294, 301, 304, 311, 315, 318, 321, 345, 346, 358, 360, 361, 362, 363, 378, 389, 390, 391, 392, 395, 398, 399, 403, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420], "prune": [12, 14], "prune_baselin": [12, 14], "pstd": [6, 403, 407], "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 105, 107, 110, 111, 112, 114, 115, 117, 119, 120, 122, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 185, 189, 190, 207, 222, 224, 225, 226, 228, 232, 234, 235, 239, 242, 244, 246, 248, 250, 252, 262, 264, 267, 268, 270, 285, 286, 324, 344, 348, 403, 404], "publicli": 406, "publish": 403, "pull": [385, 403], "pure": [8, 10, 13, 18, 150, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 184, 219, 227, 346, 359, 364, 391, 403, 421], "purerecommend": [152, 154, 155, 156, 158, 164, 171, 403], "purpos": [13, 42, 43, 378, 379, 382, 385, 401, 402, 404, 406, 416], "push": 404, "put": [385, 411, 413], "puzzl": 401, "py": [244, 403, 411], "py312": 404, "pyarrow": 403, "pydant": 403, "pydoclint": [403, 404], "pydocstyl": 404, "pylint": 403, "pypi": [401, 403], "pyplot": [359, 360, 362, 363, 380], "pyproject": 403, "pytest": [403, 404], "python": [26, 286, 295, 361, 383, 390, 395, 396, 401, 402, 403, 404, 409, 411, 416], "pytorch": 403, "pyupgrad": 403, "q": [84, 254, 255, 367, 408], "qei": [9, 359, 367, 395, 396, 403], "qexpectedimprov": 367, "qkg": [10, 403], "qlogei": [11, 403], "qlogexpectedimprov": [372, 373, 374, 375, 376, 387, 394], "qlognei": [12, 403], "qnegintegratedposteriorvari": 407, "qnei": [14, 403], "qnipv": [13, 403, 407], "qpi": [15, 367], "qsimpleregret": 17, "qsr": [16, 403], "qt": 17, "qthompsonsampl": [385, 403], "quadrat": 88, "qualiti": 404, "quantif": 420, "quantifi": [385, 407, 420], "quantiti": [49, 411, 412], "quantum": 117, "qucb": [18, 367, 407], "queri": [150, 159, 211, 213, 215, 401, 409, 411, 417], "question": [404, 409, 420], "qupperconfidencebound": 407, "qvailabl": 367, "qvarucb": 403, "r": [360, 361, 363, 366, 367], "radial": 86, "radiu": [306, 413], "rais": [13, 27, 35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 103, 130, 134, 135, 154, 155, 164, 166, 182, 184, 190, 195, 196, 197, 200, 201, 213, 215, 219, 222, 224, 225, 227, 228, 229, 232, 246, 248, 250, 252, 259, 283, 292, 294, 297, 299, 307, 311, 312, 314, 315, 319, 339, 345, 346, 362, 378, 379, 380, 392, 402, 403, 404, 414], "rand": 382, "random": [13, 87, 182, 184, 213, 215, 217, 251, 252, 314, 344, 345, 346, 358, 359, 360, 361, 362, 363, 367, 379, 380, 382, 385, 399, 401, 403, 407, 408, 413, 414, 417], "random_campaign": [358, 359, 362], "random_forest": [252, 367], "random_recommend": [359, 362], "random_se": [213, 217, 379, 417], "randomforestmodel": 383, "randomforestsurrog": [367, 403, 418], "randomli": [179, 361, 407, 414], "randomrecommend": [358, 359, 360, 361, 362, 363, 367, 372, 373, 374, 375, 376, 378, 379, 380, 385, 387, 403, 408, 414], "rang": [110, 111, 112, 114, 115, 117, 124, 125, 128, 262, 314, 358, 359, 362, 364, 369, 370, 372, 373, 374, 375, 376, 380, 385, 387, 389, 390, 391, 392, 399, 401, 410, 416, 417, 419], "rank": 419, "rastrigin": [358, 369, 370, 389, 391, 392], "rate": [141, 222, 385], "rather": [362, 394, 402, 407, 416], "ration": 88, "ravel": [398, 399], "raw": 416, "rbf": 86, "rbfkernel": 403, "rdkit": [122, 184, 304, 309, 361, 372, 374, 376, 410, 413], "re": [359, 362, 364, 379, 389, 390, 391, 392, 404, 414], "reach": [272, 274, 387], "reachabl": 411, "reactant": 413, "reaction": [361, 366, 401, 410, 413, 420], "reactor": [408, 420], "reactora": 420, "reactorb": 420, "reactorc": 420, "read": [117, 184, 337, 361, 366, 401, 403, 404], "read_excel": [360, 361, 363, 379], "readabl": [189, 320, 328, 394, 403, 405, 406, 416], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 213, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 404, 408], "readm": [403, 404], "reagent": [410, 413], "real": [42, 43, 324, 401, 409, 419], "realist": 417, "realiz": [211, 417], "reason": [39, 173, 174, 175, 176, 190, 361, 375, 391, 403, 406, 407, 408, 410, 413, 417], "reassembl": 416, "rebas": 404, "rec": [372, 373, 374, 375, 376, 387, 408, 409], "rec_finish": 408, "rec_next": 408, "rec_pend": 408, "receiv": [406, 411, 416], "recip": 404, "recipi": 406, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 62, 67, 68, 115, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 190, 211, 213, 226, 227, 278, 314, 315, 358, 359, 360, 361, 362, 363, 365, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 385, 387, 395, 396, 398, 399, 400, 401, 403, 404, 407, 411, 413, 415, 417, 420, 421], "recommendation_orig": 394, "recommendation_recr": 394, "recommended_arm_idx": 385, "recommender_with_hook": 379, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 152, 154, 155, 156, 161, 226, 378, 380, 403, 408], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 182, 184, 190, 207, 222, 224, 225, 228, 232, 235, 246, 248, 250, 252, 262, 264, 270, 324, 401, 409, 411, 416], "record": [27, 278, 279, 401, 411, 420], "recreat": [239, 394, 416], "recreate_model": 383, "recurs": [288, 289], "redesign": 403, "redistribut": 406, "reduc": [128, 380, 385, 398, 399, 413], "reduct": 421, "ref": 401, "refactor": 403, "refer": [211, 244, 278, 293, 314, 319, 331, 358, 359, 360, 361, 362, 363, 364, 367, 369, 370, 372, 373, 374, 375, 376, 378, 380, 382, 383, 387, 389, 390, 391, 392, 394, 403, 409, 412, 413, 414, 415, 416, 417, 418, 420], "referenc": 404, "refin": [379, 401, 403, 409], "reflect": [158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 380, 403, 404, 407, 410, 413], "regard": [30, 37, 369, 370, 375, 389, 404, 406], "regim": 403, "regist": [294, 377, 379], "register_custom_architectur": 403, "register_hook": [377, 378, 379, 380, 403], "registr": 403, "regress": 246, "regressor": 382, "regret": [16, 17], "regroup": 403, "regular": [17, 256, 403, 408, 420], "reinstal": 401, "rel": [213, 410, 412], "relat": [49, 104, 118, 184, 202, 266, 281, 392, 398, 399, 401, 403, 409, 410, 411, 420], "relationship": [398, 399, 401, 412, 420], "relative_perc": 315, "releas": [401, 403], "relev": [47, 190, 195, 215, 373, 403, 404, 409, 410, 420], "reli": [402, 403], "reliabl": 413, "remain": [50, 219, 273, 385, 387, 392, 398, 399, 406, 413, 416, 417], "remaind": 346, "remind": 403, "remot": 404, "remov": [46, 49, 50, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 184, 190, 375, 404, 410, 415], "renam": [361, 398, 399, 403], "render": 382, "reoccur": 420, "reorder": 403, "reorgan": 403, "repeat": [385, 403, 404, 408, 409], "repetit": [217, 367, 379], "rephras": 410, "replac": [358, 389, 391, 392, 403, 404, 413], "replic": 416, "repo": 403, "report": [149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 385, 402], "repositori": [361, 401, 404], "repr": 382, "repres": [35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 90, 91, 117, 184, 219, 222, 224, 225, 228, 232, 246, 248, 250, 252, 311, 321, 324, 328, 345, 375, 385, 395, 396, 401, 403, 406, 409, 413, 415], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 189, 190, 207, 222, 224, 225, 226, 228, 232, 235, 246, 248, 250, 252, 262, 264, 270, 299, 303, 311, 314, 320, 324, 339, 372, 373, 374, 375, 376, 382, 387, 394, 403, 408, 409, 413, 416, 421], "reproduc": [379, 385, 403, 406], "reproduct": 406, "request": [27, 67, 68, 103, 154, 155, 156, 197, 235, 276, 345, 346, 403, 408, 409], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 30, 33, 41, 42, 43, 45, 66, 156, 190, 259, 294, 366, 375, 378, 379, 382, 385, 387, 391, 395, 401, 403, 404, 406, 408, 409, 410, 412, 413, 415, 416, 417, 419, 420], "rerun": 382, "reserv": [401, 404], "reset_index": 398, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 375, 376, 416], "resolv": 305, "resort": [256, 404, 416], "resp": [185, 362, 363, 392], "respect": [166, 185, 213, 217, 277, 282, 314, 375, 404, 409, 410, 412, 416, 419], "respons": [406, 409, 414], "restart": 154, "restor": 416, "restr": 17, "restrain": 413, "restrict": [184, 190, 211, 217, 219, 372, 403, 417, 420, 421], "result": [8, 10, 18, 27, 128, 190, 213, 314, 358, 359, 360, 361, 362, 363, 364, 366, 382, 383, 385, 387, 398, 399, 401, 403, 406, 407, 409, 410, 411, 413, 414, 416, 417, 420, 421], "result_baselin": [398, 399], "result_fract": 399, "results_interrupt": 379, "results_uninterrupt": 379, "retain": [406, 410], "retrain": [227, 228, 418], "retriev": [184, 211, 287, 288, 289, 404, 417], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 97, 98, 100, 102, 103, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 130, 131, 133, 134, 135, 138, 140, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 156, 158, 161, 164, 166, 168, 171, 173, 174, 175, 176, 178, 179, 182, 184, 186, 187, 190, 191, 192, 193, 195, 196, 197, 200, 201, 203, 204, 205, 207, 209, 210, 213, 215, 217, 219, 222, 224, 225, 226, 228, 229, 232, 235, 236, 240, 246, 248, 250, 252, 254, 255, 256, 258, 259, 262, 264, 270, 272, 273, 274, 276, 277, 278, 279, 282, 283, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 333, 334, 335, 337, 338, 339, 345, 346, 348, 353, 354, 355, 356, 359, 362, 364, 372, 379, 380, 382, 385, 390, 398, 403, 409, 410, 417], "return_std": 382, "reus": 156, "reuse_last": 154, "reveal": [380, 399], "review": 404, "revis": [403, 406], "reward": 385, "rework": 403, "rewrit": 403, "rff": 87, "rffkernel": 403, "rh": [33, 42, 43, 369, 370, 410], "right": [33, 42, 43, 146, 319, 324, 360, 363, 373, 385, 401, 404, 406, 410, 412, 413, 419], "right_df": 319, "rihana": 405, "rim": 405, "risk": [402, 406, 409, 415], "robust": [401, 420], "robustli": 256, "role": [403, 404, 409, 412, 419, 421], "room": [380, 409], "root": [361, 401, 404, 410], "round": [320, 369, 375, 382, 383, 410], "roundtrip": [403, 416], "rout": 416, "row": [35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 103, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 215, 278, 282, 283, 319, 320, 335, 360, 363, 369, 370, 372, 373, 374, 375, 376, 387, 389, 390, 391, 392, 394, 409, 415, 417], "rowei": 420, "roya": 405, "royalti": 406, "rq": 88, "rqkernel": 403, "ruff": [403, 404], "rule": 378, "run": [213, 217, 358, 359, 360, 361, 362, 363, 364, 379, 380, 398, 399, 401, 402, 403, 404, 409, 416, 417], "run_analyt": [359, 362], "run_full_initial_data": 360, "run_hybrid": 362, "run_impute_mod": 363, "runtim": 331, "runtimeerror": [27, 154, 378], "rv": 385, "s41586": [244, 318], "safe": [403, 409], "safeti": 294, "sai": 410, "said": 404, "same": [49, 152, 154, 155, 156, 190, 196, 215, 222, 224, 225, 228, 232, 246, 248, 250, 252, 290, 367, 379, 382, 383, 385, 394, 402, 408, 410, 411, 416, 420], "sampl": [10, 13, 17, 41, 166, 178, 179, 182, 279, 343, 344, 345, 346, 360, 362, 367, 372, 373, 374, 375, 376, 385, 387, 394, 399, 401, 403, 405, 421], "sample_from_full_factori": [182, 403], "sample_inactive_paramet": 41, "sample_percentag": 414, "sample_uniform": [182, 403], "sampler": [367, 372, 373, 374, 375, 376, 387, 394], "samples_full_factori": [182, 403], "samples_random": [182, 403], "sampling_algorithm": [344, 407], "sampling_fract": [13, 407], "sampling_method": [13, 407], "sampling_n_point": [13, 407], "sampling_percentag": [166, 362, 367], "satisfi": [37, 38, 39, 190, 369, 370], "save": [337, 359, 360, 362, 363, 382, 403], "savefig": [359, 360, 362, 363], "scalar": [102, 364, 387, 403, 412, 416], "scale": [92, 142, 143, 144, 145, 146, 348, 387, 398, 403, 407, 412], "scalekernel": 403, "scaler": 403, "scenario": [219, 358, 359, 360, 361, 362, 363, 364, 379, 398, 399, 408, 410, 412, 420, 421], "scene": 412, "schema": 409, "schembl15068049": [360, 361, 363], "scheme": 403, "scienc": [401, 405], "scientif": [403, 420], "scipi": [335, 380, 385, 403], "screen": [290, 420], "script": [305, 402, 403, 411], "seaborn": [358, 359, 360, 361, 362, 363, 379, 398, 399], "seamlessli": 416, "search": [13, 22, 27, 35, 46, 49, 59, 62, 68, 110, 111, 112, 114, 115, 117, 124, 125, 128, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 190, 194, 213, 217, 219, 222, 224, 225, 228, 232, 246, 248, 250, 252, 278, 319, 363, 366, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 385, 387, 388, 394, 399, 403, 405, 408, 409, 410, 411, 416, 417, 421], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 110, 111, 112, 114, 115, 117, 124, 125, 128, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 185, 189, 190, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 361, 366, 378, 379, 380, 382, 383, 385, 394, 395, 396, 398, 400, 401, 403, 409, 410, 411, 413, 415, 416, 417], "searchspace_json": 416, "searchspacetyp": [158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 184, 367, 372, 373, 374, 375, 376, 379, 380, 387, 394, 415], "second": [333, 335, 364, 367, 382, 383, 387, 396, 398, 410, 411], "secondari": [401, 411], "section": [401, 403, 404, 406, 416], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 136, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 189, 190, 195, 213, 217, 219, 222, 224, 225, 226, 228, 232, 235, 242, 244, 246, 248, 250, 252, 262, 264, 270, 275, 292, 298, 301, 315, 324, 348, 358, 359, 360, 361, 362, 363, 364, 369, 370, 378, 379, 383, 389, 392, 401, 404, 409, 411, 412, 413, 414, 416, 417, 421], "seed": [213, 217, 341, 342, 379, 380, 385, 401, 403], "seek": 387, "seem": [307, 331, 396], "seen": 407, "select": [6, 37, 38, 39, 61, 66, 152, 154, 155, 156, 159, 176, 178, 222, 224, 225, 228, 232, 246, 248, 250, 252, 273, 345, 367, 373, 374, 385, 392, 401, 403, 407, 409, 410, 414, 416, 418], "select_recommend": [152, 154, 155, 156], "self": [294, 312, 353, 354, 355, 356, 378, 379, 380, 385, 404], "sell": 406, "semant": [403, 416], "sens": [51, 294, 298, 410, 413], "sent": 406, "separ": [217, 219, 256, 292, 348, 349, 380, 403, 404, 406, 416], "seq_greedy_campaign": 362, "seq_greedy_ei_campaign": [358, 359], "seq_greedy_ei_recommend": 359, "seq_greedy_recommend": 362, "sequenc": [27, 33, 42, 43, 102, 134, 154, 182, 184, 190, 191, 192, 195, 278, 282, 283, 294, 295, 312, 319, 335, 412, 414], "sequenti": [154, 155, 156, 166, 358, 359, 362, 367, 372, 373, 374, 375, 376, 387, 394, 403, 414], "sequential_continu": [166, 414], "sequential_greedy_x": 403, "sequentialgreedyrecommend": 403, "sequentialmetarecommend": [155, 414], "sequentialstrategi": 403, "seri": [27, 37, 38, 39, 46, 111, 114, 115, 117, 125, 128, 372, 403, 410], "serial": [155, 190, 207, 279, 382, 400, 402, 403, 404, 410, 414, 421], "serializ": [401, 410, 414], "serialize_datafram": 416, "serialized_df": 209, "serializetostr": 382, "serialmixin": [20, 27, 31, 37, 79, 97, 112, 138, 152, 182, 184, 190, 225, 235, 262, 264, 270, 324, 403], "serv": [42, 43, 219, 222, 224, 225, 228, 232, 246, 248, 250, 252, 319, 398, 399, 409, 410, 413], "servic": 406, "session": [228, 411, 416], "set": [30, 39, 41, 49, 51, 55, 56, 128, 149, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 213, 217, 239, 277, 314, 318, 337, 341, 342, 360, 361, 362, 363, 365, 367, 372, 374, 378, 383, 385, 387, 392, 401, 403, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 420], "set_box_aspect": 380, "set_dash": 379, "set_random_se": [380, 385], "set_size_inch": [359, 360, 362, 363], "set_x_pend": 22, "set_xlabel": 380, "set_xtick": 380, "set_xticklabel": 380, "set_ylabel": 380, "set_ylim": 380, "set_zlabel": 380, "setpoint": 125, "setup": [213, 379, 410, 417], "sever": [130, 150, 359, 361, 364, 367, 379, 382, 385, 387, 399, 401, 403, 404, 408, 410, 411, 412, 413, 415, 416, 417, 420], "shall": [154, 315, 406, 412], "shape": [17, 182, 189, 268, 272, 274, 345, 415], "share": [403, 406, 420], "shield": [244, 318, 361, 401, 413], "shift": [8, 18, 398], "shifted_hartmann": 398, "ship": [349, 411, 416], "short": 404, "shortcut": [190, 415, 416], "shorten": [403, 404], "shot": 420, "should": [27, 47, 115, 128, 190, 205, 217, 267, 282, 283, 314, 315, 317, 318, 319, 320, 323, 324, 325, 333, 337, 362, 372, 374, 375, 379, 382, 390, 392, 396, 401, 403, 404, 408, 409, 410, 415, 417, 420], "show": [358, 359, 360, 361, 362, 363, 364, 366, 367, 372, 373, 374, 382, 383, 385, 390, 392, 394, 395, 396, 398, 399, 410, 415], "showcas": 414, "shown": [379, 385, 399, 403], "shrink": 380, "side": [33, 42, 43, 273, 403, 410], "sigma": [143, 144, 145, 146, 272, 387, 405], "signal": [58, 412], "signatur": [73, 259, 292, 294, 380, 403, 404, 410, 416], "significantli": [190, 385, 398, 399], "silenc": 404, "silent": [403, 410], "similar": [155, 402, 410, 411, 413, 414, 415, 416, 420], "similarli": [362, 390, 413], "simpl": [16, 17, 286, 361, 378, 379, 390, 401, 403, 414, 417, 419, 420], "simpler": [404, 416], "simplest": 415, "simplex": [190, 421], "simplex_paramet": [190, 415], "simpli": [298, 378, 379, 404, 410, 413, 414, 415, 416, 419, 420], "simplic": 294, "simplifi": [359, 404], "simul": [69, 301, 315, 374, 375, 380, 401, 403, 420, 421], "simulate_experi": [217, 219, 417], "simulate_scenario": [219, 358, 359, 360, 361, 362, 363, 364, 379, 398, 399, 417], "simulate_transfer_learn": [398, 417], "simulationresult": 385, "simultan": 412, "sinc": [51, 184, 227, 294, 360, 369, 370, 375, 383, 389, 391, 394, 395, 396, 398, 404, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 420], "singer": 420, "singl": [17, 27, 37, 47, 94, 107, 182, 184, 190, 213, 262, 264, 270, 324, 332, 339, 345, 351, 358, 359, 360, 361, 362, 363, 373, 379, 380, 387, 390, 398, 399, 401, 403, 410, 412, 413, 415, 420, 421], "single_lin": 339, "singledispatch": 326, "singletargetobject": [27, 262, 264, 270, 358, 359, 360, 361, 362, 363, 366, 367, 369, 370, 372, 373, 374, 375, 376, 379, 380, 382, 383, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 403, 421], "situat": [372, 374, 375, 402, 404, 408, 410, 412, 413, 416, 420], "size": [17, 77, 78, 79, 82, 84, 86, 87, 88, 154, 156, 184, 189, 190, 279, 328, 380, 382, 385, 389, 390, 391, 392, 398, 399, 409, 416, 417, 420], "sk": 382, "skeleton": 403, "skicit": 403, "skin": 417, "skip": [187, 193, 403, 409], "skl2onnx": 382, "sklearn": [176, 331, 382], "sklearnclusteringrecommend": [173, 174, 175, 403, 408], "slightli": [211, 361, 417], "slot": [385, 403], "slow": [372, 374, 376, 415], "slowest": 403, "small": [42, 43, 280, 284, 369, 398, 399, 403, 407, 413], "smaller": [27, 385, 409, 420], "smallest": [182, 415], "smart": 401, "smile": [128, 303, 304, 305, 306, 307, 308, 309, 401, 413], "smiles_list": [306, 307, 308, 309], "smoke": 403, "smoke_test": [337, 358, 359, 360, 361, 362, 363, 364, 370, 372, 373, 375, 376, 379, 380, 385, 398, 399], "smooth": [82, 84, 146], "smoothedboxprior": 403, "smoother": 82, "sn": [358, 359, 360, 361, 362, 363, 379, 398, 399], "so": [213, 227, 358, 363, 379, 385, 389, 391, 392, 401, 402, 410, 411, 412, 413, 414, 416, 417, 419], "softwar": [401, 406], "sola": 405, "sole": 406, "solut": [409, 415, 416, 420], "solv": [227, 373, 374, 375, 385], "solv1": 375, "solv2": 375, "solv3": 375, "solv3_mordred_aa": 375, "solv3_mordred_at": 375, "solv_rdkit_maxab": 374, "solvent": [360, 361, 363, 366, 367, 372, 373, 374, 375, 376, 379, 383, 395, 396, 401, 410, 413], "solvent1": 375, "solvent2": 375, "solvent3": 375, "solvent_1": 410, "solvent_2": 410, "solvent_3": 410, "solvent_data": 379, "solvent_encoding1": 410, "solvent_encoding2": 410, "solvent_mordred_enc": 410, "solvent_rdkit_enc": 410, "solvent_rdkit_ma": [372, 376], "solvent_smil": 379, "solver": 417, "some": [47, 319, 331, 358, 359, 360, 361, 362, 363, 364, 367, 372, 373, 374, 375, 376, 379, 380, 382, 383, 389, 390, 391, 392, 394, 399, 408, 410, 411, 413, 414, 416, 417, 418], "someth": 396, "sometim": 410, "somewhat": 411, "somewher": 409, "soon": [401, 409, 414], "sophist": [403, 416], "sort": 131, "sourabh": 405, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 97, 98, 100, 102, 103, 105, 107, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 124, 125, 128, 130, 131, 133, 134, 135, 138, 140, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 156, 158, 161, 164, 166, 168, 171, 173, 174, 175, 176, 178, 179, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 200, 201, 203, 204, 205, 207, 209, 210, 213, 215, 217, 219, 222, 224, 225, 226, 228, 229, 232, 234, 235, 236, 239, 240, 242, 244, 246, 248, 250, 252, 254, 255, 256, 258, 259, 262, 264, 267, 268, 270, 272, 273, 274, 276, 277, 278, 279, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 333, 334, 335, 337, 338, 339, 341, 342, 344, 345, 346, 348, 356, 401, 403, 406], "space": [10, 13, 21, 22, 27, 33, 35, 42, 43, 46, 49, 59, 62, 64, 68, 110, 111, 112, 114, 115, 117, 124, 125, 128, 149, 157, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 190, 193, 194, 213, 217, 219, 222, 224, 225, 228, 232, 246, 248, 250, 252, 278, 319, 345, 359, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 385, 387, 388, 389, 391, 394, 399, 400, 403, 405, 408, 409, 410, 411, 413, 416, 417, 421], "span": [110, 111, 112, 114, 115, 117, 124, 125, 128, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 278, 378, 385], "speak": 420, "spec": [187, 193, 204], "special": [156, 401, 402, 406, 407, 420], "specif": [75, 130, 136, 176, 184, 187, 200, 217, 256, 287, 375, 378, 379, 391, 401, 404, 409, 410, 413, 414, 416, 417, 418, 419, 420], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 47, 72, 117, 128, 130, 149, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 195, 203, 204, 213, 215, 217, 226, 272, 273, 274, 282, 293, 306, 314, 345, 346, 361, 362, 367, 369, 382, 383, 385, 387, 390, 398, 401, 403, 407, 409, 410, 412, 413, 414, 415, 416, 417, 419, 420], "speed": [190, 372, 374, 376, 398, 399, 411, 415], "speed_fast": 415, "speed_norm": 415, "speed_slow": 415, "speedup": 420, "spell": 404, "spellcheck": 403, "sphinx": [403, 404], "split": [158, 408], "spread": 419, "sqrt": 410, "squar": [359, 362, 364, 385, 390, 410], "squash": 404, "stabil": [403, 411], "stabl": [75, 136, 275], "stage": [409, 410, 416], "stand": 403, "standard": [6, 256, 306, 382, 403, 413], "start": [213, 378, 379, 380, 385, 402, 403, 408, 413, 414, 416, 417, 420], "startup": 403, "stat": [276, 380, 385], "state": [156, 362, 379, 390, 403, 406, 409], "stateless": 385, "statement": [320, 391, 401, 406], "static": [184, 190, 232, 401, 404, 420], "statist": [279, 399, 401, 411], "statu": 409, "std_threshold": 256, "stem": 420, "step": [187, 193, 213, 385, 401, 404, 409, 412, 416, 418], "sterl": 405, "steven": 361, "still": [130, 190, 314, 379, 385, 408, 410, 411, 413, 420], "stop": [377, 400, 403, 404], "stop_on_pi": 379, "stoppag": 406, "storag": [409, 411, 416], "store": [22, 112, 256, 262, 359, 380, 385, 401, 403, 409, 415], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 103, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 130, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 164, 166, 173, 174, 175, 176, 182, 184, 189, 190, 203, 207, 217, 219, 222, 224, 225, 228, 232, 235, 246, 248, 250, 252, 262, 264, 265, 270, 272, 273, 274, 276, 279, 282, 283, 287, 292, 293, 299, 303, 304, 305, 306, 307, 308, 309, 311, 314, 317, 318, 320, 324, 328, 334, 337, 338, 339, 383, 385, 395, 396, 398, 399], "straightforward": [419, 420], "strategi": [13, 166, 184, 211, 385, 403], "stream": [291, 411], "streamingsequentialmetarecommend": [154, 414], "streamingsequentialstrategi": 403, "streamlin": 404, "streamlit": [401, 403], "streibel": 405, "strict": 292, "strictli": [383, 395, 396], "stride": 369, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 127, 128, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 182, 184, 190, 207, 222, 224, 225, 228, 232, 235, 246, 248, 250, 252, 262, 264, 270, 299, 304, 305, 306, 307, 308, 309, 311, 312, 317, 324, 339, 382, 394, 403, 409, 410, 413, 419, 421], "strip": [213, 363, 408, 417], "strong": 403, "strongli": 409, "strtobool": 411, "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 100, 203, 401, 402, 403, 409, 413, 416], "studi": [150, 401, 414], "style": [94, 398, 403, 404], "sub": [176, 403, 416], "subclass": [72, 203, 287, 289, 298, 367, 403, 404, 414, 416], "subfold": 411, "subject": 406, "sublicens": 406, "submiss": [403, 406], "submit": [22, 276, 278, 401, 404, 406], "submodul": 417, "subpackag": [403, 404], "subselectioncondit": [373, 374, 403, 421], "subsequ": [184, 190, 217, 305, 406, 409, 416], "subset": [128, 184, 195, 290, 345, 409, 410], "subspac": [22, 158, 166, 181, 182, 184, 186, 188, 190, 362, 369, 392, 403, 414, 416, 421], "subspace_json": 416, "subspacecontinu": [27, 110, 124, 184, 186, 403, 415], "subspacediscret": [27, 111, 114, 115, 117, 125, 128, 184, 186, 189, 372, 373, 374, 375, 376, 387, 394, 403, 415, 416], "substanc": [122, 128, 361, 366, 403, 410, 413, 420], "substance_12": 410, "substance_3": 410, "substance_43": 410, "substance_data": 403, "substance_encod": 361, "substanceenc": [372, 373, 374, 375, 376], "substanceencod": 128, "substancepar": [372, 373, 374, 375, 376], "substanceparamet": [360, 361, 363, 366, 367, 372, 373, 374, 375, 376, 379, 383, 395, 396, 401, 403, 410, 411, 415, 421], "substanti": 128, "substrat": 420, "subtyp": 416, "success": [264, 345, 385, 416], "success_valu": 264, "suffic": 404, "suffici": [379, 415, 416], "suit": 404, "suitabl": [176, 190, 213, 299, 404, 407, 409, 413, 417, 418, 420], "sum": [53, 90, 190, 359, 362, 364, 371, 372, 373, 374, 375, 379, 385, 390, 400, 410, 412, 415], "sum_": [410, 412], "sum_constraint": 375, "sum_constraint_1": 376, "sum_constraint_2": 376, "sum_i": [42, 43], "sum_of_squar": [359, 362, 364, 390], "sum_toler": 375, "summar": [30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 110, 111, 112, 114, 115, 117, 124, 125, 128, 262, 264, 270], "summari": [30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 110, 111, 112, 114, 115, 117, 124, 125, 128, 262, 264, 270, 403, 404], "superior": 407, "supersed": 406, "support": [10, 155, 219, 222, 224, 225, 228, 232, 246, 248, 250, 252, 331, 367, 372, 373, 374, 375, 376, 379, 380, 382, 387, 394, 403, 404, 406, 410, 411, 413, 414, 415, 417, 418], "supports_transfer_learn": [222, 224, 225, 228, 232, 246, 248, 250, 252, 418], "suppos": [278, 410], "sure": [401, 404, 417], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 63, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 164, 166, 173, 174, 175, 176, 222, 224, 226, 228, 232, 234, 235, 239, 242, 244, 246, 248, 250, 252, 372, 373, 374, 375, 376, 380, 385, 387, 394, 400, 401, 403, 405, 410, 413, 414, 420, 421], "surrogate_model": [164, 166, 367, 380, 382, 383, 385, 395, 396, 403], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 164, 166, 225, 403], "svg": 337, "sw": 373, "switch": [47, 153, 155, 156, 256, 367, 372, 373, 374, 375, 376, 385, 387, 394, 401, 403, 410, 414], "switch1": 373, "switch2": 373, "switch2_left": 373, "switch2_right": 373, "switch_1": 410, "switch_2": 410, "switch_aft": [156, 395, 396, 414], "sy": 402, "symmetri": 410, "syntax": [401, 403], "synthet": [300, 301, 369, 370, 380, 398, 399], "synthetictestfunct": 301, "system": [361, 385, 401, 406, 411, 417, 420], "t": [254, 255, 299, 360, 361, 363, 366, 367, 374, 380, 398, 399, 416], "t1": 416, "t2": 416, "t3": 416, "t_1": 412, "t_2": 412, "t_3": 412, "t_i": 412, "tabl": [320, 403, 410], "tag": [401, 403, 416], "tailor": 409, "take": [82, 111, 125, 130, 222, 224, 225, 228, 232, 242, 246, 248, 250, 252, 265, 378, 403, 408, 409, 410, 412, 413, 414, 420], "taken": [154, 379, 403, 409, 412], "tantamount": 407, "target": [27, 64, 94, 97, 98, 102, 106, 107, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 190, 211, 213, 214, 215, 222, 224, 225, 228, 232, 246, 248, 250, 252, 256, 264, 267, 268, 270, 294, 314, 333, 334, 340, 357, 358, 359, 360, 361, 362, 363, 366, 367, 369, 370, 372, 373, 374, 375, 376, 379, 380, 382, 383, 385, 389, 390, 391, 392, 394, 395, 396, 398, 399, 400, 401, 403, 408, 409, 411, 416, 417, 421], "target_1": [364, 373, 374, 375, 376, 387, 412, 419], "target_1_cumbest": 364, "target_1_iterbest": 364, "target_1_measur": 364, "target_2": [364, 387, 412, 419], "target_2_cumbest": 364, "target_2_iterbest": 364, "target_2_measur": 364, "target_3": [387, 412], "target_3a": 419, "target_3b": 419, "target_cumbest": [358, 359, 362, 398, 399], "target_max": [408, 409], "target_transform": 387, "target_valu": [369, 370, 380, 389, 390, 391, 392], "targetmod": [270, 416, 419], "targetnam": 213, "targettransform": [270, 419], "task": [115, 184, 219, 222, 224, 225, 228, 232, 246, 248, 250, 252, 262, 264, 270, 385, 403, 409, 414, 416, 417, 420], "task_idx": [184, 403], "task_param": [398, 399, 417], "task_paramet": 416, "task_parameter_json": 416, "task_parameter_reconstruct": 416, "taskparamet": [197, 398, 399, 403, 416, 417, 421], "technic": [190, 408, 417, 420], "techniqu": [176, 414], "telemetri": [403, 405, 421], "tell": 277, "temp": [372, 374, 405], "temp_c": [360, 361, 363, 379], "temperatur": [360, 363, 366, 367, 372, 374, 378, 382, 383, 394, 410, 413, 415, 420], "temperature_resolut": 372, "temperature_valu": 379, "temporari": [93, 99, 167, 184, 342, 379, 403, 411, 416], "temporarili": 403, "tempt": 420, "tenac": 403, "tend": 380, "tensor": [22, 33, 42, 43, 222, 254, 255, 321, 324, 348, 350, 403], "term": [85, 211, 379, 385, 404, 406, 409, 415, 416, 417, 420], "termin": [379, 380, 402, 406], "terminologi": 421, "tert": [360, 361, 363, 366, 367], "test": [190, 213, 228, 300, 301, 304, 314, 385, 398, 399, 401, 402, 403, 404, 409], "test_funct": [301, 358, 369, 370, 380, 389, 390, 391, 392, 398, 399], "test_scenario": [360, 363], "testabl": [69, 213], "testfunct": [358, 369, 370, 389, 391, 392], "testfunctionclass": [358, 369, 370, 389, 391, 392], "text": [338, 382, 406, 410, 411, 412], "th": [283, 410], "than": [27, 56, 68, 125, 154, 155, 156, 182, 184, 197, 283, 298, 339, 346, 361, 374, 375, 379, 407, 410, 411, 413, 416], "thei": [130, 150, 159, 195, 273, 317, 367, 376, 379, 385, 403, 404, 408, 409, 410, 413, 414, 415, 416, 419, 420], "them": [35, 242, 337, 362, 367, 375, 401, 402, 404, 408, 410, 411, 413, 414, 416, 420], "theme": [337, 403], "theori": 406, "therebi": 190, "therefor": [156, 222, 224, 225, 228, 232, 246, 248, 250, 252, 367, 402, 409, 416, 420], "thereof": 406, "thf": 410, "thi": [10, 13, 17, 27, 30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 110, 111, 112, 114, 115, 117, 124, 125, 128, 130, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 211, 215, 217, 219, 222, 224, 225, 226, 227, 228, 232, 242, 246, 248, 250, 252, 256, 279, 282, 294, 295, 298, 305, 314, 315, 316, 318, 319, 320, 337, 358, 378, 379, 380, 382, 383, 385, 390, 394, 395, 396, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420], "think": [385, 413], "third": [387, 406], "thompson": [17, 405], "thomson": 17, "those": [130, 156, 158, 211, 345, 367, 402, 406, 410, 417], "though": 420, "three": [361, 362, 375, 387, 401, 409, 410, 412, 414, 415, 420], "threshold": [39, 117, 128, 256, 318, 369, 374, 375, 376, 379, 403, 410, 413], "thresholdcondit": [52, 53, 369, 374, 375, 376, 421], "through": [184, 272, 282, 314, 383, 385, 387, 389, 390, 391, 392, 401, 403, 404, 406, 410, 416, 421], "throughout": 156, "throw": [305, 410, 413], "thrown": [215, 363, 379, 395, 402, 412, 417], "thu": [166, 294, 358, 359, 360, 361, 362, 364, 367, 369, 370, 372, 373, 374, 375, 376, 382, 383, 385, 387, 389, 390, 391, 392, 394, 402, 404, 409, 411, 413, 414, 416, 417, 420], "tick": 380, "time": [10, 279, 346, 370, 378, 385, 401, 403, 408, 409, 410, 413, 416], "timeout": [403, 411], "timer": 378, "titl": 406, "tl": 398, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 33, 42, 43, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 379, 380, 403], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 182, 184, 190, 207, 222, 224, 225, 228, 232, 235, 246, 248, 250, 252, 262, 264, 270, 324], "to_factori": [77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92], "to_fram": 375, "to_gpytorch": [77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 138, 140, 141, 142, 143, 144, 145, 146, 403], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 182, 184, 190, 207, 222, 224, 225, 228, 232, 235, 246, 248, 250, 252, 262, 264, 270, 324, 382, 383, 394, 409, 416], "to_list": [369, 370, 389, 390, 391, 392], "to_ndarrai": 324, "to_object": [262, 264, 270, 385, 412], "to_polar": [37, 38, 39], "to_searchspac": [110, 111, 112, 114, 115, 117, 124, 125, 128, 182, 190, 385, 403], "to_subspac": [110, 111, 114, 115, 117, 124, 125, 128, 403], "to_tensor": [324, 379, 380, 382, 403], "to_tupl": 324, "togeth": [35, 60, 283, 367, 385, 392, 401], "toler": [27, 39, 42, 43, 125, 190, 278, 319, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 374, 375, 376, 379, 382, 383, 387, 391, 392, 394, 395, 396, 401, 403, 410, 413], "tolist": 369, "toluen": 413, "toml": 403, "too": [369, 420], "tool": [302, 403, 416], "toolbox": 401, "top": [403, 404], "topic": 409, "torch": [324, 379, 380, 382, 403], "toronto": 405, "tort": 406, "total": [156, 345, 385, 415], "toward": [8, 18, 140, 314, 410], "tox": [401, 403, 404], "tracebackexcept": 402, "track": [149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 190, 379, 406, 415], "trade": [8, 18, 406], "trademark": 406, "tradit": [361, 401], "train": [65, 149, 154, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 219, 222, 224, 225, 226, 227, 228, 232, 246, 248, 250, 252, 256, 381, 398, 399, 403, 417], "train_i": 382, "train_x": 382, "training_funct": 399, "trajectori": [211, 379, 385, 417], "transfer": [218, 219, 222, 224, 225, 228, 232, 246, 248, 250, 252, 367, 372, 373, 374, 375, 376, 387, 394, 398, 400, 401, 403, 406, 413, 418, 421], "transform": [65, 97, 102, 107, 111, 112, 114, 115, 117, 125, 128, 182, 184, 190, 195, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 262, 264, 268, 270, 324, 325, 348, 364, 372, 373, 374, 375, 376, 394, 403, 406, 413, 419], "transform_rep_exp2comp": 403, "transit": 403, "translat": [35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 391, 403, 406, 413], "transmiss": 416, "transmit": 279, "treasur": 421, "treat": [128, 361, 401, 410, 413, 419], "tremend": 361, "trend": 420, "tri": 415, "triangl": 274, "triangular": [268, 274, 387, 419], "tricyclohexylphosphin": [360, 361, 363], "trigger": [154, 282, 379, 383, 385, 403, 404, 408, 412, 416], "trivial": [235, 248, 412, 413], "true": [6, 12, 14, 27, 30, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 110, 111, 112, 114, 115, 117, 124, 125, 128, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 184, 190, 232, 264, 273, 278, 288, 289, 292, 298, 299, 304, 308, 309, 319, 339, 361, 367, 369, 370, 372, 373, 374, 375, 376, 382, 383, 385, 387, 394, 395, 396, 398, 399, 403, 409, 410, 411, 413, 416], "truncat": [401, 411], "trust": [382, 411], "truth": 299, "try": [314, 360, 361, 363, 379, 382, 383, 396, 402, 403], "tune": 401, "tupl": [27, 33, 38, 42, 43, 77, 78, 79, 82, 84, 86, 87, 88, 90, 91, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 131, 182, 184, 189, 190, 255, 282, 292, 295, 312, 314, 321, 324, 328, 348, 362, 364, 390, 398, 417], "turn": [182, 190, 301, 328, 401, 402, 403, 410, 411], "twice": [375, 412], "two": [30, 49, 55, 56, 103, 156, 166, 211, 283, 286, 333, 345, 360, 362, 363, 364, 367, 378, 385, 387, 390, 392, 398, 399, 401, 403, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419], "twofold": 385, "twophasemetarecommend": [359, 360, 362, 363, 367, 372, 373, 374, 375, 376, 379, 380, 382, 383, 385, 387, 392, 394, 395, 396, 401, 414], "twophasestrategi": 403, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 98, 100, 102, 103, 107, 110, 111, 112, 114, 115, 117, 124, 125, 127, 128, 130, 131, 133, 134, 135, 138, 140, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 156, 158, 161, 164, 166, 168, 171, 173, 174, 175, 176, 178, 179, 182, 184, 185, 186, 187, 190, 191, 192, 193, 195, 196, 197, 200, 201, 203, 204, 205, 207, 209, 210, 213, 215, 217, 219, 222, 224, 225, 226, 228, 229, 232, 235, 236, 240, 246, 248, 250, 252, 254, 255, 256, 258, 259, 262, 264, 265, 270, 272, 273, 274, 276, 277, 278, 279, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 315, 316, 317, 319, 320, 321, 324, 325, 326, 328, 330, 331, 333, 334, 335, 337, 338, 339, 345, 346, 348, 350, 353, 354, 355, 356, 361, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 387, 394, 395, 396, 401, 403, 404, 406, 407, 412, 413, 414, 415, 420, 421], "typealia": 265, "typeerror": [27, 213, 228, 294, 314, 346, 379, 380], "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 102, 107, 110, 111, 112, 114, 115, 117, 124, 125, 128, 130, 138, 140, 141, 142, 143, 144, 145, 146, 152, 154, 155, 156, 182, 184, 190, 195, 203, 204, 207, 222, 224, 225, 228, 232, 235, 246, 248, 250, 252, 255, 262, 264, 270, 289, 290, 291, 312, 324], "typic": [13, 42, 43, 294, 339, 361, 401, 408, 409, 413, 416, 417], "typo": [403, 404], "u": [17, 360, 361, 363, 378, 380, 385, 399, 401, 407, 410, 412], "ucb": [8, 367, 403, 407, 416], "ultim": 404, "ultra": [395, 396], "un": 403, "unabl": 382, "unavail": 403, "unawar": 408, "unbound": [324, 378], "uncaught": 403, "uncertainti": [13, 367, 421], "uncharacter": 420, "uncorrel": [318, 420], "undefin": 222, "under": [35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 195, 279, 375, 376, 380, 385, 401, 402, 406, 408, 413], "underflow": 70, "underli": [27, 49, 379, 385, 401, 409, 414, 416], "underscor": 403, "understand": [401, 420], "undesir": [35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 74, 410, 413], "undo": 402, "unequ": 376, "unevenli": 413, "unfinish": 408, "unfortun": 420, "unhandl": 403, "uniform": [182, 222, 315, 403], "uniformli": 345, "uniniti": 298, "uninstal": [71, 401], "unintend": [74, 294, 403], "union": [103, 213, 217, 272, 273, 274, 334, 392, 406, 415], "uniqu": [50, 130, 375, 403, 413], "unit": [189, 328], "unknown": [345, 385, 403, 418, 420], "unless": [401, 404, 406, 411, 413, 416], "unlik": [12, 14, 415], "unlock": 421, "unmaintain": [403, 413], "unmatch": 292, "unmatchedattributeerror": 292, "unmeasur": [213, 363, 417], "unnecessari": [403, 409], "unpromis": 379, "unreach": 403, "unrealist": 417, "unrecogn": 314, "unrestrict": 294, "unspecifi": [403, 416], "unsqueez": [379, 380], "unstructur": [205, 416], "unstructure_bas": 203, "unsupport": [182, 215], "until": [152, 154, 155, 156, 213, 385, 401, 417], "unusedobjectwarn": [379, 403], "unveil": 399, "unwant": 35, "up": [42, 43, 190, 213, 215, 360, 361, 363, 365, 369, 370, 372, 374, 375, 378, 380, 392, 398, 399, 401, 403, 407, 410], "updat": [361, 366, 403, 404, 408], "upgrad": 403, "upon": [158, 235, 402, 403, 404, 410, 415, 418, 420], "upper": [8, 18, 146, 184, 190, 272, 273, 274, 324, 367, 380, 387, 398, 399, 403, 419], "upper_bound": [372, 373, 374, 375, 376, 394, 415], "upperconfidencebound": [407, 416], "upstream": 404, "url": [411, 420], "us": [13, 17, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 60, 62, 82, 102, 103, 117, 125, 128, 130, 149, 152, 154, 155, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 182, 184, 190, 191, 192, 204, 213, 215, 217, 222, 224, 225, 228, 229, 232, 246, 248, 250, 252, 268, 278, 279, 285, 294, 295, 305, 314, 315, 319, 326, 330, 331, 337, 345, 350, 369, 370, 377, 378, 379, 380, 381, 394, 395, 396, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 419, 420, 421], "usa": 405, "usabl": [298, 402, 403, 413, 416], "usag": [327, 401, 403, 410, 411, 414], "user": [46, 47, 58, 66, 74, 117, 120, 190, 222, 224, 225, 228, 232, 246, 248, 250, 252, 259, 276, 315, 319, 366, 367, 372, 387, 396, 401, 403, 404, 409, 410, 411, 412, 413, 415, 416, 417, 420], "userguid": 275, "usernam": [276, 403, 411], "usort": 403, "usual": [213, 360, 361, 363, 395, 402, 413], "util": [166, 182, 190, 278, 285, 286, 324, 344, 348, 358, 361, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 385, 387, 389, 391, 392, 395, 398, 399, 401, 403, 407, 408, 412, 413, 414, 416, 418, 420], "uv": 403, "v": 420, "val": [100, 299, 398], "val_from_param1": 51, "val_from_param2": 51, "valid": [27, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 130, 184, 187, 190, 193, 228, 304, 307, 319, 372, 393, 395, 400, 402, 403, 404, 409, 410], "validate_compat": 228, "validate_config": [27, 396, 403, 409], "valu": [6, 8, 18, 22, 27, 30, 33, 37, 38, 39, 42, 43, 47, 49, 64, 81, 82, 83, 84, 85, 86, 87, 88, 92, 97, 102, 103, 107, 111, 114, 115, 117, 119, 120, 122, 125, 128, 130, 133, 134, 135, 173, 174, 175, 176, 182, 184, 190, 191, 192, 195, 211, 213, 215, 217, 222, 224, 225, 228, 232, 246, 248, 250, 252, 264, 265, 267, 272, 273, 274, 279, 282, 290, 292, 299, 311, 314, 315, 317, 319, 320, 324, 326, 333, 334, 335, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 403, 404, 407, 409, 410, 411, 412, 413, 417, 419, 420, 421], "valuabl": 414, "valueerror": [13, 27, 55, 56, 103, 130, 134, 135, 182, 184, 190, 195, 196, 213, 215, 222, 224, 225, 228, 232, 246, 248, 250, 252, 259, 283, 292, 297, 299, 307, 311, 314, 315, 319, 339, 345, 346, 362, 383, 392, 402], "var": [385, 421], "vari": [27, 190, 361, 412], "variabl": [30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 110, 111, 112, 114, 115, 117, 124, 125, 128, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 222, 224, 225, 228, 232, 246, 248, 250, 252, 262, 277, 279, 332, 337, 351, 391, 401, 403, 404, 410, 413, 414, 416], "varianc": [8, 13, 18, 81, 248, 316, 403, 407], "variance_initial_valu": 81, "variance_prior": 81, "variant": [367, 398, 420], "varieti": [391, 404, 416, 417], "variou": [324, 375, 388, 403, 408, 414], "varucb": 403, "vector": [30, 382, 405], "vendor": 413, "verbal": 406, "verbos": 383, "veri": [372, 374, 387, 408, 411, 413], "verifi": [298, 362, 369, 372, 373, 374, 375, 376, 392, 394, 401, 404], "versa": [398, 420], "versatil": 414, "version": [184, 276, 301, 331, 385, 398, 399, 401, 402, 403, 404, 406, 416], "vert": 380, "via": [13, 17, 26, 27, 156, 166, 178, 222, 224, 225, 226, 228, 232, 246, 248, 250, 252, 278, 287, 294, 314, 319, 363, 369, 370, 378, 379, 382, 389, 391, 401, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420], "via_init": 416, "via_json": 416, "viabl": [68, 387], "vice": [398, 420], "view": [182, 190, 380, 415], "view_init": 380, "violat": [35, 45, 46, 47, 48, 49, 50, 51, 52, 53], "viridi": 380, "virtual": 404, "visibl": 403, "visual": [361, 398, 399, 419], "volum": 420, "vpn": [401, 411], "vulner": [403, 404], "w_i": 412, "wa": [13, 61, 63, 64, 71, 74, 130, 156, 190, 222, 224, 225, 228, 232, 246, 248, 250, 252, 311, 314, 346, 361, 403, 404, 406, 411, 413, 416, 420], "wai": [184, 378, 388, 390, 398, 401, 408, 411, 413, 415, 416, 417, 419, 420], "wall": 10, "want": [43, 46, 362, 367, 372, 375, 385, 390, 392, 399, 401, 404, 410, 411, 413, 414, 416, 419], "warn": [57, 295, 361, 372, 374, 376, 379, 391, 392, 403, 404], "warranti": [401, 406], "was_measur": [372, 373, 374, 375, 376, 387, 394, 415], "was_recommend": [372, 373, 374, 375, 376, 387, 394, 415], "watch": 378, "water": [372, 373, 374, 375, 376, 410, 413], "we": [22, 211, 358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399, 401, 404, 407, 408, 409, 410, 412, 413, 415, 416, 419, 420, 421], "web": 404, "weber": 405, "weight": [94, 102, 103, 335, 364, 387, 412, 416], "weight_kdalton": 413, "welcom": 404, "well": [276, 337, 367, 379, 404, 409, 410, 413, 417], "were": [158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 314, 363, 367, 399, 402, 403, 408, 410, 411, 413, 415], "what": [130, 154, 184, 211, 314, 348, 382, 387, 396, 404, 407, 409, 413, 420, 421], "whatsnew": 286, "when": [27, 47, 125, 154, 156, 164, 166, 184, 190, 222, 224, 225, 228, 229, 232, 246, 248, 250, 252, 259, 292, 294, 298, 314, 339, 346, 364, 367, 372, 373, 376, 378, 383, 385, 387, 401, 403, 404, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420], "whenev": [22, 154, 314, 416], "where": [17, 22, 30, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 149, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 211, 219, 222, 224, 225, 228, 232, 246, 248, 250, 252, 282, 314, 345, 360, 361, 363, 367, 372, 374, 375, 385, 401, 402, 403, 404, 406, 408, 409, 410, 412, 413, 415, 416, 417, 419, 420], "wherea": 416, "wherev": [406, 408], "whether": [22, 30, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 110, 111, 112, 114, 115, 117, 124, 125, 128, 166, 182, 190, 222, 224, 225, 228, 232, 246, 248, 250, 252, 277, 306, 315, 319, 324, 362, 403, 406, 409, 411, 414, 419], "which": [13, 27, 37, 38, 39, 74, 115, 130, 149, 150, 156, 158, 161, 164, 166, 171, 173, 174, 175, 176, 178, 179, 184, 190, 217, 219, 222, 224, 225, 228, 232, 246, 248, 250, 252, 256, 278, 279, 294, 298, 314, 315, 318, 319, 320, 333, 334, 337, 348, 361, 362, 367, 370, 375, 378, 379, 385, 391, 392, 396, 398, 399, 401, 402, 403, 404, 406, 407, 409, 410, 413, 415, 416, 417, 419, 420], "while": [184, 187, 193, 379, 385, 387, 399, 402, 406, 407, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420], "whilst": 314, "whole": 406, "whom": 406, "whose": [103, 130, 184, 215, 290, 292, 378, 404, 408], "wide": 417, "wider": 419, "width": 320, "william": 420, "willing": 409, "win": [222, 385], "win_rat": 385, "window": [403, 411], "wise": 335, "wish": 416, "within": [27, 110, 111, 112, 114, 115, 117, 124, 125, 128, 278, 319, 406, 410, 413, 418, 420, 421], "without": [155, 398, 399, 401, 403, 406, 408, 409, 410, 411, 413, 420], "work": [22, 253, 282, 375, 379, 387, 390, 394, 396, 401, 403, 404, 405, 406, 410, 411, 412, 414, 416], "workaround": [402, 403], "workflow": [382, 401, 409, 414, 416, 421], "world": [401, 409], "worldwid": 406, "worst": [213, 215, 217, 363, 417], "would": [50, 70, 130, 211, 213, 219, 227, 378, 385, 401, 404, 408, 410, 411, 413, 414, 415, 416, 417, 420], "wrap": [77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 232, 236, 254, 255, 294, 301, 369, 370, 389, 391, 401, 403, 412], "wrapped_funct": [358, 369, 370, 380, 389, 391, 392], "wrapper": [1, 21, 217, 219, 228, 295, 300, 369, 370, 401, 414], "write": [401, 402, 406, 416], "written": [389, 391, 392, 404, 406], "wrong": [396, 403], "www": [401, 406], "x": [22, 98, 186, 213, 215, 236, 295, 312, 321, 333, 348, 358, 359, 360, 361, 362, 363, 364, 372, 373, 374, 375, 376, 379, 380, 387, 390, 394, 398, 399, 401, 403, 415], "x0": 415, "x1": 415, "x2": 415, "x_": [358, 359, 362, 364, 369, 370, 389, 390, 391, 392], "x_1": [369, 370, 389, 390, 391, 392, 410], "x_2": [369, 370, 389, 390, 391, 392, 410], "x_3": [369, 370, 389, 390, 391, 392, 410], "x_4": [369, 370, 389, 390, 391, 392], "x_5": 392, "x_6": 392, "x_i": [42, 43, 410], "x_pend": 22, "xlsx": [360, 361, 363, 379], "xpho": [360, 361, 363], "xylen": [360, 361, 363, 366, 367], "y": [244, 299, 318, 333, 358, 359, 360, 361, 362, 363, 364, 379, 380, 382, 390, 398, 399, 401, 420], "ye": 299, "year": 420, "yet": [22, 152, 154, 155, 156, 403, 408, 414], "yield": [6, 82, 360, 361, 363, 366, 367, 372, 379, 382, 383, 392, 394, 395, 396, 401, 407, 412, 416], "yield_cumbest": [360, 361, 363, 379], "yml": 403, "you": [43, 46, 361, 367, 369, 378, 383, 385, 391, 392, 395, 401, 402, 404, 406, 407, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420], "your": [361, 362, 378, 385, 392, 401, 402, 403, 404, 406, 409, 411, 413, 416, 418, 419, 420], "your_branch_nam": 404, "yourself": 385, "z": [380, 401], "zdir": 380, "zero": [8, 18, 140, 316, 385, 420], "zip": [379, 380], "\u00b5fmt": 403, "\u0161o\u0161i\u0107": [401, 405]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedImprovement", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousLinearConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearEqualityConstraint", "ContinuousLinearInequalityConstraint", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objective", "baybe.objective.Objective", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.deprecation", "baybe.objectives.deprecation.structure_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.single", "SingleTargetObjective", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "Surrogate", "SurrogateProtocol", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "classproperty", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.botorch_wrapper", "baybe.utils.botorch_wrapper.botorch_function_wrapper", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.is_valid_smiles", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fp_features", "baybe.utils.chemistry.smiles_to_molecules", "baybe.utils.chemistry.smiles_to_mordred_features", "baybe.utils.chemistry.smiles_to_rdkit_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_results", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.plotting", "baybe.utils.plotting.create_example_plots", "baybe.utils.plotting.indent", "baybe.utils.plotting.to_string", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "Backtesting", "Simulation loop using a BoTorch test function", "Example for full simulation loop using a custom analytical test function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a custom analytical test function in a hybrid", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Example for full simulation loop using the multi target mode for custom analytic", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using a mixture use case in a discrete searchspace", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Searchspaces", "Example for using a synthetic BoTorch test function in a continuous searchspace", "Example for using a custom BoTorch test function in a continuous searchspace", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "PyCharm vs. <code class=\"docutils literal notranslate\"><span class=\"pre\">exceptiongroup</span></code>", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide"], "titleterms": {"": 404, "0": 403, "01": 403, "02": 403, "03": 403, "04": 403, "05": 403, "06": 403, "07": 403, "08": 403, "09": 403, "1": 403, "10": 403, "11": 403, "12": 403, "13": 403, "14": 403, "15": 403, "16": 403, "17": 403, "19": 403, "2": 403, "2022": 403, "2023": 403, "2024": 403, "21": 403, "23": 403, "24": 403, "27": 403, "28": 403, "29": 403, "3": 403, "4": 403, "5": 403, "6": 403, "7": 403, "8": 403, "9": 403, "A": 401, "The": [385, 395, 401, 402, 416, 417, 420], "abbrevi": 416, "acqf": 2, "acquisit": [1, 2, 19, 21, 23, 24, 25, 367, 408], "acquisitionfunct": 20, "action": 420, "activ": 407, "ad": [366, 403, 408, 409, 420], "add_fake_result": 314, "add_parameter_nois": 315, "addendum": 387, "addit": 414, "additivekernel": 90, "advanc": 401, "altern": 416, "an": 385, "analyt": [359, 362, 364], "arm": [384, 385], "assembli": 416, "asynchron": 408, "attr": 404, "augment": [281, 282, 283], "automat": 416, "avail": [367, 418], "avoid": 402, "back": 401, "backtest": [357, 398], "bandit": [221, 384, 385], "base": [19, 29, 76, 96, 98, 109, 137, 148, 151, 160, 163, 170, 223, 261, 360, 361, 363], "basic": [80, 139, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 365, 366, 409, 411, 416], "basickernel": 77, "batch": 409, "batchify_ensemble_predictor": 254, "batchify_mean_var_predict": 255, "bayb": [0, 1, 2, 19, 21, 23, 24, 25, 26, 28, 29, 36, 40, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 89, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 108, 109, 113, 116, 118, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 147, 148, 150, 151, 153, 157, 159, 160, 162, 163, 165, 167, 168, 169, 170, 172, 177, 180, 181, 183, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 227, 229, 230, 231, 233, 236, 237, 238, 240, 241, 243, 245, 247, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 366, 401, 404], "bayesian": [162, 163, 165, 167, 168, 401, 414], "bayesianlinearsurrog": 246, "bayesianrecommend": 164, "bell_transform": 272, "bernoulli": 385, "betabernoullimultiarmedbanditsurrog": 222, "betaprior": 140, "binari": [263, 265], "binarytarget": 264, "black": 385, "block_deserialization_hook": 200, "block_serialization_hook": 201, "boolean": [296, 297, 298, 299], "both": 394, "botorch": [165, 358, 389, 390, 391], "botorch_function_wrapp": 301, "botorch_wrapp": [300, 301], "botorchrecommend": 166, "bound": [378, 412, 415], "box": 385, "break": 403, "build": [385, 415], "bytes_to_human_read": 328, "cach": [409, 411], "callabl": 417, "campaign": [26, 27, 358, 359, 360, 361, 362, 363, 364, 367, 369, 370, 372, 373, 375, 376, 379, 382, 383, 387, 389, 390, 391, 392, 394, 395, 409], "cardinalityconstraint": 30, "case": [375, 385], "catch_constant_target": 256, "categor": 113, "categoricalencod": 119, "categoricalparamet": [114, 413], "chang": 403, "changelog": 403, "check_if_in": 297, "chemic": 401, "chemistri": [302, 303, 304, 305, 306, 307, 308, 309], "choicevalu": 265, "class": 404, "classproperti": 286, "clone": 401, "closer_el": 333, "closest_el": 334, "cluster": [172, 414], "code": 404, "columntransform": 348, "compar": 394, "compon": 378, "composit": 89, "compositekernel": 78, "condit": [36, 37, 410], "config": [395, 396, 409], "configur": [382, 383, 395, 416], "constraint": [28, 29, 31, 36, 40, 44, 54, 55, 56, 368, 369, 370, 371, 372, 373, 374, 375, 376, 410, 411, 415], "construct": [358, 359, 360, 361, 362, 363, 364, 369, 370, 389, 390, 391, 392, 412, 415], "constructor": [415, 416], "continu": [40, 181, 368, 370, 389, 390, 407, 410, 411, 413, 415, 420], "continuouscardinalityconstraint": 41, "continuousconstraint": 32, "continuouslinearconstraint": 33, "continuouslinearequalityconstraint": [42, 410], "continuouslinearinequalityconstraint": [43, 410], "continuousnonlinearconstraint": 34, "continuousparamet": 110, "contribut": 404, "contributor": 405, "conveni": 412, "convers": [310, 311, 312, 412, 416], "convert": [202, 382], "convert_acqf": 24, "convert_bound": 325, "copi": 416, "core": [183, 186, 187, 199, 200, 201, 202, 203, 204, 205, 212, 213, 231, 238, 240], "creat": [358, 359, 360, 361, 363, 364, 367, 369, 370, 372, 373, 374, 375, 376, 382, 383, 387, 389, 390, 391, 394, 395, 398, 399, 409, 415], "create_example_plot": 337, "creation": [360, 361, 363, 409], "custom": [116, 227, 229, 359, 362, 364, 372, 377, 378, 381, 382, 383, 390, 418], "customdiscreteparamet": [117, 413], "customencod": 120, "customonnxsurrog": 228, "data": [360, 361, 363, 415, 420], "datafram": [313, 314, 315, 316, 317, 318, 319, 320, 321, 415, 416, 417], "de": [394, 416], "default": [241, 415, 416], "defaultkernelfactori": 242, "defin": [358, 359, 362, 364, 369, 370, 378, 379, 380, 387, 389, 390, 391, 392, 396, 398, 399, 401], "definit": 379, "depend": [373, 401, 413], "deprec": [99, 100, 403], "deprecationerror": 58, "descript": 387, "deseri": 416, "deserialize_datafram": 209, "design": [401, 404], "desir": [101, 103], "desirabilityobject": [102, 412], "develop": 404, "df_apply_dependency_augment": 282, "df_apply_permutation_augment": 283, "df_drop_single_value_column": 316, "df_drop_string_column": 317, "df_uncorrelated_featur": 318, "dictionari": [395, 396], "differ": 367, "dimens": 392, "discret": [44, 188, 191, 192, 193, 371, 372, 373, 374, 375, 391, 410, 413, 414, 415], "discretecardinalityconstraint": 45, "discreteconstraint": 35, "discretecustomconstraint": [46, 410], "discretedependenciesconstraint": [47, 410], "discreteexcludeconstraint": [48, 410], "discretelinkedparametersconstraint": [49, 410], "discretenolabelduplicatesconstraint": [50, 410], "discreteparamet": 111, "discretepermutationinvarianceconstraint": [51, 410], "discreteproductconstraint": [52, 410], "discretesamplingmethod": 344, "discretesumconstraint": [53, 410], "discuss": 385, "disk": 411, "do": 417, "docstr": 404, "document": 383, "dtypefloatnumpi": 330, "dtypefloatonnx": 331, "dtypefloattorch": 350, "dummi": 285, "edbo": 243, "edbokernelfactori": 244, "emptysearchspaceerror": 59, "encod": 413, "encount": 402, "end": 401, "enum": [104, 118, 266], "environ": 411, "equival": 416, "exampl": [359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 374, 375, 376, 382, 383, 387, 389, 390, 391, 392, 394, 395, 396, 400, 401], "except": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "exceptiongroup": 402, "exclus": [374, 376], "expect": 420, "expectedimprov": 3, "experi": [372, 373, 374, 375, 376, 382, 383, 387, 394, 401, 408, 417], "experiment": 409, "expir": 403, "explicit": 415, "extend": 404, "farthest_point_sampl": 345, "field": 416, "file": [395, 396], "find_subclass": 287, "finite_float": 353, "fix": 403, "float": 411, "fpsrecommend": 178, "fraction_to_float": 311, "from": [395, 401, 403, 409, 415, 416], "full": [358, 359, 360, 361, 362, 363, 364, 415], "function": [358, 359, 360, 361, 362, 363, 364, 367, 369, 370, 379, 387, 389, 390, 391, 392, 404, 408, 417], "further": 409, "fuzzy_row_match": 319, "gammaprior": 141, "gaussian_process": [230, 231, 233, 236, 237, 238, 240, 241, 243], "gaussianmixtureclusteringrecommend": 173, "gaussianprocesspreset": 239, "gaussianprocesssurrog": 232, "gener": [398, 399, 404, 414], "geom_mean": 335, "get": [366, 409], "get_base_structure_hook": 203, "get_baseclass": 288, "get_canonical_smil": 303, "get_model_params_valid": 258, "get_parameters_from_datafram": 130, "get_subclass": 289, "get_transform_paramet": 195, "get_user_detail": 276, "github": 401, "global": 407, "group_duplicate_valu": 290, "guid": 421, "halfcauchyprior": 142, "halfnormalprior": 143, "hilberts_factori": 291, "hook": [377, 378, 379, 380], "how": 402, "hybrid": [362, 369, 392, 410], "imaginari": 385, "implicit": 412, "import": [358, 359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 374, 375, 376, 378, 380, 382, 383, 385, 387, 389, 390, 391, 392, 394, 395, 396, 398, 399], "improv": 380, "inclus": 360, "incompatibilityerror": 60, "incompatibleacquisitionfunctionerror": 61, "incompatiblesearchspaceerror": 62, "incomplet": 363, "incorpor": 376, "indent": 338, "independentgaussiansurrog": 224, "index": 401, "indic": 401, "inequ": 410, "infiniteintervalerror": 323, "inform": [409, 414], "initi": [360, 367], "instal": 401, "instanc": 378, "instead": [382, 383], "instruct": 411, "internet": 411, "interrupt": 379, "interv": [322, 323, 324, 325, 326], "invalidsurrogatemodelerror": 63, "invalidtargetvalueerror": 64, "invok": 416, "irrelev": 420, "is_abstract": 298, "is_en": 277, "is_valid_smil": 304, "issu": 401, "iter": [369, 370, 382, 383, 387], "json": [409, 416], "kernel": [75, 76, 79, 80, 89], "kernel_factori": [233, 236], "kernelfactori": 234, "kmeansclusteringrecommend": 174, "known": 401, "learn": [397, 399, 407, 417, 420], "licens": [401, 406], "limit": 419, "linear": [245, 370], "linear_transform": 273, "linearkernel": 81, "link": 383, "local": [401, 407], "logexpectedimprov": 4, "lognormalprior": 144, "look_up_target": 215, "lookup": [214, 215, 360, 361, 363, 379, 398, 399, 417], "loop": [358, 359, 360, 361, 362, 363, 364, 398, 399, 401], "maintain": [401, 405], "make_gp_from_preset": 240, "mandatori": 412, "manual": [372, 373, 374, 375, 376], "mark": 408, "match": 419, "match_attribut": 292, "maternkernel": 82, "max": 419, "mean": 417, "meanpredictionsurrog": 248, "measur": [366, 382, 383, 409], "mechan": [360, 361, 363], "memori": [327, 328], "memorys": 189, "meta": [150, 151, 153, 414], "metadata": 415, "metarecommend": 152, "method": [378, 407], "min": 419, "mixin": 206, "mixtur": 375, "mode": [364, 387, 419], "model": [367, 382, 383, 385, 418], "modelnottrainederror": 65, "monitor": 380, "monkeypatch": [378, 379, 380], "multi": [364, 384, 385, 386, 387], "multipl": [364, 417], "naiv": [157, 247], "naivehybridspacerecommend": 158, "name": 413, "name_to_smil": 305, "necessari": [359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 374, 375, 376, 382, 383, 387, 389, 390, 391, 392, 394, 395, 396], "nest": 416, "ngboost": 249, "ngboostsurrog": 250, "nomcacquisitionfunctionerror": 66, "non_inf_float": 354, "non_nan_float": 355, "nonpredict": [169, 170, 172, 177], "nonpredictiverecommend": 171, "nonstring_to_tupl": 312, "norecommenderslefterror": 67, "normalprior": 145, "notenoughpointslefterror": 68, "nothingtosimulateerror": 69, "numer": [123, 269, 329, 330, 331, 332, 333, 334, 335], "numericalcontinuousparamet": [124, 413], "numericaldiscreteparamet": [125, 413], "numericaltarget": [270, 419], "numericalunderflowerror": 70, "object": [93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 358, 359, 360, 361, 363, 364, 367, 369, 370, 372, 373, 374, 375, 376, 387, 389, 390, 391, 394, 398, 399, 401, 412, 416], "onnx": 382, "optim": [398, 399, 401, 409], "option": [401, 413, 414], "optionalimporterror": 71, "other": 367, "output": [382, 383], "packag": [401, 411], "pamclusteringrecommend": 175, "parallel": 409, "paramet": [108, 109, 112, 113, 116, 118, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 358, 359, 360, 361, 362, 363, 364, 367, 383, 409, 413, 415], "parameter_cartesian_prod_panda": 191, "parameter_cartesian_prod_polar": 192, "parameterencod": 121, "partial": [21, 408], "partialacquisitionfunct": 22, "pass": 383, "pend": 408, "perform": [358, 359, 360, 364, 387, 389, 390, 391, 392], "periodickernel": 83, "piecewisepolynomialkernel": 84, "plainkernelfactori": 235, "plot": [336, 337, 338, 339, 379, 380], "point": 411, "polar": 411, "polynomialkernel": 85, "posteriormean": 5, "posteriorstandarddevi": 6, "pre": 382, "precis": 411, "preset": [237, 238, 240, 241, 243], "pretrain": 382, "pretty_print_df": 320, "print": [372, 373, 375, 376, 387], "prior": [136, 137, 138, 139], "probabilityofimprov": 7, "probabl": 380, "problem": [379, 402], "product": [376, 415], "productkernel": 91, "pull": 404, "pure": [159, 160, 162, 163, 165, 167, 168, 169, 170, 172, 177, 407, 414], "purerecommend": 161, "pycharm": 402, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedimprov": 12, "qnegintegratedposteriorvari": 13, "qnoisyexpectedimprov": 14, "qprobabilityofimprov": 15, "qsimpleregret": 16, "qthompsonsampl": 17, "quick": 401, "qupperconfidencebound": 18, "random": [340, 341, 342], "random_forest": 251, "randomforestsurrog": 252, "randomrecommend": 179, "rbfkernel": 86, "recommend": [147, 148, 150, 151, 153, 157, 159, 160, 162, 163, 165, 167, 168, 169, 170, 172, 177, 366, 367, 382, 383, 389, 390, 391, 392, 394, 408, 409, 414], "recommenderprotocol": 149, "reduct": 407, "refers_to": 293, "regist": 378, "register_custom_architectur": 229, "register_hook": 294, "remov": 403, "represent": 415, "request": 404, "restrict": 415, "result": [379, 380, 408], "revers": 410, "rffkernel": 87, "role": 420, "rqkernel": 88, "run": [369, 370, 385], "sampl": [177, 407, 414], "sample_numerical_df": 346, "sampling_algorithm": [343, 345, 346], "scalar": [103, 105], "scale": 347, "scalekernel": 92, "scenario": [216, 217, 417], "scope": 411, "search": [398, 401, 407, 414, 415], "searchspac": [180, 181, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 358, 359, 360, 362, 363, 364, 367, 369, 370, 372, 373, 374, 375, 376, 387, 388, 389, 390, 391, 392, 399], "searchspacetyp": 185, "see": 420, "select_constructor_hook": 204, "sequenti": [153, 409], "sequential_greedi": [167, 168], "sequentialgreedyrecommend": 168, "sequentialmetarecommend": 154, "serial": [198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 393, 394, 409, 416], "serialize_datafram": 210, "serialmixin": 207, "set": [379, 380, 398, 399], "set_random_se": 341, "setup": [366, 372, 373, 374, 375, 376, 382, 383, 385, 387, 394], "signatur": 378, "simplex": 415, "simul": [211, 212, 213, 214, 215, 216, 217, 218, 219, 358, 359, 360, 361, 362, 363, 364, 379, 385, 398, 399, 417], "simulate_experi": 213, "simulate_scenario": 217, "simulate_transfer_learn": 219, "singl": [106, 411, 417], "singletargetobject": [107, 412], "sklearnclusteringrecommend": 176, "smile": 127, "smiles_to_fp_featur": 306, "smiles_to_molecul": 307, "smiles_to_mordred_featur": 308, "smiles_to_rdkit_featur": 309, "smoothedboxprior": 146, "some": [369, 370, 387], "sort_paramet": 131, "space": [392, 398, 401, 407, 414, 415], "stage": 382, "start": 401, "stop": 379, "str_to_acqf": 25, "strategi": [367, 401], "streamingsequentialmetarecommend": 155, "string": [395, 416], "strtobool": 299, "structure_object": 100, "sub": 407, "subselectioncondit": [38, 410], "subspac": 415, "subspacecontinu": 182, "subspacediscret": 190, "substanc": [126, 127, 401], "substanceencod": 122, "substanceparamet": [128, 413], "suitabl": 367, "sum": 376, "support": 408, "surrog": [220, 221, 223, 225, 227, 229, 230, 231, 233, 236, 237, 238, 240, 241, 243, 245, 247, 249, 251, 253, 254, 255, 256, 257, 258, 259, 367, 381, 382, 383, 418], "surrogateprotocol": 226, "synchron": 404, "synthet": [389, 391, 392], "tabl": [360, 361, 363, 398, 399, 401], "target": [260, 261, 262, 263, 265, 266, 269, 271, 272, 273, 274, 364, 378, 386, 387, 412, 419], "targetmod": 267, "targettransform": 268, "task": [398, 399], "taskparamet": [115, 413, 420], "technologi": 420, "telemetri": [275, 276, 277, 278, 279, 401, 411], "telemetry_record_recommended_measurement_percentag": 278, "telemetry_record_valu": 279, "temporary_se": 342, "terminologi": [416, 417, 420], "test": [358, 359, 362, 364, 369, 370, 389, 390, 391, 392], "thi": [359, 360, 361, 362, 363, 364, 366, 367, 369, 370, 372, 373, 374, 375, 376, 387, 389, 391, 392], "thresholdcondit": [39, 410], "through": 420, "to_kernel_factori": 236, "to_object": 98, "to_searchspac": 186, "to_str": 339, "to_tensor": 321, "to_tupl": 295, "toler": 409, "tool": 404, "torch": [349, 350, 351], "train": 382, "transfer": [397, 399, 417, 420], "transfer_learn": [218, 219], "transform": [271, 272, 273, 274, 387], "treasur": 420, "triangular_transform": 274, "trigger": [378, 380], "two": 396, "twophasemetarecommend": 156, "type": 416, "uncertainti": 407, "unidentifiedsubclasserror": 72, "uninstal": 411, "uninterrupt": 379, "unlock": 420, "unmatchedattributeerror": 73, "unstructure_bas": 205, "unusedobjectwarn": 74, "upperconfidencebound": 8, "us": [358, 359, 360, 361, 362, 363, 364, 366, 367, 372, 373, 374, 375, 376, 382, 383, 385, 387, 389, 390, 391, 392, 415, 416, 417, 418], "use_fallback_constructor_hook": 326, "user": 421, "util": [23, 24, 25, 129, 130, 131, 208, 209, 210, 253, 254, 255, 256, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356], "v": [378, 402, 409], "valid": [54, 55, 56, 132, 133, 134, 135, 194, 195, 196, 197, 257, 258, 259, 352, 353, 354, 355, 356, 383, 396], "validate_cardinality_constraints_are_nonoverlap": 55, "validate_constraint": 56, "validate_custom_architecture_cl": 259, "validate_decorrel": 133, "validate_is_finit": 134, "validate_not_nan": 356, "validate_paramet": 197, "validate_parameter_nam": 196, "validate_searchspace_from_config": 187, "validate_simplex_subspace_from_config": 193, "validate_unique_valu": 135, "valu": [415, 416], "variabl": 411, "varname_numpy_use_single_precis": 332, "varname_torch_use_single_precis": 351, "verif": [372, 373, 374, 375, 376, 396], "verifi": 370, "we": 417, "what": 417, "when": 402, "within": 415, "workflow": [404, 408], "write": 404}})