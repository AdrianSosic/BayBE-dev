Search.setIndex({"alltitles": {"Acquisition function": [[366, "acquisition-function"]], "AcquisitionFunction": [[20, null]], "Active Learning": [[407, null]], "Added": [[403, "added"], [403, "id4"], [403, "id8"], [403, "id14"], [403, "id21"], [403, "id30"], [403, "id36"], [403, "id40"], [403, "id47"], [403, "id52"], [403, "id58"], [403, "id64"], [403, "id68"], [403, "id72"], [403, "id76"], [403, "id81"], [403, "id85"], [403, "id88"], [403, "id92"], [403, "id96"], [403, "id100"], [403, "id103"], [403, "id107"], [403, "id111"], [403, "id115"], [403, "id119"], [403, "id125"], [403, "id128"]], "Addendum: Description of transformation functions": [[388, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[422, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[420, null]], "Adding Partial Results": [[408, "adding-partial-results"]], "Adding measurements": [[409, "adding-measurements"]], "Additional Options for Discrete Search Spaces": [[414, null]], "AdditiveKernel": [[92, null]], "Advanced Example: Chemical Substances": [[401, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[386, "an-imaginary-use-case"]], "Array-Based Callables": [[417, null]], "Asynchronous Workflows": [[408, null]], "Automatic field conversion": [[416, "automatic-field-conversion"]], "Available Models": [[418, "available-models"]], "Available recommenders suitable for initial recommendation": [[366, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[366, "available-surrogate-models"]], "Backtesting": [[359, null], [398, null]], "Basic Instructions": [[411, "basic-instructions"]], "Basic creation": [[409, "basic-creation"]], "Basic example for using BayBE": [[365, null]], "Basic string assembly": [[416, "basic-string-assembly"]], "BasicKernel": [[79, null]], "Basics": [[364, null], [409, "basics"]], "Batch optimization": [[409, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[401, null]], "Bayesian Recommenders": [[414, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[248, null]], "BayesianRecommender": [[166, null]], "Bernoulli Multi Armed Bandit": [[386, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[224, null]], "BetaPrior": [[142, null]], "BinaryTarget": [[266, null]], "BotorchRecommender": [[168, null]], "Bound methods": [[376, "bound-methods"]], "Breaking Changes": [[403, "breaking-changes"], [403, "id13"], [403, "id20"]], "Building from the Product of Parameter Values": [[415, "building-from-the-product-of-parameter-values"], [415, "id2"]], "Building the Model": [[386, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[402, "cpus-without-avx-support-installation-of-polars"]], "Caching of recommendations": [[409, "caching-of-recommendations"]], "Campaign": [[27, null]], "Campaign Stopping": [[377, null]], "Campaigns": [[409, null]], "CardinalityConstraint": [[30, null]], "CategoricalEncoding": [[121, null]], "CategoricalParameter": [[116, null], [413, "categoricalparameter"]], "Changed": [[403, "changed"], [403, "id5"], [403, "id9"], [403, "id15"], [403, "id22"], [403, "id27"], [403, "id31"], [403, "id37"], [403, "id41"], [403, "id44"], [403, "id48"], [403, "id53"], [403, "id59"], [403, "id65"], [403, "id69"], [403, "id73"], [403, "id77"], [403, "id82"], [403, "id86"], [403, "id89"], [403, "id93"], [403, "id97"], [403, "id101"], [403, "id104"], [403, "id108"], [403, "id112"], [403, "id116"], [403, "id120"]], "Changelog": [[403, null]], "Clustering Recommenders": [[414, "clustering-recommenders"]], "Code Design": [[404, "code-design"]], "ColumnTransformer": [[350, null]], "Comparing recommendations in both objects": [[394, "comparing-recommendations-in-both-objects"]], "CompositeKernel": [[80, null]], "Condition": [[36, null]], "Conditions": [[410, "conditions"]], "Constraint": [[31, null]], "Constraint Setup": [[383, "constraint-setup"]], "Constraints": [[410, null]], "Constraints Continuous": [[367, null]], "Constraints Discrete": [[370, null]], "Constraints Setup": [[384, "constraints-setup"]], "Construct the campaign and run some iterations": [[368, "construct-the-campaign-and-run-some-iterations"], [369, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[415, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[361, "constructing-campaigns-for-the-simulation-loop"], [362, "constructing-campaigns-for-the-simulation-loop"], [363, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[415, "constructing-from-a-dataframe"], [415, "id1"], [415, "id3"]], "Constructing hybrid recommenders": [[392, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[391, "constructing-the-campaign-and-performing-a-recommendation"], [392, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[392, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[410, "continuous-constraints"]], "Continuous Parameters": [[413, "continuous-parameters"]], "Continuous Subspaces": [[415, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[40, null]], "ContinuousConstraint": [[32, null]], "ContinuousLinearConstraint": [[41, null], [410, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[33, null]], "ContinuousParameter": [[112, null]], "Contributing to BayBE": [[404, null]], "Contributors": [[405, null], [405, "id1"]], "Convenience construction and implicit conversion": [[412, null]], "Conventions for attrs classes": [[404, "conventions-for-attrs-classes"]], "Convert model to onnx": [[380, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[380, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[381, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[380, "create-campaign"]], "Creating Continuous Search Spaces": [[390, null]], "Creating a Simplex-Bound Discrete Subspace": [[415, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign": [[409, "creating-a-campaign"]], "Creating a campaign from the configuration file": [[395, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[371, "creating-and-printing-the-campaign"], [372, "creating-and-printing-the-campaign"], [374, "creating-and-printing-the-campaign"], [388, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[360, "creating-the-campaigns"]], "Creating the Objective": [[362, "creating-the-objective"]], "Creating the Optimization Objective": [[398, "creating-the-optimization-objective"], [399, "creating-the-optimization-objective"]], "Creating the Search Space": [[398, "creating-the-search-space"]], "Creating the Searchspace": [[399, "creating-the-searchspace"]], "Creating the campaign": [[366, "creating-the-campaign"], [381, "creating-the-campaign"], [394, "creating-the-campaign"]], "Creating the constraint": [[371, "creating-the-constraint"], [373, "creating-the-constraint"]], "Creating the constraints": [[372, "creating-the-constraints"], [374, "creating-the-constraints"]], "Creating the objective": [[388, "creating-the-objective"]], "Creating the recommender object": [[366, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[361, "creating-the-searchspace-and-the-objective"], [363, "creating-the-searchspace-and-the-objective"], [368, "creating-the-searchspace-and-the-objective"], [369, "creating-the-searchspace-and-the-objective"], [371, "creating-the-searchspace-and-the-objective"], [372, "creating-the-searchspace-and-the-objective"], [373, "creating-the-searchspace-and-the-objective"], [374, "creating-the-searchspace-and-the-objective"], [391, "creating-the-searchspace-and-the-objective"]], "Creation from a JSON config": [[409, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[418, null]], "Custom Hooks": [[375, null]], "Custom Surrogates": [[379, null]], "CustomDiscreteParameter": [[119, null], [413, "customdiscreteparameter"]], "CustomEncoding": [[122, null]], "CustomONNXSurrogate": [[230, null]], "Dataframe deserialization": [[416, "dataframe-deserialization"]], "DefaultKernelFactory": [[244, null]], "Defining config dictionaries": [[396, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[377, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[378, "defining-the-hook"]], "Defining the Hooks": [[376, "defining-the-hooks"]], "Defining the Optimization Objective": [[401, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[360, "defining-the-optimization-problem"]], "Defining the Search Space": [[401, "defining-the-search-space"]], "Defining the Tasks": [[398, "defining-the-tasks"], [399, "defining-the-tasks"]], "Defining the targets": [[388, "defining-the-targets"]], "Defining the test function": [[368, "defining-the-test-function"], [369, "defining-the-test-function"], [391, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[392, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[403, "deprecations"], [403, "id11"], [403, "id18"], [403, "id25"], [403, "id34"], [403, "id50"], [403, "id56"], [403, "id62"], [403, "id79"]], "Deserialization from configuration strings": [[416, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[104, null], [412, "desirabilityobjective"]], "Developer Tools": [[404, "developer-tools"]], "Discrete Constraints": [[410, "discrete-constraints"]], "Discrete Parameters": [[413, "discrete-parameters"]], "Discrete Subspaces": [[415, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[383, null]], "DiscreteCardinalityConstraint": [[47, null]], "DiscreteConstraint": [[34, null]], "DiscreteCustomConstraint": [[48, null], [410, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[49, null], [410, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[50, null], [410, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[51, null], [410, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[52, null], [410, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[113, null]], "DiscretePermutationInvarianceConstraint": [[53, null], [410, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[54, null]], "DiscreteSamplingMethod": [[346, null]], "DiscreteSumConstraint": [[55, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[410, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[386, "discussion"]], "Disk Caching": [[411, "disk-caching"]], "Dummy": [[287, null]], "Duplicate Substances": [[383, "duplicate-substances"]], "EDBOKernelFactory": [[246, null]], "EXPERIMENTAL: Floating Point Precision": [[411, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[422, null]], "Environment Variables": [[411, null]], "Equivalent copies": [[416, null]], "Estimation with Constraints": [[422, null]], "Example Searchspace and objective parameters": [[366, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[368, null]], "Example for creating campaigns from configs": [[395, null]], "Example for custom parameter passing in surrogate models": [[381, null]], "Example for full simulation loop using a table-based lookup mechanism": [[362, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[363, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[361, null]], "Example for linear constraints in a continuous searchspace": [[369, null]], "Example for surrogate model with a custom pretrained model": [[380, null]], "Example for the serialization of a campaign": [[394, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[391, null]], "Example for using custom constraints in discrete searchspaces": [[371, null]], "Example for using dependency constraints in discrete searchspaces": [[372, null]], "Example for using different strategies": [[366, null]], "Example for using exclusion constraints in discrete searchspaces": [[373, null]], "Example for using exclusion constraints incorporating sums and products": [[374, null]], "Example for using synthetic test functions in hybrid spaces": [[392, null]], "Example for using the multi target mode for the objective": [[388, null]], "Example for validation of a config file": [[396, null]], "Examples": [[400, null]], "Expectations": [[420, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[380, "experiment-setup"], [381, "experiment-setup"]], "Experiment setup": [[371, "experiment-setup"], [372, "experiment-setup"], [373, "experiment-setup"], [374, "experiment-setup"], [394, "experiment-setup"]], "Experiment setup and creating the searchspace": [[388, "experiment-setup-and-creating-the-searchspace"]], "Experimental feature only!": [[411, null]], "Expired Deprecations (from 0.6.*)": [[403, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[403, "expired-deprecations-from-0-7"]], "Extending BayBE\u2019s Functionality": [[404, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[418, "extracting-the-model-for-advanced-study"]], "FPSRecommender": [[180, null]], "Fixed": [[403, "fixed"], [403, "id2"], [403, "id6"], [403, "id10"], [403, "id16"], [403, "id24"], [403, "id28"], [403, "id33"], [403, "id38"], [403, "id42"], [403, "id49"], [403, "id54"], [403, "id60"], [403, "id66"], [403, "id74"], [403, "id78"], [403, "id83"], [403, "id90"], [403, "id94"], [403, "id98"], [403, "id105"], [403, "id109"], [403, "id113"], [403, "id117"], [403, "id121"], [403, "id123"], [403, "id126"]], "From GitHub": [[401, "from-github"]], "From Local Clone": [[401, "from-local-clone"]], "From Package Index": [[401, "from-package-index"]], "From the Default Constructor": [[415, "from-the-default-constructor"]], "Further information": [[409, "further-information"]], "GammaPrior": [[143, null]], "GaussianMixtureClusteringRecommender": [[175, null]], "GaussianProcessPreset": [[241, null]], "GaussianProcessSurrogate": [[234, null]], "General Information": [[414, "general-information"]], "General Workflow": [[404, "general-workflow"]], "Generating Lookup Tables": [[398, "generating-lookup-tables"], [399, "generating-lookup-tables"]], "Getting a recommendation and adding measurements": [[365, "getting-a-recommendation-and-adding-measurements"]], "Getting recommendations": [[409, "getting-recommendations"]], "Global Uncertainty Reduction": [[407, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[144, null]], "HalfNormalPrior": [[145, null]], "Hook instance vs. target instance": [[376, null]], "Hybrid constraints": [[410, null]], "Imports": [[360, "imports"], [376, "imports"], [378, "imports"], [383, "imports"], [384, "imports"], [386, "imports"], [390, "imports"], [398, "imports"], [399, "imports"]], "Inclusion of initial data": [[361, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[226, null]], "Indices and Tables": [[401, "indices-and-tables"]], "Influence of Continuous Parameters": [[422, null]], "Installation Related Issues": [[402, "installation-related-issues"]], "Interval": [[326, null]], "Invoking alternative constructors": [[416, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[380, "iterate-with-recommendations-and-measurements"], [381, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[416, "json-de-serialization"]], "KMeansClusteringRecommender": [[176, null]], "Kernel": [[81, null]], "KernelFactory": [[236, null]], "Known Issues": [[402, null]], "License": [[406, null]], "Limitations": [[419, "limitations"]], "LinearKernel": [[83, null]], "Links for documentation": [[381, "links-for-documentation"]], "Local Uncertainty Reduction": [[407, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[146, null]], "Lookup functionality and data creation": [[361, "lookup-functionality-and-data-creation"], [362, "lookup-functionality-and-data-creation"], [363, "lookup-functionality-and-data-creation"]], "MATCH mode": [[419, "match-mode"]], "MIN and MAX mode": [[419, "min-and-max-mode"]], "Maintainers": [[405, "maintainers"]], "Mandatory target bounds": [[412, null]], "Manual verification of the constraint": [[371, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[372, "manual-verification-of-the-constraints"], [373, "manual-verification-of-the-constraints"], [374, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[408, "marking-experiments-as-pending"]], "MaternKernel": [[84, null]], "MeanPredictionSurrogate": [[250, null]], "Memory During Optimization": [[422, null]], "MemorySize": [[191, null]], "Meta Recommenders": [[414, "meta-recommenders"]], "MetaRecommender": [[154, null]], "Method overrides": [[404, "method-overrides"]], "Missing Lookup Values": [[417, null]], "Mixtures": [[382, null]], "Model Outputs": [[380, "model-outputs"], [381, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[383, null]], "Modeling a Mixture in Traditional Representation": [[384, null]], "Monitoring the Probability of Improvement": [[378, null]], "Monkeypatching": [[376, "monkeypatching"], [377, null], [378, "monkeypatching"]], "Multi Target": [[387, null]], "Multi-Armed Bandit": [[385, null]], "NGBoostSurrogate": [[252, null]], "NaiveHybridSpaceRecommender": [[160, null]], "Necessary imports": [[380, "necessary-imports"], [381, "necessary-imports"], [394, "necessary-imports"], [395, "necessary-imports"], [396, "necessary-imports"]], "Necessary imports for this example": [[361, "necessary-imports-for-this-example"], [362, "necessary-imports-for-this-example"], [363, "necessary-imports-for-this-example"], [365, "necessary-imports-for-this-example"], [366, "necessary-imports-for-this-example"], [368, "necessary-imports-for-this-example"], [369, "necessary-imports-for-this-example"], [371, "necessary-imports-for-this-example"], [372, "necessary-imports-for-this-example"], [373, "necessary-imports-for-this-example"], [374, "necessary-imports-for-this-example"], [388, "necessary-imports-for-this-example"], [391, "necessary-imports-for-this-example"], [392, "necessary-imports-for-this-example"]], "Nesting objects": [[416, "nesting-objects"]], "NonPredictiveRecommender": [[173, null]], "NormalPrior": [[147, null]], "NumericalContinuousParameter": [[126, null], [413, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[127, null], [413, "numericaldiscreteparameter"]], "NumericalTarget": [[272, null], [419, "numericaltarget"]], "Objective": [[99, null], [412, null]], "Optimizing a Custom Black-Box Function": [[360, null]], "Optional Dependencies": [[401, "optional-dependencies"]], "Optional dependency": [[413, null]], "Optional: Defining the Optimization Strategy": [[401, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[383, null]], "Other parameters": [[366, "other-parameters"]], "PAMClusteringRecommender": [[177, null]], "Parameter": [[114, null]], "Parameter Setup": [[383, "parameter-setup"], [384, "parameter-setup"]], "Parameter encoding": [[413, null]], "Parameter names": [[413, null]], "Parameter tolerances": [[409, null]], "ParameterEncoding": [[123, null]], "Parameters": [[413, null]], "Parameters for a full simulation loop": [[361, "parameters-for-a-full-simulation-loop"], [362, "parameters-for-a-full-simulation-loop"], [363, "parameters-for-a-full-simulation-loop"]], "PartialAcquisitionFunction": [[22, null]], "Performing some iterations": [[388, "performing-some-iterations"]], "Performing the simulation loop": [[361, "performing-the-simulation-loop"]], "PeriodicKernel": [[85, null]], "Permutation Invariance": [[383, "permutation-invariance"]], "PiecewisePolynomialKernel": [[86, null]], "PlainKernelFactory": [[237, null]], "Plotting the Results": [[360, "plotting-the-results"], [377, "plotting-the-results"], [378, "plotting-the-results"]], "Polars": [[411, "polars"]], "PolynomialKernel": [[87, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Prior": [[140, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[377, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[93, null]], "Pure Recommenders": [[414, "pure-recommenders"]], "PureRecommender": [[163, null]], "Purely Continuous Search Spaces": [[407, null]], "PyCharm vs. exceptiongroup": [[402, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[88, null]], "RFFKernel": [[89, null]], "RQKernel": [[90, null]], "RandomForestSurrogate": [[254, null]], "RandomRecommender": [[181, null]], "RecommenderProtocol": [[151, null]], "Recommenders": [[414, null]], "Registering Custom Hooks": [[376, null]], "Removed": [[403, "removed"], [403, "id17"], [403, "id23"], [403, "id32"], [403, "id45"], [403, "id55"], [403, "id61"], [403, "id70"]], "Representation of Data within Discrete Subspaces": [[415, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[422, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[415, "restricting-search-spaces-using-constraints"]], "Running the Simulation": [[386, "running-the-simulation"]], "Running the Simulation Loop": [[360, "running-the-simulation-loop"]], "SKLearnClusteringRecommender": [[178, null]], "Sampling Recommenders": [[414, "sampling-recommenders"]], "Scalarizer": [[107, null]], "ScaleKernel": [[94, null]], "Search Space Creation": [[383, "search-space-creation"], [384, "search-space-creation"]], "Search Space Memory Estimation": [[422, "search-space-memory-estimation"]], "Search Spaces": [[415, null]], "SearchSpace": [[186, null]], "SearchSpaceType": [[187, null]], "Searchspaces": [[389, null]], "Seeing Transfer Learning in Action": [[420, "seeing-transfer-learning-in-action"]], "Sequential vs. parallel experimentation": [[409, null]], "SequentialMetaRecommender": [[156, null]], "SerialMixin": [[209, null]], "Serialization": [[393, null], [409, "serialization"], [416, null]], "Serialization and de-serialization": [[394, "serialization-and-de-serialization"]], "Settings": [[360, "settings"], [377, "settings"], [378, "settings"], [390, "settings"], [398, "settings"], [399, "settings"]], "Setup": [[365, "setup"], [386, "setup"]], "Signature components": [[376, null]], "Simplex Construction": [[383, null]], "Simulating Multiple Scenarios": [[417, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[417, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[417, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[377, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[377, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[417, null]], "Simulation Loop": [[398, "simulation-loop"], [399, "simulation-loop"]], "SingleTargetObjective": [[109, null], [412, "singletargetobjective"]], "Slot-based Representation": [[384, null]], "SmoothedBoxPrior": [[148, null]], "StreamingSequentialMetaRecommender": [[157, null]], "Sub-Sampling Method": [[407, null]], "SubSelectionCondition": [[37, null], [410, "subselectioncondition"]], "SubspaceContinuous": [[184, null]], "SubspaceDiscrete": [[192, null]], "Substance Amounts": [[383, "substance-amounts"]], "SubstanceEncoding": [[124, null]], "SubstanceParameter": [[130, null], [413, "substanceparameter"]], "Suggested Fix": [[402, null], [402, null], [402, null], [402, null]], "Supported Acquisition Functions": [[408, null]], "Supported Recommenders": [[408, null]], "Surrogate": [[227, null]], "SurrogateProtocol": [[228, null]], "Surrogates": [[418, null]], "Synchronizing Pull Requests": [[404, "synchronizing-pull-requests"]], "Target": [[264, null]], "TargetMode": [[269, null]], "TargetTransformation": [[270, null]], "Targets": [[419, null]], "TaskParameter": [[117, null], [413, "taskparameter"]], "Technology": [[420, null]], "Telemetry": [[411, "telemetry"]], "Telemetry Scope": [[411, null]], "Terminology": [[383, "terminology"], [416, null], [420, null]], "Terminology Continued": [[420, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[417, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[386, "the-black-box-model"]], "The Lookup Mechanism": [[417, "the-lookup-mechanism"]], "The Optimization Loop": [[401, "the-optimization-loop"]], "The Role of the TaskParameter": [[420, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[395, "the-configuration-dictionary-as-a-string"]], "The type field": [[416, "the-type-field"]], "Theoretical Span": [[383, null]], "ThresholdCondition": [[38, null], [410, "thresholdcondition"]], "Transfer Learning": [[397, null], [399, null], [420, null]], "Triggering the Hook": [[378, "triggering-the-hook"]], "Triggering the Hooks": [[376, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[158, null]], "Uninstalling Internet Packages": [[411, null]], "Unlocking Data Treasures Through Transfer Learning": [[420, "unlocking-data-treasures-through-transfer-learning"]], "UpperConfidenceBound": [[8, null]], "User Guide": [[421, null]], "Using Custom Models": [[418, "using-custom-models"]], "Using Explicit Bounds": [[415, "using-explicit-bounds"]], "Using None": [[417, "using-none"]], "Using a Callable": [[417, "using-a-callable"]], "Using a Dataframe": [[417, "using-a-dataframe"]], "Using abbreviations": [[416, "using-abbreviations"]], "Using configuration instead": [[380, "using-configuration-instead"], [381, "using-configuration-instead"]], "Using default values": [[416, "using-default-values"]], "Utilities": [[422, null]], "Validation of model parameters": [[381, "validation-of-model-parameters"]], "Verification of Constraints": [[383, "verification-of-constraints"], [384, "verification-of-constraints"]], "Verification of Span": [[383, "verification-of-span"]], "Verification of the two dictionaries": [[396, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[369, "verify-the-constraints"]], "Windows \u2013 Torch Problems": [[402, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[368, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [369, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [392, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[404, "writing-docstrings"]], "Writing classes": [[404, "writing-classes"]], "[0.1.0] - 2022-10-01": [[403, "id127"]], "[0.10.0] - 2024-08-02": [[403, "id19"]], "[0.11.0] - 2024-09-09": [[403, "id12"]], "[0.11.1] - 2024-10-01": [[403, "id7"]], "[0.11.2] - 2024-10-11": [[403, "id3"]], "[0.11.3] - 2024-11-06": [[403, "id1"]], "[0.2.0] - 2022-11-10": [[403, "id124"]], "[0.2.1] - 2022-12-01": [[403, "id122"]], "[0.2.2] - 2023-01-13": [[403, "id118"]], "[0.2.3] - 2023-03-14": [[403, "id114"]], "[0.2.4] - 2023-03-24": [[403, "id110"]], "[0.3.0] - 2023-06-27": [[403, "id106"]], "[0.3.1] - 2023-07-17": [[403, "id102"]], "[0.3.2] - 2023-07-24": [[403, "id99"]], "[0.4.0] - 2023-08-16": [[403, "id95"]], "[0.4.1] - 2023-08-23": [[403, "id91"]], "[0.4.2] - 2023-08-29": [[403, "id87"]], "[0.5.0] - 2023-09-15": [[403, "id84"]], "[0.5.1] - 2023-10-19": [[403, "id80"]], "[0.6.0] - 2023-11-17": [[403, "id75"]], "[0.6.1] - 2023-11-27": [[403, "id71"]], "[0.7.0] - 2023-12-04": [[403, "id67"]], "[0.7.1] - 2023-12-07": [[403, "id63"]], "[0.7.2] - 2024-01-24": [[403, "id57"]], "[0.7.3] - 2024-02-09": [[403, "id51"]], "[0.7.4] - 2024-02-28": [[403, "id46"]], "[0.8.0] - 2024-02-29": [[403, "id43"]], "[0.8.1] - 2024-03-11": [[403, "id39"]], "[0.8.2] - 2024-03-27": [[403, "id35"]], "[0.9.0] - 2024-05-21": [[403, "id29"]], "[0.9.1] - 2024-06-04": [[403, "id26"]], "[Unreleased]": [[403, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[19, null]], "baybe.acquisition.partial": [[21, null]], "baybe.acquisition.utils": [[23, null]], "baybe.acquisition.utils.convert_acqf": [[24, null]], "baybe.acquisition.utils.str_to_acqf": [[25, null]], "baybe.campaign": [[26, null]], "baybe.constraints": [[28, null]], "baybe.constraints.base": [[29, null]], "baybe.constraints.conditions": [[35, null]], "baybe.constraints.continuous": [[39, null]], "baybe.constraints.deprecation": [[42, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[43, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[44, null]], "baybe.constraints.deprecation.structure_constraints": [[45, null]], "baybe.constraints.discrete": [[46, null]], "baybe.constraints.validation": [[56, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[57, null]], "baybe.constraints.validation.validate_constraints": [[58, null]], "baybe.exceptions": [[59, null]], "baybe.exceptions.DeprecationError": [[60, null]], "baybe.exceptions.EmptySearchSpaceError": [[61, null]], "baybe.exceptions.IncompatibilityError": [[62, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[63, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[64, null]], "baybe.exceptions.InvalidSurrogateModelError": [[65, null]], "baybe.exceptions.InvalidTargetValueError": [[66, null]], "baybe.exceptions.ModelNotTrainedError": [[67, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[68, null]], "baybe.exceptions.NoRecommendersLeftError": [[69, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[70, null]], "baybe.exceptions.NothingToSimulateError": [[71, null]], "baybe.exceptions.NumericalUnderflowError": [[72, null]], "baybe.exceptions.OptionalImportError": [[73, null]], "baybe.exceptions.UnidentifiedSubclassError": [[74, null]], "baybe.exceptions.UnmatchedAttributeError": [[75, null]], "baybe.exceptions.UnusedObjectWarning": [[76, null]], "baybe.kernels": [[77, null]], "baybe.kernels.base": [[78, null]], "baybe.kernels.basic": [[82, null]], "baybe.kernels.composite": [[91, null]], "baybe.objective": [[95, null]], "baybe.objective.Objective": [[96, null]], "baybe.objectives": [[97, null]], "baybe.objectives.base": [[98, null]], "baybe.objectives.base.to_objective": [[100, null]], "baybe.objectives.deprecation": [[101, null]], "baybe.objectives.deprecation.structure_objective": [[102, null]], "baybe.objectives.desirability": [[103, null]], "baybe.objectives.desirability.scalarize": [[105, null]], "baybe.objectives.enum": [[106, null]], "baybe.objectives.single": [[108, null]], "baybe.parameters": [[110, null]], "baybe.parameters.base": [[111, null]], "baybe.parameters.categorical": [[115, null]], "baybe.parameters.custom": [[118, null]], "baybe.parameters.enum": [[120, null]], "baybe.parameters.numerical": [[125, null]], "baybe.parameters.substance": [[128, null]], "baybe.parameters.substance.Smiles": [[129, null]], "baybe.parameters.utils": [[131, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[132, null]], "baybe.parameters.utils.sort_parameters": [[133, null]], "baybe.parameters.validation": [[134, null]], "baybe.parameters.validation.validate_decorrelation": [[135, null]], "baybe.parameters.validation.validate_is_finite": [[136, null]], "baybe.parameters.validation.validate_unique_values": [[137, null]], "baybe.priors": [[138, null]], "baybe.priors.base": [[139, null]], "baybe.priors.basic": [[141, null]], "baybe.recommenders": [[149, null]], "baybe.recommenders.base": [[150, null]], "baybe.recommenders.meta": [[152, null]], "baybe.recommenders.meta.base": [[153, null]], "baybe.recommenders.meta.sequential": [[155, null]], "baybe.recommenders.naive": [[159, null]], "baybe.recommenders.pure": [[161, null]], "baybe.recommenders.pure.base": [[162, null]], "baybe.recommenders.pure.bayesian": [[164, null]], "baybe.recommenders.pure.bayesian.base": [[165, null]], "baybe.recommenders.pure.bayesian.botorch": [[167, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[169, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[170, null]], "baybe.recommenders.pure.nonpredictive": [[171, null]], "baybe.recommenders.pure.nonpredictive.base": [[172, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[174, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[179, null]], "baybe.searchspace": [[182, null]], "baybe.searchspace.continuous": [[183, null]], "baybe.searchspace.core": [[185, null]], "baybe.searchspace.core.to_searchspace": [[188, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[189, null]], "baybe.searchspace.discrete": [[190, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[193, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[194, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[195, null]], "baybe.searchspace.validation": [[196, null]], "baybe.searchspace.validation.get_transform_parameters": [[197, null]], "baybe.searchspace.validation.validate_parameter_names": [[198, null]], "baybe.searchspace.validation.validate_parameters": [[199, null]], "baybe.serialization": [[200, null]], "baybe.serialization.core": [[201, null]], "baybe.serialization.core.block_deserialization_hook": [[202, null]], "baybe.serialization.core.block_serialization_hook": [[203, null]], "baybe.serialization.core.converter": [[204, null]], "baybe.serialization.core.get_base_structure_hook": [[205, null]], "baybe.serialization.core.select_constructor_hook": [[206, null]], "baybe.serialization.core.unstructure_base": [[207, null]], "baybe.serialization.mixin": [[208, null]], "baybe.serialization.utils": [[210, null]], "baybe.serialization.utils.deserialize_dataframe": [[211, null]], "baybe.serialization.utils.serialize_dataframe": [[212, null]], "baybe.simulation": [[213, null]], "baybe.simulation.core": [[214, null]], "baybe.simulation.core.simulate_experiment": [[215, null]], "baybe.simulation.lookup": [[216, null]], "baybe.simulation.lookup.look_up_targets": [[217, null]], "baybe.simulation.scenarios": [[218, null]], "baybe.simulation.scenarios.simulate_scenarios": [[219, null]], "baybe.simulation.transfer_learning": [[220, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[221, null]], "baybe.surrogates": [[222, null]], "baybe.surrogates.bandit": [[223, null]], "baybe.surrogates.base": [[225, null]], "baybe.surrogates.custom": [[229, null]], "baybe.surrogates.custom.register_custom_architecture": [[231, null]], "baybe.surrogates.gaussian_process": [[232, null]], "baybe.surrogates.gaussian_process.core": [[233, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[235, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[238, null]], "baybe.surrogates.gaussian_process.presets": [[239, null]], "baybe.surrogates.gaussian_process.presets.core": [[240, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[242, null]], "baybe.surrogates.gaussian_process.presets.default": [[243, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[245, null]], "baybe.surrogates.linear": [[247, null]], "baybe.surrogates.naive": [[249, null]], "baybe.surrogates.ngboost": [[251, null]], "baybe.surrogates.random_forest": [[253, null]], "baybe.surrogates.utils": [[255, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[256, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[257, null]], "baybe.surrogates.utils.catch_constant_targets": [[258, null]], "baybe.surrogates.validation": [[259, null]], "baybe.surrogates.validation.get_model_params_validator": [[260, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[261, null]], "baybe.targets": [[262, null]], "baybe.targets.base": [[263, null]], "baybe.targets.binary": [[265, null]], "baybe.targets.binary.ChoiceValue": [[267, null]], "baybe.targets.enum": [[268, null]], "baybe.targets.numerical": [[271, null]], "baybe.targets.transforms": [[273, null]], "baybe.targets.transforms.bell_transform": [[274, null]], "baybe.targets.transforms.linear_transform": [[275, null]], "baybe.targets.transforms.triangular_transform": [[276, null]], "baybe.telemetry": [[277, null]], "baybe.telemetry.get_user_details": [[278, null]], "baybe.telemetry.is_enabled": [[279, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[280, null]], "baybe.telemetry.telemetry_record_value": [[281, null]], "baybe.utils": [[282, null]], "baybe.utils.augmentation": [[283, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[284, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[285, null]], "baybe.utils.basic": [[286, null]], "baybe.utils.basic.find_subclass": [[289, null]], "baybe.utils.basic.get_baseclasses": [[290, null]], "baybe.utils.basic.get_subclasses": [[291, null]], "baybe.utils.basic.group_duplicate_values": [[292, null]], "baybe.utils.basic.hilberts_factory": [[293, null]], "baybe.utils.basic.is_all_instance": [[294, null]], "baybe.utils.basic.match_attributes": [[295, null]], "baybe.utils.basic.refers_to": [[296, null]], "baybe.utils.basic.register_hooks": [[297, null]], "baybe.utils.basic.to_tuple": [[298, null]], "baybe.utils.boolean": [[299, null]], "baybe.utils.boolean.check_if_in": [[300, null]], "baybe.utils.boolean.is_abstract": [[301, null]], "baybe.utils.boolean.strtobool": [[302, null]], "baybe.utils.chemistry": [[303, null]], "baybe.utils.chemistry.get_canonical_smiles": [[304, null]], "baybe.utils.chemistry.get_fingerprint_class": [[305, null]], "baybe.utils.chemistry.name_to_smiles": [[306, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[307, null]], "baybe.utils.conversion": [[308, null]], "baybe.utils.conversion.fraction_to_float": [[309, null]], "baybe.utils.conversion.nonstring_to_tuple": [[310, null]], "baybe.utils.dataframe": [[311, null]], "baybe.utils.dataframe.add_fake_measurements": [[312, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[313, null]], "baybe.utils.dataframe.add_parameter_noise": [[314, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[315, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[316, null]], "baybe.utils.dataframe.df_drop_string_columns": [[317, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[318, null]], "baybe.utils.dataframe.filter_df": [[319, null]], "baybe.utils.dataframe.fuzzy_row_match": [[320, null]], "baybe.utils.dataframe.get_transform_objects": [[321, null]], "baybe.utils.dataframe.pretty_print_df": [[322, null]], "baybe.utils.dataframe.to_tensor": [[323, null]], "baybe.utils.interval": [[324, null]], "baybe.utils.interval.InfiniteIntervalError": [[325, null]], "baybe.utils.interval.convert_bounds": [[327, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[328, null]], "baybe.utils.memory": [[329, null]], "baybe.utils.memory.bytes_to_human_readable": [[330, null]], "baybe.utils.numerical": [[331, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[332, null]], "baybe.utils.numerical.DTypeFloatONNX": [[333, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[334, null]], "baybe.utils.numerical.closer_element": [[335, null]], "baybe.utils.numerical.closest_element": [[336, null]], "baybe.utils.numerical.geom_mean": [[337, null]], "baybe.utils.plotting": [[338, null]], "baybe.utils.plotting.create_example_plots": [[339, null]], "baybe.utils.plotting.indent": [[340, null]], "baybe.utils.plotting.to_string": [[341, null]], "baybe.utils.random": [[342, null]], "baybe.utils.random.set_random_seed": [[343, null]], "baybe.utils.random.temporary_seed": [[344, null]], "baybe.utils.sampling_algorithms": [[345, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[347, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[348, null]], "baybe.utils.scaling": [[349, null]], "baybe.utils.torch": [[351, null]], "baybe.utils.torch.DTypeFloatTorch": [[352, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[353, null]], "baybe.utils.validation": [[354, null]], "baybe.utils.validation.finite_float": [[355, null]], "baybe.utils.validation.non_inf_float": [[356, null]], "baybe.utils.validation.non_nan_float": [[357, null]], "baybe.utils.validation.validate_not_nan": [[358, null]], "classproperty": [[288, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[402, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNoisyExpectedImprovement": [[12, null]], "qNegIntegratedPosteriorVariance": [[13, null]], "qNoisyExpectedImprovement": [[14, null]], "qProbabilityOfImprovement": [[15, null]], "qSimpleRegret": [[16, null]], "qThompsonSampling": [[17, null]], "qUpperConfidenceBound": [[18, null]], "\u201cPre-training\u201d stage": [[380, "pre-training-stage"]], "\u26a1 Quick Start": [[401, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[401, "maintainers"]], "\ud83d\udcbb Installation": [[401, "installation"]], "\ud83d\udcc4 License": [[401, "license"]], "\ud83d\udce1 Telemetry": [[401, "telemetry"]], "\ud83d\udee0\ufe0f Known Issues": [[401, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objective", "_autosummary/baybe.objective.Objective", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.deprecation", "_autosummary/baybe.objectives.deprecation.structure_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.plotting", "_autosummary/baybe.utils.plotting.create_example_plots", "_autosummary/baybe.utils.plotting.indent", "_autosummary/baybe.utils.plotting.to_string", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objective.rst", "_autosummary/baybe.objective.Objective.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.deprecation.rst", "_autosummary/baybe.objectives.deprecation.structure_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.plotting.rst", "_autosummary/baybe.utils.plotting.create_example_plots.rst", "_autosummary/baybe.utils.plotting.indent.rst", "_autosummary/baybe.utils.plotting.to_string.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[60, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[61, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[62, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[64, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[65, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[66, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[67, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[68, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[69, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[70, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[71, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[72, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[73, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[74, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[75, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[76, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[79, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[80, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[81, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[83, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[84, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[85, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[87, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[88, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[89, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[90, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[92, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[93, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[94, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[99, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[104, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[109, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[112, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[113, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[114, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[116, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[117, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[130, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[140, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[142, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[143, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[144, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[145, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[146, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[147, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[148, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[151, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[163, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[173, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[180, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[181, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[186, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[191, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[227, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[228, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[236, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[237, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[244, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[246, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[264, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[266, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[272, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[288, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[287, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[325, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[326, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[350, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[60, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[61, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[62, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[64, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[65, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[66, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[67, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[68, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[69, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[70, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[71, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[72, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[73, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[74, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[75, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[76, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[121, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[122, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[124, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[325, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[148, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[20, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function_cls", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function_cls", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[20, "baybe.acquisition.base.AcquisitionFunction", false]], "active_values (baybe.parameters.categorical.taskparameter attribute)": [[117, "baybe.parameters.categorical.TaskParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[312, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[313, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[314, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[92, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender attribute)": [[163, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[173, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[180, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[181, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender attribute)": [[163, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[173, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[180, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[181, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender attribute)": [[163, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[173, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[180, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[181, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[142, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[315, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[148, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[94, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[92, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[93, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basickernel (class in baybe.kernels.base)": [[79, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[256, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[257, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[241, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[19, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[21, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[23, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[26, "module-baybe.campaign", false]], "baybe.constraints": [[28, "module-baybe.constraints", false]], "baybe.constraints.base": [[29, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[35, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[39, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[42, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[46, "module-baybe.constraints.discrete", false]], "baybe.constraints.validation": [[56, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[59, "module-baybe.exceptions", false]], "baybe.kernels": [[77, "module-baybe.kernels", false]], "baybe.kernels.base": [[78, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[82, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[91, "module-baybe.kernels.composite", false]], "baybe.objective": [[95, "module-baybe.objective", false]], "baybe.objectives": [[97, "module-baybe.objectives", false]], "baybe.objectives.base": [[98, "module-baybe.objectives.base", false]], "baybe.objectives.deprecation": [[101, "module-baybe.objectives.deprecation", false]], "baybe.objectives.desirability": [[103, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[106, "module-baybe.objectives.enum", false]], "baybe.objectives.single": [[108, "module-baybe.objectives.single", false]], "baybe.parameters": [[110, "module-baybe.parameters", false]], "baybe.parameters.base": [[111, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[115, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[118, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[120, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[125, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[128, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[131, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[134, "module-baybe.parameters.validation", false]], "baybe.priors": [[138, "module-baybe.priors", false]], "baybe.priors.base": [[139, "module-baybe.priors.base", false]], "baybe.priors.basic": [[141, "module-baybe.priors.basic", false]], "baybe.recommenders": [[149, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[150, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[152, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[153, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[155, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[159, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[161, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[162, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[164, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[165, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[167, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[169, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[171, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[172, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[174, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[179, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[182, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[183, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[185, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[190, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[196, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[200, "module-baybe.serialization", false]], "baybe.serialization.core": [[201, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[208, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[210, "module-baybe.serialization.utils", false]], "baybe.simulation": [[213, "module-baybe.simulation", false]], "baybe.simulation.core": [[214, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[216, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[218, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[220, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[222, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[223, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[225, "module-baybe.surrogates.base", false]], "baybe.surrogates.custom": [[229, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[232, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[233, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[235, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[239, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[240, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[243, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[245, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[247, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[249, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[251, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[253, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[255, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[259, "module-baybe.surrogates.validation", false]], "baybe.targets": [[262, "module-baybe.targets", false]], "baybe.targets.base": [[263, "module-baybe.targets.base", false]], "baybe.targets.binary": [[265, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[268, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[271, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[273, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[277, "module-baybe.telemetry", false]], "baybe.utils": [[282, "module-baybe.utils", false]], "baybe.utils.augmentation": [[283, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[286, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[299, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[303, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[308, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[311, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[324, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[329, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[331, "module-baybe.utils.numerical", false]], "baybe.utils.plotting": [[338, "module-baybe.utils.plotting", false]], "baybe.utils.random": [[342, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[345, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[349, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[351, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[354, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[270, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[274, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[142, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[142, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[266, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[202, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[203, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[272, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[330, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[27, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[30, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[258, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[121, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[116, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[326, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[300, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[267, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[288, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[335, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[336, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[350, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[113, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[116, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[117, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[130, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[191, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[112, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[113, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[114, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[116, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[117, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[130, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[191, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[191, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[163, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[173, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[180, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[181, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[80, "baybe.kernels.base.CompositeKernel", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[143, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[36, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[31, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[326, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[186, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[187, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[32, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[43, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[44, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[112, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[24, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[327, "baybe.utils.interval.convert_bounds", false]], "converter (in module baybe.serialization.core)": [[204, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[326, "baybe.utils.interval.Interval.create", false]], "create_example_plots() (in module baybe.utils.plotting)": [[339, "baybe.utils.plotting.create_example_plots", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[122, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[119, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[122, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[130, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[130, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_iterator() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.default_iterator", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[244, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[60, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[211, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[104, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[284, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[285, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[316, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[317, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[318, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[186, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[187, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[113, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[346, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[332, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[333, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[352, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[287, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[246, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[187, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[61, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[113, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[116, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[117, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[130, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[186, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[191, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[191, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[191, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[266, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[347, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[319, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[289, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[355, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[227, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[228, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[350, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[346, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[180, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[309, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_config() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[186, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[20, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[30, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[31, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[32, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[34, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[36, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[38, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[79, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[80, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[81, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[83, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[84, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[85, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[87, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[88, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[89, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[90, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[92, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[93, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[94, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[99, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[104, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[109, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[112, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[113, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[114, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[116, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[117, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[130, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[140, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[142, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[143, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[144, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[145, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[146, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[147, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[148, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[186, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[209, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[227, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[237, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[264, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[266, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[272, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[326, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[20, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[30, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[31, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[32, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[34, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[36, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[38, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[79, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[80, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[81, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[83, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[84, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[85, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[87, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[88, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[89, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[90, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[92, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[93, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[94, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[99, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[104, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[109, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[112, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[113, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[114, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[116, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[117, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[130, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[140, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[142, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[143, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[144, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[145, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[146, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[147, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[148, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[186, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[209, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[227, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[237, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[264, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[266, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[272, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[326, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[186, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[186, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[320, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[143, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[241, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[107, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[337, "baybe.utils.numerical.geom_mean", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[205, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[290, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[304, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[186, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[305, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[260, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[186, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[132, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[291, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[321, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[197, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[278, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[292, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[144, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[145, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[293, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[187, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "incompatibilityerror": [[62, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatiblesearchspaceerror": [[64, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "indent() (in module baybe.utils.plotting)": [[340, "baybe.utils.plotting.indent", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infiniteintervalerror": [[325, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[121, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[326, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[65, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[66, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[301, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[294, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[326, "baybe.utils.interval.Interval.is_bounded", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[30, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[31, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[32, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[34, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[112, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[113, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[114, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[116, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[117, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[130, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[326, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[30, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[31, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[32, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[34, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[112, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[113, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[114, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[116, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[117, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[130, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[279, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[326, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[326, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[112, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[113, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[114, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[116, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[117, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[130, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[326, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[112, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[113, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[114, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[116, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[117, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[130, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[326, "baybe.utils.interval.Interval.is_right_bounded", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[237, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[81, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[236, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[130, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[130, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[84, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[85, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[88, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[89, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[90, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[84, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[85, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[88, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[89, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[90, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[270, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[275, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[83, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[146, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[147, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[146, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[217, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[326, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[242, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[350, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[269, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[295, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[84, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[269, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[107, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[191, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[154, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[269, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[272, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[67, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [19, "module-baybe.acquisition.base", false], [21, "module-baybe.acquisition.partial", false], [23, "module-baybe.acquisition.utils", false], [26, "module-baybe.campaign", false], [28, "module-baybe.constraints", false], [29, "module-baybe.constraints.base", false], [35, "module-baybe.constraints.conditions", false], [39, "module-baybe.constraints.continuous", false], [42, "module-baybe.constraints.deprecation", false], [46, "module-baybe.constraints.discrete", false], [56, "module-baybe.constraints.validation", false], [59, "module-baybe.exceptions", false], [77, "module-baybe.kernels", false], [78, "module-baybe.kernels.base", false], [82, "module-baybe.kernels.basic", false], [91, "module-baybe.kernels.composite", false], [95, "module-baybe.objective", false], [97, "module-baybe.objectives", false], [98, "module-baybe.objectives.base", false], [101, "module-baybe.objectives.deprecation", false], [103, "module-baybe.objectives.desirability", false], [106, "module-baybe.objectives.enum", false], [108, "module-baybe.objectives.single", false], [110, "module-baybe.parameters", false], [111, "module-baybe.parameters.base", false], [115, "module-baybe.parameters.categorical", false], [118, "module-baybe.parameters.custom", false], [120, "module-baybe.parameters.enum", false], [125, "module-baybe.parameters.numerical", false], [128, "module-baybe.parameters.substance", false], [131, "module-baybe.parameters.utils", false], [134, "module-baybe.parameters.validation", false], [138, "module-baybe.priors", false], [139, "module-baybe.priors.base", false], [141, "module-baybe.priors.basic", false], [149, "module-baybe.recommenders", false], [150, "module-baybe.recommenders.base", false], [152, "module-baybe.recommenders.meta", false], [153, "module-baybe.recommenders.meta.base", false], [155, "module-baybe.recommenders.meta.sequential", false], [159, "module-baybe.recommenders.naive", false], [161, "module-baybe.recommenders.pure", false], [162, "module-baybe.recommenders.pure.base", false], [164, "module-baybe.recommenders.pure.bayesian", false], [165, "module-baybe.recommenders.pure.bayesian.base", false], [167, "module-baybe.recommenders.pure.bayesian.botorch", false], [169, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [171, "module-baybe.recommenders.pure.nonpredictive", false], [172, "module-baybe.recommenders.pure.nonpredictive.base", false], [174, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [179, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [182, "module-baybe.searchspace", false], [183, "module-baybe.searchspace.continuous", false], [185, "module-baybe.searchspace.core", false], [190, "module-baybe.searchspace.discrete", false], [196, "module-baybe.searchspace.validation", false], [200, "module-baybe.serialization", false], [201, "module-baybe.serialization.core", false], [208, "module-baybe.serialization.mixin", false], [210, "module-baybe.serialization.utils", false], [213, "module-baybe.simulation", false], [214, "module-baybe.simulation.core", false], [216, "module-baybe.simulation.lookup", false], [218, "module-baybe.simulation.scenarios", false], [220, "module-baybe.simulation.transfer_learning", false], [222, "module-baybe.surrogates", false], [223, "module-baybe.surrogates.bandit", false], [225, "module-baybe.surrogates.base", false], [229, "module-baybe.surrogates.custom", false], [232, "module-baybe.surrogates.gaussian_process", false], [233, "module-baybe.surrogates.gaussian_process.core", false], [235, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [239, "module-baybe.surrogates.gaussian_process.presets", false], [240, "module-baybe.surrogates.gaussian_process.presets.core", false], [243, "module-baybe.surrogates.gaussian_process.presets.default", false], [245, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [247, "module-baybe.surrogates.linear", false], [249, "module-baybe.surrogates.naive", false], [251, "module-baybe.surrogates.ngboost", false], [253, "module-baybe.surrogates.random_forest", false], [255, "module-baybe.surrogates.utils", false], [259, "module-baybe.surrogates.validation", false], [262, "module-baybe.targets", false], [263, "module-baybe.targets.base", false], [265, "module-baybe.targets.binary", false], [268, "module-baybe.targets.enum", false], [271, "module-baybe.targets.numerical", false], [273, "module-baybe.targets.transforms", false], [277, "module-baybe.telemetry", false], [282, "module-baybe.utils", false], [283, "module-baybe.utils.augmentation", false], [286, "module-baybe.utils.basic", false], [299, "module-baybe.utils.boolean", false], [303, "module-baybe.utils.chemistry", false], [308, "module-baybe.utils.conversion", false], [311, "module-baybe.utils.dataframe", false], [324, "module-baybe.utils.interval", false], [329, "module-baybe.utils.memory", false], [331, "module-baybe.utils.numerical", false], [338, "module-baybe.utils.plotting", false], [342, "module-baybe.utils.random", false], [345, "module-baybe.utils.sampling_algorithms", false], [349, "module-baybe.utils.scaling", false], [351, "module-baybe.utils.torch", false], [354, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.n_fits_done", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[112, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[113, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[114, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[116, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[117, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[130, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[264, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[266, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[272, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[306, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[68, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "non_inf_float() (in module baybe.utils.validation)": [[356, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[357, "baybe.utils.validation.non_nan_float", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[173, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[310, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[69, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[147, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[70, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[71, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[84, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[89, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[272, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[72, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[99, "baybe.objectives.base.Objective", false]], "objective() (in module baybe.objective)": [[96, "baybe.objective.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[87, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[87, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[121, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[73, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[94, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[94, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[114, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[193, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[194, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameterencoding (class in baybe.parameters.enum)": [[123, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[85, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[85, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[85, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[237, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "polynomialkernel (class in baybe.kernels.basic)": [[87, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[227, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[87, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[322, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[140, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[93, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[163, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[346, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[181, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[143, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[88, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[151, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[160, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[163, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[173, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[175, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[176, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[177, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[180, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[181, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[151, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "refers_to() (in module baybe.utils.basic)": [[296, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[231, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[297, "baybe.utils.basic.register_hooks", false]], "rffkernel (class in baybe.kernels.basic)": [[89, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[90, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[348, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[105, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[104, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[107, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[144, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[145, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[146, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[147, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[94, "baybe.kernels.composite.ScaleKernel", false]], "searchspace (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[186, "baybe.searchspace.core.SearchSpace", false]], "searchspacetype (class in baybe.searchspace.core)": [[187, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[206, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[37, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[170, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[212, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[209, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[343, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[148, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[215, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[219, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[221, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[109, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[178, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[129, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[307, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[148, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[133, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[25, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[302, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[45, "baybe.constraints.deprecation.structure_constraints", false]], "structure_objective() (in module baybe.objectives.deprecation)": [[102, "baybe.objectives.deprecation.structure_objective", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[37, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[184, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[124, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[130, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[266, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[112, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[113, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[114, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[116, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[117, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[130, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[264, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[266, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[272, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[227, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[227, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[166, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[168, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[228, "baybe.surrogates.base.SurrogateProtocol", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[264, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[269, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[99, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[104, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[109, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[270, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[117, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[280, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[281, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[344, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[38, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[227, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[228, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[79, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[80, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[81, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[83, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[84, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[85, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[87, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[88, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[89, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[90, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[92, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[93, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[94, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[99, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[104, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[109, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[112, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[113, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[114, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[116, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[117, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[130, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[140, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[142, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[143, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[144, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[145, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[146, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[147, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[148, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[186, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[209, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[227, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[237, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[264, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[266, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[272, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[326, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[79, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[80, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[81, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[83, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[84, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[85, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[87, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[88, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[89, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[90, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[92, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[93, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[94, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[79, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[80, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[81, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[83, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[84, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[85, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[87, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[88, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[89, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[90, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[92, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[93, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[94, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[140, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[142, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[143, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[144, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[145, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[146, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[147, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[148, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[79, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[80, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[81, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[83, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[84, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[85, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[86, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[87, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[88, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[89, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[90, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[92, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[93, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[94, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[99, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[104, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[109, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[112, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[113, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[114, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[116, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[117, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[130, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[140, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[142, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[143, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[144, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[145, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[146, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[147, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[148, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[154, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[156, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[157, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[186, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[209, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[224, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[226, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[227, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[234, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[237, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[248, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[250, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[252, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[254, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[264, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[266, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[272, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[326, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[238, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[326, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[264, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[266, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[272, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[100, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[112, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[113, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[114, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[116, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[117, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[130, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[188, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.plotting)": [[341, "baybe.utils.plotting.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[112, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[113, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[116, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[117, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[126, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[130, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[326, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[323, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[326, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[298, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[99, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[104, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[109, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[113, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[116, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[117, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[130, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[184, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[186, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[192, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[264, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[266, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[272, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[350, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[272, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[270, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[276, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[158, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[186, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[74, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[75, "baybe.exceptions.UnmatchedAttributeError", false]], "unstructure_base() (in module baybe.serialization.core)": [[207, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[76, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[326, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[328, "baybe.utils.interval.use_fallback_constructor_hook", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[57, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[230, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[58, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[261, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[135, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[136, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[358, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[198, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[199, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[189, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[195, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[137, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[113, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[116, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[117, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[119, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[127, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[130, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[83, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[83, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[334, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[353, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[104, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[124, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [26, 0, 0, "-", "campaign"], [28, 0, 0, "-", "constraints"], [59, 0, 0, "-", "exceptions"], [77, 0, 0, "-", "kernels"], [95, 0, 0, "-", "objective"], [97, 0, 0, "-", "objectives"], [110, 0, 0, "-", "parameters"], [138, 0, 0, "-", "priors"], [149, 0, 0, "-", "recommenders"], [182, 0, 0, "-", "searchspace"], [200, 0, 0, "-", "serialization"], [213, 0, 0, "-", "simulation"], [222, 0, 0, "-", "surrogates"], [262, 0, 0, "-", "targets"], [277, 0, 0, "-", "telemetry"], [282, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [19, 0, 0, "-", "base"], [21, 0, 0, "-", "partial"], [23, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNoisyExpectedImprovement"], [13, 1, 1, "", "qNegIntegratedPosteriorVariance"], [14, 1, 1, "", "qNoisyExpectedImprovement"], [15, 1, 1, "", "qProbabilityOfImprovement"], [16, 1, 1, "", "qSimpleRegret"], [17, 1, 1, "", "qThompsonSampling"], [18, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 2, 1, "", "get_integration_points"], [13, 3, 1, "", "sampling_fraction"], [13, 3, 1, "", "sampling_method"], [13, 3, 1, "", "sampling_n_points"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[13, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "n_mc_samples"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 3, 1, "", "beta"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.base": [[20, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.partial": [[22, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "botorch_acqf"], [22, 3, 1, "", "pin_discrete"], [22, 3, 1, "", "pinned_part"], [22, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[22, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[24, 5, 1, "", "convert_acqf"], [25, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[27, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "add_measurements"], [27, 2, 1, "", "from_config"], [27, 2, 1, "", "from_dict"], [27, 2, 1, "", "from_json"], [27, 2, 1, "", "get_surrogate"], [27, 6, 1, "", "measurements"], [27, 3, 1, "", "n_batches_done"], [27, 3, 1, "", "n_fits_done"], [27, 3, 1, "", "objective"], [27, 6, 1, "", "parameters"], [27, 2, 1, "", "posterior"], [27, 2, 1, "", "recommend"], [27, 3, 1, "", "recommender"], [27, 3, 1, "", "searchspace"], [27, 6, 1, "", "targets"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_json"], [27, 2, 1, "", "toggle_discrete_candidates"], [27, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.add_measurements.params": [[27, 4, 1, "", "data"], [27, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[27, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[27, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[27, 4, 1, "", "string"]], "baybe.campaign.Campaign.posterior.params": [[27, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.recommend.params": [[27, 4, 1, "", "batch_size"], [27, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[27, 4, 1, "", "complement"], [27, 4, 1, "", "constraints"], [27, 4, 1, "", "dry_run"], [27, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.validate_config.params": [[27, 4, 1, "", "config_json"]], "baybe.constraints": [[29, 0, 0, "-", "base"], [35, 0, 0, "-", "conditions"], [39, 0, 0, "-", "continuous"], [42, 0, 0, "-", "deprecation"], [46, 0, 0, "-", "discrete"], [56, 0, 0, "-", "validation"]], "baybe.constraints.base": [[30, 1, 1, "", "CardinalityConstraint"], [31, 1, 1, "", "Constraint"], [32, 1, 1, "", "ContinuousConstraint"], [33, 1, 1, "", "ContinuousNonlinearConstraint"], [34, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[30, 2, 1, "", "__init__"], [30, 3, 1, "", "eval_during_augmentation"], [30, 3, 1, "", "eval_during_creation"], [30, 3, 1, "", "eval_during_modeling"], [30, 2, 1, "", "from_dict"], [30, 2, 1, "", "from_json"], [30, 6, 1, "", "is_continuous"], [30, 6, 1, "", "is_discrete"], [30, 3, 1, "", "max_cardinality"], [30, 3, 1, "", "min_cardinality"], [30, 3, 1, "", "numerical_only"], [30, 3, 1, "", "parameters"], [30, 2, 1, "", "summary"], [30, 2, 1, "", "to_dict"], [30, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[30, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[30, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "eval_during_augmentation"], [31, 3, 1, "", "eval_during_creation"], [31, 3, 1, "", "eval_during_modeling"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 6, 1, "", "is_continuous"], [31, 6, 1, "", "is_discrete"], [31, 3, 1, "", "numerical_only"], [31, 3, 1, "", "parameters"], [31, 2, 1, "", "summary"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[31, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[32, 2, 1, "", "__init__"], [32, 3, 1, "", "eval_during_augmentation"], [32, 3, 1, "", "eval_during_creation"], [32, 3, 1, "", "eval_during_modeling"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "from_json"], [32, 6, 1, "", "is_continuous"], [32, 6, 1, "", "is_discrete"], [32, 3, 1, "", "numerical_only"], [32, 3, 1, "", "parameters"], [32, 2, 1, "", "summary"], [32, 2, 1, "", "to_dict"], [32, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[32, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[32, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "eval_during_augmentation"], [33, 3, 1, "", "eval_during_creation"], [33, 3, 1, "", "eval_during_modeling"], [33, 2, 1, "", "from_dict"], [33, 2, 1, "", "from_json"], [33, 6, 1, "", "is_continuous"], [33, 6, 1, "", "is_discrete"], [33, 3, 1, "", "numerical_only"], [33, 3, 1, "", "parameters"], [33, 2, 1, "", "summary"], [33, 2, 1, "", "to_dict"], [33, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[33, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[33, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 2, 1, "", "get_invalid"], [34, 2, 1, "", "get_invalid_polars"], [34, 2, 1, "", "get_valid"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[34, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[34, 4, 1, "", "df"]], "baybe.constraints.conditions": [[36, 1, 1, "", "Condition"], [37, 1, 1, "", "SubSelectionCondition"], [38, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[36, 2, 1, "", "evaluate"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"], [36, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[36, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[36, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[36, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[36, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "evaluate"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "selection"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"], [37, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[37, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[37, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "evaluate"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 3, 1, "", "operator"], [38, 3, 1, "", "threshold"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"], [38, 2, 1, "", "to_polars"], [38, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[38, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[38, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[40, 1, 1, "", "ContinuousCardinalityConstraint"], [41, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[40, 2, 1, "", "__init__"], [40, 3, 1, "", "eval_during_augmentation"], [40, 3, 1, "", "eval_during_creation"], [40, 3, 1, "", "eval_during_modeling"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 6, 1, "", "is_continuous"], [40, 6, 1, "", "is_discrete"], [40, 3, 1, "", "max_cardinality"], [40, 3, 1, "", "min_cardinality"], [40, 3, 1, "", "numerical_only"], [40, 3, 1, "", "parameters"], [40, 2, 1, "", "sample_inactive_parameters"], [40, 2, 1, "", "summary"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[40, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[41, 2, 1, "", "__init__"], [41, 3, 1, "", "coefficients"], [41, 3, 1, "", "eval_during_augmentation"], [41, 3, 1, "", "eval_during_creation"], [41, 3, 1, "", "eval_during_modeling"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "is_continuous"], [41, 6, 1, "", "is_discrete"], [41, 6, 1, "", "is_eq"], [41, 3, 1, "", "numerical_only"], [41, 3, 1, "", "operator"], [41, 3, 1, "", "parameters"], [41, 3, 1, "", "rhs"], [41, 2, 1, "", "summary"], [41, 2, 1, "", "to_botorch"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[41, 4, 1, "", "idx_offset"], [41, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[43, 5, 1, "", "ContinuousLinearEqualityConstraint"], [44, 5, 1, "", "ContinuousLinearInequalityConstraint"], [45, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[47, 1, 1, "", "DiscreteCardinalityConstraint"], [48, 1, 1, "", "DiscreteCustomConstraint"], [49, 1, 1, "", "DiscreteDependenciesConstraint"], [50, 1, 1, "", "DiscreteExcludeConstraint"], [51, 1, 1, "", "DiscreteLinkedParametersConstraint"], [52, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [53, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [54, 1, 1, "", "DiscreteProductConstraint"], [55, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[47, 2, 1, "", "__init__"], [47, 3, 1, "", "eval_during_augmentation"], [47, 3, 1, "", "eval_during_creation"], [47, 3, 1, "", "eval_during_modeling"], [47, 2, 1, "", "from_dict"], [47, 2, 1, "", "from_json"], [47, 2, 1, "", "get_invalid"], [47, 2, 1, "", "get_invalid_polars"], [47, 2, 1, "", "get_valid"], [47, 6, 1, "", "is_continuous"], [47, 6, 1, "", "is_discrete"], [47, 3, 1, "", "max_cardinality"], [47, 3, 1, "", "min_cardinality"], [47, 3, 1, "", "numerical_only"], [47, 3, 1, "", "parameters"], [47, 2, 1, "", "summary"], [47, 2, 1, "", "to_dict"], [47, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[47, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[47, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[47, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[47, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[48, 2, 1, "", "__init__"], [48, 3, 1, "", "eval_during_augmentation"], [48, 3, 1, "", "eval_during_creation"], [48, 3, 1, "", "eval_during_modeling"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "from_json"], [48, 2, 1, "", "get_invalid"], [48, 2, 1, "", "get_invalid_polars"], [48, 2, 1, "", "get_valid"], [48, 6, 1, "", "is_continuous"], [48, 6, 1, "", "is_discrete"], [48, 3, 1, "", "numerical_only"], [48, 3, 1, "", "parameters"], [48, 2, 1, "", "summary"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_json"], [48, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[48, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[48, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[48, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[48, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[49, 2, 1, "", "__init__"], [49, 3, 1, "", "affected_parameters"], [49, 3, 1, "", "conditions"], [49, 3, 1, "", "eval_during_augmentation"], [49, 3, 1, "", "eval_during_creation"], [49, 3, 1, "", "eval_during_modeling"], [49, 2, 1, "", "from_dict"], [49, 2, 1, "", "from_json"], [49, 2, 1, "", "get_invalid"], [49, 2, 1, "", "get_invalid_polars"], [49, 2, 1, "", "get_valid"], [49, 6, 1, "", "is_continuous"], [49, 6, 1, "", "is_discrete"], [49, 3, 1, "", "numerical_only"], [49, 3, 1, "", "parameters"], [49, 3, 1, "", "permutation_invariant"], [49, 2, 1, "", "summary"], [49, 2, 1, "", "to_dict"], [49, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[49, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[49, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[49, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[49, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[50, 2, 1, "", "__init__"], [50, 3, 1, "", "combiner"], [50, 3, 1, "", "conditions"], [50, 3, 1, "", "eval_during_augmentation"], [50, 3, 1, "", "eval_during_creation"], [50, 3, 1, "", "eval_during_modeling"], [50, 2, 1, "", "from_dict"], [50, 2, 1, "", "from_json"], [50, 2, 1, "", "get_invalid"], [50, 2, 1, "", "get_invalid_polars"], [50, 2, 1, "", "get_valid"], [50, 6, 1, "", "is_continuous"], [50, 6, 1, "", "is_discrete"], [50, 3, 1, "", "numerical_only"], [50, 3, 1, "", "parameters"], [50, 2, 1, "", "summary"], [50, 2, 1, "", "to_dict"], [50, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[50, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[50, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[50, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[50, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "dependencies"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "condition"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "condition"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.validation": [[57, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [58, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[57, 4, 1, "", "constraints"]], "baybe.exceptions": [[60, 7, 1, "", "DeprecationError"], [61, 7, 1, "", "EmptySearchSpaceError"], [62, 7, 1, "", "IncompatibilityError"], [63, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [64, 7, 1, "", "IncompatibleSearchSpaceError"], [65, 7, 1, "", "InvalidSurrogateModelError"], [66, 7, 1, "", "InvalidTargetValueError"], [67, 7, 1, "", "ModelNotTrainedError"], [68, 7, 1, "", "NoMCAcquisitionFunctionError"], [69, 7, 1, "", "NoRecommendersLeftError"], [70, 7, 1, "", "NotEnoughPointsLeftError"], [71, 7, 1, "", "NothingToSimulateError"], [72, 7, 1, "", "NumericalUnderflowError"], [73, 7, 1, "", "OptionalImportError"], [74, 7, 1, "", "UnidentifiedSubclassError"], [75, 7, 1, "", "UnmatchedAttributeError"], [76, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.kernels": [[78, 0, 0, "-", "base"], [82, 0, 0, "-", "basic"], [91, 0, 0, "-", "composite"]], "baybe.kernels.base": [[79, 1, 1, "", "BasicKernel"], [80, 1, 1, "", "CompositeKernel"], [81, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "from_dict"], [79, 2, 1, "", "from_json"], [79, 2, 1, "", "to_dict"], [79, 2, 1, "", "to_factory"], [79, 2, 1, "", "to_gpytorch"], [79, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[79, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[79, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "from_dict"], [80, 2, 1, "", "from_json"], [80, 2, 1, "", "to_dict"], [80, 2, 1, "", "to_factory"], [80, 2, 1, "", "to_gpytorch"], [80, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[80, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[80, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "from_dict"], [81, 2, 1, "", "from_json"], [81, 2, 1, "", "to_dict"], [81, 2, 1, "", "to_factory"], [81, 2, 1, "", "to_gpytorch"], [81, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[81, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[81, 4, 1, "", "string"]], "baybe.kernels.basic": [[83, 1, 1, "", "LinearKernel"], [84, 1, 1, "", "MaternKernel"], [85, 1, 1, "", "PeriodicKernel"], [86, 1, 1, "", "PiecewisePolynomialKernel"], [87, 1, 1, "", "PolynomialKernel"], [88, 1, 1, "", "RBFKernel"], [89, 1, 1, "", "RFFKernel"], [90, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "from_dict"], [83, 2, 1, "", "from_json"], [83, 2, 1, "", "to_dict"], [83, 2, 1, "", "to_factory"], [83, 2, 1, "", "to_gpytorch"], [83, 2, 1, "", "to_json"], [83, 3, 1, "", "variance_initial_value"], [83, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[83, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[83, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "from_dict"], [84, 2, 1, "", "from_json"], [84, 3, 1, "", "lengthscale_initial_value"], [84, 3, 1, "", "lengthscale_prior"], [84, 3, 1, "", "nu"], [84, 2, 1, "", "to_dict"], [84, 2, 1, "", "to_factory"], [84, 2, 1, "", "to_gpytorch"], [84, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[84, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[84, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "from_dict"], [85, 2, 1, "", "from_json"], [85, 3, 1, "", "lengthscale_initial_value"], [85, 3, 1, "", "lengthscale_prior"], [85, 3, 1, "", "period_length_initial_value"], [85, 3, 1, "", "period_length_prior"], [85, 2, 1, "", "to_dict"], [85, 2, 1, "", "to_factory"], [85, 2, 1, "", "to_gpytorch"], [85, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[85, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[85, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "from_dict"], [86, 2, 1, "", "from_json"], [86, 3, 1, "", "lengthscale_initial_value"], [86, 3, 1, "", "lengthscale_prior"], [86, 3, 1, "", "q"], [86, 2, 1, "", "to_dict"], [86, 2, 1, "", "to_factory"], [86, 2, 1, "", "to_gpytorch"], [86, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[86, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[86, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "from_dict"], [87, 2, 1, "", "from_json"], [87, 3, 1, "", "offset_initial_value"], [87, 3, 1, "", "offset_prior"], [87, 3, 1, "", "power"], [87, 2, 1, "", "to_dict"], [87, 2, 1, "", "to_factory"], [87, 2, 1, "", "to_gpytorch"], [87, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[87, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[87, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "from_dict"], [88, 2, 1, "", "from_json"], [88, 3, 1, "", "lengthscale_initial_value"], [88, 3, 1, "", "lengthscale_prior"], [88, 2, 1, "", "to_dict"], [88, 2, 1, "", "to_factory"], [88, 2, 1, "", "to_gpytorch"], [88, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[88, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[88, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "from_dict"], [89, 2, 1, "", "from_json"], [89, 3, 1, "", "lengthscale_initial_value"], [89, 3, 1, "", "lengthscale_prior"], [89, 3, 1, "", "num_samples"], [89, 2, 1, "", "to_dict"], [89, 2, 1, "", "to_factory"], [89, 2, 1, "", "to_gpytorch"], [89, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[89, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[89, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "from_dict"], [90, 2, 1, "", "from_json"], [90, 3, 1, "", "lengthscale_initial_value"], [90, 3, 1, "", "lengthscale_prior"], [90, 2, 1, "", "to_dict"], [90, 2, 1, "", "to_factory"], [90, 2, 1, "", "to_gpytorch"], [90, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[90, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[90, 4, 1, "", "string"]], "baybe.kernels.composite": [[92, 1, 1, "", "AdditiveKernel"], [93, 1, 1, "", "ProductKernel"], [94, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[92, 2, 1, "", "__init__"], [92, 3, 1, "", "base_kernels"], [92, 2, 1, "", "from_dict"], [92, 2, 1, "", "from_json"], [92, 2, 1, "", "to_dict"], [92, 2, 1, "", "to_factory"], [92, 2, 1, "", "to_gpytorch"], [92, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[92, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[92, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[93, 2, 1, "", "__init__"], [93, 3, 1, "", "base_kernels"], [93, 2, 1, "", "from_dict"], [93, 2, 1, "", "from_json"], [93, 2, 1, "", "to_dict"], [93, 2, 1, "", "to_factory"], [93, 2, 1, "", "to_gpytorch"], [93, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[93, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[93, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[94, 2, 1, "", "__init__"], [94, 3, 1, "", "base_kernel"], [94, 2, 1, "", "from_dict"], [94, 2, 1, "", "from_json"], [94, 3, 1, "", "outputscale_initial_value"], [94, 3, 1, "", "outputscale_prior"], [94, 2, 1, "", "to_dict"], [94, 2, 1, "", "to_factory"], [94, 2, 1, "", "to_gpytorch"], [94, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[94, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[94, 4, 1, "", "string"]], "baybe.objective": [[96, 5, 1, "", "Objective"]], "baybe.objectives": [[98, 0, 0, "-", "base"], [101, 0, 0, "-", "deprecation"], [103, 0, 0, "-", "desirability"], [106, 0, 0, "-", "enum"], [108, 0, 0, "-", "single"]], "baybe.objectives.base": [[99, 1, 1, "", "Objective"], [100, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "from_dict"], [99, 2, 1, "", "from_json"], [99, 6, 1, "", "targets"], [99, 2, 1, "", "to_dict"], [99, 2, 1, "", "to_json"], [99, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[99, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[99, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[99, 4, 1, "", "allow_extra"], [99, 4, 1, "", "allow_missing"], [99, 4, 1, "", "df"]], "baybe.objectives.deprecation": [[102, 5, 1, "", "structure_objective"]], "baybe.objectives.desirability": [[104, 1, 1, "", "DesirabilityObjective"], [105, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "from_dict"], [104, 2, 1, "", "from_json"], [104, 3, 1, "", "scalarizer"], [104, 6, 1, "", "targets"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "to_json"], [104, 2, 1, "", "transform"], [104, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[104, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[104, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[104, 4, 1, "", "allow_extra"], [104, 4, 1, "", "allow_missing"], [104, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[105, 4, 1, "", "scalarizer"], [105, 4, 1, "", "values"], [105, 4, 1, "", "weights"]], "baybe.objectives.enum": [[107, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[107, 3, 1, "", "GEOM_MEAN"], [107, 3, 1, "", "MEAN"]], "baybe.objectives.single": [[109, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 6, 1, "", "targets"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_json"], [109, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[109, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[109, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[109, 4, 1, "", "allow_extra"], [109, 4, 1, "", "allow_missing"], [109, 4, 1, "", "df"]], "baybe.parameters": [[111, 0, 0, "-", "base"], [115, 0, 0, "-", "categorical"], [118, 0, 0, "-", "custom"], [120, 0, 0, "-", "enum"], [125, 0, 0, "-", "numerical"], [128, 0, 0, "-", "substance"], [131, 0, 0, "-", "utils"], [134, 0, 0, "-", "validation"]], "baybe.parameters.base": [[112, 1, 1, "", "ContinuousParameter"], [113, 1, 1, "", "DiscreteParameter"], [114, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[112, 2, 1, "", "__init__"], [112, 6, 1, "", "comp_rep_columns"], [112, 2, 1, "", "from_dict"], [112, 2, 1, "", "from_json"], [112, 6, 1, "", "is_continuous"], [112, 6, 1, "", "is_discrete"], [112, 2, 1, "", "is_in_range"], [112, 3, 1, "", "is_numerical"], [112, 3, 1, "", "name"], [112, 2, 1, "", "summary"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_json"], [112, 2, 1, "", "to_searchspace"], [112, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[112, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[112, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[112, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[113, 2, 1, "", "__init__"], [113, 6, 1, "", "comp_df"], [113, 6, 1, "", "comp_rep_columns"], [113, 3, 1, "", "encoding"], [113, 2, 1, "", "from_dict"], [113, 2, 1, "", "from_json"], [113, 6, 1, "", "is_continuous"], [113, 6, 1, "", "is_discrete"], [113, 2, 1, "", "is_in_range"], [113, 3, 1, "", "is_numerical"], [113, 3, 1, "", "name"], [113, 2, 1, "", "summary"], [113, 2, 1, "", "to_dict"], [113, 2, 1, "", "to_json"], [113, 2, 1, "", "to_searchspace"], [113, 2, 1, "", "to_subspace"], [113, 2, 1, "", "transform"], [113, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[113, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[113, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[113, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[113, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[114, 2, 1, "", "__init__"], [114, 6, 1, "", "comp_rep_columns"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 6, 1, "", "is_continuous"], [114, 6, 1, "", "is_discrete"], [114, 2, 1, "", "is_in_range"], [114, 3, 1, "", "is_numerical"], [114, 3, 1, "", "name"], [114, 2, 1, "", "summary"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_json"], [114, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[114, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[114, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[114, 4, 1, "", "item"]], "baybe.parameters.categorical": [[116, 1, 1, "", "CategoricalParameter"], [117, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[116, 2, 1, "", "__init__"], [116, 6, 1, "", "comp_df"], [116, 6, 1, "", "comp_rep_columns"], [116, 3, 1, "", "encoding"], [116, 2, 1, "", "from_dict"], [116, 2, 1, "", "from_json"], [116, 6, 1, "", "is_continuous"], [116, 6, 1, "", "is_discrete"], [116, 2, 1, "", "is_in_range"], [116, 3, 1, "", "is_numerical"], [116, 3, 1, "", "name"], [116, 2, 1, "", "summary"], [116, 2, 1, "", "to_dict"], [116, 2, 1, "", "to_json"], [116, 2, 1, "", "to_searchspace"], [116, 2, 1, "", "to_subspace"], [116, 2, 1, "", "transform"], [116, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[116, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[116, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[116, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[116, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[117, 2, 1, "", "__init__"], [117, 3, 1, "", "active_values"], [117, 6, 1, "", "comp_df"], [117, 6, 1, "", "comp_rep_columns"], [117, 3, 1, "", "encoding"], [117, 2, 1, "", "from_dict"], [117, 2, 1, "", "from_json"], [117, 6, 1, "", "is_continuous"], [117, 6, 1, "", "is_discrete"], [117, 2, 1, "", "is_in_range"], [117, 3, 1, "", "is_numerical"], [117, 3, 1, "", "name"], [117, 2, 1, "", "summary"], [117, 2, 1, "", "to_dict"], [117, 2, 1, "", "to_json"], [117, 2, 1, "", "to_searchspace"], [117, 2, 1, "", "to_subspace"], [117, 2, 1, "", "transform"], [117, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[117, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[117, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[117, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[117, 4, 1, "", "series"]], "baybe.parameters.custom": [[119, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[119, 2, 1, "", "__init__"], [119, 6, 1, "", "comp_df"], [119, 6, 1, "", "comp_rep_columns"], [119, 3, 1, "", "data"], [119, 3, 1, "", "decorrelate"], [119, 3, 1, "", "encoding"], [119, 2, 1, "", "from_dict"], [119, 2, 1, "", "from_json"], [119, 6, 1, "", "is_continuous"], [119, 6, 1, "", "is_discrete"], [119, 2, 1, "", "is_in_range"], [119, 3, 1, "", "is_numerical"], [119, 3, 1, "", "name"], [119, 2, 1, "", "summary"], [119, 2, 1, "", "to_dict"], [119, 2, 1, "", "to_json"], [119, 2, 1, "", "to_searchspace"], [119, 2, 1, "", "to_subspace"], [119, 2, 1, "", "transform"], [119, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[119, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[119, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[119, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[119, 4, 1, "", "series"]], "baybe.parameters.enum": [[121, 1, 1, "", "CategoricalEncoding"], [122, 1, 1, "", "CustomEncoding"], [123, 1, 1, "", "ParameterEncoding"], [124, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[121, 3, 1, "", "INT"], [121, 3, 1, "", "OHE"], [121, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[122, 3, 1, "", "CUSTOM"], [122, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[124, 3, 1, "", "ATOMPAIR"], [124, 3, 1, "", "AUTOCORR"], [124, 3, 1, "", "AVALON"], [124, 3, 1, "", "E3FP"], [124, 3, 1, "", "ECFP"], [124, 3, 1, "", "ELECTROSHAPE"], [124, 3, 1, "", "ERG"], [124, 3, 1, "", "ESTATE"], [124, 3, 1, "", "FUNCTIONALGROUPS"], [124, 3, 1, "", "GETAWAY"], [124, 3, 1, "", "GHOSECRIPPEN"], [124, 3, 1, "", "KLEKOTAROTH"], [124, 3, 1, "", "LAGGNER"], [124, 3, 1, "", "LAYERED"], [124, 3, 1, "", "LINGO"], [124, 3, 1, "", "MACCS"], [124, 3, 1, "", "MAP"], [124, 3, 1, "", "MHFP"], [124, 3, 1, "", "MORDRED"], [124, 3, 1, "", "MORGAN_FP"], [124, 3, 1, "", "MORSE"], [124, 3, 1, "", "MQNS"], [124, 3, 1, "", "PATTERN"], [124, 3, 1, "", "PHARMACOPHORE"], [124, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [124, 3, 1, "", "PUBCHEM"], [124, 3, 1, "", "RDF"], [124, 3, 1, "", "RDKIT"], [124, 3, 1, "", "RDKIT2DDESCRIPTORS"], [124, 3, 1, "", "RDKITFINGERPRINT"], [124, 3, 1, "", "SECFP"], [124, 3, 1, "", "TOPOLOGICALTORSION"], [124, 3, 1, "", "USR"], [124, 3, 1, "", "USRCAT"], [124, 3, 1, "", "VSA"], [124, 3, 1, "", "WHIM"], [124, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[126, 1, 1, "", "NumericalContinuousParameter"], [127, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[126, 2, 1, "", "__init__"], [126, 3, 1, "", "bounds"], [126, 6, 1, "", "comp_rep_columns"], [126, 2, 1, "", "from_dict"], [126, 2, 1, "", "from_json"], [126, 6, 1, "", "is_continuous"], [126, 6, 1, "", "is_discrete"], [126, 2, 1, "", "is_in_range"], [126, 3, 1, "", "is_numerical"], [126, 3, 1, "", "name"], [126, 2, 1, "", "summary"], [126, 2, 1, "", "to_dict"], [126, 2, 1, "", "to_json"], [126, 2, 1, "", "to_searchspace"], [126, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[126, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[126, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[126, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[127, 2, 1, "", "__init__"], [127, 6, 1, "", "comp_df"], [127, 6, 1, "", "comp_rep_columns"], [127, 3, 1, "", "encoding"], [127, 2, 1, "", "from_dict"], [127, 2, 1, "", "from_json"], [127, 6, 1, "", "is_continuous"], [127, 6, 1, "", "is_discrete"], [127, 2, 1, "", "is_in_range"], [127, 3, 1, "", "is_numerical"], [127, 3, 1, "", "name"], [127, 2, 1, "", "summary"], [127, 2, 1, "", "to_dict"], [127, 2, 1, "", "to_json"], [127, 2, 1, "", "to_searchspace"], [127, 2, 1, "", "to_subspace"], [127, 3, 1, "", "tolerance"], [127, 2, 1, "", "transform"], [127, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[127, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[127, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[127, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[127, 4, 1, "", "series"]], "baybe.parameters.substance": [[129, 3, 1, "", "Smiles"], [130, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[130, 2, 1, "", "__init__"], [130, 6, 1, "", "comp_df"], [130, 6, 1, "", "comp_rep_columns"], [130, 3, 1, "", "data"], [130, 3, 1, "", "decorrelate"], [130, 3, 1, "", "encoding"], [130, 2, 1, "", "from_dict"], [130, 2, 1, "", "from_json"], [130, 6, 1, "", "is_continuous"], [130, 6, 1, "", "is_discrete"], [130, 2, 1, "", "is_in_range"], [130, 3, 1, "", "is_numerical"], [130, 3, 1, "", "kwargs_conformer"], [130, 3, 1, "", "kwargs_fingerprint"], [130, 3, 1, "", "name"], [130, 2, 1, "", "summary"], [130, 2, 1, "", "to_dict"], [130, 2, 1, "", "to_json"], [130, 2, 1, "", "to_searchspace"], [130, 2, 1, "", "to_subspace"], [130, 2, 1, "", "transform"], [130, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[130, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[130, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[130, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[130, 4, 1, "", "series"]], "baybe.parameters.utils": [[132, 5, 1, "", "get_parameters_from_dataframe"], [133, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[132, 4, 1, "", "df"], [132, 4, 1, "", "factory"], [132, 4, 1, "", "parameters"]], "baybe.parameters.validation": [[135, 5, 1, "", "validate_decorrelation"], [136, 5, 1, "", "validate_is_finite"], [137, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[139, 0, 0, "-", "base"], [141, 0, 0, "-", "basic"]], "baybe.priors.base": [[140, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "from_dict"], [140, 2, 1, "", "from_json"], [140, 2, 1, "", "to_dict"], [140, 2, 1, "", "to_gpytorch"], [140, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[140, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[140, 4, 1, "", "string"]], "baybe.priors.basic": [[142, 1, 1, "", "BetaPrior"], [143, 1, 1, "", "GammaPrior"], [144, 1, 1, "", "HalfCauchyPrior"], [145, 1, 1, "", "HalfNormalPrior"], [146, 1, 1, "", "LogNormalPrior"], [147, 1, 1, "", "NormalPrior"], [148, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[142, 2, 1, "", "__init__"], [142, 3, 1, "", "alpha"], [142, 3, 1, "", "beta"], [142, 2, 1, "", "from_dict"], [142, 2, 1, "", "from_json"], [142, 2, 1, "", "to_dict"], [142, 2, 1, "", "to_gpytorch"], [142, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[142, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[142, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[143, 2, 1, "", "__init__"], [143, 3, 1, "", "concentration"], [143, 2, 1, "", "from_dict"], [143, 2, 1, "", "from_json"], [143, 3, 1, "", "rate"], [143, 2, 1, "", "to_dict"], [143, 2, 1, "", "to_gpytorch"], [143, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[143, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[143, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "from_dict"], [144, 2, 1, "", "from_json"], [144, 3, 1, "", "scale"], [144, 2, 1, "", "to_dict"], [144, 2, 1, "", "to_gpytorch"], [144, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[144, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[144, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "from_dict"], [145, 2, 1, "", "from_json"], [145, 3, 1, "", "scale"], [145, 2, 1, "", "to_dict"], [145, 2, 1, "", "to_gpytorch"], [145, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[145, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[145, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "from_dict"], [146, 2, 1, "", "from_json"], [146, 3, 1, "", "loc"], [146, 3, 1, "", "scale"], [146, 2, 1, "", "to_dict"], [146, 2, 1, "", "to_gpytorch"], [146, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[146, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[146, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "from_dict"], [147, 2, 1, "", "from_json"], [147, 3, 1, "", "loc"], [147, 3, 1, "", "scale"], [147, 2, 1, "", "to_dict"], [147, 2, 1, "", "to_gpytorch"], [147, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[147, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[147, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[148, 2, 1, "", "__init__"], [148, 3, 1, "", "a"], [148, 3, 1, "", "b"], [148, 2, 1, "", "from_dict"], [148, 2, 1, "", "from_json"], [148, 3, 1, "", "sigma"], [148, 2, 1, "", "to_dict"], [148, 2, 1, "", "to_gpytorch"], [148, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[148, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[148, 4, 1, "", "string"]], "baybe.recommenders": [[150, 0, 0, "-", "base"], [152, 0, 0, "-", "meta"], [159, 0, 0, "-", "naive"], [161, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[151, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[151, 4, 1, "", "batch_size"], [151, 4, 1, "", "measurements"], [151, 4, 1, "", "objective"], [151, 4, 1, "", "pending_experiments"], [151, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[153, 0, 0, "-", "base"], [155, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[154, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "from_dict"], [154, 2, 1, "", "from_json"], [154, 2, 1, "", "get_current_recommender"], [154, 2, 1, "", "get_next_recommender"], [154, 2, 1, "", "recommend"], [154, 2, 1, "", "select_recommender"], [154, 2, 1, "", "to_dict"], [154, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[154, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[154, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[156, 1, 1, "", "SequentialMetaRecommender"], [157, 1, 1, "", "StreamingSequentialMetaRecommender"], [158, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "from_dict"], [156, 2, 1, "", "from_json"], [156, 2, 1, "", "get_current_recommender"], [156, 2, 1, "", "get_next_recommender"], [156, 3, 1, "", "mode"], [156, 2, 1, "", "recommend"], [156, 3, 1, "", "recommenders"], [156, 2, 1, "", "select_recommender"], [156, 2, 1, "", "to_dict"], [156, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[156, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[156, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "default_iterator"], [157, 2, 1, "", "from_dict"], [157, 2, 1, "", "from_json"], [157, 2, 1, "", "get_current_recommender"], [157, 2, 1, "", "get_next_recommender"], [157, 2, 1, "", "recommend"], [157, 3, 1, "", "recommenders"], [157, 2, 1, "", "select_recommender"], [157, 2, 1, "", "to_dict"], [157, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[157, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[157, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "from_dict"], [158, 2, 1, "", "from_json"], [158, 2, 1, "", "get_current_recommender"], [158, 2, 1, "", "get_next_recommender"], [158, 3, 1, "", "initial_recommender"], [158, 2, 1, "", "recommend"], [158, 3, 1, "", "recommender"], [158, 2, 1, "", "select_recommender"], [158, 3, 1, "", "switch_after"], [158, 2, 1, "", "to_dict"], [158, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[158, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[158, 4, 1, "", "string"]], "baybe.recommenders.naive": [[160, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[160, 2, 1, "", "__init__"], [160, 3, 1, "", "allow_recommending_already_measured"], [160, 3, 1, "", "allow_recommending_pending_experiments"], [160, 3, 1, "", "allow_repeated_recommendations"], [160, 3, 1, "", "compatibility"], [160, 3, 1, "", "cont_recommender"], [160, 3, 1, "", "disc_recommender"], [160, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[160, 4, 1, "", "batch_size"], [160, 4, 1, "", "measurements"], [160, 4, 1, "", "objective"], [160, 4, 1, "", "pending_experiments"], [160, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[162, 0, 0, "-", "base"], [164, 0, 0, "-", "bayesian"], [171, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[163, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[163, 2, 1, "", "__init__"], [163, 3, 1, "", "allow_recommending_already_measured"], [163, 3, 1, "", "allow_recommending_pending_experiments"], [163, 3, 1, "", "allow_repeated_recommendations"], [163, 3, 1, "", "compatibility"], [163, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[163, 4, 1, "", "batch_size"], [163, 4, 1, "", "measurements"], [163, 4, 1, "", "objective"], [163, 4, 1, "", "pending_experiments"], [163, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[165, 0, 0, "-", "base"], [167, 0, 0, "-", "botorch"], [169, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[166, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[166, 2, 1, "", "__init__"], [166, 3, 1, "", "acquisition_function"], [166, 3, 1, "", "acquisition_function_cls"], [166, 3, 1, "", "allow_recommending_already_measured"], [166, 3, 1, "", "allow_recommending_pending_experiments"], [166, 3, 1, "", "allow_repeated_recommendations"], [166, 3, 1, "", "compatibility"], [166, 2, 1, "", "get_surrogate"], [166, 2, 1, "", "recommend"], [166, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[166, 4, 1, "", "batch_size"], [166, 4, 1, "", "measurements"], [166, 4, 1, "", "objective"], [166, 4, 1, "", "pending_experiments"], [166, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[168, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[168, 2, 1, "", "__init__"], [168, 3, 1, "", "acquisition_function"], [168, 3, 1, "", "acquisition_function_cls"], [168, 3, 1, "", "allow_recommending_already_measured"], [168, 3, 1, "", "allow_recommending_pending_experiments"], [168, 3, 1, "", "allow_repeated_recommendations"], [168, 3, 1, "", "compatibility"], [168, 2, 1, "", "get_surrogate"], [168, 3, 1, "", "hybrid_sampler"], [168, 3, 1, "", "n_raw_samples"], [168, 3, 1, "", "n_restarts"], [168, 2, 1, "", "recommend"], [168, 3, 1, "", "sampling_percentage"], [168, 3, 1, "", "sequential_continuous"], [168, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[168, 4, 1, "", "batch_size"], [168, 4, 1, "", "measurements"], [168, 4, 1, "", "objective"], [168, 4, 1, "", "pending_experiments"], [168, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[170, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[172, 0, 0, "-", "base"], [174, 0, 0, "-", "clustering"], [179, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[173, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[173, 2, 1, "", "__init__"], [173, 3, 1, "", "allow_recommending_already_measured"], [173, 3, 1, "", "allow_recommending_pending_experiments"], [173, 3, 1, "", "allow_repeated_recommendations"], [173, 3, 1, "", "compatibility"], [173, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[173, 4, 1, "", "batch_size"], [173, 4, 1, "", "measurements"], [173, 4, 1, "", "objective"], [173, 4, 1, "", "pending_experiments"], [173, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[175, 1, 1, "", "GaussianMixtureClusteringRecommender"], [176, 1, 1, "", "KMeansClusteringRecommender"], [177, 1, 1, "", "PAMClusteringRecommender"], [178, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[175, 2, 1, "", "__init__"], [175, 3, 1, "", "allow_recommending_already_measured"], [175, 3, 1, "", "allow_recommending_pending_experiments"], [175, 3, 1, "", "allow_repeated_recommendations"], [175, 3, 1, "", "compatibility"], [175, 3, 1, "", "model_cluster_num_parameter_name"], [175, 3, 1, "", "model_params"], [175, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[175, 4, 1, "", "batch_size"], [175, 4, 1, "", "measurements"], [175, 4, 1, "", "objective"], [175, 4, 1, "", "pending_experiments"], [175, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[176, 2, 1, "", "__init__"], [176, 3, 1, "", "allow_recommending_already_measured"], [176, 3, 1, "", "allow_recommending_pending_experiments"], [176, 3, 1, "", "allow_repeated_recommendations"], [176, 3, 1, "", "compatibility"], [176, 3, 1, "", "model_cluster_num_parameter_name"], [176, 3, 1, "", "model_params"], [176, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[176, 4, 1, "", "batch_size"], [176, 4, 1, "", "measurements"], [176, 4, 1, "", "objective"], [176, 4, 1, "", "pending_experiments"], [176, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[177, 2, 1, "", "__init__"], [177, 3, 1, "", "allow_recommending_already_measured"], [177, 3, 1, "", "allow_recommending_pending_experiments"], [177, 3, 1, "", "allow_repeated_recommendations"], [177, 3, 1, "", "compatibility"], [177, 3, 1, "", "model_cluster_num_parameter_name"], [177, 3, 1, "", "model_params"], [177, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[177, 4, 1, "", "batch_size"], [177, 4, 1, "", "measurements"], [177, 4, 1, "", "objective"], [177, 4, 1, "", "pending_experiments"], [177, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[178, 2, 1, "", "__init__"], [178, 3, 1, "", "allow_recommending_already_measured"], [178, 3, 1, "", "allow_recommending_pending_experiments"], [178, 3, 1, "", "allow_repeated_recommendations"], [178, 3, 1, "", "compatibility"], [178, 3, 1, "", "model_cluster_num_parameter_name"], [178, 3, 1, "", "model_params"], [178, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[178, 4, 1, "", "batch_size"], [178, 4, 1, "", "measurements"], [178, 4, 1, "", "objective"], [178, 4, 1, "", "pending_experiments"], [178, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[180, 1, 1, "", "FPSRecommender"], [181, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[180, 2, 1, "", "__init__"], [180, 3, 1, "", "allow_recommending_already_measured"], [180, 3, 1, "", "allow_recommending_pending_experiments"], [180, 3, 1, "", "allow_repeated_recommendations"], [180, 3, 1, "", "compatibility"], [180, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[180, 4, 1, "", "batch_size"], [180, 4, 1, "", "measurements"], [180, 4, 1, "", "objective"], [180, 4, 1, "", "pending_experiments"], [180, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[181, 2, 1, "", "__init__"], [181, 3, 1, "", "allow_recommending_already_measured"], [181, 3, 1, "", "allow_recommending_pending_experiments"], [181, 3, 1, "", "allow_repeated_recommendations"], [181, 3, 1, "", "compatibility"], [181, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[181, 4, 1, "", "batch_size"], [181, 4, 1, "", "measurements"], [181, 4, 1, "", "objective"], [181, 4, 1, "", "pending_experiments"], [181, 4, 1, "", "searchspace"]], "baybe.searchspace": [[183, 0, 0, "-", "continuous"], [185, 0, 0, "-", "core"], [190, 0, 0, "-", "discrete"], [196, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[184, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[184, 2, 1, "", "__init__"], [184, 6, 1, "", "comp_rep_bounds"], [184, 6, 1, "", "comp_rep_columns"], [184, 6, 1, "", "constraints_cardinality"], [184, 3, 1, "", "constraints_lin_eq"], [184, 3, 1, "", "constraints_lin_ineq"], [184, 3, 1, "", "constraints_nonlin"], [184, 2, 1, "", "empty"], [184, 2, 1, "", "from_bounds"], [184, 2, 1, "", "from_dataframe"], [184, 2, 1, "", "from_dict"], [184, 2, 1, "", "from_json"], [184, 2, 1, "", "from_parameter"], [184, 2, 1, "", "from_product"], [184, 6, 1, "", "full_factorial"], [184, 2, 1, "", "get_parameters_by_name"], [184, 6, 1, "", "is_empty"], [184, 6, 1, "", "parameter_names"], [184, 3, 1, "", "parameters"], [184, 2, 1, "", "sample_from_full_factorial"], [184, 2, 1, "", "sample_uniform"], [184, 2, 1, "", "samples_full_factorial"], [184, 2, 1, "", "samples_random"], [184, 2, 1, "", "to_dict"], [184, 2, 1, "", "to_json"], [184, 2, 1, "", "to_searchspace"], [184, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[184, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[184, 4, 1, "", "df"], [184, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[184, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[184, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[184, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[184, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[184, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[184, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[186, 1, 1, "", "SearchSpace"], [187, 1, 1, "", "SearchSpaceType"], [188, 5, 1, "", "to_searchspace"], [189, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[186, 2, 1, "", "__init__"], [186, 6, 1, "", "comp_rep_bounds"], [186, 6, 1, "", "comp_rep_columns"], [186, 6, 1, "", "constraints"], [186, 6, 1, "", "constraints_augmentable"], [186, 3, 1, "", "continuous"], [186, 3, 1, "", "discrete"], [186, 2, 1, "", "estimate_product_space_size"], [186, 2, 1, "", "from_dataframe"], [186, 2, 1, "", "from_dict"], [186, 2, 1, "", "from_json"], [186, 2, 1, "", "from_parameter"], [186, 2, 1, "", "from_product"], [186, 2, 1, "", "get_comp_rep_parameter_indices"], [186, 2, 1, "", "get_parameters_by_name"], [186, 6, 1, "", "n_tasks"], [186, 6, 1, "", "parameter_names"], [186, 6, 1, "", "parameters"], [186, 6, 1, "", "task_idx"], [186, 2, 1, "", "to_dict"], [186, 2, 1, "", "to_json"], [186, 2, 1, "", "transform"], [186, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[186, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[186, 4, 1, "", "df"], [186, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[186, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[186, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[186, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[186, 4, 1, "", "constraints"], [186, 4, 1, "", "empty_encoding"], [186, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[186, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[186, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[186, 4, 1, "", "allow_extra"], [186, 4, 1, "", "allow_missing"], [186, 4, 1, "", "data"], [186, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[187, 3, 1, "", "CONTINUOUS"], [187, 3, 1, "", "DISCRETE"], [187, 3, 1, "", "EITHER"], [187, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[191, 1, 1, "", "MemorySize"], [192, 1, 1, "", "SubspaceDiscrete"], [193, 5, 1, "", "parameter_cartesian_prod_pandas"], [194, 5, 1, "", "parameter_cartesian_prod_polars"], [195, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[191, 2, 1, "", "__init__"], [191, 3, 1, "", "comp_rep_bytes"], [191, 6, 1, "", "comp_rep_human_readable"], [191, 3, 1, "", "comp_rep_shape"], [191, 3, 1, "", "exp_rep_bytes"], [191, 6, 1, "", "exp_rep_human_readable"], [191, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[192, 2, 1, "", "__init__"], [192, 3, 1, "", "comp_rep"], [192, 6, 1, "", "comp_rep_bounds"], [192, 6, 1, "", "comp_rep_columns"], [192, 3, 1, "", "constraints"], [192, 2, 1, "", "empty"], [192, 3, 1, "", "empty_encoding"], [192, 2, 1, "", "estimate_product_space_size"], [192, 3, 1, "", "exp_rep"], [192, 2, 1, "", "from_dataframe"], [192, 2, 1, "", "from_dict"], [192, 2, 1, "", "from_json"], [192, 2, 1, "", "from_parameter"], [192, 2, 1, "", "from_product"], [192, 2, 1, "", "from_simplex"], [192, 2, 1, "", "get_candidates"], [192, 2, 1, "", "get_parameters_by_name"], [192, 6, 1, "", "is_empty"], [192, 6, 1, "", "metadata"], [192, 6, 1, "", "parameter_names"], [192, 3, 1, "", "parameters"], [192, 2, 1, "", "to_dict"], [192, 2, 1, "", "to_json"], [192, 2, 1, "", "to_searchspace"], [192, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[192, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[192, 4, 1, "", "df"], [192, 4, 1, "", "empty_encoding"], [192, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[192, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[192, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[192, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[192, 4, 1, "", "boundary_only"], [192, 4, 1, "", "constraints"], [192, 4, 1, "", "max_nonzero"], [192, 4, 1, "", "max_sum"], [192, 4, 1, "", "min_nonzero"], [192, 4, 1, "", "product_parameters"], [192, 4, 1, "", "simplex_parameters"], [192, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates.params": [[192, 4, 1, "", "allow_recommending_already_measured"], [192, 4, 1, "", "allow_repeated_recommendations"], [192, 4, 1, "", "exclude"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[192, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[193, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[194, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[197, 5, 1, "", "get_transform_parameters"], [198, 5, 1, "", "validate_parameter_names"], [199, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[201, 0, 0, "-", "core"], [208, 0, 0, "-", "mixin"], [210, 0, 0, "-", "utils"]], "baybe.serialization.core": [[202, 5, 1, "", "block_deserialization_hook"], [203, 5, 1, "", "block_serialization_hook"], [204, 8, 1, "", "converter"], [205, 5, 1, "", "get_base_structure_hook"], [206, 5, 1, "", "select_constructor_hook"], [207, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[205, 4, 1, "", "base"], [205, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[207, 4, 1, "", "base"], [207, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[209, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[209, 2, 1, "", "from_dict"], [209, 2, 1, "", "from_json"], [209, 2, 1, "", "to_dict"], [209, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[209, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[209, 4, 1, "", "string"]], "baybe.serialization.utils": [[211, 5, 1, "", "deserialize_dataframe"], [212, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[214, 0, 0, "-", "core"], [216, 0, 0, "-", "lookup"], [218, 0, 0, "-", "scenarios"], [220, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[215, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[215, 4, 1, "", "batch_size"], [215, 4, 1, "", "campaign"], [215, 4, 1, "", "impute_mode"], [215, 4, 1, "", "initial_data"], [215, 4, 1, "", "lookup"], [215, 4, 1, "", "n_doe_iterations"], [215, 4, 1, "", "noise_percent"], [215, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[217, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[217, 4, 1, "", "impute_mode"], [217, 4, 1, "", "lookup"], [217, 4, 1, "", "queries"], [217, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[219, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[219, 4, 1, "", "batch_size"], [219, 4, 1, "", "groupby"], [219, 4, 1, "", "impute_mode"], [219, 4, 1, "", "initial_data"], [219, 4, 1, "", "lookup"], [219, 4, 1, "", "n_doe_iterations"], [219, 4, 1, "", "n_mc_iterations"], [219, 4, 1, "", "noise_percent"], [219, 4, 1, "", "random_seed"], [219, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[221, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[221, 4, 1, "", "batch_size"], [221, 4, 1, "", "campaign"], [221, 4, 1, "", "groupby"], [221, 4, 1, "", "lookup"], [221, 4, 1, "", "n_doe_iterations"], [221, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[223, 0, 0, "-", "bandit"], [225, 0, 0, "-", "base"], [229, 0, 0, "-", "custom"], [232, 0, 0, "-", "gaussian_process"], [247, 0, 0, "-", "linear"], [249, 0, 0, "-", "naive"], [251, 0, 0, "-", "ngboost"], [253, 0, 0, "-", "random_forest"], [255, 0, 0, "-", "utils"], [259, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[224, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[224, 2, 1, "", "__init__"], [224, 2, 1, "", "fit"], [224, 2, 1, "", "from_dict"], [224, 2, 1, "", "from_json"], [224, 2, 1, "", "posterior"], [224, 2, 1, "", "posterior_means"], [224, 2, 1, "", "posterior_modes"], [224, 3, 1, "", "prior"], [224, 3, 1, "", "supports_transfer_learning"], [224, 2, 1, "", "to_botorch"], [224, 2, 1, "", "to_dict"], [224, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[224, 4, 1, "", "measurements"], [224, 4, 1, "", "objective"], [224, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[224, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[224, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[224, 4, 1, "", "candidates"]], "baybe.surrogates.base": [[226, 1, 1, "", "IndependentGaussianSurrogate"], [227, 1, 1, "", "Surrogate"], [228, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[226, 2, 1, "", "__init__"], [226, 2, 1, "", "fit"], [226, 2, 1, "", "from_dict"], [226, 2, 1, "", "from_json"], [226, 2, 1, "", "posterior"], [226, 3, 1, "", "supports_transfer_learning"], [226, 2, 1, "", "to_botorch"], [226, 2, 1, "", "to_dict"], [226, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[226, 4, 1, "", "measurements"], [226, 4, 1, "", "objective"], [226, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[226, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[226, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[226, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate": [[227, 2, 1, "", "__init__"], [227, 2, 1, "", "fit"], [227, 2, 1, "", "from_dict"], [227, 2, 1, "", "from_json"], [227, 2, 1, "", "posterior"], [227, 3, 1, "", "supports_transfer_learning"], [227, 2, 1, "", "to_botorch"], [227, 2, 1, "", "to_dict"], [227, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[227, 4, 1, "", "measurements"], [227, 4, 1, "", "objective"], [227, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[227, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[227, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[227, 4, 1, "", "candidates"]], "baybe.surrogates.base.SurrogateProtocol": [[228, 2, 1, "", "__init__"], [228, 2, 1, "", "fit"], [228, 2, 1, "", "to_botorch"]], "baybe.surrogates.custom": [[230, 1, 1, "", "CustomONNXSurrogate"], [231, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[230, 2, 1, "", "__init__"], [230, 2, 1, "", "default_model"], [230, 2, 1, "", "fit"], [230, 2, 1, "", "from_dict"], [230, 2, 1, "", "from_json"], [230, 3, 1, "", "onnx_input_name"], [230, 3, 1, "", "onnx_str"], [230, 2, 1, "", "posterior"], [230, 3, 1, "", "supports_transfer_learning"], [230, 2, 1, "", "to_botorch"], [230, 2, 1, "", "to_dict"], [230, 2, 1, "", "to_json"], [230, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[230, 4, 1, "", "measurements"], [230, 4, 1, "", "objective"], [230, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[230, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[230, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[230, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[230, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[233, 0, 0, "-", "core"], [235, 0, 0, "-", "kernel_factory"], [239, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[234, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[234, 2, 1, "", "__init__"], [234, 2, 1, "", "fit"], [234, 2, 1, "", "from_dict"], [234, 2, 1, "", "from_json"], [234, 2, 1, "", "from_preset"], [234, 3, 1, "", "kernel_factory"], [234, 2, 1, "", "posterior"], [234, 3, 1, "", "supports_transfer_learning"], [234, 2, 1, "", "to_botorch"], [234, 2, 1, "", "to_dict"], [234, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[234, 4, 1, "", "measurements"], [234, 4, 1, "", "objective"], [234, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[234, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[234, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[234, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.kernel_factory": [[236, 1, 1, "", "KernelFactory"], [237, 1, 1, "", "PlainKernelFactory"], [238, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[236, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[237, 2, 1, "", "__init__"], [237, 2, 1, "", "from_dict"], [237, 2, 1, "", "from_json"], [237, 3, 1, "", "kernel"], [237, 2, 1, "", "to_dict"], [237, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[237, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[237, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[240, 0, 0, "-", "core"], [243, 0, 0, "-", "default"], [245, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[241, 1, 1, "", "GaussianProcessPreset"], [242, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[241, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[244, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[244, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[246, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[246, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[248, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[248, 2, 1, "", "__init__"], [248, 2, 1, "", "fit"], [248, 2, 1, "", "from_dict"], [248, 2, 1, "", "from_json"], [248, 3, 1, "", "model_params"], [248, 2, 1, "", "posterior"], [248, 3, 1, "", "supports_transfer_learning"], [248, 2, 1, "", "to_botorch"], [248, 2, 1, "", "to_dict"], [248, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[248, 4, 1, "", "measurements"], [248, 4, 1, "", "objective"], [248, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[248, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[248, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[248, 4, 1, "", "candidates"]], "baybe.surrogates.naive": [[250, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[250, 2, 1, "", "__init__"], [250, 2, 1, "", "fit"], [250, 2, 1, "", "from_dict"], [250, 2, 1, "", "from_json"], [250, 2, 1, "", "posterior"], [250, 3, 1, "", "supports_transfer_learning"], [250, 2, 1, "", "to_botorch"], [250, 2, 1, "", "to_dict"], [250, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[250, 4, 1, "", "measurements"], [250, 4, 1, "", "objective"], [250, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[250, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[250, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[250, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost": [[252, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[252, 2, 1, "", "__init__"], [252, 2, 1, "", "fit"], [252, 2, 1, "", "from_dict"], [252, 2, 1, "", "from_json"], [252, 3, 1, "", "model_params"], [252, 2, 1, "", "posterior"], [252, 3, 1, "", "supports_transfer_learning"], [252, 2, 1, "", "to_botorch"], [252, 2, 1, "", "to_dict"], [252, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[252, 4, 1, "", "measurements"], [252, 4, 1, "", "objective"], [252, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[252, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[252, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[252, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest": [[254, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[254, 2, 1, "", "__init__"], [254, 2, 1, "", "fit"], [254, 2, 1, "", "from_dict"], [254, 2, 1, "", "from_json"], [254, 3, 1, "", "model_params"], [254, 2, 1, "", "posterior"], [254, 3, 1, "", "supports_transfer_learning"], [254, 2, 1, "", "to_botorch"], [254, 2, 1, "", "to_dict"], [254, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[254, 4, 1, "", "measurements"], [254, 4, 1, "", "objective"], [254, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[254, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[254, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[254, 4, 1, "", "candidates"]], "baybe.surrogates.utils": [[256, 5, 1, "", "batchify_ensemble_predictor"], [257, 5, 1, "", "batchify_mean_var_prediction"], [258, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[256, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[258, 4, 1, "", "cls"], [258, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[260, 5, 1, "", "get_model_params_validator"], [261, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.get_model_params_validator.params": [[260, 4, 1, "", "model_init"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[261, 4, 1, "", "model_cls"]], "baybe.targets": [[263, 0, 0, "-", "base"], [265, 0, 0, "-", "binary"], [268, 0, 0, "-", "enum"], [271, 0, 0, "-", "numerical"], [273, 0, 0, "-", "transforms"]], "baybe.targets.base": [[264, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[264, 2, 1, "", "__init__"], [264, 2, 1, "", "from_dict"], [264, 2, 1, "", "from_json"], [264, 3, 1, "", "name"], [264, 2, 1, "", "summary"], [264, 2, 1, "", "to_dict"], [264, 2, 1, "", "to_json"], [264, 2, 1, "", "to_objective"], [264, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[264, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[264, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[264, 4, 1, "", "series"]], "baybe.targets.binary": [[266, 1, 1, "", "BinaryTarget"], [267, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[266, 2, 1, "", "__init__"], [266, 3, 1, "", "failure_value"], [266, 2, 1, "", "from_dict"], [266, 2, 1, "", "from_json"], [266, 3, 1, "", "name"], [266, 3, 1, "", "success_value"], [266, 2, 1, "", "summary"], [266, 2, 1, "", "to_dict"], [266, 2, 1, "", "to_json"], [266, 2, 1, "", "to_objective"], [266, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[266, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[266, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[266, 4, 1, "", "series"]], "baybe.targets.enum": [[269, 1, 1, "", "TargetMode"], [270, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[269, 3, 1, "", "MATCH"], [269, 3, 1, "", "MAX"], [269, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[270, 3, 1, "", "BELL"], [270, 3, 1, "", "LINEAR"], [270, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[272, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[272, 2, 1, "", "__init__"], [272, 3, 1, "", "bounds"], [272, 2, 1, "", "from_dict"], [272, 2, 1, "", "from_json"], [272, 3, 1, "", "mode"], [272, 3, 1, "", "name"], [272, 2, 1, "", "summary"], [272, 2, 1, "", "to_dict"], [272, 2, 1, "", "to_json"], [272, 2, 1, "", "to_objective"], [272, 2, 1, "", "transform"], [272, 3, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[272, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[272, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[272, 4, 1, "", "series"]], "baybe.targets.transforms": [[274, 5, 1, "", "bell_transform"], [275, 5, 1, "", "linear_transform"], [276, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[274, 4, 1, "", "arr"], [274, 4, 1, "", "lower"], [274, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[275, 4, 1, "", "arr"], [275, 4, 1, "", "descending"], [275, 4, 1, "", "lower"], [275, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[276, 4, 1, "", "arr"], [276, 4, 1, "", "lower"], [276, 4, 1, "", "upper"]], "baybe.telemetry": [[278, 5, 1, "", "get_user_details"], [279, 5, 1, "", "is_enabled"], [280, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [281, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[280, 4, 1, "", "cached_recommendation"], [280, 4, 1, "", "measurements"], [280, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [280, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[281, 4, 1, "", "instrument_name"], [281, 4, 1, "", "value"]], "baybe.utils": [[283, 0, 0, "-", "augmentation"], [286, 0, 0, "-", "basic"], [299, 0, 0, "-", "boolean"], [303, 0, 0, "-", "chemistry"], [308, 0, 0, "-", "conversion"], [311, 0, 0, "-", "dataframe"], [324, 0, 0, "-", "interval"], [329, 0, 0, "-", "memory"], [331, 0, 0, "-", "numerical"], [338, 0, 0, "-", "plotting"], [342, 0, 0, "-", "random"], [345, 0, 0, "-", "sampling_algorithms"], [349, 0, 0, "-", "scaling"], [351, 0, 0, "-", "torch"], [354, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[284, 5, 1, "", "df_apply_dependency_augmentation"], [285, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[284, 4, 1, "", "affected"], [284, 4, 1, "", "causing"], [284, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[285, 4, 1, "", "column_groups"], [285, 4, 1, "", "df"]], "baybe.utils.basic": [[287, 1, 1, "", "Dummy"], [288, 1, 1, "", "classproperty"], [289, 5, 1, "", "find_subclass"], [290, 5, 1, "", "get_baseclasses"], [291, 5, 1, "", "get_subclasses"], [292, 5, 1, "", "group_duplicate_values"], [293, 5, 1, "", "hilberts_factory"], [294, 5, 1, "", "is_all_instance"], [295, 5, 1, "", "match_attributes"], [296, 5, 1, "", "refers_to"], [297, 5, 1, "", "register_hooks"], [298, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[287, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[288, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[290, 4, 1, "", "abstract"], [290, 4, 1, "", "cls"], [290, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[291, 4, 1, "", "abstract"], [291, 4, 1, "", "cls"], [291, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[292, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[295, 4, 1, "", "callable_"], [295, 4, 1, "", "ignore"], [295, 4, 1, "", "object"], [295, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[297, 4, 1, "", "post_hooks"], [297, 4, 1, "", "pre_hooks"], [297, 4, 1, "", "target"]], "baybe.utils.boolean": [[300, 5, 1, "", "check_if_in"], [301, 5, 1, "", "is_abstract"], [302, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[300, 4, 1, "", "allowed"], [300, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[301, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[302, 4, 1, "", "val"]], "baybe.utils.chemistry": [[304, 5, 1, "", "get_canonical_smiles"], [305, 5, 1, "", "get_fingerprint_class"], [306, 5, 1, "", "name_to_smiles"], [307, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[305, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[306, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[307, 4, 1, "", "encoding"], [307, 4, 1, "", "kwargs_conformer"], [307, 4, 1, "", "kwargs_fingerprint"], [307, 4, 1, "", "prefix"], [307, 4, 1, "", "smiles"]], "baybe.utils.conversion": [[309, 5, 1, "", "fraction_to_float"], [310, 5, 1, "", "nonstring_to_tuple"]], "baybe.utils.conversion.fraction_to_float.params": [[309, 4, 1, "", "value"]], "baybe.utils.dataframe": [[312, 5, 1, "", "add_fake_measurements"], [313, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [314, 5, 1, "", "add_parameter_noise"], [315, 5, 1, "", "arrays_to_dataframes"], [316, 5, 1, "", "df_drop_single_value_columns"], [317, 5, 1, "", "df_drop_string_columns"], [318, 5, 1, "", "df_uncorrelated_features"], [319, 5, 1, "", "filter_df"], [320, 5, 1, "", "fuzzy_row_match"], [321, 5, 1, "", "get_transform_objects"], [322, 5, 1, "", "pretty_print_df"], [323, 5, 1, "", "to_tensor"]], "baybe.utils.dataframe.add_fake_measurements.params": [[312, 4, 1, "", "bad_intervals"], [312, 4, 1, "", "data"], [312, 4, 1, "", "good_intervals"], [312, 4, 1, "", "good_reference_values"], [312, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[313, 4, 1, "", "df"], [313, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[314, 4, 1, "", "data"], [314, 4, 1, "", "noise_level"], [314, 4, 1, "", "noise_type"], [314, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[315, 4, 1, "", "input_labels"], [315, 4, 1, "", "output_labels"], [315, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[316, 4, 1, "", "df"], [316, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[317, 4, 1, "", "df"], [317, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[318, 4, 1, "", "df"], [318, 4, 1, "", "exclude_list"], [318, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[319, 4, 1, "", "complement"], [319, 4, 1, "", "df"], [319, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[320, 4, 1, "", "left_df"], [320, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [320, 4, 1, "", "parameters"], [320, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[321, 4, 1, "", "allow_extra"], [321, 4, 1, "", "allow_missing"], [321, 4, 1, "", "df"], [321, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[322, 4, 1, "", "df"], [322, 4, 1, "", "max_columns"], [322, 4, 1, "", "max_colwidth"], [322, 4, 1, "", "max_rows"], [322, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[323, 4, 1, "", "*x"]], "baybe.utils.interval": [[325, 7, 1, "", "InfiniteIntervalError"], [326, 1, 1, "", "Interval"], [327, 5, 1, "", "convert_bounds"], [328, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[325, 2, 1, "", "__init__"], [325, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[326, 2, 1, "", "__init__"], [326, 6, 1, "", "center"], [326, 2, 1, "", "contains"], [326, 2, 1, "", "create"], [326, 2, 1, "", "from_dict"], [326, 2, 1, "", "from_json"], [326, 6, 1, "", "is_bounded"], [326, 6, 1, "", "is_degenerate"], [326, 6, 1, "", "is_fully_unbounded"], [326, 6, 1, "", "is_half_bounded"], [326, 6, 1, "", "is_left_bounded"], [326, 6, 1, "", "is_right_bounded"], [326, 3, 1, "", "lower"], [326, 2, 1, "", "to_dict"], [326, 2, 1, "", "to_json"], [326, 2, 1, "", "to_ndarray"], [326, 2, 1, "", "to_tensor"], [326, 2, 1, "", "to_tuple"], [326, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[326, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[326, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[326, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[327, 4, 1, "", "bounds"]], "baybe.utils.memory": [[330, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[330, 4, 1, "", "num"]], "baybe.utils.numerical": [[332, 3, 1, "", "DTypeFloatNumpy"], [333, 3, 1, "", "DTypeFloatONNX"], [334, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [335, 5, 1, "", "closer_element"], [336, 5, 1, "", "closest_element"], [337, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[335, 4, 1, "", "target"], [335, 4, 1, "", "x"], [335, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[336, 4, 1, "", "array"], [336, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[337, 4, 1, "", "arr"], [337, 4, 1, "", "weights"]], "baybe.utils.plotting": [[339, 5, 1, "", "create_example_plots"], [340, 5, 1, "", "indent"], [341, 5, 1, "", "to_string"]], "baybe.utils.plotting.create_example_plots.params": [[339, 4, 1, "", "ax"], [339, 4, 1, "", "base_name"], [339, 4, 1, "", "path"]], "baybe.utils.plotting.to_string.params": [[341, 4, 1, "", "*fields"], [341, 4, 1, "", "header"], [341, 4, 1, "", "single_line"]], "baybe.utils.random": [[343, 5, 1, "", "set_random_seed"], [344, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[343, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[344, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[346, 1, 1, "", "DiscreteSamplingMethod"], [347, 5, 1, "", "farthest_point_sampling"], [348, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[346, 3, 1, "", "FPS"], [346, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[347, 4, 1, "", "initialization"], [347, 4, 1, "", "n_samples"], [347, 4, 1, "", "points"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[348, 4, 1, "", "df"], [348, 4, 1, "", "method"], [348, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[350, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[350, 2, 1, "", "__init__"], [350, 2, 1, "", "fit"], [350, 3, 1, "", "mapping"], [350, 2, 1, "", "transform"]], "baybe.utils.torch": [[352, 8, 1, "", "DTypeFloatTorch"], [353, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[355, 5, 1, "", "finite_float"], [356, 5, 1, "", "non_inf_float"], [357, 5, 1, "", "non_nan_float"], [358, 5, 1, "", "validate_not_nan"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 168, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 293, 323, 326, 359, 362, 369, 373, 376, 377, 380, 381, 383, 384, 385, 386, 387, 393, 397, 398, 399, 401, 402, 403, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420], "0": [8, 18, 30, 40, 41, 47, 84, 119, 127, 130, 148, 168, 192, 215, 217, 274, 275, 276, 284, 285, 302, 313, 314, 318, 319, 333, 361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 386, 388, 390, 391, 392, 394, 395, 396, 398, 399, 401, 406, 407, 410, 412, 413, 415, 416, 417, 419, 422], "00": [392, 415], "000": [373, 394], "001": [313, 410], "0014164480000431467": 376, "003022": 384, "005": [361, 362, 363, 365, 366], "01": [148, 368, 369, 374, 377, 391, 392, 399], "02": 399, "021": [246, 318], "021629": 388, "03213": [246, 318], "035233": 388, "039298": 384, "044399": 384, "045626": 384, "049705": 365, "05": 399, "053246": 391, "057": [361, 362, 363, 365, 366, 376], "06": [192, 258], "067300": 384, "071450": 390, "074593": 384, "076613": 384, "078559": 384, "08": 399, "095552": 390, "09653736976391157": 386, "099463": 384, "0f": 377, "1": [22, 27, 40, 84, 105, 119, 130, 156, 158, 168, 184, 215, 217, 219, 221, 274, 275, 276, 281, 284, 285, 292, 302, 314, 319, 333, 337, 347, 360, 361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 386, 388, 390, 391, 392, 394, 395, 396, 398, 399, 401, 402, 406, 409, 410, 412, 413, 415, 416, 417, 419, 422], "10": [168, 217, 246, 318, 360, 362, 371, 372, 373, 374, 377, 380, 381, 383, 384, 386, 388, 390, 394, 395, 396, 398, 399, 401, 408, 413, 417, 422], "100": [366, 371, 372, 373, 374, 377, 380, 381, 383, 384, 388, 394, 399, 412, 413, 417, 419, 422], "1000": 417, "102": 391, "1024": [124, 403, 413], "1038": [246, 318], "104469": 392, "105": [361, 362, 363, 365, 366, 376, 388, 415], "106": 388, "11": [288, 383, 384, 402], "111": 394, "1147": 373, "1148": 373, "1149": 373, "115": 388, "1150": 373, "12": [365, 383, 384, 392, 404, 415], "120": [361, 362, 363, 365, 366, 371, 373, 376, 413], "120000": 391, "122": 394, "123941": 384, "124": 392, "126": [371, 373, 374, 402], "1268824": [361, 362, 363], "128": [10, 392], "129": 392, "13": [383, 384, 398, 415], "1337": [377, 378, 422], "137075": 384, "137612": 390, "137678": 384, "14": [366, 383, 388, 415], "143": 388, "14448993259018328": 386, "1454": 403, "149267": 388, "149383": 384, "15": [217, 373, 383, 384, 398, 399, 401, 409, 415], "150": [371, 374, 410], "1500": 413, "151": 373, "153": [361, 362, 363, 365, 366, 376], "155190": 384, "155292": 384, "156133": 384, "157591": 390, "16": [322, 333, 383, 384], "161407": 390, "161553": 390, "163": 391, "169980": 366, "17": [366, 383, 384], "176976": 384, "177": 394, "18": [383, 384, 409], "180": 371, "181474": 384, "182776": 392, "188": 394, "189257": 384, "19": [383, 384], "192": 373, "1e": [192, 258], "2": [8, 18, 84, 86, 105, 217, 284, 285, 292, 312, 319, 337, 347, 360, 361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 377, 378, 380, 381, 383, 384, 386, 388, 390, 391, 392, 394, 395, 396, 398, 399, 401, 406, 409, 410, 412, 413, 415, 416, 417, 419], "20": [130, 217, 360, 361, 362, 363, 377, 378, 380, 383, 384, 388, 403, 413, 420, 422], "200": [362, 371, 373, 380, 381, 386, 394], "2004": 406, "2007": 420, "201107": 392, "201404": 384, "2021": 362, "2022": 401, "2024": 401, "21": [383, 395], "210": 365, "212015": 392, "217": 366, "22": [383, 388], "221": 403, "222": 394, "23": [383, 417], "231394": 388, "235": 391, "24": [372, 383, 415], "241": 413, "248271": 388, "25": [377, 383, 384, 392, 398, 415], "250": 407, "253": 391, "26": [383, 384, 392, 415], "269": 365, "27": [383, 388, 415], "275863": 390, "277": 388, "278": 388, "279": 388, "28": [383, 384], "280": 388, "29": [383, 401], "298809": 390, "299389": 384, "3": [217, 284, 285, 288, 292, 319, 322, 340, 361, 362, 363, 366, 369, 371, 372, 373, 374, 376, 378, 381, 383, 384, 386, 388, 390, 391, 392, 394, 395, 398, 399, 401, 402, 404, 406, 409, 410, 413, 415, 416, 417, 419, 420], "30": [360, 366, 374, 378, 383, 413], "307426": 384, "3078f3": 403, "308110": 384, "31": [383, 384, 395], "32": [365, 372, 383, 413], "321534": 384, "328530": 384, "33": [372, 383, 388], "330862": 390, "34": 372, "344476": 384, "35": [372, 383], "358017": 384, "359940": 384, "367962": 390, "375379": 392, "376050": 391, "384646": 390, "387936": 384, "39": [384, 413], "392127": 390, "394212": 388, "394264": 384, "397977": 390, "3d": 378, "4": [124, 284, 285, 322, 368, 369, 371, 372, 373, 374, 378, 383, 384, 386, 388, 390, 391, 392, 401, 406, 409, 410, 413, 415], "40": [383, 384, 412, 413], "408055": 384, "409834": 390, "410776": 388, "414497": 384, "42": [384, 386], "43": 384, "438290": 388, "44": [384, 388], "446515": 390, "447": 371, "448": 371, "449": 371, "45": [383, 388, 419], "450": 371, "456412": 384, "458133": 384, "468753": 384, "473649": 384, "474818": 388, "48": 366, "483376": 366, "49": 388, "493998": 388, "494275": 390, "494806": 384, "5": [84, 130, 284, 285, 361, 363, 368, 371, 372, 373, 374, 377, 380, 381, 383, 384, 388, 390, 391, 392, 394, 395, 396, 398, 399, 401, 406, 407, 408, 409, 410, 413, 415, 417, 420, 422], "50": [374, 381, 383, 384, 386, 398, 399, 406, 407, 413, 415, 419], "500": [378, 413], "501343": 384, "506539": 392, "5066666666666667": 386, "51": 388, "512307": 365, "513024": 390, "513557": 384, "52": 388, "523933": 388, "526849": 390, "528753": 384, "529181": 384, "529402": 392, "53": 388, "5313": 298, "532615": 384, "532726": 384, "539595": 390, "54": [384, 388, 401], "541079": 390, "55": [384, 388, 419], "552393": 388, "552416": 384, "56": [388, 417], "565184": 390, "572396": 384, "572913": 388, "574143": 388, "576987": 384, "58": 388, "587713": 384, "589658": 388, "59": [388, 394, 401], "590": 362, "590465": 392, "593084": 388, "593677": 384, "6": [284, 285, 322, 361, 362, 363, 371, 372, 373, 374, 383, 384, 386, 388, 390, 392, 394, 406, 410, 415], "60": [388, 412], "600105": 384, "600839": 390, "611067": 388, "62": [384, 386, 388], "626111": 384, "627986": 366, "63": 388, "636958": 388, "637498": 384, "64": 168, "641796": 384, "642323": 390, "643613": 392, "646845": 388, "65": 386, "656534": 384, "66": 388, "66368270ffd51418ec58bd793f2d9b1b": 420, "668790": 384, "67": 384, "670700": 388, "671686": 384, "673090": 384, "676065": 388, "676127": 390, "68": 388, "69": [361, 362, 363, 388], "7": [130, 284, 285, 318, 372, 374, 378, 383, 384, 388, 390, 398, 406, 413, 415], "70": 383, "701405": 388, "706249": 390, "706667": 391, "71": [366, 384, 413], "711721": 390, "715798": 384, "716221": 384, "717096": 384, "725504": 390, "730476": 384, "732373": 390, "740307": 388, "745": 422, "747887": 390, "75": [383, 415], "768050": 388, "77": 384, "774071": 390, "776213": 384, "778": 394, "782152": 388, "783209": 384, "784730": 390, "788195": 388, "79": [388, 401], "796870": 388, "7gz": 413, "7hf": 413, "8": [285, 361, 363, 371, 373, 374, 383, 384, 386, 388, 390, 401, 406, 410], "80": [384, 410], "800292": 384, "803683": 390, "81": 388, "816176": 388, "823119": 384, "8389": 298, "8417": 298, "842373": 384, "842682": 388, "843201": 392, "846412": 384, "857": 373, "858718": 384, "861": 374, "861723": 392, "862": 374, "863": 374, "864": 374, "866832": 384, "87": 394, "870909": 384, "873229": 384, "874458": 388, "879440": 390, "88": 394, "882356": 388, "882672": 384, "883676": 384, "8859": 380, "886204": 384, "886608": 384, "889": 394, "89": [362, 391, 394], "891734": 388, "891808": 392, "894744": 388, "895240": 384, "8jq": 413, "9": [374, 378, 383, 384, 388, 390, 406, 409, 415, 416], "90": [361, 362, 363, 365, 366, 376, 394, 415], "903287": 390, "910381": 390, "915354": 390, "923601": 388, "927097": 390, "942402": 384, "947653": 384, "95": 388, "954686": 390, "96": 362, "973756": 384, "974727": 388, "975042": 384, "976778": 384, "989144": 390, "99": 388, "995019": 388, "996980": 390, "999": 410, "A": [0, 8, 18, 22, 27, 34, 36, 37, 38, 40, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 64, 66, 67, 68, 69, 72, 74, 76, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 102, 104, 105, 109, 113, 116, 117, 119, 127, 130, 132, 141, 142, 143, 144, 145, 146, 147, 148, 151, 156, 157, 158, 160, 163, 166, 168, 170, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 193, 194, 209, 210, 215, 217, 219, 221, 224, 226, 227, 230, 234, 236, 237, 244, 246, 248, 250, 252, 254, 260, 264, 266, 272, 274, 275, 276, 284, 288, 290, 291, 292, 295, 305, 312, 318, 319, 321, 330, 337, 345, 347, 350, 360, 372, 381, 383, 384, 386, 388, 395, 396, 402, 403, 404, 406, 410, 413, 414, 415, 416, 419, 420], "AND": [50, 373, 406, 410], "AS": [401, 406], "And": 380, "As": [361, 362, 363, 378, 386, 388, 398, 399, 401, 402, 403, 410, 414, 415, 417], "At": 419, "But": 419, "By": [104, 117, 132, 192, 301, 319, 384, 404, 411, 414, 415], "FOR": 406, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 138, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 215, 221, 224, 226, 227, 228, 230, 234, 237, 244, 246, 248, 250, 252, 254, 264, 266, 272, 277, 297, 320, 326, 339, 350, 361, 362, 363, 365, 366, 372, 376, 377, 378, 383, 384, 386, 388, 392, 398, 399, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422], "If": [6, 13, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 99, 104, 105, 109, 132, 136, 137, 156, 157, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 198, 199, 215, 217, 219, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 275, 280, 285, 290, 291, 295, 297, 300, 302, 305, 309, 312, 313, 314, 318, 319, 320, 321, 339, 341, 347, 348, 366, 368, 377, 383, 391, 392, 395, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 417, 418, 419, 420, 422], "In": [27, 41, 53, 154, 156, 157, 158, 168, 186, 213, 215, 295, 322, 361, 362, 363, 365, 377, 378, 380, 383, 384, 386, 388, 391, 392, 395, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422], "It": [22, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 213, 229, 250, 312, 361, 365, 366, 372, 381, 383, 386, 388, 392, 394, 395, 396, 398, 401, 408, 409, 410, 411, 413, 414, 415, 417, 422], "Its": [217, 380], "No": [390, 403], "Not": [406, 410], "OF": [401, 406], "OR": [401, 406], "Of": [366, 375, 400, 416], "On": [380, 386], "One": [121, 361, 363, 401], "Or": 411, "Such": [366, 410, 417], "That": [186, 217, 224, 226, 227, 230, 234, 248, 250, 252, 254, 275, 366, 371, 383, 404, 415, 417, 420], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 105, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 138, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 204, 205, 207, 209, 213, 215, 217, 219, 224, 226, 227, 228, 230, 234, 237, 248, 250, 252, 254, 256, 258, 260, 261, 264, 266, 269, 272, 274, 275, 276, 278, 280, 281, 284, 285, 288, 290, 291, 292, 295, 297, 300, 301, 302, 305, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 330, 335, 336, 337, 339, 341, 343, 344, 347, 348, 361, 362, 363, 366, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 388, 391, 392, 396, 398, 399, 402, 403, 404, 406, 409, 410, 411, 412, 413, 414, 415, 418, 419, 421, 422], "Then": 378, "There": [71, 258, 333, 383, 390, 401, 402, 404, 408, 415], "These": [278, 359, 362, 363, 364, 367, 370, 375, 379, 382, 385, 387, 389, 393, 397, 404, 408, 410, 411, 413, 415], "To": [361, 366, 377, 378, 384, 386, 394, 398, 399, 401, 402, 404, 408, 409, 411, 413, 417], "Will": 407, "With": [312, 377, 378, 383, 386, 398, 399, 401, 408, 410, 413, 416], "_": [136, 137, 189, 195, 202, 339, 368, 377, 399], "__class__": [376, 386], "__excepthook__": 402, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 224, 226, 227, 228, 230, 234, 236, 237, 244, 246, 248, 250, 252, 254, 264, 266, 272, 287, 288, 325, 326, 350, 415, 416], "__name__": [376, 386], "__new__": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 121, 122, 124, 325], "__str__": 403, "__version__": 403, "_amount": 383, "_arraylik": 315, "_c": 291, "_cumbest": 215, "_default_my_attribut": 404, "_fit": 261, "_iterbest": 215, "_label": 383, "_measur": 215, "_n_last_measur": 156, "_nbase": 307, "_nestedsequ": [105, 274, 275, 276, 336], "_no_tl": 398, "_option": 403, "_posterior": 261, "_step": 156, "_supportsarrai": [105, 274, 275, 276, 336], "_surrogate_model": [377, 378], "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 197, 205, 206, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 292, 293, 294, 310, 321, 326], "_target": 403, "_tparamet": 132, "_tsurrog": 257, "_u": 292, "_validate_my_attribut": 404, "a1": 285, "a2": 285, "ab": [374, 383], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 289, 296, 403, 421], "abc": [20, 30, 31, 32, 33, 34, 36, 79, 80, 81, 99, 113, 114, 140, 154, 163, 166, 173, 178, 226, 227, 264, 301], "abil": [407, 420], "abl": [378, 402, 408, 410, 413, 416, 422], "about": [22, 27, 114, 130, 264, 281, 361, 362, 363, 383, 391, 392, 401, 403, 404, 413, 415], "abov": [258, 276, 301, 318, 360, 366, 373, 374, 376, 377, 384, 390, 401, 404, 406, 407, 408, 409, 410, 411, 413, 416, 417, 420], "absenc": 412, "absolut": [127, 314, 401], "abstract": [20, 30, 31, 32, 33, 34, 36, 79, 80, 81, 99, 112, 113, 114, 140, 154, 163, 166, 173, 227, 264, 290, 291, 301, 403, 410, 420], "abstractli": 386, "acceler": [401, 403, 405, 420], "accept": [27, 156, 234, 315, 320, 377, 378, 403, 406, 411, 412, 413, 417, 419], "access": [184, 192, 224, 226, 227, 230, 234, 248, 250, 252, 254, 361, 362, 363, 371, 376, 399, 403, 410, 416], "accord": [40, 152, 384, 407, 410, 411, 414, 422], "accordingli": [168, 409, 416], "account": 408, "accumul": [142, 386, 420], "accur": 409, "acet": [361, 362, 363, 365, 366], "aceton": 383, "achiev": [17, 192, 378, 383, 386, 401, 404, 407, 409, 410], "ack": 401, "acq_funct": 366, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 377, 378, 386], "acqf1": 416, "acqf2": 416, "acqf_valu": 377, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 63, 68, 166, 168, 371, 372, 373, 374, 377, 378, 386, 388, 394, 401, 403, 407, 414, 416, 418], "acquisition_funct": [166, 168, 366, 386, 395, 396, 403], "acquisition_function_cl": [166, 168, 403], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 22, 24, 25, 166, 168, 386, 416], "across": [383, 386, 398, 408, 414, 420], "act": [383, 403, 406, 410, 417], "action": [17, 376, 386, 403, 421], "activ": [13, 30, 117, 158, 377, 378, 386, 401, 402, 403, 404, 410, 411, 412, 414, 420, 421, 422], "active_dim": [79, 80, 81, 84, 86, 88, 89, 90], "active_valu": [117, 398, 399, 420], "actual": [156, 186, 213, 391, 403, 415, 417, 420, 422], "ad": [27, 192, 280, 284, 312, 347, 383, 384, 404, 407, 411, 412, 413, 418, 419, 421], "adapt": [246, 302, 318], "add": [27, 207, 217, 312, 313, 366, 380, 381, 383, 388, 398, 401, 406, 408, 409, 410, 415, 420, 422], "add_collection3d": 378, "add_fake_measur": [365, 366, 371, 372, 373, 374, 380, 381, 388, 403, 408, 417, 422], "add_fake_result": 403, "add_measur": [27, 365, 366, 368, 369, 371, 372, 373, 374, 378, 380, 381, 386, 388, 391, 392, 401, 403, 408, 409, 411], "add_noise_to_perturb_degenerate_row": 403, "add_parameter_nois": [403, 422], "add_subplot": 378, "addendum": 406, "addit": [27, 99, 104, 109, 156, 168, 186, 207, 215, 217, 219, 314, 361, 362, 363, 384, 391, 399, 401, 403, 405, 406, 409, 410, 411, 412, 413, 415, 416, 417, 420, 422], "addition": [376, 384, 401], "additivekernel": 403, "address": 417, "adher": [403, 404], "adjust": [362, 366, 391, 403], "adopt": 366, "adrian": [401, 405], "advanc": [386, 402, 403, 411, 416, 420, 421], "advantag": [383, 404], "advic": 404, "advis": [406, 417], "affect": [27, 49, 168, 284, 376, 394, 402, 410], "affected_paramet": [49, 371, 372, 373, 374, 383, 410], "affili": [401, 411], "afford": 409, "aforement": [186, 411], "after": [158, 192, 297, 365, 366, 371, 372, 373, 374, 378, 388, 394, 401, 409, 416], "afterward": 416, "again": [377, 408, 410, 414, 420], "against": [75, 280, 295, 383, 406, 420], "agent": 384, "agraw": 405, "agre": [401, 406], "agreement": 406, "ai": [77, 138, 333], "aim": 409, "akin": 408, "al": [362, 401, 413], "aldrich": 405, "alex": 405, "alexand": [401, 405], "algorithm": [161, 168, 312, 345, 347, 360, 383, 388, 401, 403, 408, 414], "alia": [129, 170, 413], "alias": 403, "align": [184, 297, 377, 415, 420], "all": [19, 20, 29, 31, 36, 49, 51, 78, 79, 80, 81, 98, 99, 104, 111, 114, 117, 119, 123, 130, 139, 140, 150, 153, 154, 156, 162, 163, 165, 168, 172, 173, 186, 193, 194, 217, 224, 225, 227, 263, 264, 284, 294, 295, 312, 361, 362, 363, 366, 368, 369, 371, 372, 376, 377, 378, 383, 384, 386, 388, 390, 391, 398, 399, 401, 403, 404, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422], "allclos": [368, 369, 384], "alleg": 406, "allow": [17, 30, 40, 47, 51, 99, 104, 109, 127, 132, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 192, 219, 281, 300, 320, 321, 361, 362, 363, 366, 383, 384, 398, 399, 401, 403, 407, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 422], "allow_extra": [99, 104, 109, 184, 186, 192, 197, 321, 388, 403], "allow_miss": [99, 104, 109, 184, 186, 192, 197, 321, 403], "allow_recommending_already_measur": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 192, 366, 377, 386, 395, 396, 403, 414], "allow_recommending_pending_experi": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 403, 408, 414], "allow_repeated_recommend": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 192, 366, 377, 386, 395, 396, 403, 414], "almost": 362, "alon": [403, 406], "along": [337, 406, 413, 420], "alongsid": 406, "alpha": [142, 378], "alphabet": [133, 403], "alreadi": [27, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 192, 366, 383, 392, 401, 403, 407, 408, 414, 415, 417, 418, 420, 422], "also": [53, 132, 224, 226, 227, 230, 234, 248, 250, 252, 254, 281, 295, 297, 312, 313, 314, 361, 368, 369, 377, 378, 380, 381, 383, 388, 391, 392, 394, 398, 399, 401, 403, 404, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422], "alter": [383, 403, 409], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 258, 337, 376, 383, 384, 390, 401, 403, 421, 422], "although": [383, 392, 395, 415, 417], "alwai": [13, 27, 36, 202, 203, 380, 383, 384, 401, 407, 409, 410, 417, 418, 420, 422], "ambigu": [127, 415], "amend": 410, "among": [30, 383, 401, 420], "amount": [285, 340, 348, 384, 398, 399, 408, 413, 422], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 63, 65, 68, 73, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 100, 102, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 205, 207, 209, 213, 215, 217, 219, 224, 226, 227, 230, 231, 234, 237, 248, 250, 252, 254, 256, 257, 264, 266, 272, 284, 293, 295, 297, 300, 306, 310, 318, 319, 320, 322, 325, 326, 327, 336, 339, 341, 347, 348, 361, 363, 364, 366, 373, 374, 376, 377, 380, 381, 384, 388, 390, 394, 395, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420], "analog": [186, 312, 415, 416], "analogi": [152, 414], "analysi": 418, "analyt": [3, 4, 7, 8, 68, 417, 420], "analyz": 404, "angl": 378, "ani": [57, 58, 105, 112, 113, 114, 116, 117, 119, 130, 132, 135, 136, 137, 192, 202, 203, 207, 211, 212, 219, 248, 252, 254, 274, 275, 276, 281, 284, 294, 295, 297, 298, 300, 301, 320, 326, 328, 336, 341, 355, 356, 357, 358, 376, 383, 398, 399, 401, 402, 403, 404, 406, 408, 409, 411, 413, 416, 417, 420], "annot": [297, 376, 406], "anonym": [401, 411], "anoth": [49, 327, 362, 372, 373, 380, 381, 383, 392, 404, 410, 420], "ansatz": 403, "answer": 409, "anti": 319, "anymor": [403, 420], "anyth": 302, "anywai": 418, "anywher": 368, "apach": [401, 406], "apart": [404, 409], "api": [41, 401, 402, 416], "appar": 416, "appdata": 402, "appear": [295, 402, 403, 406, 416], "append": [378, 399], "appendix": 406, "appli": [27, 36, 37, 38, 53, 168, 186, 213, 215, 295, 306, 314, 350, 366, 367, 370, 371, 373, 374, 376, 377, 383, 398, 402, 403, 406, 410, 412, 414, 415, 416, 417, 418, 419, 420], "applic": [341, 401, 404, 406, 413, 414, 417], "approach": [192, 377, 386, 401, 404, 407, 409, 414, 416, 420], "appropri": [43, 44, 96, 192, 386, 404, 406, 415], "approxim": [10, 17], "ar": [6, 12, 14, 27, 30, 34, 36, 37, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 62, 69, 70, 71, 99, 104, 105, 109, 117, 130, 132, 137, 151, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 215, 217, 219, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 276, 278, 280, 281, 284, 285, 290, 291, 292, 294, 295, 297, 301, 302, 312, 313, 315, 316, 320, 321, 339, 347, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 376, 377, 378, 381, 383, 384, 386, 388, 390, 391, 394, 395, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422], "arang": [368, 378, 413], "arbitrari": [157, 186, 328, 403, 410, 413, 414, 417, 420, 422], "arbitrarili": [412, 416], "architectur": [261, 403, 418, 420], "ard_num_dim": [79, 80, 81, 84, 86, 88, 89, 90], "area": 378, "arg": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 83, 85, 87, 92, 93, 94, 140, 142, 143, 144, 145, 146, 147, 148, 151, 170, 228, 231, 236, 325, 404], "argu": 383, "argument": [76, 77, 130, 132, 138, 154, 156, 157, 158, 184, 192, 228, 297, 319, 366, 381, 388, 403, 410, 413, 414, 415, 416, 417, 420], "aris": [52, 383, 403, 406, 410, 416, 422], "arithmet": [107, 412], "arizona": 405, "arm": [223, 224, 400, 405], "arm_index": 386, "around": [177, 219, 221, 388, 403, 414, 416, 422], "arr": [274, 275, 276, 337], "arrai": [105, 274, 275, 276, 287, 315, 323, 332, 336, 337, 347, 378, 403, 414, 418], "arrays_to_datafram": [368, 369, 378, 391, 392, 398, 399, 403, 417], "arriv": 401, "artifici": 422, "aryl": [361, 362, 363, 365, 401, 413], "ascend": 388, "ask": [383, 401, 403, 404, 409], "aspect": [364, 368, 369, 392, 408, 411], "assembl": [383, 416], "assembli": 421, "assert": [58, 371, 372, 373, 374, 380, 381, 383, 384, 390, 394, 403, 406, 409, 410, 416], "assess": 417, "assign": [312, 377, 384, 390, 413], "associ": [186, 386, 406, 409, 411, 412, 420], "assum": [22, 41, 229, 297, 321, 361, 362, 363, 366, 368, 369, 371, 372, 373, 374, 380, 381, 383, 386, 388, 391, 392, 394, 401, 406, 410, 413, 416, 418, 419, 422], "assumpt": 417, "assur": 410, "asynchron": [401, 414, 421], "atol": [368, 369], "atompair": 124, "atompairfingerprint": 124, "attach": [22, 297, 376, 377, 378, 406], "attempt": [67, 73, 229, 339, 386, 402, 403, 408, 410, 414], "attent": 158, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 224, 226, 227, 230, 234, 237, 244, 246, 248, 250, 252, 254, 264, 266, 272, 295, 298, 326, 350, 358, 403], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 75, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 107, 109, 112, 113, 114, 116, 117, 119, 121, 122, 124, 126, 127, 128, 130, 132, 135, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 187, 191, 192, 201, 205, 207, 224, 226, 227, 230, 234, 237, 241, 244, 246, 248, 250, 252, 254, 261, 264, 265, 266, 269, 270, 272, 295, 310, 321, 326, 331, 346, 350, 351, 354, 355, 356, 357, 358, 390, 403, 404, 406, 414, 416, 418, 419], "audit": [401, 403, 404], "augment": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 186, 256, 257, 258, 403, 409], "author": 406, "authorship": 406, "auto": [12, 14, 403, 405], "auto_tutori": 333, "autocorr": 124, "autocorrfingerprint": 124, "autodoc": 403, "automat": [27, 102, 168, 234, 320, 360, 378, 391, 402, 403, 404, 412, 414, 415, 420, 421], "avail": [2, 107, 119, 121, 122, 124, 130, 154, 156, 157, 158, 192, 215, 217, 241, 269, 270, 281, 346, 347, 348, 363, 365, 368, 369, 383, 388, 391, 392, 401, 402, 403, 404, 406, 408, 409, 411, 413, 414, 415, 416, 417, 420, 421], "available_acq_funct": 366, "avalon": 124, "avalonfingerprint": 124, "averag": [250, 377, 378, 399, 413, 417], "avoid": [186, 298, 337, 403, 404, 408, 409, 413, 415], "awai": 419, "awar": [383, 398, 399, 407, 416], "ax": [339, 360, 362, 377, 378, 398, 399], "axes3d": [339, 378], "axi": [184, 215, 337, 360, 368, 369, 374, 377, 378, 383, 384, 386, 388, 391, 392, 398, 399, 415], "azim": 378, "azur": 403, "b": [52, 148, 246, 284, 292, 318, 319, 362, 372, 381, 386, 395, 396, 401, 404, 406, 409, 413, 416], "b1": 285, "b2": 285, "back": [0, 394, 404], "backend": 281, "backport": 402, "backtest": [213, 214, 220, 361, 362, 363, 377, 397, 400, 401, 403, 414, 417], "backtick": 404, "backward": [95, 101, 169, 170, 186, 403], "bad": [388, 409, 411, 419], "bad_interv": 312, "badg": 403, "bai": 401, "baird": 405, "balanc": [104, 386, 401], "banana": 404, "bandit": [224, 366, 400, 401, 403, 405], "banner": 403, "bar": [380, 381, 383, 394, 395, 396, 401, 403, 418], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 107, 109, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 160, 163, 166, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 191, 192, 205, 207, 209, 224, 226, 227, 228, 229, 230, 234, 236, 237, 241, 244, 246, 248, 250, 252, 254, 258, 260, 264, 266, 269, 270, 272, 287, 288, 289, 290, 291, 315, 319, 326, 339, 346, 347, 350, 360, 365, 366, 377, 378, 380, 382, 386, 400, 401, 403, 406, 407, 410, 411, 413, 414, 415, 416, 418], "base1": 384, "base2": 384, "base_data": 377, "base_kernel": [92, 93, 94], "base_nam": [339, 360, 362, 377, 378, 398, 399], "base_predictor": 256, "base_smil": 377, "basefingerprinttransform": 305, "baselin": [360, 362, 398, 401, 413], "bashrc": 411, "basi": [88, 401, 406], "basic": [79, 83, 84, 85, 86, 87, 88, 89, 90, 142, 143, 144, 145, 146, 147, 148, 215, 287, 288, 361, 362, 363, 366, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 388, 391, 392, 393, 394, 397, 400, 403, 404, 412, 413, 417, 421], "basic_transfer_learn": 399, "basickernel": [83, 84, 85, 86, 87, 88, 89, 90, 403], "batch": [27, 151, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 218, 256, 257, 366, 371, 372, 373, 374, 378, 388, 391, 392, 394, 398, 399, 403, 408, 414, 417], "batch_quant": 403, "batch_shap": [79, 80, 81, 84, 86, 88, 89, 90], "batch_siz": [27, 40, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 215, 219, 221, 360, 361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 384, 386, 388, 391, 392, 394, 395, 398, 399, 401, 403, 408, 409, 411, 417], "batchnr": 388, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 107, 109, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 187, 191, 192, 209, 224, 226, 227, 228, 230, 234, 236, 237, 241, 244, 246, 248, 250, 252, 254, 264, 266, 269, 270, 272, 287, 288, 326, 346, 350, 359, 360, 361, 362, 363, 364, 366, 368, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422], "baybe_cach": 411, "baybe_cache_dir": [403, 411], "baybe_deactivate_polar": [403, 411], "baybe_debug_fake_hosthash": 403, "baybe_debug_fake_userhash": 403, "baybe_numpy_use_single_precis": [334, 403, 411], "baybe_telemetry_en": [401, 411], "baybe_telemetry_endpoint": [403, 411], "baybe_telemetry_host": 403, "baybe_telemetry_hostnam": [403, 411], "baybe_telemetry_usernam": [403, 411], "baybe_telemetry_vpn_check": [403, 411], "baybe_telemetry_vpn_check_timeout": [403, 411], "baybe_torch_use_single_precis": [353, 403, 411], "bayesian": [0, 160, 166, 168, 213, 215, 219, 221, 229, 248, 386, 403, 407, 409, 418, 421], "bayesian_recommend": 378, "bayesianlinearmodel": 381, "bayesianlinearsurrog": [366, 418], "bayesianrecommend": [160, 168, 229, 403, 414], "bayesianridg": 380, "bcw07": 420, "becaus": [71, 127, 186, 192, 221, 301, 376, 377, 383, 399, 404, 407, 409, 410, 411, 412, 413, 416, 417, 420], "becom": [186, 383, 407, 409, 410, 416, 419, 422], "been": [22, 67, 68, 154, 156, 157, 158, 192, 224, 226, 227, 230, 234, 248, 250, 252, 254, 320, 361, 362, 366, 401, 402, 403, 406, 408, 414, 420], "befor": [67, 158, 215, 224, 226, 227, 230, 234, 248, 250, 252, 254, 297, 360, 363, 366, 372, 377, 401, 403, 404, 411, 413, 415], "begin": [156, 371, 373, 390, 394, 414], "behalf": 406, "behav": [378, 394, 416], "behavior": [168, 403, 411, 412, 414, 415, 420], "behind": [412, 416, 417, 419], "being": [94, 312, 339, 386, 402, 403, 410, 411, 413, 415], "bell": [270, 274, 388, 419], "belong": [376, 416], "below": [258, 276, 373, 376, 377, 383, 404, 406, 407, 409, 410, 412, 416, 418, 419, 420], "benchmark": [401, 403, 405], "benefici": [406, 407, 411], "benefit": [410, 420], "benzo": 420, "bernoulli": [224, 385, 400, 405], "besid": [401, 412, 419], "best": [12, 14, 215, 217, 219, 363, 386, 401, 411, 414], "bet": 409, "beta": [8, 18, 142, 224, 366, 403, 407], "betabernoullimultiarmedbanditsurrog": [366, 386, 403], "betaprior": [224, 403], "better": [10, 312, 362, 403, 409, 410, 413], "between": [30, 49, 127, 157, 184, 192, 244, 319, 376, 378, 383, 386, 388, 392, 398, 399, 401, 403, 404, 408, 409, 410, 411, 413, 414, 415, 416, 419, 420], "beyond": 401, "bias": 413, "bin": 383, "binar": 403, "binari": [266, 394, 402, 403, 416], "binarytarget": [267, 386, 403], "bind": [376, 378, 406], "bit": [403, 413], "black": [213, 417, 420], "blackbox": [359, 360, 400], "blank": 404, "blob": 246, "block": [377, 383, 401, 402, 403, 411, 416], "bodi": 376, "bonilla": 420, "bool": [6, 12, 14, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 99, 104, 105, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 197, 224, 226, 227, 230, 234, 248, 250, 252, 254, 266, 267, 274, 275, 276, 279, 280, 290, 291, 295, 296, 301, 302, 315, 319, 320, 321, 326, 336, 341, 386], "boolean": [30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130, 321, 366, 411], "boost": [252, 399], "both": [10, 132, 186, 192, 221, 276, 297, 360, 372, 377, 380, 383, 384, 386, 388, 398, 399, 401, 404, 407, 410, 413, 415, 416, 419, 422], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 41, 160, 168, 170, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 368, 369, 378, 392, 398, 399, 403, 411, 414], "botorch_acqf": [22, 377, 378], "botorch_function_wrapp": 403, "botorchrecommend": [160, 170, 366, 371, 372, 373, 374, 377, 378, 380, 381, 386, 388, 392, 394, 395, 396, 401, 403, 408, 409, 414], "bottom": 409, "bound": [8, 18, 30, 126, 132, 148, 184, 186, 192, 197, 257, 272, 273, 291, 297, 321, 326, 327, 360, 366, 368, 369, 378, 384, 388, 390, 391, 392, 398, 399, 403, 413, 416, 419, 421, 422], "boundari": [192, 274, 275, 388], "boundary_onli": [192, 383], "bounded": 403, "bounds_transform_func": 403, "box": [148, 213, 417, 420], "brain": [417, 420], "branch": [401, 404], "break": [229, 416], "brettpho": [361, 362, 363, 365, 366], "briefli": [417, 420], "bring": [401, 403], "bro": 246, "broad": 416, "brute": [168, 414], "bu": [361, 362, 363, 365, 366], "bucket": 383, "budget": 409, "bug": [403, 404], "build": [184, 192, 229, 377, 383, 402, 403, 404, 410, 416, 420, 421, 422], "built": [192, 380, 401, 404, 409, 414], "builtin": 288, "bump": 403, "button": 403, "butyl": [361, 362, 363, 365, 366], "butylphenylphosphin": [361, 362, 363, 365, 366], "butyornitril": [361, 362, 363, 365, 366], "bypass": [132, 377], "byte": [105, 191, 230, 274, 275, 276, 330, 336, 403, 422], "c": [52, 284, 292, 361, 362, 363, 365, 366, 371, 372, 373, 374, 381, 383, 395, 396, 401, 402, 406, 409, 413, 415, 416], "c1": [361, 362, 363, 365, 366, 371, 372, 373, 374, 413], "c1c2": [361, 362, 363, 365, 366], "c1ccccc1": [361, 362, 363, 371, 373], "c1ccoc1": 410, "c2": [361, 362, 363, 365, 366, 371, 373, 374], "c2ccccc2": [361, 362, 363], "c2oc": [361, 362, 363, 365, 366], "c2p": [361, 362, 363, 365, 366], "c3": [361, 362, 363, 365, 366, 371, 373], "c3c": [361, 362, 363], "c3ccccc3": [361, 362, 363, 365, 366], "c4": [361, 362, 363, 371, 373], "c4ccccc4": [361, 362, 363, 365, 366], "c5": [371, 373], "c6": [371, 373], "c_g2_min": 384, "c_g3_max": 384, "c_i": 410, "c_total_sum": 384, "cach": [280, 403, 416, 421], "cached_recommend": 280, "calcul": [280, 337, 368, 378, 398, 411, 413, 415], "calibr": 420, "call": [41, 76, 154, 156, 157, 158, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 280, 281, 297, 315, 361, 362, 363, 376, 381, 383, 384, 395, 396, 401, 402, 403, 407, 409, 410, 411, 413, 416, 417, 420], "callabl": [48, 75, 132, 205, 213, 215, 217, 219, 221, 256, 257, 260, 261, 288, 293, 295, 297, 315, 360, 376, 403, 421], "callable_": 295, "campaign": [215, 218, 219, 221, 312, 314, 364, 365, 373, 375, 378, 386, 396, 398, 399, 400, 401, 403, 407, 408, 410, 412, 413, 415, 416, 417, 418, 420, 421, 422], "campaign1": 417, "campaign2": 417, "campaign_json": 409, "campaign_oh": 362, "campaign_rand": [361, 362, 363], "campaign_recr": 394, "campaign_stop": 377, "campaign_with_hook": 377, "campaignstoppedexcept": 377, "can": [13, 17, 22, 27, 30, 36, 37, 38, 52, 113, 119, 127, 130, 151, 160, 161, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 213, 217, 224, 226, 227, 228, 229, 230, 234, 248, 250, 252, 254, 258, 267, 279, 281, 295, 297, 301, 312, 314, 315, 320, 333, 360, 361, 362, 363, 366, 367, 370, 371, 372, 373, 376, 377, 378, 380, 381, 383, 384, 386, 388, 390, 391, 392, 395, 398, 399, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422], "canada": 405, "candid": [12, 14, 27, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 192, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 377, 399, 403, 407, 408, 409, 414, 415], "candidates_comp_rep": 377, "cannot": [13, 74, 75, 229, 230, 258, 302, 339, 386, 403, 406, 408, 410, 411, 413, 414, 416, 418, 420], "canon": [304, 416], "capabl": [359, 385, 387, 393, 397, 399, 403, 405, 409, 420], "captur": 413, "cardin": [30, 40, 47, 57, 58, 184, 403, 405], "cardinalityconstraint": [40, 47, 403], "care": [45, 383, 404, 410, 412], "carefulli": 411, "carlo": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 68, 219, 360, 362, 363, 377, 386, 398, 399, 408, 417], "carri": [297, 376, 406], "cartesian": [186, 192, 193, 194, 401, 403, 415], "case": [154, 156, 157, 158, 221, 258, 297, 312, 322, 377, 382, 383, 391, 392, 395, 401, 402, 404, 407, 408, 409, 410, 411, 413, 416, 417, 419, 420, 422], "cast": [41, 403], "cat": 319, "cat_1": 388, "cat_1_22": 388, "cat_1_33": 388, "cat_2": 388, "catch_constant_target": 403, "categor": [27, 116, 117, 121, 192, 199, 320, 401, 403, 413, 415, 419], "categori": [362, 377, 401, 403, 416, 419], "categorical_1": [388, 409], "categorical_2": [388, 409], "categorical_paramet": 416, "categorical_parameter_json": 416, "categorical_parameter_reconstruct": 416, "categoricalencod": [116, 117, 371, 372, 373, 374, 388, 394], "categoricalparamet": [117, 192, 362, 371, 372, 373, 374, 381, 386, 388, 394, 395, 396, 401, 403, 415, 416, 421], "cattr": [204, 205, 207, 396, 402, 403, 404], "cauchi": 144, "caus": [127, 284, 288, 403, 406], "caution": 420, "cc": [361, 362, 363, 365, 366, 371, 373, 374, 383, 413, 420], "cc1": [361, 362, 363, 365, 366, 413], "ccc": [371, 373, 381, 401], "cccc": [361, 362, 363, 365, 366, 371, 373], "ccccc": [371, 373, 395, 396], "cccccc": [371, 373], "cccccccco": [410, 413], "ccccoc": [361, 362, 363, 365, 366], "cco": 383, "ccoccoccn": [395, 396], "cdot": [410, 412], "ceil": 377, "cell": [380, 413, 417, 420], "cell_lin": 420, "center": [274, 276, 326, 388, 409], "central": [403, 409], "certain": [27, 49, 75, 158, 205, 207, 213, 281, 294, 312, 340, 372, 377, 386, 401, 404, 410, 414, 416, 420, 422], "cesium": [361, 362, 363, 365, 366], "ch": 340, "chai": 420, "chain": [34, 288, 410], "challeng": [404, 416], "chanc": 402, "chang": [49, 156, 312, 313, 314, 366, 383, 391, 401, 402, 404, 406, 409, 411, 413, 415, 420], "charact": 406, "characterist": 288, "charg": 406, "check": [27, 112, 113, 114, 116, 117, 119, 126, 127, 130, 280, 294, 296, 299, 300, 301, 302, 320, 326, 335, 391, 392, 394, 401, 403, 404, 411, 415, 416], "checker": 403, "checkout": 404, "chem": [401, 403, 413], "chemic": [306, 362, 365, 383, 403, 405, 410, 413, 420], "cheminformat": [130, 401, 403], "chemistri": [119, 371, 373, 374], "child": [175, 176, 177, 178, 404], "chocol": 404, "choic": [215, 217, 347, 376, 383, 386, 392, 403, 410, 412, 413, 414, 415, 416, 419], "choos": [152, 383, 384, 386, 388, 390, 391, 392, 401, 406, 407, 409, 414, 418, 419], "chose": [391, 416], "chosen": [65, 160, 215, 217, 221, 343, 344, 366, 386, 403, 407, 410, 413, 415], "christoph": 420, "ci": [369, 398, 399, 403, 404], "circular": 413, "circumv": [402, 416], "cl": [45, 102, 202, 206, 258, 290, 291, 296, 301, 328], "claim": 406, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 205, 207, 208, 209, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 286, 287, 288, 289, 290, 291, 296, 301, 305, 324, 326, 341, 345, 346, 349, 350, 366, 376, 377, 380, 386, 395, 403, 409, 410, 412, 413, 414, 415, 416, 418], "classic": [386, 412], "classifi": 413, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 288, 326, 403], "classvalidationerror": [396, 402], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 224, 226, 227, 230, 234, 248, 250, 252, 254], "clean": [316, 317, 318, 402, 403, 404], "clear": [333, 420], "click": [386, 413], "clone": 404, "close": [215, 221, 269, 360, 377, 398, 399, 417], "closer": [335, 413], "closest": [280, 320, 336], "closest_el": 403, "closur": [213, 417], "cluster": [175, 176, 177, 178, 366, 403, 405, 421], "clustering_x": 403, "cmap": 378, "cn": [361, 362, 363, 365, 366], "co": 383, "co1": [361, 362, 363], "co2": [361, 362, 363], "co3": [361, 362, 363], "coars": [381, 394, 395, 396, 401], "coc": [381, 395, 396, 401], "cococ": [395, 396], "code": [229, 362, 381, 386, 391, 395, 396, 401, 402, 403, 406, 410, 411, 413, 417, 420, 422], "coeffici": [41, 43, 44, 368, 369, 384, 410], "coerc": 403, "collect": [27, 57, 58, 82, 92, 93, 132, 133, 141, 156, 158, 184, 192, 198, 199, 210, 217, 282, 284, 286, 294, 295, 312, 321, 345, 347, 360, 366, 378, 383, 386, 398, 399, 401, 403, 409, 411], "color": 378, "column": [36, 37, 38, 99, 104, 105, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 215, 217, 219, 221, 284, 285, 313, 315, 316, 317, 318, 319, 321, 322, 350, 362, 365, 371, 372, 373, 374, 377, 383, 388, 394, 398, 399, 403, 409, 415, 416, 417], "column_group": 285, "com": [246, 298, 318, 401, 403], "comb": 383, "combin": [50, 132, 186, 192, 193, 194, 288, 306, 361, 362, 363, 371, 373, 376, 377, 383, 388, 401, 402, 406, 410, 412, 414, 415, 417, 420, 422], "combinatori": 422, "combine_func": 96, "come": [386, 401, 409, 416, 420, 422], "command": 402, "comment": 403, "commerci": 406, "commit": [401, 403, 404], "common": [141, 380, 384, 403, 404, 406, 409, 410, 413, 416], "commonli": 412, "commun": [406, 412, 420], "comp_df": [113, 116, 117, 119, 127, 130, 403], "comp_rep": [192, 378, 380, 403, 415], "comp_rep_bound": [184, 186, 192, 403], "comp_rep_byt": [191, 422], "comp_rep_column": [112, 113, 114, 116, 117, 119, 126, 127, 130, 184, 186, 192, 403], "comp_rep_human_read": [191, 422], "comp_rep_shap": [191, 422], "comp_rep_tensor": [377, 378], "compar": [132, 156, 360, 383, 384, 386, 398, 401, 403, 404, 413, 419], "comparison": [377, 398, 399, 414, 416], "compat": [95, 101, 132, 160, 163, 166, 168, 169, 170, 173, 175, 176, 177, 178, 180, 181, 186, 187, 217, 230, 297, 321, 358, 366, 371, 372, 373, 374, 376, 378, 388, 394, 403, 414], "compens": 403, "compil": [402, 406], "complain": 404, "complaint": 404, "complement": [27, 319], "complet": [378, 383, 408, 410, 412, 416], "complex": [105, 274, 275, 276, 336, 383, 394, 398, 399, 404, 407, 408, 410, 417, 420], "compli": 406, "complianc": 401, "complic": [383, 420], "compon": [62, 383, 384, 404, 407, 409, 410, 411, 416, 420], "compos": [91, 416], "composit": [80, 92, 93, 94], "compositekernel": [92, 93, 94, 403], "compound": 306, "comprehens": [401, 418], "compress": 416, "comput": [22, 27, 72, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 184, 186, 191, 192, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 258, 264, 266, 272, 307, 337, 371, 372, 373, 374, 376, 383, 384, 388, 394, 403, 406, 407, 409, 411, 413, 415, 416, 417, 422], "computation": 168, "concat": [368, 369, 377, 378, 388, 391, 392, 398, 399], "concentr": [142, 143, 361, 362, 363, 365, 366, 371, 376, 377, 410], "concentrati": 371, "concentration_valu": 377, "concept": [284, 383, 412, 413, 416], "concis": 403, "concret": [403, 416], "conda": 403, "condit": [30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 312, 319, 362, 368, 372, 373, 374, 383, 401, 403, 406, 420, 421], "conduct": [27, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 219, 224, 226, 227, 230, 234, 248, 250, 252, 254, 361, 362, 363, 401, 404, 409, 420], "confid": [8, 18, 366], "config": [380, 381, 393, 400, 403, 421], "config_json": 27, "configur": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 70, 71, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 213, 215, 221, 224, 226, 227, 228, 230, 234, 240, 248, 250, 252, 254, 312, 339, 347, 364, 365, 383, 389, 392, 396, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 422], "confirm": 378, "conflict": [401, 404, 412], "conform": [130, 307, 413], "confront": [386, 401], "conjunct": 418, "connect": [53, 312, 403, 411, 413, 419], "consecut": [154, 156, 157, 158], "consequ": [157, 363, 402, 410, 411, 414, 415, 417], "consequenti": 406, "consid": [8, 18, 27, 30, 31, 32, 33, 34, 37, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 104, 117, 156, 186, 192, 219, 280, 312, 320, 321, 360, 383, 386, 388, 398, 399, 401, 403, 404, 408, 410, 412, 413, 414, 416, 422], "consider": [186, 408], "consist": [152, 191, 378, 404, 406], "consol": 402, "consolid": [403, 414], "consortium": 405, "conspicu": 406, "constant": [250, 258, 275, 388, 403, 404, 413, 415], "constitut": 406, "constrain": [403, 410, 419, 420], "constraint": [27, 30, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 114, 184, 186, 192, 287, 380, 381, 388, 394, 395, 396, 400, 401, 403, 405, 411, 413, 421], "constraint_1": 373, "constraint_2": 373, "constraint_3": 373, "constraints_augment": 186, "constraints_cardin": 184, "constraints_lin_eq": 184, "constraints_lin_ineq": 184, "constraints_nonlin": 184, "constru": 406, "construct": [27, 184, 186, 192, 230, 260, 360, 390, 398, 399, 401, 403, 407, 416, 421], "constructor": [175, 176, 177, 178, 186, 206, 248, 252, 254, 383, 390, 395, 396, 403, 407, 409, 412, 413, 421, 422], "consult": 401, "consum": [156, 376], "consumpt": 411, "cont_ind": 392, "cont_indic": [391, 392], "cont_paramet": 392, "cont_recommend": [160, 392], "contact": [401, 405], "contain": [27, 30, 36, 37, 38, 58, 61, 64, 99, 104, 105, 109, 113, 116, 117, 119, 127, 130, 132, 136, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 193, 194, 198, 213, 215, 217, 219, 224, 226, 227, 230, 234, 248, 250, 252, 254, 264, 266, 272, 274, 275, 276, 284, 285, 297, 307, 312, 314, 319, 326, 337, 339, 341, 347, 362, 363, 377, 378, 384, 386, 392, 398, 399, 402, 403, 404, 406, 409, 410, 414, 415, 416, 417, 422], "content": [132, 156, 186, 217, 313, 348, 403, 406, 416], "context": [154, 156, 157, 158, 213, 228, 344, 376, 386, 390, 398, 399, 403, 409, 413, 416, 417, 420, 422], "contextu": 420, "continu": [10, 13, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 64, 112, 113, 114, 116, 117, 119, 126, 127, 130, 160, 168, 184, 186, 187, 192, 193, 194, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 366, 368, 371, 372, 373, 374, 384, 388, 389, 392, 394, 400, 401, 403, 409, 411, 414, 416, 417, 421], "continuous_subspac": 415, "continuouscardinalityconstraint": [57, 184, 403], "continuousconstraint": [33, 41, 184, 403, 410], "continuouslinearconstraint": [184, 368, 369, 384, 403, 421], "continuouslinearequalityconstraint": 403, "continuouslinearinequalityconstraint": 403, "continuousnonlinearconstraint": [40, 184, 403], "continuousparamet": [126, 184, 403], "contract": 406, "contrast": [192, 301, 384, 386], "contribut": [401, 403, 406, 422], "contributor": [401, 406], "contributori": 406, "control": [13, 17, 132, 142, 168, 184, 192, 321, 388, 391, 401, 403, 406, 407, 411, 412, 413, 414, 419], "convei": 416, "conveni": [403, 415, 416], "convent": 186, "convers": [27, 157, 380, 390, 403, 406, 421], "convert": [24, 100, 188, 201, 298, 302, 306, 309, 310, 322, 323, 327, 330, 333, 381, 395, 396, 403, 409, 411, 416, 417], "convert_sklearn": 380, "convert_sklearn_bayesian_ridg": 380, "cooki": 404, "coordin": 347, "copi": [377, 401, 403, 406, 422], "copyright": [401, 406], "core": [27, 184, 186, 187, 192, 219, 221, 224, 226, 227, 228, 230, 234, 241, 248, 250, 252, 254, 366, 403, 419], "coregion": 420, "coretest": [403, 404], "corpu": 413, "correct": [27, 261, 378, 401, 403, 404, 416], "correctli": [383, 392, 403], "correl": [119, 130, 318, 413, 420], "correspond": [22, 27, 40, 99, 104, 109, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 205, 213, 215, 217, 224, 226, 227, 230, 234, 248, 250, 252, 254, 274, 280, 297, 300, 302, 305, 306, 312, 315, 321, 322, 360, 365, 366, 383, 386, 392, 398, 399, 401, 403, 404, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420], "correspondingli": 27, "corrupt": 314, "cost": [362, 386], "costli": [186, 189, 195, 409], "could": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 127, 309, 366, 376, 377, 383, 384, 399, 403, 408, 410, 413, 417, 419, 420], "count": [281, 377, 383, 410], "counterclaim": 406, "counterpart": [297, 415], "coupl": 378, "cours": [398, 399, 404, 416, 420], "cov": [403, 404], "cover": [301, 312], "coverag": [403, 404], "cp": [361, 362, 363], "craft": 417, "crash": [402, 403], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 193, 194, 209, 217, 224, 226, 227, 228, 230, 234, 237, 242, 248, 250, 252, 254, 264, 266, 272, 312, 315, 326, 339, 341, 347, 365, 376, 377, 378, 383, 384, 392, 393, 400, 401, 402, 403, 404, 410, 411, 416, 417, 418, 419, 421, 422], "create_example_plot": [360, 362, 377, 378, 398, 399], "create_from_config": [380, 381], "create_pi_plot": 378, "creation": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 132, 189, 192, 195, 372, 374, 380, 381, 415, 416, 421], "criteria": 378, "criterion": [377, 407], "critic": 403, "cross": [398, 406], "crucial": 419, "cube": 410, "cuda": 402, "cultur": [413, 420], "curran": 420, "current": [10, 27, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 219, 221, 229, 279, 333, 377, 378, 383, 407, 409, 410, 411, 413, 417, 419, 420, 422], "curv": [274, 378, 388, 410, 419], "custom": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 112, 113, 114, 116, 117, 119, 122, 126, 127, 130, 132, 230, 261, 264, 266, 272, 297, 322, 359, 366, 370, 377, 386, 392, 400, 401, 403, 410, 413, 414, 417, 420, 421, 422], "custom_blackbox": 360, "custom_conversion_funct": 380, "custom_filt": 410, "custom_funct": 371, "customari": 406, "customconstraint": 371, "customdiscreteparamet": [403, 421], "customencod": 119, "customonnxsurrog": [366, 380, 403], "cycl": [156, 401], "cyclic": 156, "d": [22, 52, 105, 284, 292, 337, 347, 378, 381, 395, 396, 398, 399, 401, 406, 415, 420], "d401": 371, "damag": 406, "daniel": 405, "darmstadt": [401, 405, 411], "dashboard": 403, "data": [13, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 104, 109, 119, 127, 130, 151, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 215, 219, 221, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 266, 272, 281, 283, 287, 312, 314, 320, 332, 333, 348, 352, 359, 360, 365, 366, 368, 369, 371, 372, 373, 374, 377, 381, 383, 388, 391, 394, 395, 396, 398, 399, 400, 401, 403, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 421, 422], "data_typ": 380, "databas": [27, 388, 401, 416], "dataclass": [376, 386], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 99, 104, 109, 113, 116, 117, 119, 127, 130, 132, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 193, 194, 197, 211, 212, 215, 217, 219, 221, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 266, 272, 280, 284, 285, 306, 307, 348, 360, 361, 365, 366, 371, 372, 373, 374, 377, 378, 380, 381, 383, 384, 388, 391, 394, 398, 399, 403, 408, 409, 410, 413, 421, 422], "datapoint": 403, "dataset": [156, 213, 417], "datatyp": 403, "date": 406, "de": [204, 393, 401, 402, 403, 404, 409, 410, 414, 421], "deactiv": [401, 403, 411], "deal": [363, 408, 413, 417], "debug": 403, "decid": [127, 320, 383, 386, 392, 407], "declar": [49, 53, 58, 178, 372, 404, 410], "decod": 380, "decor": [94, 258, 288, 315, 376, 403, 404, 417], "decorrel": [119, 130, 135, 395, 396, 413], "decreas": [156, 275, 388, 416, 420], "deduc": [368, 369, 391], "dedupl": 403, "deep": 377, "deepcopi": 403, "def": [360, 371, 376, 377, 378, 383, 386, 398, 404, 410, 417], "default": [38, 104, 117, 119, 130, 132, 160, 175, 176, 177, 178, 184, 186, 192, 204, 224, 241, 244, 319, 360, 361, 363, 366, 381, 388, 392, 401, 403, 404, 409, 411, 412, 413, 421], "default_campaign": 360, "default_iter": 157, "default_model": 230, "defaultkernelfactori": [366, 371, 372, 373, 374, 388, 394], "defaultscal": 403, "defend": 406, "defin": [22, 27, 37, 41, 48, 122, 151, 156, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 192, 213, 234, 236, 237, 261, 314, 318, 319, 350, 361, 362, 363, 365, 371, 372, 373, 374, 380, 381, 386, 390, 403, 404, 406, 409, 410, 413, 416, 417, 419], "definit": [184, 192, 301, 384, 401, 403, 406, 412, 415], "degener": [313, 326, 403], "degr": 394, "degre": 416, "degree_c": [380, 381, 394], "deliber": 406, "delici": 404, "deliveri": 413, "demand": 399, "demo": 403, "demonstr": [359, 360, 361, 364, 367, 370, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 393, 394, 397, 398, 399, 403, 412, 415, 416, 420], "denot": 22, "densiti": 378, "depend": [49, 53, 73, 96, 186, 192, 213, 275, 284, 362, 366, 370, 383, 384, 390, 400, 402, 403, 404, 410, 411, 415, 417, 419, 420, 422], "dependenciesconstraint": 403, "deprec": [60, 124, 166, 168, 184, 192, 197, 231, 288, 371, 373, 374], "deprecationwarn": [371, 373, 374, 377], "depth": 415, "deriv": [175, 176, 177, 178, 192, 301, 406, 410, 415], "descend": 275, "describ": [117, 175, 176, 177, 178, 224, 226, 227, 230, 234, 248, 250, 252, 254, 366, 371, 376, 377, 384, 386, 388, 404, 406, 408, 409, 410, 412, 413, 416, 417], "descript": 404, "descriptor": [130, 307, 403, 413, 420], "deseri": [202, 206, 211, 394, 402, 403, 409, 421], "deserialize_datafram": 416, "design": [0, 17, 22, 215, 315, 376, 380, 383, 386, 406, 407, 412, 414, 416], "desir": [96, 104, 107, 387, 388, 400, 401, 403, 407, 409, 411, 412, 414, 416, 419, 422], "desirabilityobject": [27, 388, 401, 403, 416, 418, 421], "desktop": 403, "despit": 403, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 138, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 215, 219, 224, 226, 227, 228, 230, 234, 237, 244, 246, 248, 250, 252, 254, 264, 266, 272, 277, 278, 319, 326, 350, 361, 363, 368, 369, 388, 392, 401, 402, 403, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420], "detect": [287, 320, 402, 404], "determin": [27, 102, 192, 301, 319, 330, 335, 347, 361, 383, 386, 406, 411, 414], "determinist": 347, "detriment": 413, "dev": [401, 403, 404], "develop": [401, 403, 408, 413, 417], "deviat": [6, 258, 380, 403], "df": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 99, 104, 109, 132, 184, 186, 192, 197, 212, 217, 284, 285, 306, 313, 316, 317, 318, 319, 321, 322, 348, 360, 371, 386, 401, 410, 415, 416, 417], "dfa": [284, 285], "di": [361, 362, 363, 365, 366, 405], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 102, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 175, 176, 177, 178, 184, 186, 189, 192, 195, 205, 206, 207, 209, 219, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 278, 292, 295, 307, 312, 326, 350, 377, 380, 398, 399, 403], "dict_bas": [361, 362, 363, 365, 366], "dict_ligand": [361, 362, 363, 365, 366], "dict_solv": [361, 362, 363, 365, 366, 371, 372, 373, 374, 383, 410], "dictat": [99, 104, 109, 186, 398, 399], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 205, 207, 209, 219, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 258, 264, 266, 272, 292, 295, 312, 326, 361, 362, 363, 365, 413, 417], "diff": 404, "differ": [51, 104, 168, 184, 186, 187, 192, 213, 221, 280, 285, 312, 314, 350, 362, 371, 376, 383, 386, 388, 391, 392, 398, 399, 401, 403, 404, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419, 420], "differenti": [417, 420], "difficult": 420, "digit": 322, "dilemma": 386, "dim": [22, 368, 369, 378, 380, 391, 392, 398, 399], "dimens": [22, 347, 360, 368, 369, 378, 380, 390, 391, 398, 399, 403, 413, 415, 420], "dimension": [105, 112, 113, 114, 116, 117, 119, 126, 127, 130, 244, 315, 347, 360, 398, 399, 403], "dimethylisoxazol": 420, "direct": [361, 362, 363, 365, 401, 406, 413, 422], "directli": [301, 399, 401, 403, 410, 412, 416, 418], "directori": [339, 392, 403], "disabl": [279, 371, 373, 374, 403, 409], "disadvantag": 416, "disappear": 403, "disc_ind": 392, "disc_indic": [391, 392], "disc_paramet": 392, "disc_recommend": [160, 392], "discard": 383, "disclaim": 406, "discourag": 409, "discret": [13, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 64, 112, 113, 114, 116, 117, 119, 126, 127, 130, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 187, 191, 192, 221, 346, 365, 368, 374, 377, 378, 380, 388, 389, 392, 394, 399, 400, 401, 403, 407, 409, 416, 417, 421, 422], "discrete_param": [378, 398, 399], "discrete_spac": [368, 369, 392], "discrete_subspac": 415, "discretecardinalityconstraint": 403, "discreteconstraint": [27, 47, 48, 49, 50, 51, 52, 53, 54, 55, 192, 403, 410], "discretecust": 371, "discretecustomconstraint": [371, 403, 421], "discretedep": 372, "discretedependenciesconstraint": [53, 58, 372, 383, 421], "discreteexcl": 373, "discreteexcludeconstraint": [373, 403, 421], "discretelinkedparametersconstraint": [403, 421], "discretenolabelduplicatesconstraint": [53, 383, 403, 421], "discreteparamet": [116, 119, 127, 130, 192, 403], "discretepermutationinvarianceconstraint": [383, 421], "discreteprod": 374, "discreteproductconstraint": [374, 403, 421], "discretesamplingmethod": [13, 168, 348, 403, 407], "discretesumc": 374, "discretesumconstraint": [368, 374, 383, 403, 421], "discuss": [388, 406, 410, 415, 417], "disjoint": 192, "disk": [403, 421], "dispatch": 95, "displai": [322, 377, 406], "distanc": [127, 280, 320, 347], "distinct": [376, 409, 414], "distinguish": [313, 383, 403, 410, 413, 420], "distribut": [27, 138, 141, 224, 226, 227, 230, 234, 248, 250, 252, 254, 383, 388, 392, 401, 403, 406, 407, 408], "distutil": 302, "div": 380, "divers": 418, "divid": 384, "divis": 337, "dll": 402, "dmac": [361, 362, 363, 365, 366], "dmf": 410, "do": [186, 192, 229, 376, 380, 381, 383, 386, 392, 394, 395, 396, 398, 401, 402, 406, 408, 410, 411, 413, 414, 416, 420, 421, 422], "do_baybe_work": 411, "doc": [77, 138, 288, 371, 373, 374, 401, 403], "doc101": 404, "doc103": 404, "docstr": 403, "doctest": 403, "document": [333, 380, 401, 403, 404, 405, 406, 409, 417], "doe": [26, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 168, 213, 215, 217, 219, 224, 226, 227, 229, 230, 234, 248, 250, 252, 254, 261, 297, 306, 333, 363, 366, 377, 380, 381, 383, 395, 396, 398, 399, 403, 404, 406, 410, 412, 414, 417, 418, 420, 422], "doi": [246, 318], "domain": [224, 226, 227, 230, 234, 248, 250, 252, 254, 360, 401, 415, 417], "done": [27, 319, 363, 365, 371, 372, 373, 374, 380, 381, 388, 394, 403, 407, 410, 411], "doubl": [333, 404, 411], "down": [416, 422], "downsid": 157, "draft": 403, "dramat": 420, "drastic": 413, "draw": [10, 89, 184, 384, 386, 390], "draw_arm": 386, "drawn": [17, 168], "drive": [378, 420], "driven": [312, 407], "driver": 402, "drop": [316, 317, 318, 377, 403, 410], "dry_run": 27, "dtype": [105, 274, 275, 276, 336], "due": [281, 399, 401, 403, 407, 410, 411, 413, 414, 415, 416, 419], "duplic": [53, 137, 287, 292, 403, 410], "dure": [27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 186, 192, 213, 295, 347, 383, 386, 398, 399, 401, 402, 403, 404, 405, 409, 410, 411, 415, 416, 417, 418], "dynam": [386, 403, 416], "e": [17, 22, 27, 30, 49, 51, 52, 64, 119, 132, 158, 186, 192, 213, 281, 287, 290, 291, 307, 312, 319, 320, 326, 355, 361, 362, 363, 381, 383, 384, 386, 401, 402, 403, 404, 407, 408, 410, 411, 413, 414, 415, 416, 417, 420, 422], "e3fp": 124, "e3fpfingerprint": 124, "each": [17, 27, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 99, 104, 109, 132, 151, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 215, 217, 219, 221, 229, 285, 307, 312, 313, 339, 360, 362, 363, 366, 378, 383, 384, 386, 388, 392, 398, 399, 404, 406, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422], "eagerli": 403, "earli": [377, 403], "earlier": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 192, 402], "earn": 386, "earned_reward": 386, "easi": [306, 404, 416], "easier": [404, 422], "easiest": [401, 404], "easili": [377, 404, 409, 413, 415, 416, 420], "ecfp": [124, 362, 403, 413], "ecfpfingerprint": 124, "ecosystem": 416, "edbo": [244, 246, 318, 403], "edbokernelfactori": [244, 403], "edit": [401, 404], "editor": 420, "editori": 406, "edwin": 420, "effect": [51, 221, 376, 377, 386, 399, 403, 407, 410, 413, 414, 417, 420, 422], "effici": [192, 383, 401, 403, 415], "effortlessli": 417, "ei": [3, 366], "either": [22, 27, 187, 215, 221, 234, 258, 362, 373, 388, 392, 401, 406, 412, 413, 414, 415, 417], "elabor": 406, "elaps": 376, "elapsedtimeprint": 376, "electron": [405, 406], "electroshap": 124, "electroshapefingerprint": 124, "eleg": [398, 416], "element": [36, 37, 38, 48, 221, 280, 287, 294, 300, 320, 335, 336, 341, 383, 398, 399, 403, 410, 417], "elev": 378, "elif": [391, 392], "elimin": [404, 407], "els": [301, 302, 360, 361, 362, 363, 368, 369, 371, 372, 374, 377, 378, 386, 391, 392, 398, 399], "elsewher": 380, "emd": 405, "emdgroup": [277, 401], "emelin": 405, "emerg": 409, "empir": 386, "emploi": [27, 386, 414], "employe": [401, 411], "empow": 418, "empti": [184, 186, 192, 199, 285, 297, 306, 319, 322, 383, 388, 392, 394, 403, 415], "empty_encod": [186, 192], "emptysearchspaceerror": 199, "emul": [17, 402, 403], "en": [77, 138], "enabl": [279, 280, 361, 362, 363, 383, 398, 401, 402, 403, 409, 410, 411, 412, 414, 416, 417, 419, 420], "encod": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 126, 127, 130, 186, 192, 224, 226, 227, 230, 234, 248, 250, 252, 254, 305, 307, 361, 362, 363, 365, 366, 371, 372, 373, 374, 377, 381, 383, 386, 388, 394, 395, 396, 398, 399, 401, 403, 410, 415, 416, 420], "encompass": 409, "encount": [347, 402, 403, 404, 412], "end": [0, 276, 326, 377, 381, 386, 388, 394, 406, 410, 416], "endeavor": 407, "endpoint": [403, 411], "enforc": [334, 353, 403, 404], "engin": [402, 414, 416, 417, 422], "enhanc": [22, 401], "enlarg": 413, "enough": [184, 416], "ensembl": 256, "ensur": [132, 361, 362, 363, 383, 384, 401, 410, 416, 417], "enter": [66, 192, 415], "entir": [280, 326, 348, 403, 404, 407, 411, 422], "entiti": 406, "entri": [27, 34, 37, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 207, 224, 226, 227, 230, 234, 248, 250, 252, 254, 280, 285, 312, 320, 348, 363, 371, 372, 373, 374, 383, 403, 410, 411, 419, 422], "enum": [107, 121, 122, 123, 124, 187, 241, 269, 270, 346, 403, 416], "enumer": [106, 120, 268, 378, 398, 399, 412], "env": [403, 404], "envar_nam": 411, "environ": [279, 334, 353, 360, 361, 362, 363, 369, 371, 372, 374, 377, 378, 380, 386, 398, 399, 401, 402, 403, 404, 421], "envvar": 277, "envvar_nam": 411, "eq": [371, 383], "equal": [41, 104, 158, 184, 386, 388, 394, 403, 410, 412, 415, 416, 419], "equat": [41, 410, 417], "equidist": 413, "equip": 410, "equival": [17, 30, 53, 369, 390, 407, 410, 417], "erg": 124, "ergfingerprint": 124, "error": [156, 166, 168, 215, 217, 219, 231, 295, 337, 363, 381, 386, 402, 403, 410, 412, 413, 414], "esian": 401, "especi": 404, "essenti": [409, 414], "establish": [377, 398, 399, 420], "estat": 124, "estatefingerprint": 124, "ester": [361, 362, 363, 365, 366], "estim": [186, 191, 192, 224, 386, 403, 418, 421], "estimate_product_space_s": [186, 192, 422], "estimated_win_r": 386, "estimation_bia": 386, "estimation_vari": 386, "et": [362, 401, 413], "etc": [36, 37, 38, 114, 186, 264, 420], "ethanol": [383, 410], "euclidean": 347, "eval_during_augment": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "eval_during_cr": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "eval_during_model": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "evalu": [22, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 256, 257, 302, 391, 392, 403, 409, 411, 414, 417, 420], "even": [258, 317, 398, 399, 406, 408, 409, 411, 413, 417, 418, 420, 422], "event": [27, 280, 377, 406], "everi": [408, 422], "everyth": [404, 410], "evolv": [378, 404], "exabyt": 422, "exact": [27, 320, 376, 402, 403, 408, 410, 413, 414], "exactli": [99, 104, 109, 186, 383, 403, 408, 409, 415, 416], "exampl": [132, 217, 284, 285, 292, 301, 319, 359, 360, 364, 367, 370, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390, 393, 397, 398, 399, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422], "example_input_nam": 380, "exceed": 377, "exceedingli": 417, "except": [297, 306, 310, 324, 325, 361, 362, 363, 377, 381, 395, 396, 401, 402, 403, 406], "excepthook": 402, "exceptiongroup": 403, "excess": 422, "exclud": [27, 52, 192, 316, 371, 372, 373, 374, 388, 394, 403, 406, 410], "exclude_list": 318, "exclus": [50, 370, 400, 403, 406, 410, 417], "execut": [27, 60, 215, 297, 360, 362, 402, 403, 404, 406, 411, 416, 417, 420], "exemplari": 409, "exercis": 406, "exhaust": [156, 414], "exist": [94, 186, 280, 288, 297, 383, 402, 403, 404, 407, 409, 410, 416, 420], "exp_rep": [192, 371, 372, 373, 374, 383, 415], "exp_rep_byt": [191, 422], "exp_rep_human_read": [191, 422], "exp_rep_shap": [191, 422], "expect": [3, 4, 9, 11, 12, 14, 48, 228, 236, 297, 315, 366, 372, 378, 380, 383, 384, 386, 396, 403, 404, 409, 410, 412, 413, 416, 417, 419, 422], "expens": [10, 168, 368, 417], "experi": [0, 27, 151, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 213, 215, 224, 226, 227, 230, 234, 248, 250, 252, 254, 361, 362, 363, 365, 366, 391, 392, 403, 407, 409, 410, 412, 413, 414, 419, 420, 421], "experiment": [27, 99, 104, 109, 113, 116, 117, 119, 127, 130, 151, 154, 155, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 191, 192, 213, 224, 226, 227, 230, 234, 248, 250, 252, 254, 264, 266, 272, 312, 314, 371, 372, 373, 374, 378, 388, 394, 401, 403, 407, 408, 410, 412, 413, 415, 416, 417, 419, 420, 421, 422], "explain": [378, 403, 418], "explan": [409, 418], "explicit": [132, 157, 376, 377, 381, 383, 390, 395, 396, 403, 404, 416, 420, 421], "explicitli": [184, 192, 376, 392, 399, 406, 415, 420], "exploit": [8, 17, 18, 386], "explor": [8, 18, 27, 386, 407, 414, 415, 420], "exploratori": 407, "exponenti": 192, "expos": [27, 376, 403], "exposur": 403, "expr": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55], "express": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 401, 403, 406, 410], "extend": [413, 420], "extens": [403, 414], "extra": [362, 402, 403], "extract": [27, 321, 378, 398, 421], "extract_pi": 378, "f": [302, 360, 361, 362, 363, 368, 369, 371, 372, 373, 374, 376, 377, 378, 383, 384, 388, 390, 391, 392, 398, 399, 422], "f1": 417, "f2": 417, "fabian": 405, "face": [224, 226, 227, 230, 234, 248, 250, 252, 254, 384, 386], "facilit": 414, "fact": [17, 378, 383, 410, 412], "factor": [132, 409, 422], "factori": [132, 184, 234, 235, 236, 237, 238, 244, 246, 293, 366, 371, 372, 373, 374, 388, 394, 403], "fail": [392, 396, 402, 403], "failur": [266, 406], "failure_valu": 266, "fairli": 412, "fake": [217, 312, 365, 366, 380, 381, 388, 403, 408, 417, 421], "fall": [377, 409, 419], "fallback": [102, 192, 328, 339, 380, 403, 415], "fals": [6, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 197, 224, 230, 248, 250, 252, 254, 266, 275, 280, 290, 291, 295, 301, 302, 315, 319, 320, 321, 341, 366, 371, 372, 373, 374, 388, 394, 395, 396, 401, 408, 411], "famili": 410, "familiar": [361, 362, 363, 366, 368, 369, 371, 372, 373, 374, 380, 381, 388, 391, 392, 394], "fang": 405, "fantasi": 10, "farthest": [180, 346, 347, 366, 401, 403, 405, 407, 414], "farthest_point_sampl": 403, "fashion": [274, 276], "fast": [371, 373, 374, 415, 419], "faster": 192, "fault": 76, "faulti": 402, "favicon": 403, "fc": [361, 362, 363], "feasibl": 409, "featur": [89, 130, 318, 402, 404, 410, 418, 420], "fed": 401, "fee": 406, "feed": [401, 420], "feedback": 405, "feel": 377, "few": [360, 386, 403, 404, 407, 413, 416, 420, 422], "field": [206, 310, 341, 403, 420, 421], "fifti": 406, "fig": 378, "figur": [339, 378], "file": [339, 361, 362, 363, 380, 381, 392, 401, 403, 406, 411, 416, 420], "filenotfounderror": [361, 362, 363, 377], "fill": [27, 217, 378], "filler": 410, "filter": [27, 34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 186, 192, 316, 319, 371, 383, 403, 410, 415, 420, 422], "filter_attribut": 403, "filter_df": [27, 403], "filterwarn": 377, "final": [360, 362, 365, 377, 383, 399], "find": [186, 295, 336, 339, 401, 407, 409, 410, 420], "fine": [381, 394, 395, 396, 401], "finer": [132, 401], "fingerprint": [124, 130, 305, 307, 401, 403, 405, 413], "finish": 408, "finit": [156, 213, 221, 325, 355, 386, 413, 417], "first": [186, 219, 335, 347, 360, 362, 365, 366, 371, 376, 377, 380, 381, 383, 388, 392, 396, 398, 399, 401, 402, 403, 409, 410, 412, 413, 414, 415, 420, 422], "fit": [27, 178, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 348, 350, 361, 362, 363, 371, 372, 373, 374, 380, 388, 394, 403, 406, 410, 413, 418], "fit_gpytorch_ml": 403, "fit_gpytorch_mll_torch": 403, "fitnr": 388, "fitzner": [401, 405], "fix": [213, 237, 377, 378, 383, 386, 391, 392, 404, 409, 413, 417, 420, 422], "flag": [22, 27, 49, 99, 104, 109, 168, 186, 187, 192, 315, 320, 321, 403, 408, 409, 411, 414], "flake8": 403, "flexibl": [376, 390, 403, 416, 417], "flexibli": 414, "float": [8, 13, 18, 38, 41, 43, 44, 83, 84, 85, 86, 87, 88, 89, 90, 94, 96, 104, 105, 119, 126, 127, 130, 135, 136, 142, 143, 144, 145, 146, 147, 148, 168, 191, 192, 215, 219, 224, 258, 266, 267, 274, 275, 276, 281, 309, 312, 313, 314, 318, 326, 330, 332, 333, 335, 336, 337, 352, 355, 356, 357, 376, 378, 380, 386, 388, 403, 404, 421], "float64": 352, "floattensortyp": 380, "fly": 416, "fn": 288, "focu": [8, 18, 409], "focus": [109, 392, 401], "folder": [362, 401, 404, 411, 418], "follow": [186, 215, 217, 219, 361, 362, 363, 366, 368, 369, 371, 372, 373, 374, 376, 377, 381, 386, 388, 392, 395, 396, 398, 399, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420], "footprint": [10, 186], "forbid": 358, "forc": [168, 403, 404, 414], "forest": [253, 254], "forgiv": 419, "fork": 404, "form": [192, 213, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 312, 401, 406, 407, 409, 412, 413, 414, 415, 416, 417, 422], "formal": 384, "format": [41, 278, 322, 327, 330, 380, 381, 394, 395, 401, 402, 403, 404, 409, 411, 416, 417], "format_except": 402, "former": [383, 403], "formul": 420, "formula": 383, "forrest": 403, "found": [74, 132, 184, 192, 295, 305, 333, 336, 339, 377, 383, 388, 401, 402, 404, 409, 410, 414, 420], "foundat": 414, "four": 383, "fourier": 89, "fourth": 410, "fp": [346, 403, 407], "fp_size": [124, 413], "fpsrecommend": [366, 380, 381, 394, 395, 396, 401, 408, 414], "frac": [399, 412], "frac1": 372, "fraction": [13, 84, 309, 377, 407, 410, 411], "fraction1": 372, "fraction_1": 410, "fraction_2": 410, "fraction_3": 410, "frame": [314, 422], "frame1": 372, "frame2": 372, "frame_1": 410, "frame_2": 410, "framea": 372, "framea_a": 372, "frameb": 372, "framework": [409, 413], "free": [404, 406, 411], "freedom": 416, "freeli": 383, "frequenc": 89, "frequent": 386, "fresh": 377, "frictionless": 416, "friendli": 403, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 124, 126, 127, 130, 132, 138, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 209, 217, 219, 221, 224, 226, 227, 230, 234, 237, 242, 246, 248, 250, 252, 254, 258, 264, 266, 272, 275, 276, 297, 301, 302, 306, 314, 315, 316, 318, 326, 337, 339, 348, 360, 361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 386, 388, 390, 391, 392, 393, 394, 396, 398, 399, 400, 402, 404, 406, 407, 408, 410, 412, 413, 414, 417, 419, 420, 421, 422], "from_bound": [184, 403, 415], "from_config": [27, 395, 396, 409], "from_datafram": [184, 186, 192, 403, 415, 416, 422], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 326, 380], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 326, 380, 381, 394, 409, 416], "from_paramet": [184, 186, 192, 403], "from_preset": 234, "from_product": [184, 186, 192, 360, 361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 388, 390, 391, 392, 394, 395, 396, 398, 399, 401, 403, 410, 415, 416, 417], "from_record": [416, 417], "from_simplex": [192, 383, 403, 415, 422], "frozenset": 383, "fsspec": 403, "fulfil": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 377, 383, 384], "full": [22, 184, 333, 359, 400, 403, 409, 413, 420, 421], "full_factori": 184, "full_lik": 378, "full_lookup": [361, 362, 363], "fulli": [383, 401, 403, 411, 417], "fulltest": 404, "func": 404, "func_nam": 398, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 35, 41, 42, 48, 56, 63, 68, 76, 88, 95, 98, 101, 103, 108, 131, 134, 166, 168, 169, 185, 190, 196, 200, 201, 209, 210, 213, 214, 216, 218, 219, 220, 225, 229, 235, 240, 255, 259, 260, 263, 270, 273, 274, 275, 276, 277, 280, 281, 283, 286, 299, 303, 308, 311, 314, 321, 322, 324, 329, 331, 338, 339, 342, 345, 354, 365, 371, 372, 373, 374, 376, 378, 383, 386, 394, 398, 399, 401, 402, 403, 407, 409, 410, 412, 414, 415, 417, 418, 419, 420, 422], "function_nam": [398, 399], "functionalgroup": 124, "functionalgroupsfingerprint": 124, "fundament": [413, 416], "furo": 403, "further": [383, 384, 394, 401, 408, 414, 415, 418, 420, 421], "furthermor": 388, "furyl": [361, 362, 363], "futur": [53, 186, 229, 371, 373, 374, 377, 398, 419], "fuzzi": 280, "fuzzy_row_match": 280, "g": [49, 51, 52, 64, 119, 132, 186, 192, 287, 307, 320, 386, 401, 402, 403, 404, 407, 408, 410, 411, 413, 414, 415, 417, 422], "g1": 384, "g2": 384, "g3": 384, "gain": [192, 409], "gamma": 143, "gammaprior": 403, "garbag": 403, "gather": [158, 398, 399, 407, 420], "gaussian": [77, 175, 226, 232, 233, 234, 235, 239, 240, 241, 243, 244, 245, 246, 274, 366, 388, 403, 410, 414, 420], "gaussian_kd": 378, "gaussian_process": [79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 234, 236, 237, 241, 244, 246, 366, 403], "gaussianmixtureclusteringrecommend": 414, "gaussianprocesspreset": [234, 242], "gaussianprocesssurrog": [242, 366, 371, 372, 373, 374, 378, 388, 394, 395, 396, 403, 418], "gcf": [361, 363], "ge": 369, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 123, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 224, 226, 227, 230, 234, 237, 244, 246, 248, 250, 252, 254, 264, 266, 272, 278, 301, 307, 313, 326, 342, 350, 360, 366, 376, 383, 401, 403, 405, 406, 407, 408, 409, 410, 411, 413, 416, 417, 418, 419, 420, 421, 422], "geom_mean": [96, 104, 107, 388, 412], "geometr": [107, 337, 388, 412], "germani": [401, 405, 411], "get": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 154, 156, 157, 158, 166, 168, 184, 234, 312, 366, 377, 383, 391, 392, 401, 403, 408, 421, 422], "get_candid": [192, 377], "get_cmap": 378, "get_comp_rep_parameter_indic": [186, 403], "get_current_recommend": [154, 156, 157, 158], "get_integration_point": 13, "get_invalid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "get_invalid_polar": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "get_lin": 377, "get_next_recommend": [154, 156, 157, 158], "get_parameters_by_nam": [184, 186, 192], "get_parameters_from_datafram": [184, 192], "get_subclass": 366, "get_surrog": [27, 166, 168, 403, 418], "get_transform_object": 403, "get_transform_paramet": 403, "get_valid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 403], "getawai": 124, "getawayfingerprint": 124, "ghosecrippen": 124, "ghosecrippenfingerprint": 124, "git": [401, 404], "github": [246, 277, 298, 318, 380, 403, 404, 405], "give": [380, 381, 383, 399, 406, 409, 412, 416], "given": [25, 27, 30, 36, 37, 38, 58, 74, 99, 104, 109, 117, 130, 132, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 198, 213, 217, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 258, 269, 281, 285, 290, 291, 295, 296, 297, 300, 301, 304, 305, 309, 312, 315, 321, 326, 327, 335, 337, 340, 341, 347, 350, 371, 372, 373, 374, 377, 383, 386, 388, 392, 398, 399, 409, 415, 417], "glass_transition_tempc": 413, "global": [13, 343, 403, 421, 422], "gmean": 337, "gmm": 175, "go": [284, 383, 401], "goal": [360, 386, 412, 420], "goe": 418, "good": [312, 377, 388, 409, 411, 419], "good_interv": 312, "good_reference_valu": 312, "goodwil": 406, "googl": [403, 404], "govern": 401, "gp": [224, 226, 227, 230, 234, 248, 250, 252, 254, 403], "gpytorch": [77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 138, 140, 142, 143, 144, 145, 146, 147, 148, 403], "gradient": [10, 168, 252, 403, 411, 414], "grant": [403, 406], "granular": [381, 394, 395, 396, 401], "granularity_coar": 394, "granularity_fin": 394, "great": [386, 416], "greater": 158, "greatli": 404, "greedi": [168, 403, 414], "grid": [398, 399], "grid_d": [398, 399], "grossli": 406, "group": [285, 292, 350, 384, 401, 403, 409], "groupbi": [219, 221], "grow": 422, "gt": [374, 383], "gu16": 413, "guarante": [410, 411, 414], "guid": [365, 401, 402, 403, 404, 407, 409, 412, 415, 417, 420], "guidelin": [403, 404, 407], "ha": [27, 49, 67, 68, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 224, 226, 227, 230, 234, 248, 250, 252, 254, 284, 295, 297, 301, 313, 320, 347, 348, 362, 366, 372, 383, 388, 392, 401, 403, 404, 406, 408, 409, 410, 413, 415, 416, 417, 419, 420], "had": [213, 410, 413, 417], "half": [127, 144, 145, 326, 392, 408], "halfcauchyprior": 403, "halfnormalprior": 403, "hamster": 420, "hand": [41, 130, 384, 386, 398, 399, 401, 409, 416], "handl": [114, 215, 217, 258, 324, 371, 372, 386, 388, 403, 409, 412, 422], "happen": [156, 388, 392, 399, 402, 403, 404, 415, 416, 420], "happili": 412, "hard": [403, 420, 422], "harmless": 406, "hartmann": [378, 398, 399], "hasattr": [368, 369, 391, 392], "hash": [278, 401, 411, 413], "hashabledict": 403, "have": [22, 27, 34, 36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 99, 104, 109, 130, 178, 186, 192, 213, 229, 261, 285, 292, 295, 312, 320, 321, 333, 361, 362, 365, 366, 371, 372, 376, 378, 383, 384, 386, 388, 391, 392, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 420, 422], "head": 403, "header": 341, "heart": 420, "help": [386, 416, 417, 420], "helper": [376, 378, 380, 383, 416], "henc": [306, 383, 386, 394, 410, 413, 422], "here": [52, 333, 361, 363, 365, 368, 369, 376, 377, 381, 383, 384, 391, 392, 394, 398, 399, 401, 402, 408, 410, 412, 413, 414, 415, 416, 417, 419, 420], "herebi": 406, "herein": [406, 409], "heurist": 168, "hierarch": 416, "hierarchi": [74, 403, 404, 409, 416], "high": [244, 360, 386, 403, 404, 407, 409, 410, 413, 416], "higher": [8, 18, 130, 386, 402, 410, 414], "highest": [407, 416], "highlight": [401, 420], "hint": 404, "histogram": 281, "histori": 404, "hold": [40, 292, 406, 416], "home": [371, 373, 374], "homepag": [401, 403], "hood": 413, "hook": [45, 102, 192, 201, 205, 297, 400, 402, 403, 404], "hopp": [401, 405], "host": [401, 403, 411], "hostnam": [278, 411], "hot": [121, 362, 386, 401, 403, 413], "how": [50, 215, 217, 347, 360, 361, 363, 364, 365, 366, 367, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 386, 392, 394, 395, 396, 399, 401, 409, 410, 411, 412, 417, 418, 419, 420], "howev": [132, 192, 229, 297, 376, 383, 386, 391, 392, 402, 404, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 420, 422], "hrovatin": 405, "html": [41, 77, 138, 277, 288, 333, 380, 403], "http": [41, 77, 138, 246, 277, 288, 298, 318, 333, 401, 403, 406, 420], "hue": [360, 361, 362, 363, 377, 398, 399], "human": [191, 330, 394, 403, 405, 416], "hybrid": [21, 22, 64, 159, 160, 168, 181, 186, 187, 366, 367, 371, 372, 373, 374, 388, 389, 394, 400, 401, 403, 414, 415], "hybrid_recommend": 392, "hybrid_sampl": [168, 414], "hyperparamet": 366, "hyperrectangl": [184, 415], "hypothesi": [401, 403, 404], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 64, 66, 67, 68, 69, 71, 91, 94, 105, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 199, 213, 215, 217, 219, 221, 224, 226, 227, 228, 229, 230, 234, 244, 248, 250, 252, 254, 258, 261, 269, 274, 275, 276, 279, 280, 281, 285, 288, 290, 291, 295, 297, 298, 300, 301, 302, 305, 306, 312, 313, 314, 315, 319, 320, 321, 322, 325, 326, 333, 335, 336, 339, 341, 347, 348, 355, 360, 361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 386, 388, 391, 392, 394, 395, 396, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422], "ideal": [408, 410, 417], "ident": [132, 284, 285, 413, 416, 420], "identif": 386, "identifi": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 219, 292, 306, 320, 321, 377, 403, 410, 413, 415, 416, 417, 420], "idx_offset": 41, "ignor": [99, 104, 109, 156, 168, 186, 193, 194, 215, 217, 219, 295, 318, 363, 377, 392, 403, 410, 416, 422], "ignore_exampl": 403, "ignore_list": 317, "ii": 406, "iii": 406, "illustr": 390, "iloc": 408, "imag": [386, 403], "imagin": [383, 386], "immedi": [339, 376, 409], "immut": 403, "impact": [362, 399, 411], "imperfect": 314, "implement": [17, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 105, 151, 161, 221, 228, 299, 371, 377, 383, 398, 403, 404, 405, 407, 414, 415, 417, 420], "impli": [383, 401, 406, 410, 413], "implicitli": 416, "import": [73, 104, 217, 377, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422], "impos": [383, 384, 410], "imposs": [401, 411, 416], "improv": [3, 4, 7, 9, 11, 12, 14, 15, 366, 369, 375, 377, 400, 401, 403, 406, 411], "imput": [215, 217, 359, 363, 400, 401], "impute_mod": [215, 217, 219, 363, 417], "inabl": [401, 406], "inaccuraci": 401, "inact": 40, "inc": 420, "incident": 406, "includ": [58, 99, 104, 109, 158, 215, 290, 291, 317, 361, 372, 381, 383, 395, 396, 399, 401, 403, 404, 406, 407, 408, 410, 422], "inclus": 406, "incom": 416, "incompat": [62, 63, 64, 230, 373, 410], "incompatibilityerror": 27, "incompatibleacquisitionfunctionerror": 408, "incomplet": 403, "inconsist": 403, "incorpor": [406, 408, 418, 422], "incorrect": 403, "incorrectli": 403, "increas": [10, 156, 219, 275, 276, 388, 398, 399, 403, 407, 413, 420], "increment": 192, "incur": 406, "indefinit": [156, 215], "indemn": 406, "indemnifi": 406, "indent": 341, "independ": [160, 226, 250, 380, 403, 414, 417], "independentgaussiansurrog": [230, 248, 250, 252, 403], "index": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 186, 219, 284, 285, 319, 320, 380, 381, 388, 392, 394, 403, 413, 415, 417], "indexkernel": 403, "indic": [27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 76, 112, 113, 114, 116, 117, 119, 126, 127, 130, 186, 284, 285, 315, 347, 383, 392, 403, 406, 414, 417, 418], "indirect": [290, 291, 406], "indistinguish": 383, "individu": [49, 50, 92, 93, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 215, 322, 377, 384, 406, 409, 412, 414, 420], "induc": 386, "industri": 420, "ineffici": 192, "inequ": [41, 184, 415], "inf": [371, 372, 373, 374, 394], "infer": [132, 230, 398, 399, 403, 415], "inferencesess": 230, "infin": 136, "infinit": [156, 157, 293, 325, 355, 356, 403, 413], "influenc": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181], "influenti": 420, "info": [281, 403], "inform": [22, 114, 264, 321, 361, 362, 363, 378, 383, 391, 392, 399, 401, 403, 404, 406, 408, 411, 413, 415, 420, 421], "infring": 406, "ingest": [192, 215, 413, 414], "ingredi": [383, 384, 410], "inher": [17, 383], "inherit": 404, "init": 260, "initi": [83, 84, 85, 86, 87, 88, 89, 90, 94, 157, 158, 160, 168, 175, 176, 177, 178, 180, 192, 215, 219, 280, 347, 359, 371, 372, 373, 374, 377, 378, 388, 394, 399, 400, 403, 405, 409, 411, 413, 414, 416, 417, 420], "initial_data": [215, 219, 361, 399, 417], "initial_recommend": [158, 366, 377, 378, 380, 381, 386, 394, 395, 396, 401, 414], "initial_recommender_cl": 403, "initial_strategi": 403, "initial_typ": 380, "inject": 416, "inner": [152, 319, 414, 416], "inplac": [362, 398, 399, 422], "input": [36, 37, 38, 105, 113, 116, 117, 119, 127, 130, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 264, 266, 272, 274, 292, 309, 310, 314, 315, 319, 320, 326, 328, 335, 347, 360, 380, 388, 398, 399, 403, 416, 417, 420], "input_dim": 380, "input_label": 315, "inputtransform": 350, "insid": [377, 380, 381, 402, 416], "insight": 377, "inspect": [301, 376, 383], "instabl": 410, "instal": [403, 404, 411, 413, 422], "instanc": [36, 37, 38, 49, 52, 154, 156, 157, 158, 186, 192, 312, 372, 377, 383, 384, 401, 402, 404, 408, 409, 410, 411, 413, 415, 416, 417, 422], "instanti": [230, 377, 409], "instead": [156, 280, 306, 315, 371, 373, 374, 401, 402, 403, 409, 410, 412, 413, 416, 417, 419, 420, 422], "institut": [405, 406], "instruct": [401, 403, 419, 421], "instrument_nam": 281, "int": [10, 13, 17, 27, 30, 40, 41, 47, 79, 80, 81, 84, 86, 87, 88, 89, 90, 105, 121, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 215, 219, 221, 266, 267, 274, 275, 276, 281, 322, 336, 340, 343, 344, 347, 348, 350, 371, 373, 374, 383, 386, 388, 399, 404, 413], "integ": [30, 121, 186, 219, 392, 403, 404, 413], "integr": [13, 403, 404, 407, 409], "intend": [365, 376, 398, 404, 414], "intens": 413, "intention": 406, "interact": [26, 27, 365, 401, 402, 409, 416], "interchang": 383, "interconnect": 409, "interest": [412, 422], "interfac": [151, 228, 236, 376, 378, 403, 406, 409], "intermedi": [178, 347], "intern": [27, 41, 53, 156, 360, 377, 388, 403, 410, 411, 413, 414, 415, 416], "internet": 401, "internship": 405, "interplai": 403, "interpol": [84, 244, 403], "interpret": [186, 213, 309, 381, 383, 395, 396, 399, 411, 415, 417], "interrupt": 60, "intersect": 392, "interv": [126, 272, 274, 275, 276, 388, 403, 409, 413, 416, 419], "intrins": 420, "introduc": [402, 403, 410, 413, 414, 417], "intuit": 409, "invalid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 65, 192, 306, 320, 348, 381, 395, 402, 409, 410, 415], "invalid_config": 396, "invalid_surrogate_model": 381, "invalid_typ": 396, "invari": [49, 52, 53, 284, 285, 410], "invers": [205, 416], "invert": [27, 319], "investig": [213, 417, 418], "invok": [417, 421, 422], "involv": [27, 192, 376, 383, 401, 411, 412, 413, 416, 420], "io": 277, "irrelev": [383, 410], "irrespect": [280, 320], "irrevoc": 406, "is_bound": [326, 403], "is_continu": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130], "is_degener": 326, "is_discret": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130], "is_empti": [184, 192, 403], "is_eq": 41, "is_finit": 403, "is_fully_unbound": 326, "is_half_bound": 326, "is_in_rang": [112, 113, 114, 116, 117, 119, 126, 127, 130], "is_left_bound": 326, "is_numer": [112, 113, 114, 116, 117, 119, 126, 127, 130, 403], "is_right_bound": 326, "iso": 380, "isoxazol": 420, "issu": [229, 288, 298, 403, 406, 417, 422], "item": [37, 112, 113, 114, 116, 117, 119, 126, 127, 130, 383, 386, 398, 399, 413], "iter": [27, 126, 156, 157, 186, 192, 215, 229, 272, 293, 314, 327, 361, 371, 372, 373, 374, 377, 378, 386, 398, 399, 401, 403, 407, 409, 413, 414, 417, 418, 422], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 160, 184, 186, 192, 209, 221, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 281, 284, 289, 297, 301, 312, 326, 330, 360, 366, 376, 378, 383, 384, 386, 399, 401, 402, 404, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422], "itself": [376, 398, 402, 420], "j": [362, 401, 413, 420], "jackiepho": [361, 362, 363], "januari": 406, "javadi": 405, "jin": 405, "join": [319, 402], "joint": 409, "jointli": 409, "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 326, 339, 380, 381, 394, 395, 403, 421], "json_str": 416, "juli": 405, "julian": 405, "jump": [403, 420], "jupyt": 380, "just": [386, 404, 416], "k": [127, 176, 347, 360, 361, 362, 363, 365, 366, 368, 369, 377, 383, 390, 391, 392, 403, 414, 422], "karin": 405, "kde": 378, "keep": [48, 130, 184, 192, 377, 403, 404], "kei": [292, 312, 362, 404], "kept": [319, 413, 418], "kernel": [79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 234, 235, 236, 237, 238, 244, 246, 366, 371, 372, 373, 374, 388, 394, 403, 410, 420], "kernel_factori": [79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 234, 236, 237], "kernel_or_factori": 234, "kernelfactori": [234, 237, 238, 244, 246, 403], "keyword": [130, 363, 366, 392, 399, 403, 408, 410, 415, 417], "kgaa": [401, 405, 411], "kian": 420, "kickstart": 416, "kind": [168, 401, 403, 406, 410, 413, 414], "kiter": [371, 372, 373, 374, 388], "klekotaroth": 124, "klekotarothfingerprint": 124, "kmean": 366, "kmeansclusteringrecommend": [366, 414], "knob": 401, "know": [386, 395, 401, 402, 416, 420], "knowledg": [10, 401, 403, 420], "known": [410, 420], "koller": 420, "kwarg": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 83, 85, 87, 92, 93, 94, 140, 142, 143, 144, 145, 146, 147, 148, 151, 170, 228, 231, 236, 307, 325], "kwargs_conform": [130, 307, 413], "kwargs_fingerprint": [130, 307, 413], "l0": 30, "l1": 413, "l664": 246, "label": [52, 53, 119, 130, 281, 315, 383, 384, 401, 403, 410, 413, 415, 417], "labelpad": 378, "laggner": 124, "laggnerfingerprint": 124, "lambda": [371, 373, 374, 377, 383, 398, 418], "land": 403, "languag": [288, 384, 401], "larg": [130, 192, 368, 369, 384, 403, 411, 413, 417, 422], "larger": [84, 127, 348, 366, 373, 409, 410, 416, 420], "largest": [347, 386, 407], "last": [27, 156, 386, 404, 409, 414], "last_call_tim": 376, "lastli": 378, "latent": 413, "later": [127, 402, 409, 416], "latest": [401, 404, 409], "latter": [17, 27, 284, 301, 377, 383, 409, 420], "law": [401, 406], "lawsuit": 406, "layer": 124, "layeredfingerprint": 124, "layout": 403, "lazi": [194, 351, 403], "lazili": [403, 411], "lazyfram": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 194], "le": 369, "le_method": 404, "lead": [72, 388, 403, 416], "lean": 404, "learn": [13, 220, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 366, 371, 372, 373, 374, 386, 388, 394, 398, 400, 401, 403, 410, 413, 418, 419, 421], "least": [156, 384, 401, 406, 408, 409], "leav": 416, "lee": 405, "left": [69, 70, 148, 215, 313, 320, 326, 372, 403, 412], "left_df": 320, "leftov": 403, "legal": 406, "legend": [361, 363], "len": [372, 377, 378, 383, 384, 386], "length": [85, 156, 157, 224], "lengthi": 409, "lengthscal": [84, 85, 86, 88, 89, 90], "lengthscale_initial_valu": [84, 85, 86, 88, 89, 90], "lengthscale_prior": [84, 85, 86, 88, 89, 90], "leq": 30, "less": [285, 377, 378, 386, 409, 422], "let": [360, 362, 376, 377, 378, 380, 381, 383, 384, 390, 399, 401, 410, 412, 416], "level": [314, 403, 404, 408, 409, 410, 414, 416], "leverag": [377, 409, 414], "li": 413, "liabil": 406, "liabl": 406, "lib": [371, 373, 374, 402], "librari": 402, "licensor": 406, "lie": [27, 224, 226, 227, 230, 234, 248, 250, 252, 254, 312], "liebig": 405, "life": [401, 404, 405, 422], "lifecycl": 409, "ligand": [361, 362, 363, 365, 366, 377, 401, 413], "ligand_data": 377, "ligand_smil": 377, "like": [178, 219, 287, 378, 383, 386, 401, 402, 403, 404, 408, 409, 410, 413, 416, 417, 420, 422], "likelihood": 224, "limit": [244, 281, 378, 401, 405, 406, 410, 415, 421], "line": [326, 341, 361, 363, 377, 386, 403, 404, 407, 409, 413, 417, 420], "linear": [41, 83, 184, 248, 270, 275, 366, 367, 388, 400, 403, 404, 415, 419], "linear_model": 380, "linear_regressor": 380, "linearkernel": 403, "linearli": [244, 275, 276, 388, 403], "lineplot": [360, 361, 362, 363, 377, 398, 399], "lingo": 124, "lingofingerprint": 124, "link": [51, 402, 403, 406, 413], "linspac": [371, 372, 373, 374, 378, 380, 381, 383, 391, 392, 394, 398, 399, 422], "lint": [401, 403, 404], "linter": [403, 404], "list": [30, 31, 32, 33, 34, 37, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 96, 117, 132, 137, 156, 157, 184, 186, 192, 193, 194, 197, 198, 199, 215, 219, 221, 280, 290, 291, 292, 300, 307, 312, 316, 317, 318, 320, 321, 347, 361, 366, 371, 372, 373, 374, 378, 383, 384, 386, 388, 391, 392, 399, 401, 404, 406, 410, 412, 413, 414, 415, 417], "liter": [96, 156, 215, 217, 219, 314, 347, 404], "literatur": 403, "litig": 406, "littl": 402, "liver": [417, 420], "load": [339, 351, 377, 380, 395, 396, 402, 403], "loc": [146, 147, 361, 363], "local": [402, 404, 411, 421], "locat": [146, 147, 408, 411, 420], "lockfil": 403, "log": [146, 281, 366, 401, 411], "logarithm": [4, 11, 12, 337], "logei": [4, 403], "logic": [152, 312, 315, 360, 403, 410, 414, 417, 422], "lognormalprior": 403, "logo": 403, "long": [409, 416, 417], "longer": 403, "look": [217, 366, 383, 386, 402, 407, 409, 410, 416, 417, 419], "look_up_target": 215, "lookup": [213, 215, 219, 221, 315, 320, 359, 360, 378, 391, 400, 403, 421], "lookup_df": 217, "lookup_test_task": 399, "lookup_training_task": 399, "lookup_valu": [368, 369, 378, 391, 392], "lookup_withmiss": 363, "loop": [213, 215, 221, 371, 372, 373, 374, 377, 388, 403, 408, 417, 422], "loss": 406, "lost": 416, "lot": 390, "low": [244, 386, 402, 403, 413, 416], "lower": [148, 274, 275, 276, 326, 361, 363, 378, 388, 398, 399, 413, 419], "lower_bound": 415, "lst_exclud": 316, "lt": 402, "luxuri": 409, "m": 383, "m1": 402, "mac": 402, "macc": 124, "maccsfingerprint": 124, "machin": [386, 401, 402, 404, 407, 411, 413, 419, 420], "machineri": [17, 168, 402, 404, 420, 422], "made": [73, 192, 215, 347, 363, 401, 402, 406, 410, 411, 417], "magic": 420, "magnitud": [313, 314, 422], "mai": [27, 99, 104, 109, 186, 297, 401, 406, 409, 416, 417], "mail": 406, "main": [26, 27, 401, 403], "maintain": [258, 404], "major": [403, 417], "make": [8, 18, 53, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 256, 257, 258, 288, 313, 315, 361, 363, 366, 368, 383, 384, 401, 402, 404, 406, 409, 410, 413, 416, 420, 422], "malfunct": 406, "manag": [26, 184, 185, 186, 192, 344, 403, 406, 417], "mandatori": [403, 419], "mani": [348, 383, 391, 392, 401, 409, 413, 416, 419, 420], "manner": 411, "manual": [392, 402, 403, 416], "map": [119, 124, 130, 217, 219, 274, 275, 276, 295, 315, 350, 361, 362, 363, 388, 417, 419], "mapfingerprint": 124, "margin": 403, "mark": [406, 414, 420, 421], "markdown": [381, 395, 396, 403], "marker": [360, 361, 362, 363, 377, 398, 399, 403], "markers": [360, 362, 377, 398, 399], "market": 386, "marketplac": 403, "martin": [401, 405], "mask_bad1": 371, "mask_bad2": 371, "mask_bad3": 371, "mask_good": [371, 410], "mass": 142, "master": 246, "match": [27, 75, 113, 116, 117, 119, 127, 130, 132, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 264, 266, 269, 272, 280, 295, 297, 320, 321, 376, 378, 388, 392, 401, 403, 408, 409, 412, 414, 416, 417, 421], "match_attribut": 403, "match_targeta": 419, "match_targetb": 419, "materi": [386, 420], "matern": 84, "maternkernel": 403, "math": [377, 383], "mathemat": 403, "matmin": 402, "matplotlib": [361, 363, 378, 403], "matter": [383, 390, 404, 412], "max": [217, 269, 313, 361, 362, 363, 365, 366, 371, 372, 373, 374, 377, 378, 380, 381, 386, 388, 394, 395, 396, 401, 403, 412, 416, 417, 421], "max_cardin": [30, 40, 47], "max_column": [322, 383], "max_colwidth": 322, "max_nonzero": 192, "max_row": [322, 383], "max_sum": [192, 383, 415], "max_target": 419, "max_yield": [361, 363], "maxim": [6, 269, 365, 378, 386, 388, 401, 419], "maximum": [6, 30, 40, 47, 130, 184, 186, 192, 274, 322, 383, 384, 388, 403, 410, 413, 415], "mc": [386, 408], "md": 403, "me2pph": [361, 362, 363], "mean": [5, 8, 17, 18, 27, 53, 96, 107, 154, 156, 157, 158, 176, 213, 215, 217, 219, 224, 250, 258, 337, 363, 366, 380, 386, 388, 403, 404, 406, 407, 408, 409, 410, 412, 413, 414, 416, 418, 421], "meaning": 412, "meaningless": [383, 407], "meanpredictionsurrog": [258, 366, 418], "meantim": [404, 410], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 192, 213, 215, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 264, 266, 272, 280, 312, 320, 361, 362, 363, 366, 368, 369, 371, 372, 373, 374, 376, 377, 378, 388, 391, 392, 394, 401, 403, 404, 407, 408, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421], "mechan": [8, 18, 27, 60, 104, 105, 107, 213, 216, 217, 221, 297, 319, 328, 347, 360, 376, 377, 378, 398, 399, 403, 406, 415, 416, 420, 421], "mechanist": 401, "media": [406, 413, 420], "mediocr": 419, "medium": [381, 394, 401, 406, 413], "medoid": [177, 403, 414], "meet": [312, 406], "mem_estim": 422, "member": [301, 410, 413], "memori": [10, 186, 191, 192, 403, 411, 421], "memorys": [186, 192, 422], "mention": 407, "merchant": 406, "merck": [401, 405, 411], "mere": [406, 412], "merg": 404, "meshgrid": [398, 399], "messag": 377, "meta": [69, 154, 156, 157, 158, 161, 371, 372, 373, 374, 388, 394, 401, 403, 421], "metadata": [27, 184, 192, 278, 403], "metarecommend": [156, 157, 158, 403], "methanol": 383, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 76, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 209, 224, 226, 227, 228, 230, 234, 236, 237, 244, 246, 248, 250, 252, 254, 257, 260, 261, 264, 266, 272, 287, 288, 297, 301, 326, 339, 346, 347, 348, 350, 378, 381, 395, 396, 403, 405, 409, 411, 412, 413, 415, 416, 417, 418, 420], "methodtyp": [376, 377, 378], "methyldiphenylphosphin": [361, 362, 363], "methylisoxazol": 420, "metric": [386, 401, 411, 413], "mhfp": 124, "mhfpfingerprint": 124, "micromamba": 403, "midpoint": 419, "might": [49, 53, 130, 186, 362, 366, 368, 372, 392, 399, 402, 408, 409, 410, 411, 415, 417, 420, 422], "mimic": [77, 138, 410], "min": [269, 313, 360, 368, 369, 378, 388, 391, 392, 398, 399, 401, 403, 412, 416, 421], "min_cardin": [30, 40, 47], "min_nonzero": 192, "min_target": 419, "mind": [386, 418], "miniconda": 403, "minim": [6, 269, 388, 398, 399, 415, 419], "minimum": [30, 40, 47, 127, 184, 186, 192], "minor": 403, "mirror": [409, 416], "miss": [27, 215, 217, 363, 403, 404], "mistak": 404, "mix": [221, 383, 384, 401, 410, 413, 416, 420], "mixin": 209, "mixtur": [175, 400, 403, 410, 413, 414, 420, 422], "mobil": 403, "mode": [96, 119, 130, 156, 215, 224, 269, 272, 275, 295, 312, 359, 360, 361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 377, 378, 380, 381, 391, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 412, 414, 416, 421], "model": [13, 27, 30, 31, 32, 33, 34, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 67, 77, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 224, 226, 227, 228, 229, 230, 234, 248, 250, 252, 254, 258, 260, 261, 333, 368, 369, 379, 398, 399, 401, 403, 405, 407, 408, 409, 410, 413, 414, 416, 417, 419, 420, 421], "model_cl": 261, "model_cluster_num_parameter_nam": [175, 176, 177, 178], "model_from_config": 380, "model_from_python": 380, "model_init": 260, "model_json": 380, "model_param": [175, 176, 177, 178, 248, 252, 254, 381, 403], "modelnottrainederror": [224, 226, 227, 230, 234, 248, 250, 252, 254], "modif": [402, 406], "modifi": [27, 217, 258, 312, 313, 314, 403, 406, 422], "modul": [0, 1, 28, 77, 97, 110, 128, 138, 149, 152, 161, 164, 171, 182, 200, 201, 213, 222, 232, 239, 262, 265, 282, 331, 351, 354, 401, 402, 403, 404], "modular": 404, "molecul": [51, 130, 306, 383, 413], "molecular": [307, 413], "moment": [221, 244, 404, 419], "monitor": [403, 411], "monkeypatch": 402, "mont": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 68, 219, 360, 362, 363, 377, 386, 398, 399, 408, 417], "monte_carlo_run": [219, 377], "mordr": [124, 130, 361, 362, 363, 365, 366, 372, 377, 381, 383, 395, 396, 401, 403, 410, 413], "mordredcommun": 403, "mordredfingerprint": [124, 413], "more": [8, 10, 18, 53, 58, 70, 130, 156, 157, 184, 186, 192, 199, 215, 258, 277, 280, 301, 341, 363, 366, 378, 383, 384, 398, 401, 402, 403, 404, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 419, 422], "morgan": 413, "morgan_fp": [124, 403], "mors": 124, "morsefingerprint": 124, "most": [192, 215, 364, 386, 401, 404, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420, 422], "motiv": 403, "move": [403, 416], "mpl_toolkit": 378, "mplot3d": 378, "mqn": 124, "mqnsfingerprint": 124, "mse": 386, "mu": [146, 147], "much": [362, 412, 413], "multi": [223, 224, 400, 403, 405, 408, 420], "multiarmedbandit": 386, "multipl": [36, 104, 154, 156, 157, 158, 218, 219, 314, 361, 362, 363, 372, 383, 386, 401, 403, 408, 410, 412, 419, 420, 421], "multipli": 93, "multitask": 403, "must": [49, 99, 104, 109, 186, 192, 217, 221, 297, 314, 366, 376, 377, 383, 386, 388, 403, 404, 406, 407, 410, 411, 412, 413, 417], "mutual": 417, "my_attribut": 404, "my_valu": 411, "mypi": [288, 298, 401, 403, 404], "mystr": 404, "n": [22, 224, 285, 302, 347, 361, 362, 363, 365, 366, 371, 372, 373, 374, 381, 383, 386, 388, 391, 392, 394], "n_arm": 386, "n_batches_don": 27, "n_cluster": [176, 177], "n_combin": 383, "n_combinations_actu": 383, "n_combinations_expect": 383, "n_compon": 175, "n_doe_iter": [215, 219, 221, 360, 361, 362, 363, 377, 378, 398, 399, 417], "n_duplic": 383, "n_estim": 381, "n_fits_don": 27, "n_interrupted_campaign": 377, "n_iter": [368, 369, 371, 372, 373, 374, 386, 388], "n_mc_iter": [219, 221, 360, 362, 363, 377, 398, 399, 417], "n_mc_run": 386, "n_mc_sampl": 17, "n_permut": 383, "n_pis_ov": 377, "n_pis_over_requir": 377, "n_point": [184, 348], "n_raw_sampl": [168, 403, 414], "n_restart": [168, 403, 414], "n_sampl": 347, "n_task": 186, "n_task_param": 403, "n_wrong_sum": 383, "naiv": [160, 250, 258, 366, 403, 415], "naivehybridrecommend": 403, "naivehybridspacerecommend": [392, 403, 414], "nake": [280, 411], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 40, 58, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 133, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 198, 207, 219, 230, 264, 266, 272, 284, 289, 295, 296, 297, 306, 307, 312, 316, 321, 334, 339, 341, 353, 360, 361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 386, 388, 390, 391, 392, 394, 395, 396, 398, 399, 401, 403, 404, 406, 408, 410, 411, 412, 415, 416, 417, 418, 419, 420, 422], "name_or_abbr": [289, 296], "namedtupl": 386, "namespac": [169, 403, 404], "nan": [27, 136, 224, 355, 357, 358, 388], "nativ": [380, 403], "natur": [252, 362, 404, 410, 414, 416, 419], "navig": [401, 409], "nbase": 307, "nbviewer": 380, "nd": 401, "ndarrai": [105, 274, 275, 276, 315, 323, 326, 337, 347, 378, 386, 403, 417], "ne": 383, "nearli": 419, "necessari": [321, 376, 404, 409, 410, 412, 413, 415, 417], "necessarili": [406, 409, 410, 415, 420], "need": [22, 27, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 221, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 297, 320, 321, 361, 362, 363, 366, 371, 374, 376, 378, 380, 383, 386, 388, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 422], "neg": [13, 403], "negat": [6, 41, 399, 403, 420], "neglig": 406, "neither": [221, 314], "neq": 30, "nest": [341, 409, 421], "neural": 420, "neurip": 420, "never": 373, "nevertheless": [301, 402], "new": [27, 43, 44, 96, 156, 158, 184, 217, 229, 274, 275, 276, 284, 318, 319, 365, 377, 378, 394, 401, 403, 404, 409, 410, 418, 420], "new_rec": 409, "newli": [401, 404, 411, 420], "next": [27, 154, 156, 157, 158, 360, 376, 378, 383, 384, 394, 398, 399, 401, 407, 408, 409, 414, 416], "ngboost": [252, 366, 403], "ngboostmodel": 381, "ngboostsurrog": [366, 381, 418], "nice": [378, 402], "nicknam": 306, "nintern": 388, "no_duplicates_constraint": 383, "no_grad": 378, "no_tl": 398, "nois": [215, 313, 314, 399, 403, 421], "noise_level": 314, "noise_perc": [215, 219, 417], "noise_ratio": 313, "noise_std": [398, 399], "noise_typ": 314, "noisi": [12, 14, 398, 401, 403, 420], "non": [27, 57, 58, 99, 104, 109, 160, 186, 215, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 295, 297, 301, 313, 348, 355, 356, 357, 383, 398, 403, 406, 408, 415, 416], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 38, 43, 44, 53, 57, 58, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 94, 96, 104, 109, 113, 126, 127, 132, 135, 136, 137, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 189, 192, 195, 198, 199, 202, 203, 205, 207, 215, 217, 219, 221, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 260, 261, 266, 272, 280, 281, 297, 307, 312, 316, 317, 318, 322, 326, 327, 339, 350, 355, 356, 357, 358, 366, 371, 372, 373, 374, 376, 377, 378, 380, 381, 388, 394, 415, 419, 421], "nonetheless": 420, "nonlinear": [33, 184], "nonpredict": [173, 175, 176, 177, 178, 180, 181], "nonpredictiverecommend": [178, 180, 181, 403], "nonzero": [30, 192, 403], "noqa": [371, 404], "nor": 314, "norecommenderslefterror": [156, 157], "noreturn": 231, "normal": [145, 146, 147, 371, 373, 374, 388, 402, 406, 412, 415], "normaliz": 412, "normalprior": 403, "not_a_param": 381, "notabl": 403, "note": [27, 30, 53, 186, 215, 219, 221, 229, 230, 312, 313, 314, 361, 362, 363, 366, 372, 376, 380, 381, 383, 388, 391, 392, 394, 395, 396, 401, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420], "notebook": 380, "noteworthi": 409, "noth": [13, 27, 30, 38, 40, 41, 47, 71, 104, 117, 130, 158, 160, 166, 168, 175, 176, 177, 178, 184, 186, 192, 224, 234, 248, 252, 254, 272, 406, 413], "notic": [376, 404, 406, 416], "notimplementederror": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 105, 199, 202, 203, 221, 224, 226, 227, 229, 230, 234, 248, 250, 252, 254], "notwithstand": 406, "now": [360, 361, 362, 363, 365, 366, 371, 373, 376, 377, 378, 383, 384, 386, 388, 390, 394, 395, 398, 399, 401, 403, 420, 422], "np": [105, 368, 369, 371, 372, 373, 374, 378, 380, 381, 383, 384, 386, 390, 391, 392, 394, 398, 399, 410, 413, 417, 422], "nrecommend": [365, 366, 388, 391, 392], "nu": 84, "num": [319, 330], "num_disc_1": [388, 409], "num_disc_2": 388, "num_experi": [215, 360, 361, 362, 363, 377, 398, 399], "num_fantasi": 10, "num_parameter_1": 374, "num_parameter_2": 374, "num_parameter_3": 374, "num_parameter_4": 374, "num_parameter_5": 374, "num_parameter_6": 374, "num_sampl": 89, "num_valu": [371, 372, 373, 374, 388, 394, 415], "number": [10, 13, 17, 27, 40, 89, 130, 151, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 215, 219, 221, 224, 322, 326, 330, 342, 347, 348, 361, 362, 363, 368, 369, 371, 372, 373, 374, 378, 383, 386, 391, 398, 399, 401, 402, 403, 407, 409, 410, 411, 412, 413, 415, 416, 417, 422], "numer": [27, 30, 31, 32, 33, 34, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 72, 112, 113, 114, 116, 117, 119, 126, 127, 130, 184, 192, 217, 272, 280, 313, 314, 320, 348, 360, 365, 368, 383, 384, 403, 410, 411, 412, 413, 415, 417, 419], "numerical_measurements_must_be_within_toler": [27, 280, 320, 403, 409], "numerical_onli": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "numericalcontinuousparamet": [41, 184, 360, 368, 369, 384, 390, 392, 399, 415, 417, 421], "numericaldiscreteparamet": [192, 361, 362, 363, 365, 366, 368, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 388, 391, 392, 394, 395, 396, 398, 399, 401, 415, 416, 417, 421, 422], "numericaltarget": [217, 360, 361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 377, 378, 380, 381, 388, 391, 392, 394, 395, 396, 398, 399, 401, 403, 412, 416, 417, 421], "numericcontinu": 392, "numparam1": 374, "numparam2": 374, "numparam3": 374, "numparam4": 374, "numparam5": 374, "numparam6": 374, "numpi": [315, 323, 326, 332, 334, 368, 369, 371, 372, 373, 374, 378, 380, 381, 383, 384, 386, 390, 391, 392, 394, 398, 399, 403, 410, 417, 422], "nuniqu": 383, "nyou": [391, 392], "o": [360, 361, 362, 363, 365, 366, 369, 371, 372, 373, 374, 377, 378, 381, 383, 386, 398, 399, 401, 410, 411, 413], "o2": [361, 362, 363], "obj": [135, 136, 137, 203], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 104, 107, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 193, 194, 203, 204, 207, 209, 224, 226, 227, 228, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 287, 288, 295, 297, 314, 320, 321, 326, 339, 350, 360, 365, 376, 377, 378, 380, 381, 386, 390, 392, 395, 396, 402, 403, 404, 406, 409, 410, 414, 415, 417, 418, 419, 421, 422], "objective_json": 416, "oblig": 406, "observ": [213, 386, 417, 419], "obtain": [215, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 362, 378, 386, 399, 401, 403, 409, 416, 420], "oc": [361, 362, 363, 365, 366], "oc1": [361, 362, 363], "occur": [52, 404], "occurr": 410, "octanol": [410, 413], "off": [8, 18, 221, 302, 372, 401, 403, 410, 411, 419], "offer": [297, 378, 383, 386, 391, 402, 406, 407, 413, 414, 416, 417, 418, 420, 422], "offset": [41, 87], "offset_initial_valu": 87, "offset_prior": 87, "often": [384, 386, 402, 407, 410, 411, 413, 416, 422], "oftentim": [416, 417], "oh": [116, 121, 362, 372, 381, 386, 388, 394, 395, 396, 401, 415, 416], "ok": 388, "old": 420, "omit": [219, 297, 376, 401, 415, 416], "onc": [219, 377, 413, 417], "one": [17, 27, 58, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 142, 151, 152, 156, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 199, 217, 234, 258, 284, 285, 341, 361, 362, 363, 366, 368, 383, 386, 388, 396, 398, 399, 401, 402, 403, 404, 406, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420], "onehot": 362, "ones": [186, 280, 320, 362, 392, 403, 408, 420], "ongo": [377, 420], "onli": [8, 10, 18, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 84, 99, 104, 109, 130, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 192, 217, 221, 258, 280, 281, 297, 298, 301, 312, 320, 326, 341, 347, 348, 361, 366, 371, 372, 377, 378, 380, 381, 383, 391, 392, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419, 420, 422], "onlin": 386, "onnx": [229, 230, 333, 379, 401, 403, 418], "onnx_input_nam": [230, 380], "onnx_str": [230, 380], "onto": 404, "open": [401, 404], "opentelemetri": [401, 403, 411], "oper": [38, 41, 50, 205, 258, 315, 331, 368, 369, 373, 374, 383, 384, 402, 403, 408, 410, 414, 416], "operator_convert": 380, "opposit": 410, "opt": [401, 411], "optim": [17, 27, 41, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 213, 215, 219, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 312, 362, 364, 365, 368, 369, 377, 378, 383, 386, 388, 392, 403, 405, 407, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420], "optimize_acqf": [41, 168], "optimize_acqf_": 41, "optimize_acqf_discret": 168, "optimize_acqf_mix": 168, "option": [27, 73, 83, 84, 85, 86, 87, 88, 89, 90, 94, 104, 109, 113, 116, 117, 119, 127, 130, 132, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 205, 207, 215, 219, 221, 248, 252, 254, 260, 266, 272, 297, 307, 312, 316, 317, 318, 339, 363, 366, 380, 381, 386, 402, 403, 404, 407, 409, 410, 412, 415, 416, 417, 418, 419, 422], "oracl": 417, "orchestr": [404, 409], "order": [186, 192, 377, 386, 401, 403, 404, 409, 410, 413, 416, 420], "ordin": 419, "org": [41, 246, 288, 318, 380, 401, 406], "organ": 404, "origin": [22, 27, 284, 285, 292, 315, 394, 403, 404, 406, 414, 416, 418], "orthogon": 404, "oserror": 402, "other": [49, 91, 184, 285, 361, 363, 365, 368, 369, 377, 384, 386, 392, 398, 399, 401, 402, 404, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 422], "otherwis": [41, 112, 113, 114, 116, 117, 119, 126, 127, 130, 406, 407, 412, 420], "our": [360, 371, 373, 376, 377, 378, 381, 383, 384, 386, 390, 391, 392, 395, 396, 398, 399, 401, 404, 407, 409, 410, 416, 417], "out": [192, 388, 399, 401, 406, 411, 417, 420], "outcom": [151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 362, 401, 413, 419], "output": [27, 94, 314, 315, 339, 360, 398, 399, 402, 403, 405, 417, 418], "output_label": 315, "outputscal": 94, "outputscale_initial_valu": 94, "outputscale_prior": 94, "outsid": [27, 258, 275, 276, 312, 320, 388, 403, 416], "outstand": 406, "over": [27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 383, 403, 407, 420], "overal": [186, 380, 381, 383, 384, 386, 403, 404, 409, 412, 420], "overlap": [57, 58, 368, 369, 410], "overrid": [205, 207, 376, 403], "overridden": [376, 404], "overview": 416, "overwritten": 392, "own": [160, 360, 384, 401, 402, 403, 404, 406, 410, 413], "owner": 406, "ownership": 406, "p": [360, 361, 362, 363, 365, 366, 368, 369, 376, 378, 391, 398, 399, 404, 418, 422], "p1": [415, 416, 417], "p1_json": 416, "p1_via_json": 416, "p2": [415, 416, 417], "p2_json": 416, "p2_via_json": 416, "p3c4": [361, 362, 363], "p_cont": 415, "p_disc": 415, "p_g1_amount": 384, "p_g2_amount": 384, "p_g3_amount": 384, "p_i": 30, "pack": 416, "packag": [124, 278, 371, 373, 374, 402, 403, 404, 413, 417, 418, 422], "page": [380, 401, 403, 404], "pair": [284, 401, 413], "pam": 177, "pamclusteringrecommend": 414, "panda": [48, 193, 211, 212, 217, 306, 323, 360, 361, 362, 363, 368, 369, 371, 377, 378, 383, 384, 388, 391, 392, 398, 399, 403, 410, 413, 415, 416, 417], "paper": 420, "paper_fil": 420, "parallel": 404, "param": [379, 381, 400], "param1": [415, 417], "param2": [415, 417], "param_bounds_comp": 403, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 61, 70, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 105, 109, 112, 113, 116, 117, 119, 121, 122, 123, 124, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 188, 191, 192, 193, 194, 197, 198, 199, 205, 207, 209, 213, 215, 217, 219, 221, 224, 226, 227, 230, 234, 237, 244, 246, 248, 250, 252, 254, 256, 258, 260, 261, 264, 266, 272, 274, 275, 276, 280, 281, 284, 285, 290, 291, 292, 295, 297, 300, 301, 302, 305, 306, 307, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 330, 335, 336, 337, 339, 341, 343, 344, 347, 348, 350, 360, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 380, 386, 388, 390, 391, 392, 394, 395, 396, 398, 399, 401, 403, 404, 410, 411, 412, 416, 417, 418, 420, 421], "parameter": [142, 143, 144, 145, 146, 147, 148], "parameter_json": 416, "parameter_nam": [184, 186, 192, 392], "parameterencod": [113, 121, 122, 124, 127], "parametr": 410, "parent": 404, "pars": [328, 403], "parser": 403, "part": [13, 22, 36, 64, 160, 161, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 312, 381, 392, 395, 396, 398, 399, 403, 404, 406, 407, 408, 409, 410, 414, 415, 416, 422], "parti": [406, 417], "partial": [22, 377, 421], "particl": 420, "particular": [27, 192, 213, 376, 392, 401, 402, 404, 406, 409, 413, 415, 416, 417], "particularli": [297, 409], "partit": [177, 219, 221, 403, 414, 417], "pass": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 130, 175, 176, 177, 178, 186, 192, 203, 234, 248, 252, 254, 321, 383, 394, 399, 403, 404, 412, 413, 416], "passthrough": [24, 100, 188, 238], "patch": 377, "patent": 406, "path": [339, 362, 383, 403, 404, 411, 422], "pattern": [124, 404, 420], "patternfingerprint": 124, "pd": [27, 217, 284, 285, 319, 360, 361, 362, 363, 368, 369, 371, 377, 378, 383, 384, 388, 391, 392, 398, 399, 403, 410, 413, 415, 416, 417], "pdf": 420, "peek": 416, "pend": [22, 27, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 401, 403, 421], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 403, 408, 414], "per": [215, 361, 362, 363, 366, 383, 388, 391, 398, 399, 403, 413, 415, 417], "percent": [215, 406], "percentag": [168, 280, 314, 366, 371, 372, 373, 374, 383, 388, 394, 399, 414], "perf_count": 376, "perfectli": 416, "perform": [168, 215, 280, 362, 371, 372, 373, 374, 378, 383, 395, 398, 399, 401, 403, 404, 406, 407, 409, 411, 413, 414, 417, 418, 420], "period": 85, "period_length_initial_valu": 85, "period_length_prior": 85, "periodickernel": 403, "perm_inv_constraint": 383, "permiss": [401, 406], "permut": [49, 52, 53, 285, 403, 410], "permutation_invari": 49, "perpetu": 406, "persist": [403, 405, 409, 411, 416, 418], "perspect": 416, "pertain": 406, "pharmacophor": 124, "pharmacophorefingerprint": 124, "phase": [158, 384], "phaseagent1": 384, "phaseagent2": 384, "phcpho": [361, 362, 363, 365, 366], "phenomenon": 409, "philosophi": 416, "physic": 417, "physiochemicalproperti": 124, "physiochemicalpropertiesfingerprint": 124, "pi": [7, 366, 377, 378], "pi_max": 378, "pi_per_iter": 378, "pi_required_fract": 377, "pi_threshold": 377, "pickl": 403, "pictur": 401, "piec": [386, 401, 409, 410], "piecewis": 86, "piecewisepolynomialkernel": 403, "pin": [22, 403], "pin_discret": 22, "pinned_part": 22, "pip": [401, 403, 404, 422], "pipelin": [398, 399, 403, 404], "pival": [361, 362, 363, 365, 366], "pl": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55], "place": [27, 30, 217, 312, 313, 314, 380, 381, 383, 386, 402, 403, 404, 406, 409, 413, 416, 420], "placehold": 287, "plai": [409, 419], "plain": 238, "plainkernelfactori": [79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 234], "plan": [229, 413], "platt": 420, "pleas": [380, 381, 401, 407, 414], "plot": [215, 361, 362, 363, 398, 399, 403, 418, 420], "plot_abegin_convert_pipelin": 333, "plot_ebegin_float_doubl": 333, "plotting_them": 339, "plt": [361, 363, 378], "plu": [217, 401], "plugin": 403, "pm": [5, 366], "png": [361, 363], "po16": 413, "poetri": 403, "point": [6, 13, 17, 22, 26, 27, 127, 151, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 192, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 332, 333, 345, 346, 347, 348, 352, 361, 365, 366, 377, 384, 391, 392, 398, 399, 401, 403, 405, 407, 408, 409, 414, 415, 421, 422], "points_per_dim": [378, 391, 392, 398, 399], "polar": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 194, 401, 403, 405, 421, 422], "poli": 378, "polici": 386, "polycollect": 378, "polym": 413, "polynomi": [86, 87], "polynomialkernel": 403, "polytop": 403, "popul": 383, "popular": [413, 418], "posit": [297, 347, 403, 412], "posixpath": 339, "possibl": [132, 192, 193, 194, 213, 297, 312, 363, 377, 378, 383, 388, 401, 403, 406, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420, 422], "possibli": 157, "post": 413, "post_hook": [297, 376, 377, 378], "posterior": [5, 6, 8, 13, 17, 18, 27, 224, 226, 227, 230, 234, 248, 250, 252, 254, 257, 366, 403, 407, 418], "posterior_mean": [224, 386], "posterior_mod": 224, "posteriorstandarddevi": [386, 407], "postprocess": 306, "potassium": [361, 362, 363, 365, 366], "potenti": [186, 320, 401, 402, 403, 404, 409, 412, 415, 422], "power": [87, 406, 410, 414], "pph3": [361, 362, 363], "pr": [403, 404], "practic": [407, 414], "pre": [132, 156, 237, 379, 402, 403, 404], "pre_hook": [297, 376], "precis": [53, 156, 184, 280, 322, 333, 334, 353, 403, 421], "precomput": 119, "predefin": [339, 409, 414], "predict": [8, 18, 27, 67, 178, 224, 226, 227, 230, 234, 248, 250, 252, 254, 401, 403, 407, 408, 409, 417, 418, 420], "predictor": 256, "prefer": [27, 406, 416], "prefix": 307, "preliminari": 420, "prepar": [378, 404, 406, 422], "preprocess": 403, "presenc": 402, "present": [99, 104, 109, 186, 284, 285, 297, 320, 365, 386, 403, 410, 417, 422], "preset": [234, 241, 244, 246, 403], "pressur": [373, 380, 381, 394, 395, 396, 401, 410], "pretrain": [230, 379, 400], "pretti": 322, "pretty_print_df": [383, 403], "prevent": [202, 203, 297, 402, 403, 404], "previou": [156, 377, 378, 403, 409, 411, 414, 420], "previous": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 280, 361, 362, 363, 365, 366, 373, 408], "price": 413, "primari": 409, "primarili": 407, "principl": [383, 386, 418], "print": [217, 322, 341, 361, 362, 363, 365, 366, 368, 369, 373, 376, 380, 381, 383, 384, 386, 390, 391, 392, 394, 395, 396, 401, 403, 415, 422], "print_parameter_names_hook": 376, "printer_inst": 376, "prior": [83, 84, 85, 86, 87, 88, 89, 90, 94, 142, 143, 144, 145, 146, 147, 148, 224, 244, 374, 401, 402, 403], "priori": [410, 416, 420], "privat": [403, 405], "probabilist": 407, "probability_of_improv": 378, "probabilityofimprov": [377, 378], "probabl": [7, 15, 17, 366, 375, 377, 400, 403], "problem": [383, 384, 386, 398, 399, 403, 404, 409, 412, 416], "problemat": [301, 402, 413], "proce": [215, 365, 411], "procedur": [407, 420], "proceed": 420, "process": [27, 77, 232, 233, 234, 235, 239, 240, 241, 243, 244, 245, 246, 319, 347, 366, 376, 383, 386, 398, 399, 403, 404, 407, 408, 409, 410, 411, 413, 416, 420], "prod": 374, "prod_constraint": 374, "prod_i": 412, "produc": [105, 217, 401, 404, 417], "product": [54, 93, 186, 192, 193, 194, 293, 370, 400, 401, 403, 406, 410, 421, 422], "product_paramet": [192, 383, 415], "productkernel": 403, "programmat": 383, "progress": [27, 155, 378, 403], "prohibit": 407, "project": [378, 401, 403, 411], "promin": 406, "promis": [377, 408], "proper": 403, "properli": [22, 388, 402, 415], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 107, 109, 112, 113, 114, 116, 117, 119, 121, 122, 124, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 187, 191, 192, 224, 226, 227, 230, 234, 237, 241, 244, 246, 248, 250, 252, 254, 264, 266, 269, 270, 272, 288, 326, 346, 350, 403, 404, 410], "proport": 399, "propos": 409, "protobuf": 403, "protocol": [150, 151, 228, 236, 301, 403], "prototyp": 405, "provid": [13, 27, 41, 105, 119, 130, 132, 151, 156, 157, 160, 161, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 205, 209, 213, 215, 217, 219, 221, 224, 226, 227, 230, 234, 244, 246, 248, 250, 252, 254, 284, 293, 297, 309, 313, 314, 318, 321, 323, 347, 348, 360, 361, 362, 363, 376, 383, 390, 391, 392, 395, 398, 399, 403, 404, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420], "prune": [12, 14], "prune_baselin": [12, 14], "pstd": [6, 403, 407], "pubchem": 124, "pubchemfingerprint": 124, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 107, 109, 112, 113, 114, 116, 117, 119, 121, 122, 124, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 187, 191, 192, 209, 224, 226, 227, 228, 230, 234, 236, 237, 241, 244, 246, 248, 250, 252, 254, 264, 266, 269, 270, 272, 287, 288, 326, 346, 350, 403, 404], "publicli": 406, "publish": 403, "pull": [386, 403], "pure": [8, 10, 13, 18, 152, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 221, 229, 348, 391, 403, 421], "purerecommend": [154, 156, 157, 158, 160, 166, 173, 403], "purpos": [13, 376, 377, 380, 386, 401, 402, 404, 406, 416, 422], "push": 404, "put": [383, 386, 411, 413], "puzzl": 401, "py": [246, 371, 373, 374, 403, 411], "py310": [371, 373, 374], "py312": 404, "pyarrow": 403, "pydant": 403, "pydoclint": [403, 404], "pydocstyl": 404, "pylint": 403, "pymatgen": 402, "pypi": [401, 403], "pyplot": [361, 363, 378], "pyproject": 403, "pytest": [403, 404], "python": [26, 288, 298, 362, 381, 395, 396, 401, 402, 403, 404, 409, 411, 416], "python3": [371, 373, 374], "python310": 402, "pytorch": 403, "pyupgrad": 403, "q": [86, 256, 257, 366, 408], "qei": [9, 366, 395, 396, 403], "qkg": [10, 403], "qlogei": [11, 366, 403], "qlogexpectedimprov": [366, 371, 372, 373, 374, 388, 394], "qlognei": [12, 403], "qnegintegratedposteriorvari": 407, "qnei": [14, 403], "qnipv": [13, 403, 407], "qpi": [15, 366], "qsimpleregret": 17, "qsr": [16, 403], "qt": 17, "qthompsonsampl": [386, 403], "quadrat": [90, 360], "qualiti": 404, "quantif": 420, "quantifi": [386, 407, 420], "quantiti": [27, 51, 411, 412, 418, 422], "quantum": 119, "qucb": [18, 366, 407], "queri": [152, 161, 213, 215, 217, 401, 409, 411, 417], "question": [404, 409, 420], "qupperconfidencebound": 407, "qvarucb": 403, "r": [361, 362, 363, 365, 366], "radial": 88, "radiu": [124, 403, 413], "rais": [13, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 105, 132, 136, 137, 156, 157, 166, 168, 184, 186, 192, 198, 199, 202, 203, 215, 217, 221, 224, 226, 227, 229, 230, 231, 234, 248, 250, 252, 254, 261, 285, 295, 297, 300, 302, 305, 309, 310, 312, 313, 314, 320, 321, 341, 347, 348, 376, 377, 378, 392, 402, 403, 404, 414], "rand": 380, "random": [13, 89, 184, 186, 215, 217, 219, 253, 254, 312, 346, 347, 348, 360, 361, 362, 363, 366, 377, 378, 380, 384, 386, 399, 401, 403, 407, 413, 414, 417, 422], "random_campaign": 360, "random_forest": [254, 366], "random_se": [215, 219, 377, 417], "randomforestmodel": 381, "randomforestsurrog": [366, 403, 418], "randomli": [181, 360, 362, 407, 414], "randomrecommend": [360, 361, 362, 363, 366, 371, 372, 373, 374, 376, 377, 378, 384, 386, 388, 403, 408, 414], "rang": [112, 113, 114, 116, 117, 119, 126, 127, 130, 264, 312, 313, 360, 368, 369, 371, 372, 373, 374, 378, 383, 386, 388, 390, 391, 392, 399, 401, 410, 415, 416, 417, 419, 422], "rank": 419, "rare": 403, "rastrigin": [368, 369, 391, 392], "rate": [143, 224, 386], "rather": [394, 402, 407, 416], "ration": 90, "ravel": [398, 399], "raw": [168, 416], "rbf": 88, "rbfkernel": 403, "rdf": 124, "rdffingerprint": 124, "rdkit": [124, 371, 373, 374, 403, 410, 413], "rdkit2ddescriptor": [124, 362, 371, 373, 374, 403], "rdkit2ddescriptorsfingerprint": 124, "rdkitfingerprint": 124, "re": [377, 391, 392, 404, 414], "reach": [274, 276, 388], "reachabl": 411, "reactant": 413, "reaction": [362, 365, 401, 410, 413, 420], "reactor": [408, 420], "reactora": 420, "reactorb": 420, "reactorc": 420, "read": [119, 186, 339, 362, 365, 401, 403, 404], "read_excel": [361, 362, 363, 377], "readabl": [191, 322, 330, 394, 403, 405, 406, 416], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 215, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 404, 408], "readm": [403, 404], "reagent": [410, 413], "real": [326, 401, 409, 419], "realist": 417, "realiz": [213, 417], "reason": [38, 175, 176, 177, 178, 192, 362, 391, 403, 406, 407, 408, 410, 411, 413, 417], "reassembl": 416, "rebas": 404, "rec": [371, 372, 373, 374, 388, 408, 409], "rec_finish": 408, "rec_next": 408, "rec_pend": 408, "receiv": [406, 411, 416], "recip": 404, "recipi": 406, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 64, 69, 70, 117, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 192, 213, 215, 228, 229, 280, 312, 314, 360, 361, 362, 363, 364, 368, 369, 371, 372, 373, 374, 376, 377, 378, 384, 386, 388, 395, 396, 398, 399, 400, 401, 403, 404, 407, 411, 413, 417, 418, 420, 421, 422], "recommendation_orig": 394, "recommendation_recr": 394, "recommended_arm_idx": 386, "recommender_with_hook": 377, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 154, 156, 157, 158, 163, 228, 376, 378, 403, 408], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 326, 401, 409, 411, 416], "record": [27, 280, 281, 401, 411, 420], "recreat": [241, 394, 416], "recreate_model": 381, "recurs": [290, 291], "redesign": 403, "redistribut": 406, "reduc": [130, 378, 386, 398, 399, 413], "reduct": 421, "ref": 401, "refactor": 403, "refer": [213, 246, 280, 296, 312, 320, 333, 361, 362, 363, 366, 368, 369, 371, 372, 373, 374, 376, 378, 380, 381, 383, 388, 391, 392, 394, 402, 403, 409, 412, 413, 414, 415, 416, 417, 418, 420], "referenc": 404, "refin": [377, 401, 403, 409], "reflect": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 378, 403, 404, 407, 410, 413], "regard": [30, 36, 368, 369, 404, 406], "regim": 403, "regist": [297, 375, 377], "register_custom_architectur": 403, "register_hook": [375, 376, 377, 378, 403], "registr": 403, "regress": 248, "regressor": 380, "regret": [16, 17], "regroup": 403, "regular": [17, 258, 390, 402, 403, 408, 420], "reinstal": 401, "rel": [215, 313, 410, 412], "relat": [51, 99, 104, 106, 109, 120, 186, 204, 268, 283, 392, 398, 399, 401, 403, 409, 410, 411, 420], "relationship": [398, 399, 401, 404, 412, 420], "relative_perc": 314, "releas": [401, 403], "relev": [49, 192, 217, 321, 372, 383, 403, 404, 409, 410, 420, 422], "reli": [402, 403], "reliabl": 413, "remain": [52, 221, 275, 360, 383, 386, 388, 392, 398, 399, 406, 413, 416, 417], "remaind": 348, "remind": 403, "remot": 404, "remov": [48, 51, 52, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 192, 383, 404, 410, 415], "renam": [362, 398, 399, 403, 404], "render": 380, "reoccur": 420, "reorder": 403, "reorgan": 403, "repeat": [386, 403, 404, 408, 409], "repetit": [219, 366, 377], "rephras": 410, "replac": [391, 392, 403, 404], "replic": 416, "repo": 403, "report": [151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 386, 402], "repositori": [362, 401, 404], "repr": 380, "repres": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 92, 93, 119, 186, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 309, 323, 326, 330, 347, 360, 383, 384, 386, 395, 396, 401, 403, 406, 409, 413, 415, 417, 422], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 209, 224, 226, 227, 228, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 302, 304, 309, 312, 322, 326, 341, 371, 372, 373, 374, 380, 382, 388, 394, 403, 408, 409, 413, 416, 417, 421, 422], "reproduc": [377, 386, 403, 406, 421], "reproduct": 406, "request": [27, 69, 70, 105, 156, 157, 158, 199, 237, 278, 347, 348, 403, 408, 409], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 30, 40, 41, 47, 68, 158, 192, 261, 297, 365, 376, 377, 380, 384, 386, 388, 391, 395, 401, 402, 403, 404, 406, 408, 409, 410, 412, 413, 415, 416, 417, 419, 420, 422], "rerun": 380, "reserv": [401, 404], "reset_index": 398, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 372, 374, 383, 416], "resolv": 306, "resort": [258, 404, 416, 422], "resource_track": 402, "resp": [187, 363, 392], "respect": [27, 168, 187, 215, 219, 279, 284, 312, 383, 384, 404, 409, 410, 412, 416, 417, 418, 419, 422], "respons": [406, 409, 414], "restart": [156, 168], "restor": 416, "restr": 17, "restrain": 413, "restrict": [186, 192, 213, 219, 221, 371, 384, 403, 417, 420, 421], "result": [8, 10, 18, 27, 130, 192, 215, 312, 319, 361, 362, 363, 365, 380, 381, 383, 384, 386, 388, 390, 398, 399, 401, 403, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 420, 421, 422], "result_baselin": [398, 399], "result_fract": 399, "results_interrupt": 377, "results_uninterrupt": 377, "retain": [406, 410], "retrain": [229, 230, 418], "retriev": [186, 213, 289, 290, 291, 305, 404, 417], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 99, 100, 102, 104, 105, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 133, 135, 136, 137, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 170, 173, 175, 176, 177, 178, 180, 181, 184, 186, 188, 189, 192, 193, 194, 195, 197, 198, 199, 202, 203, 205, 206, 207, 209, 211, 212, 215, 217, 219, 221, 224, 226, 227, 228, 230, 231, 234, 237, 238, 242, 248, 250, 252, 254, 256, 257, 258, 260, 261, 264, 266, 272, 274, 275, 276, 278, 279, 280, 281, 284, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 304, 305, 306, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 335, 336, 337, 339, 340, 341, 347, 348, 350, 355, 356, 357, 358, 360, 371, 377, 378, 380, 383, 386, 398, 403, 409, 410, 417, 418, 422], "return_std": 380, "reus": [158, 403], "reuse_last": 156, "reveal": [378, 384, 399], "review": 404, "revis": [403, 406], "reward": 386, "rework": 403, "rewrit": 403, "rff": 89, "rffkernel": 403, "rh": [41, 43, 44, 368, 369, 384, 410], "right": [41, 148, 320, 326, 361, 363, 372, 386, 401, 402, 404, 406, 410, 412, 413, 419], "right_df": 320, "rihana": 405, "rim": 405, "risk": [402, 406, 409], "roam": 402, "robust": [401, 420], "robustli": 258, "role": [403, 404, 409, 412, 417, 419, 421], "room": [378, 409], "root": [362, 401, 404, 410], "round": [322, 368, 380, 381, 410], "roundtrip": [403, 416], "rout": 416, "row": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 105, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 217, 280, 284, 285, 313, 319, 320, 322, 337, 361, 363, 371, 372, 373, 374, 383, 384, 388, 394, 403, 409, 415, 417], "rowei": 420, "roya": 405, "royalti": 406, "rq": 90, "rqkernel": 403, "ruff": [403, 404], "rule": [376, 403], "run": [215, 219, 361, 362, 363, 377, 378, 398, 399, 401, 402, 403, 404, 409, 416, 417, 422], "run_full_initial_data": 361, "run_impute_mod": 363, "runner": [371, 373, 374], "runtim": [333, 402], "runtimeerror": [27, 156, 376], "rv": 386, "s3": 403, "s41586": [246, 318], "safe": [403, 404, 409], "safeti": 297, "sai": 410, "said": 404, "sake": 383, "same": [51, 154, 156, 157, 158, 192, 198, 217, 224, 226, 227, 230, 234, 248, 250, 252, 254, 292, 366, 377, 380, 381, 383, 386, 394, 402, 408, 410, 411, 416, 417, 420], "sampl": [10, 13, 17, 40, 168, 180, 181, 184, 281, 345, 346, 347, 348, 361, 366, 371, 372, 373, 374, 386, 388, 390, 394, 399, 401, 403, 405, 421], "sample_from_full_factori": [184, 403], "sample_inactive_paramet": 40, "sample_uniform": [184, 390, 403, 417], "sampler": [366, 371, 372, 373, 374, 388, 394], "samples_full_factori": [184, 403], "samples_random": [184, 403], "sampling_algorithm": [346, 407], "sampling_fract": [13, 407], "sampling_method": [13, 407], "sampling_n_point": [13, 407], "sampling_percentag": [168, 414], "satisfi": [36, 37, 38, 192, 368, 369, 383], "save": [339, 361, 363, 380, 403, 417], "savefig": [361, 363], "scalar": [104, 388, 403, 412, 416], "scale": [94, 144, 145, 146, 147, 148, 350, 388, 398, 403, 407, 412], "scalekernel": 403, "scaler": 403, "scenario": [221, 360, 361, 362, 363, 377, 383, 398, 399, 408, 410, 412, 420, 421, 422], "scene": [412, 417], "schema": 409, "schembl15068049": [361, 362, 363], "scheme": 403, "scienc": [401, 405], "scientif": [403, 420], "scikit": [124, 401, 403, 405, 413], "scipi": [337, 378, 386, 403], "scope": 360, "screen": [292, 420], "script": [306, 402, 403, 411, 422], "seaborn": [360, 361, 362, 363, 377, 398, 399], "seamlessli": 416, "search": [13, 22, 27, 34, 48, 51, 61, 64, 70, 112, 113, 114, 116, 117, 119, 126, 127, 130, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 192, 196, 215, 219, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 280, 320, 321, 360, 363, 365, 367, 370, 371, 372, 373, 374, 376, 377, 378, 386, 388, 389, 394, 399, 403, 405, 408, 409, 410, 411, 416, 417, 421], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 112, 113, 114, 116, 117, 119, 126, 127, 130, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 187, 191, 192, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 360, 362, 365, 376, 377, 378, 380, 381, 383, 384, 386, 390, 394, 395, 396, 398, 400, 401, 403, 409, 410, 411, 413, 415, 416, 417, 422], "searchspace1": 390, "searchspace2": 390, "searchspace3": 390, "searchspace_json": 416, "searchspacetyp": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 366, 371, 372, 373, 374, 377, 378, 388, 394, 415], "secfp": 124, "secfpfingerprint": 124, "second": [319, 335, 337, 366, 380, 381, 388, 396, 398, 410, 411], "secondari": [401, 411], "section": [401, 403, 404, 406, 416], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 138, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 191, 192, 215, 219, 221, 224, 226, 227, 228, 230, 234, 237, 244, 246, 248, 250, 252, 254, 264, 266, 272, 277, 295, 301, 314, 319, 326, 350, 361, 362, 363, 368, 369, 376, 377, 381, 384, 392, 401, 404, 409, 411, 412, 413, 414, 416, 417, 421], "seed": [215, 219, 343, 344, 377, 378, 386, 401, 403, 422], "seek": 388, "seem": [333, 396, 402], "seen": 407, "select": [6, 36, 37, 38, 63, 68, 154, 156, 157, 158, 161, 178, 180, 224, 226, 227, 230, 234, 248, 250, 252, 254, 275, 319, 347, 366, 372, 373, 383, 384, 386, 392, 401, 403, 407, 409, 410, 413, 414, 416, 418], "select_recommend": [154, 156, 157, 158], "self": [297, 310, 355, 356, 357, 358, 376, 377, 378, 386, 404], "sell": 406, "semant": [403, 416], "sens": [53, 297, 301, 319, 410, 413], "sent": 406, "separ": [219, 221, 258, 295, 350, 351, 378, 403, 404, 406, 416], "sequenc": [27, 41, 104, 136, 156, 184, 186, 192, 193, 194, 197, 280, 284, 285, 297, 298, 307, 310, 315, 320, 321, 337, 412, 414], "sequenti": [156, 157, 158, 168, 366, 371, 372, 373, 374, 388, 394, 403, 414], "sequential_continu": [168, 414], "sequential_greedy_x": 403, "sequentialgreedyrecommend": 403, "sequentialmetarecommend": [157, 414], "sequentialstrategi": 403, "seri": [27, 36, 37, 38, 48, 113, 116, 117, 119, 127, 130, 264, 266, 272, 371, 383, 403, 410], "serial": [157, 192, 209, 281, 380, 400, 402, 403, 404, 410, 414, 421], "serializ": [401, 410, 414], "serialize_datafram": 416, "serialized_df": 211, "serializetostr": 380, "serialmixin": [20, 27, 31, 36, 81, 99, 114, 140, 154, 184, 186, 192, 227, 237, 264, 266, 272, 326, 403], "serv": [221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 320, 398, 399, 409, 410, 413], "servic": 406, "session": [230, 411, 416], "set": [27, 30, 38, 40, 51, 53, 57, 58, 130, 151, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 215, 219, 241, 279, 312, 318, 319, 339, 343, 344, 361, 362, 363, 364, 366, 371, 373, 376, 381, 382, 383, 384, 386, 388, 392, 401, 403, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 420, 422], "set_box_aspect": 378, "set_dash": 377, "set_random_se": [378, 386, 422], "set_size_inch": [361, 363], "set_x_pend": 22, "set_xlabel": 378, "set_xtick": 378, "set_xticklabel": 378, "set_ylabel": 378, "set_ylim": 378, "set_zlabel": 378, "setpoint": 127, "setup": [215, 377, 410, 417, 422], "sever": [132, 152, 360, 362, 366, 377, 380, 386, 388, 390, 399, 401, 403, 404, 408, 410, 411, 412, 413, 415, 416, 417, 420, 422], "shall": [156, 314, 406, 412], "shap": 418, "shap_valu": 418, "shape": [17, 184, 191, 270, 274, 276, 347, 415, 422], "share": [403, 406, 420], "shield": [246, 318, 362, 401, 413], "shift": [8, 18, 398], "shifted_hartmann": 398, "ship": [351, 411, 416], "shm": 402, "short": 404, "shortcut": [192, 415, 416], "shorten": [403, 404], "shot": 420, "should": [27, 49, 117, 130, 192, 207, 219, 269, 284, 285, 312, 314, 317, 318, 320, 322, 325, 326, 327, 335, 339, 371, 373, 377, 380, 383, 384, 392, 396, 401, 403, 404, 408, 409, 410, 415, 417, 418, 420, 422], "show": [361, 362, 363, 365, 366, 371, 372, 373, 380, 381, 383, 386, 392, 394, 395, 396, 398, 399, 410], "showcas": 414, "shown": [377, 386, 399, 403], "shrink": 378, "shutdown": 402, "side": [41, 275, 403], "sigma": [145, 146, 147, 148, 274, 388, 405], "signal": [60, 412], "signatur": [75, 261, 295, 297, 378, 403, 404, 410, 416], "significantli": [192, 386, 398, 399], "silenc": 404, "silent": [403, 410], "similar": [157, 402, 410, 411, 413, 414, 415, 416, 420, 422], "similarli": 413, "simpl": [16, 17, 288, 362, 376, 377, 384, 401, 403, 414, 417, 419, 420], "simpler": [404, 416], "simplest": 415, "simplex": [192, 421], "simplex_paramet": [192, 383, 415], "simpli": [301, 376, 377, 404, 410, 413, 414, 415, 416, 419, 420], "simplic": 297, "simplifi": 404, "simul": [71, 314, 373, 378, 401, 403, 420, 421], "simulate_experi": [219, 221, 417], "simulate_scenario": [221, 360, 361, 362, 363, 377, 398, 399, 417], "simulate_transfer_learn": [398, 417], "simulationresult": 386, "simultan": 412, "sinc": [53, 186, 229, 297, 361, 368, 369, 381, 391, 394, 395, 396, 398, 404, 407, 408, 409, 410, 411, 412, 416, 417, 418, 420], "singer": 420, "singl": [17, 27, 36, 49, 96, 109, 184, 186, 192, 215, 264, 266, 272, 326, 334, 341, 347, 353, 361, 362, 363, 372, 377, 383, 388, 398, 399, 401, 403, 410, 411, 412, 413, 415, 420, 421], "single_lin": 341, "singledispatch": 328, "singletargetobject": [27, 264, 266, 272, 361, 362, 363, 365, 366, 371, 372, 373, 374, 377, 380, 381, 394, 395, 396, 401, 403, 418, 421], "site": [371, 373, 374, 402], "situat": [371, 373, 383, 402, 404, 408, 410, 412, 413, 416, 417, 420], "six": [383, 384], "size": [17, 79, 80, 81, 84, 86, 88, 89, 90, 156, 158, 186, 191, 192, 281, 330, 378, 380, 386, 391, 392, 398, 399, 409, 416, 417, 420, 422], "sk": 380, "skeleton": 403, "skfp": 124, "skicit": 403, "skin": 417, "skip": [189, 195, 403, 409], "skl2onnx": 380, "sklearn": [178, 333, 380, 402], "sklearnclusteringrecommend": [175, 176, 177, 403, 408], "slightli": [213, 362, 383, 417], "slot": [382, 386, 400, 403, 410], "slot1_amount": 383, "slot1_label": 383, "slot2_amount": 383, "slot2_label": 383, "slot3_amount": 383, "slot3_label": 383, "slow": [371, 373, 374, 415], "slowest": 403, "small": [282, 286, 368, 383, 398, 399, 403, 407, 413], "smaller": [27, 386, 409, 420], "smallest": [184, 415], "smart": 401, "smartli": 383, "smile": [130, 304, 306, 307, 401, 413], "smoke": 403, "smoke_test": [339, 360, 361, 362, 363, 369, 371, 372, 374, 377, 378, 386, 398, 399], "smooth": [84, 86, 148], "smoothedboxprior": 403, "smoother": 84, "sn": [360, 361, 362, 363, 377, 398, 399], "snippet": 411, "so": [27, 215, 229, 319, 363, 377, 383, 386, 391, 392, 401, 402, 410, 411, 412, 413, 414, 416, 419], "softwar": [401, 406], "sola": 405, "sole": 406, "solut": [409, 415, 416, 420], "solv": [229, 372, 373, 383, 386], "solv_rdkit2ddesc": 373, "solvent": [361, 362, 363, 365, 366, 371, 372, 373, 374, 377, 381, 383, 384, 395, 396, 401, 410, 413], "solvent1": [383, 384], "solvent2": [383, 384], "solvent3": 383, "solvent4": 383, "solvent5": 383, "solvent8": 383, "solvent9": 383, "solvent_1": 410, "solvent_2": 410, "solvent_3": 410, "solvent_data": 377, "solvent_encoding1": 410, "solvent_encoding2": 410, "solvent_mordred_enc": 410, "solvent_rdkit2dd": [371, 374], "solvent_rdkit_enc": 410, "solvent_smil": 377, "solver": 417, "some": [49, 320, 333, 361, 362, 363, 366, 371, 372, 373, 374, 377, 378, 380, 381, 383, 384, 390, 391, 392, 394, 399, 408, 410, 411, 413, 414, 416, 417, 418, 422], "someth": 396, "sometim": [410, 417], "somewhat": 411, "somewher": 409, "soon": [401, 409, 414], "sophist": [403, 416], "sort": 133, "sourabh": 405, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 99, 100, 102, 104, 105, 107, 109, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 126, 127, 130, 132, 133, 135, 136, 137, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 170, 173, 175, 176, 177, 178, 180, 181, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 202, 203, 205, 206, 207, 209, 211, 212, 215, 217, 219, 221, 224, 226, 227, 228, 230, 231, 234, 236, 237, 238, 241, 242, 244, 246, 248, 250, 252, 254, 256, 257, 258, 260, 261, 264, 266, 269, 270, 272, 274, 275, 276, 278, 279, 280, 281, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 335, 336, 337, 339, 340, 341, 343, 344, 346, 347, 348, 350, 358, 401, 402, 403, 404, 406], "space": [10, 13, 21, 22, 27, 34, 41, 48, 51, 61, 64, 66, 70, 112, 113, 114, 116, 117, 119, 126, 127, 130, 151, 159, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 192, 195, 196, 215, 219, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 280, 320, 347, 360, 363, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 386, 388, 389, 391, 394, 399, 400, 403, 405, 408, 409, 410, 411, 413, 416, 417, 421], "span": [112, 113, 114, 116, 117, 119, 126, 127, 130, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 280, 376, 386, 390], "speak": 420, "spec": [189, 195, 206], "special": [158, 401, 402, 406, 407, 420, 422], "specif": [77, 132, 138, 178, 186, 189, 202, 219, 258, 289, 376, 377, 391, 401, 404, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 49, 74, 119, 130, 132, 151, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 205, 206, 215, 217, 219, 228, 274, 275, 276, 284, 296, 305, 312, 315, 321, 347, 348, 362, 366, 368, 380, 381, 386, 388, 398, 401, 402, 403, 407, 409, 410, 412, 413, 414, 415, 416, 417, 419, 420], "speed": [192, 371, 373, 374, 398, 399, 411, 415], "speed_fast": 415, "speed_norm": 415, "speed_slow": 415, "speedup": 420, "spell": 404, "spellcheck": 403, "sphinx": [403, 404], "split": [160, 408], "sporad": 403, "spread": 419, "sqrt": 410, "squar": [386, 410], "squash": 404, "stabil": [403, 411], "stabl": [77, 138, 277], "stage": [409, 410, 416], "stand": 403, "standard": [6, 258, 380, 403, 413], "star": 383, "start": [215, 360, 376, 377, 378, 384, 386, 402, 403, 408, 413, 414, 416, 417, 420], "startup": 403, "stat": [278, 378, 384, 386], "state": [158, 377, 383, 403, 406, 409], "stateless": [386, 403], "statement": [322, 391, 401, 406], "static": [186, 192, 234, 401, 404, 420], "statist": [281, 399, 401, 411], "statu": 409, "std_threshold": 258, "stem": [402, 420], "step": [189, 195, 215, 383, 386, 401, 404, 409, 412, 416, 418], "sterl": 405, "steven": 362, "still": [132, 192, 312, 377, 386, 408, 410, 411, 413, 420, 422], "stop": [375, 400, 403, 404], "stop_on_pi": 377, "stoppag": 406, "storag": [409, 411, 416], "store": [22, 114, 258, 264, 378, 383, 386, 401, 403, 409, 422], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 105, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 166, 168, 175, 176, 177, 178, 184, 186, 191, 192, 205, 209, 219, 221, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 267, 272, 274, 275, 276, 278, 281, 284, 285, 289, 295, 296, 302, 304, 306, 307, 309, 312, 315, 317, 318, 322, 326, 330, 336, 339, 340, 341, 381, 386, 395, 396, 398, 399], "straightforward": [419, 420], "strategi": [13, 168, 186, 213, 360, 386, 403], "stream": [293, 411], "streamingsequentialmetarecommend": [156, 414], "streamingsequentialstrategi": 403, "streamlin": 404, "streamlit": [401, 403], "streibel": 405, "strict": 295, "strictli": [381, 395, 396], "stride": 368, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 129, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 302, 306, 307, 309, 310, 317, 326, 341, 380, 394, 403, 409, 410, 413, 419, 421], "strip": [215, 363, 408], "strong": 403, "strongli": 409, "strtobool": [403, 411], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 45, 102, 205, 401, 402, 403, 404, 405, 409, 413, 416], "studi": [152, 401, 414, 421], "style": [96, 398, 403, 404], "sub": [178, 403, 416], "subclass": [74, 205, 289, 291, 301, 366, 403, 404, 414, 416], "subfold": 411, "subgraph": 413, "subgroup": 384, "subject": 406, "sublicens": 406, "submiss": [403, 406], "submit": [22, 278, 280, 401, 404, 406], "subpackag": [403, 404, 417], "subselectioncondit": [372, 373, 403, 421], "subsequ": [186, 192, 219, 306, 406, 409, 416, 418], "subset": [27, 99, 104, 109, 130, 186, 292, 321, 347, 409, 410], "subspac": [22, 160, 168, 183, 184, 186, 188, 190, 192, 368, 371, 372, 373, 374, 388, 390, 392, 394, 403, 414, 416, 421, 422], "subspace_json": 416, "subspacecontinu": [27, 112, 126, 186, 188, 390, 403, 415], "subspacediscret": [27, 113, 116, 117, 119, 127, 130, 186, 188, 191, 371, 372, 373, 374, 383, 388, 394, 403, 415, 416, 422], "substanc": [124, 130, 305, 362, 365, 371, 373, 374, 384, 403, 410, 413, 420], "substance_12": 410, "substance_3": 410, "substance_43": 410, "substance_data": 403, "substance_encod": 362, "substanceencod": [130, 305, 307, 371, 372, 373, 374, 403, 413], "substanceparamet": [361, 362, 363, 365, 366, 371, 372, 373, 374, 377, 381, 383, 395, 396, 401, 403, 410, 411, 415, 421], "substanti": [130, 422], "substrat": 420, "subtyp": 416, "success": [266, 347, 386, 416], "success_valu": 266, "suffic": 404, "suffici": [377, 415, 416], "suggest": 417, "suit": 404, "suitabl": [178, 192, 215, 302, 404, 407, 409, 413, 417, 418, 420], "sum": [55, 92, 192, 360, 370, 371, 372, 373, 377, 383, 384, 386, 400, 410, 412, 415], "sum_": [410, 412], "sum_constraint": 383, "sum_constraint_1": 374, "sum_constraint_2": 374, "sum_toler": 383, "summar": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130, 264, 266, 272], "summari": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130, 264, 266, 272, 403, 404], "superior": 407, "supersed": 406, "support": [10, 157, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 333, 366, 371, 372, 373, 374, 377, 378, 380, 383, 388, 394, 403, 404, 405, 406, 410, 413, 414, 415, 417, 418], "supports_transfer_learn": [224, 226, 227, 230, 234, 248, 250, 252, 254, 418], "suppos": [280, 410], "sure": [383, 390, 401, 404], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 65, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 166, 168, 175, 176, 177, 178, 224, 226, 228, 230, 234, 236, 237, 241, 244, 246, 248, 250, 252, 254, 371, 372, 373, 374, 378, 386, 388, 394, 400, 401, 403, 405, 410, 413, 414, 420, 421], "surrogate_model": [166, 168, 366, 378, 380, 381, 386, 395, 396, 403], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 166, 168, 227, 403], "svg": 339, "sw": 372, "switch": [49, 155, 157, 158, 258, 366, 371, 372, 373, 374, 386, 388, 394, 401, 403, 410, 414], "switch1": 372, "switch2": 372, "switch2_left": 372, "switch2_right": 372, "switch_1": 410, "switch_2": 410, "switch_aft": [158, 395, 396, 414], "sy": 402, "symmetri": 410, "syntax": [401, 403], "synthet": [368, 369, 378, 398, 399], "system": [362, 386, 401, 402, 406, 411, 417, 420], "t": [256, 257, 294, 302, 361, 362, 363, 365, 366, 373, 378, 398, 399, 416, 417], "t1": [416, 417], "t2": 416, "t3": 416, "t_1": 412, "t_2": 412, "t_3": 412, "t_i": 412, "tabl": [322, 403, 410], "tabular": 417, "tag": [401, 403, 416], "tailor": 409, "take": [45, 84, 113, 127, 132, 224, 226, 227, 230, 234, 244, 248, 250, 252, 254, 267, 376, 383, 403, 408, 409, 410, 412, 413, 414, 420], "taken": [156, 377, 403, 409, 412], "tantamount": 407, "target": [27, 66, 96, 99, 100, 104, 108, 109, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 192, 213, 215, 216, 217, 224, 226, 227, 230, 234, 248, 250, 252, 254, 258, 266, 269, 270, 272, 297, 312, 315, 321, 335, 336, 342, 360, 361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 377, 378, 380, 381, 386, 391, 392, 394, 395, 396, 398, 399, 400, 401, 403, 408, 409, 411, 416, 417, 418, 421], "target_1": [372, 373, 374, 388, 412, 419], "target_2": [388, 412, 419], "target_3": [388, 412], "target_3a": 419, "target_3b": 419, "target_cumbest": [360, 398, 399], "target_max": 409, "target_transform": 388, "targetmod": [272, 416, 419], "targetnam": 215, "targettransform": [272, 403, 419], "task": [117, 186, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 264, 266, 272, 386, 403, 409, 414, 416, 417, 420], "task_idx": [186, 403], "task_param": [398, 399, 417], "task_paramet": 416, "task_parameter_json": 416, "task_parameter_reconstruct": 416, "taskparamet": [199, 398, 399, 403, 416, 417, 421], "tb": 422, "technic": [192, 408, 417, 420], "techniqu": [178, 414], "telemetri": [403, 405, 421], "tell": 279, "temp": [371, 373, 405], "temp_c": [361, 362, 363, 377], "temperatur": [361, 363, 365, 366, 371, 373, 376, 380, 381, 394, 410, 413, 415, 420], "temperature_resolut": 371, "temperature_valu": 377, "temporari": [95, 101, 169, 186, 344, 377, 403, 411, 416], "temporarili": [403, 422], "temporary_se": 422, "tempt": 420, "tenac": 403, "tend": 378, "tensor": [22, 41, 224, 256, 257, 315, 323, 326, 350, 352, 398, 403], "term": [87, 213, 377, 386, 404, 406, 409, 415, 416, 417, 420], "termin": [377, 378, 402, 406], "terminologi": 421, "tert": [361, 362, 363, 365, 366], "test": [192, 215, 230, 312, 386, 398, 399, 401, 402, 403, 404, 409, 417, 422], "test_funct": [368, 369, 378, 391, 392, 398, 399], "test_scenario": [361, 363], "testabl": [71, 215], "testfunct": [368, 369, 391, 392], "testfunctionclass": [368, 369, 391, 392], "text": [30, 340, 380, 406, 410, 411, 412], "th": [285, 410], "than": [27, 58, 70, 127, 156, 157, 158, 184, 186, 199, 285, 301, 341, 348, 362, 373, 377, 384, 407, 410, 411, 413, 416], "thei": [132, 152, 161, 275, 317, 321, 366, 374, 377, 383, 386, 390, 403, 404, 408, 409, 410, 413, 414, 415, 416, 419, 420, 422], "them": [34, 244, 313, 339, 366, 401, 402, 404, 408, 410, 411, 413, 414, 416, 420], "theme": [339, 403], "theori": 406, "therebi": 192, "therefor": [158, 224, 226, 227, 230, 234, 248, 250, 252, 254, 366, 402, 409, 416, 420], "therein": 403, "thereof": 406, "thf": 410, "thi": [10, 13, 17, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 213, 217, 219, 221, 224, 226, 227, 228, 229, 230, 234, 244, 248, 250, 252, 254, 258, 281, 284, 297, 298, 301, 306, 312, 314, 316, 318, 320, 322, 339, 360, 376, 377, 378, 380, 381, 383, 384, 386, 390, 394, 395, 396, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422], "think": [386, 413], "third": [388, 406, 417], "thompson": [17, 405], "thomson": 17, "those": [132, 158, 160, 213, 347, 366, 402, 406, 410, 417], "though": 420, "three": [362, 383, 384, 388, 401, 409, 410, 412, 414, 415, 420], "threshold": [38, 119, 130, 258, 318, 368, 373, 374, 377, 383, 403, 410, 413], "thresholdcondit": [54, 55, 368, 373, 374, 383, 421], "through": [27, 186, 274, 284, 312, 321, 381, 383, 386, 388, 401, 403, 404, 406, 410, 416, 417, 421], "throughout": 158, "throw": [306, 410, 413], "thrown": [217, 363, 377, 395, 402, 412], "thu": [168, 297, 321, 361, 362, 368, 369, 371, 372, 373, 374, 380, 381, 383, 386, 388, 391, 392, 394, 402, 404, 409, 411, 413, 414, 416, 417, 420, 422], "tick": 378, "time": [10, 168, 281, 348, 369, 376, 383, 386, 401, 403, 408, 409, 410, 413, 416, 417, 422], "timeout": [403, 411], "timer": 376, "titl": 406, "tl": 398, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 41, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 377, 378, 403], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 326], "to_factori": [79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94], "to_fram": 360, "to_gpytorch": [79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 140, 142, 143, 144, 145, 146, 147, 148, 403], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 264, 266, 272, 326, 380, 381, 394, 409, 416], "to_keep": 319, "to_ndarrai": 326, "to_object": [264, 266, 272, 360, 368, 369, 378, 386, 391, 392, 398, 399, 412, 417], "to_polar": [36, 37, 38], "to_searchspac": [112, 113, 114, 116, 117, 119, 126, 127, 130, 184, 192, 386, 390, 403], "to_subspac": [112, 113, 116, 117, 119, 126, 127, 130, 403], "to_tensor": [326, 377, 378, 380, 403], "to_tupl": 326, "togeth": [34, 62, 285, 366, 386, 392, 401, 403], "toggl": 27, "toggle_discrete_candid": [27, 403], "toler": [27, 38, 127, 192, 280, 320, 361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 377, 380, 381, 383, 388, 391, 392, 394, 395, 396, 401, 403, 410, 413], "tolist": 368, "toluen": 413, "toml": 403, "too": [368, 417, 420], "tool": [303, 403, 416], "toolbox": 401, "top": [403, 404], "topic": 409, "topolog": 413, "topologicaltors": 124, "topologicaltorsionfingerprint": 124, "torch": [315, 326, 377, 378, 380, 398, 403], "toronto": 405, "tort": 406, "total": [158, 347, 383, 384, 386, 415], "total_bas": 384, "total_phase_ag": 384, "toward": [8, 18, 142, 312, 410], "tox": [371, 373, 374, 401, 403, 404], "tracebackexcept": 402, "track": [151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 192, 377, 406], "trade": [8, 18, 406], "trademark": 406, "tradit": [362, 382, 383, 400, 401, 403], "train": [67, 151, 156, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 221, 224, 226, 227, 228, 229, 230, 234, 248, 250, 252, 254, 258, 379, 398, 399, 403, 417], "train_i": 380, "train_x": 380, "training_funct": 399, "trajectori": [213, 360, 377, 386, 417], "transfer": [220, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 366, 371, 372, 373, 374, 388, 394, 398, 400, 401, 403, 406, 413, 418, 421], "transform": [27, 67, 99, 104, 109, 113, 114, 116, 117, 119, 127, 130, 184, 186, 192, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 264, 266, 270, 272, 307, 315, 321, 326, 327, 350, 371, 372, 373, 374, 394, 403, 406, 411, 413, 418, 419], "transform_rep_exp2comp": 403, "transit": 403, "translat": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 403, 406, 413], "transmiss": 416, "transmit": 281, "travers": 403, "treasur": 421, "treat": [130, 362, 401, 410, 413, 419, 422], "tree": 403, "tremend": 362, "trend": 420, "tri": 415, "triangl": 276, "triangular": [270, 276, 388, 419], "tricyclohexylphosphin": [361, 362, 363], "trigger": [156, 284, 377, 381, 386, 403, 404, 408, 412, 416], "trivial": [237, 250, 412, 413], "true": [6, 12, 14, 27, 30, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 192, 234, 266, 275, 280, 290, 291, 295, 301, 302, 319, 320, 341, 362, 366, 368, 369, 371, 372, 373, 374, 378, 380, 381, 383, 386, 388, 391, 392, 394, 395, 396, 398, 399, 403, 409, 410, 411, 413, 416], "truncat": [401, 411], "trust": [380, 411], "truth": 302, "truthi": 411, "try": [312, 361, 362, 363, 377, 380, 381, 396, 402, 403, 422], "tune": 401, "tupl": [27, 37, 41, 79, 80, 81, 84, 86, 88, 89, 90, 92, 93, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 133, 184, 186, 191, 192, 257, 284, 295, 298, 310, 312, 323, 326, 330, 350], "turn": [184, 192, 330, 390, 401, 402, 403, 410, 411], "turnaround": 417, "twice": 412, "two": [30, 51, 57, 58, 105, 158, 168, 213, 285, 288, 315, 335, 347, 360, 361, 363, 366, 376, 383, 386, 388, 392, 398, 399, 401, 403, 404, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419], "twofold": 386, "twophasemetarecommend": [361, 363, 366, 371, 372, 373, 374, 377, 378, 380, 381, 386, 388, 392, 394, 395, 396, 401, 414], "twophasestrategi": 403, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 100, 102, 104, 105, 109, 112, 113, 114, 116, 117, 119, 126, 127, 129, 130, 132, 133, 135, 136, 137, 140, 142, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 166, 168, 170, 173, 175, 176, 177, 178, 180, 181, 184, 186, 187, 188, 189, 192, 193, 194, 195, 197, 198, 199, 202, 203, 205, 206, 207, 209, 211, 212, 215, 217, 219, 221, 224, 226, 227, 228, 230, 231, 234, 237, 238, 242, 248, 250, 252, 254, 256, 257, 258, 260, 261, 264, 266, 267, 272, 274, 275, 276, 278, 279, 280, 281, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 304, 305, 306, 307, 309, 310, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 326, 327, 328, 330, 332, 333, 335, 336, 337, 339, 340, 341, 347, 348, 350, 352, 355, 356, 357, 358, 362, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 386, 388, 394, 395, 396, 401, 403, 404, 406, 407, 410, 412, 413, 414, 415, 420, 421], "typealia": 267, "typeerror": [27, 215, 230, 297, 312, 313, 348, 377, 378], "typeguard": 294, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 104, 109, 112, 113, 114, 116, 117, 119, 126, 127, 130, 132, 140, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157, 158, 184, 186, 192, 197, 205, 206, 209, 224, 226, 227, 230, 234, 237, 248, 250, 252, 254, 257, 264, 266, 272, 291, 292, 293, 294, 310, 315, 321, 326], "typic": [13, 297, 341, 362, 401, 408, 409, 413, 416, 422], "typing_extens": 404, "typo": [403, 404], "u": [17, 360, 361, 362, 363, 376, 378, 383, 384, 386, 390, 399, 401, 407, 410, 412], "ucb": [8, 366, 403, 407, 416], "ultim": 404, "ultra": [395, 396], "un": 403, "unabl": 380, "unavail": 403, "unawar": 408, "unbound": [326, 376], "uncaught": 403, "uncertainti": [13, 366, 421], "uncharacter": 420, "uncorrel": [318, 420], "undefin": 224, "under": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 281, 321, 374, 378, 386, 401, 402, 406, 408, 413], "underflow": 72, "underli": [27, 51, 377, 386, 401, 409, 414, 416], "underscor": 403, "understand": [401, 420], "undesir": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 76, 410, 413, 422], "undo": 402, "unequ": 374, "unevenli": 413, "unfinish": 408, "unfortun": 420, "unhandl": 403, "uniform": [184, 224, 313, 314, 403], "uniformli": 347, "uniniti": 301, "uninstal": [73, 401], "unintend": [76, 297, 403, 404], "unintention": 422, "union": [105, 215, 219, 274, 275, 276, 336, 392, 406, 415], "uniqu": [52, 132, 383, 403, 413], "unit": [191, 330], "unknown": [347, 360, 386, 403, 418, 420], "unlabel": 315, "unless": [401, 404, 406, 411, 413, 416], "unlik": [12, 14, 383, 422], "unlock": 421, "unmaintain": 403, "unmatch": 295, "unmatchedattributeerror": 295, "unmeasur": [215, 363], "unnecessari": [403, 409], "unpromis": 377, "unreach": 403, "unrealist": 417, "unrecogn": 312, "unrestrict": 297, "unsaf": 403, "unspecifi": [403, 416], "unsqueez": [377, 378], "unstructur": [207, 416], "unstructure_bas": 205, "unsupport": [184, 217], "until": [154, 156, 157, 158, 215, 386, 401, 417], "untouch": 313, "untransform": [27, 418], "unusedobjectwarn": [377, 403], "unveil": 399, "unwant": 34, "up": [27, 192, 215, 217, 360, 361, 362, 363, 364, 371, 373, 376, 378, 382, 383, 384, 392, 398, 399, 401, 402, 403, 407, 410, 422], "updat": [27, 362, 365, 403, 404, 408], "upgrad": 403, "upon": [160, 237, 402, 403, 404, 410, 415, 418, 420], "upper": [8, 18, 148, 186, 192, 274, 275, 276, 326, 366, 378, 388, 398, 399, 403, 419, 422], "upper_bound": [371, 372, 373, 374, 394, 415], "upperconfidencebound": [407, 416], "upstream": 404, "url": [411, 420], "us": [13, 17, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 62, 64, 84, 104, 105, 119, 124, 127, 130, 132, 151, 154, 156, 157, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 184, 186, 192, 193, 194, 206, 215, 217, 219, 224, 226, 227, 230, 231, 234, 248, 250, 252, 254, 270, 280, 281, 287, 297, 298, 306, 307, 312, 314, 315, 320, 328, 332, 333, 339, 347, 352, 360, 368, 369, 375, 376, 377, 378, 379, 382, 383, 384, 390, 394, 395, 396, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 419, 420, 421, 422], "usa": 405, "usabl": [301, 402, 403, 413, 416], "usag": [329, 401, 403, 410, 411, 414], "use_torch": [315, 368, 369, 378, 391, 392, 398, 399], "user": [48, 49, 60, 68, 76, 119, 122, 192, 224, 226, 227, 230, 234, 248, 250, 252, 254, 261, 278, 314, 320, 365, 366, 371, 388, 396, 401, 402, 403, 404, 409, 410, 411, 412, 413, 415, 416, 417, 420], "userguid": 277, "usernam": [278, 403, 411], "userwarn": 402, "usort": 403, "usr": 124, "usrcat": 124, "usrcatfingerprint": 124, "usrfingerprint": 124, "usual": [215, 361, 362, 363, 395, 402, 413], "util": [168, 184, 192, 280, 287, 288, 326, 346, 350, 360, 362, 365, 366, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 386, 388, 391, 392, 398, 399, 401, 403, 407, 408, 412, 413, 414, 416, 417, 418, 420, 421], "uv": 403, "v": 420, "val": [45, 102, 302, 398], "val_from_param1": 53, "val_from_param2": 53, "valid": [27, 30, 31, 32, 33, 34, 37, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 132, 186, 189, 192, 195, 230, 320, 371, 393, 395, 400, 402, 403, 404, 409, 410, 417], "validate_compat": 230, "validate_config": [27, 396, 403, 409], "valu": [6, 8, 18, 22, 27, 30, 36, 37, 38, 41, 49, 51, 66, 83, 84, 85, 86, 87, 88, 89, 90, 94, 99, 104, 105, 109, 113, 116, 117, 119, 121, 122, 124, 127, 130, 132, 135, 136, 137, 175, 176, 177, 178, 184, 186, 192, 193, 194, 213, 215, 217, 219, 224, 226, 227, 230, 234, 248, 250, 252, 254, 266, 267, 269, 274, 275, 276, 281, 284, 292, 295, 302, 309, 312, 313, 314, 317, 320, 321, 322, 326, 328, 335, 336, 337, 355, 356, 357, 358, 361, 362, 363, 365, 366, 368, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 386, 388, 391, 392, 394, 395, 396, 398, 399, 401, 403, 404, 407, 409, 410, 411, 412, 413, 419, 420, 421, 422], "valuabl": [414, 417], "valueerror": [13, 27, 57, 58, 105, 132, 136, 137, 184, 186, 192, 198, 215, 217, 224, 226, 227, 230, 234, 248, 250, 252, 254, 261, 285, 295, 300, 302, 305, 309, 312, 314, 320, 321, 341, 347, 348, 381, 392, 402], "var": [386, 421], "vari": [27, 192, 362, 412], "variabl": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 224, 226, 227, 230, 234, 248, 250, 252, 254, 264, 279, 281, 334, 339, 353, 391, 401, 403, 404, 410, 413, 414, 416], "varianc": [8, 13, 18, 83, 250, 316, 403, 407], "variance_initial_valu": 83, "variance_prior": 83, "variant": [366, 398, 420], "varieti": [391, 404, 416, 417], "variou": [326, 383, 389, 403, 408, 414, 417], "varucb": 403, "vector": [30, 380, 405], "vendor": 413, "verbal": 406, "verbos": [381, 403], "veri": [371, 373, 388, 408, 411, 413, 422], "verifi": [301, 368, 371, 372, 373, 374, 383, 384, 390, 392, 394, 401, 404], "versa": [398, 420], "versatil": 414, "version": [186, 278, 333, 371, 373, 374, 383, 386, 390, 398, 399, 401, 402, 403, 404, 406, 416], "vert": 378, "via": [13, 17, 26, 27, 158, 168, 180, 224, 226, 227, 228, 230, 234, 248, 250, 252, 254, 280, 289, 297, 312, 319, 320, 363, 369, 376, 377, 380, 390, 401, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420], "via_init": 416, "via_json": 416, "viabl": [70, 388], "vice": [398, 420], "view": [184, 192, 378, 415], "view_init": 378, "violat": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "viridi": 378, "virtual": 404, "visibl": 403, "visual": [362, 398, 399, 419], "volum": 420, "vpn": [401, 411], "vsa": 124, "vsafingerprint": 124, "vulner": [403, 404], "w_i": 412, "wa": [13, 63, 65, 66, 73, 76, 132, 158, 192, 224, 226, 227, 230, 234, 248, 250, 252, 254, 309, 312, 348, 362, 402, 403, 404, 406, 411, 413, 416, 420], "wai": [186, 376, 383, 384, 389, 390, 398, 401, 408, 411, 413, 415, 416, 417, 419, 420, 422], "wall": 10, "want": [48, 366, 371, 383, 386, 392, 399, 401, 404, 410, 411, 413, 414, 416, 419], "warn": [59, 298, 371, 373, 374, 377, 391, 392, 403, 404], "warranti": [401, 406], "watch": 376, "water": [371, 372, 373, 374, 383, 410, 413], "we": [22, 213, 360, 361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 376, 377, 378, 380, 381, 383, 384, 386, 388, 390, 391, 392, 394, 395, 396, 398, 399, 401, 402, 404, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 422], "web": 404, "weber": 405, "weight": [96, 104, 105, 337, 388, 412, 416], "weight_kdalton": 413, "welcom": 404, "well": [278, 339, 366, 377, 382, 404, 409, 410, 413, 417], "were": [160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 312, 363, 366, 399, 402, 403, 408, 410, 411, 413, 415], "what": [132, 156, 186, 213, 312, 350, 360, 380, 388, 396, 404, 407, 409, 413, 420, 421], "whatsnew": 288, "when": [27, 49, 127, 156, 158, 166, 168, 186, 192, 224, 226, 227, 230, 231, 234, 248, 250, 252, 254, 261, 295, 297, 301, 312, 315, 341, 348, 366, 371, 372, 374, 376, 381, 383, 384, 386, 388, 401, 402, 403, 404, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420, 422], "whenev": [22, 156, 312, 416], "where": [17, 22, 30, 34, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 151, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 213, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 284, 312, 347, 361, 362, 363, 366, 371, 373, 383, 386, 401, 402, 403, 404, 406, 408, 409, 410, 412, 413, 415, 416, 417, 419, 420], "wherea": 416, "wherev": [406, 408], "whether": [22, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 112, 113, 114, 116, 117, 119, 126, 127, 130, 168, 184, 192, 224, 226, 227, 230, 234, 248, 250, 252, 254, 279, 314, 320, 326, 383, 403, 406, 409, 411, 414, 419], "which": [13, 27, 36, 37, 38, 76, 99, 104, 109, 117, 132, 151, 152, 158, 160, 163, 166, 168, 173, 175, 176, 177, 178, 180, 181, 186, 192, 219, 221, 224, 226, 227, 230, 234, 248, 250, 252, 254, 258, 280, 281, 297, 301, 312, 314, 318, 320, 322, 335, 336, 339, 350, 360, 362, 366, 369, 376, 377, 383, 384, 386, 390, 391, 392, 396, 398, 399, 401, 402, 403, 404, 406, 407, 409, 410, 413, 415, 416, 417, 418, 419, 420, 422], "while": [186, 189, 195, 377, 386, 388, 399, 402, 406, 407, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420], "whilst": 312, "whim": 124, "whimfingerprint": 124, "whole": 406, "whom": 406, "whose": [105, 132, 186, 217, 292, 295, 315, 360, 376, 383, 408, 417], "wide": 417, "wider": 419, "width": 322, "william": 420, "willing": 409, "win": [224, 386], "win_rat": 386, "window": [403, 411], "winerror": 402, "wise": 337, "wish": 416, "within": [27, 112, 113, 114, 116, 117, 119, 126, 127, 130, 280, 320, 390, 406, 410, 411, 413, 418, 420, 421, 422], "without": [157, 398, 399, 401, 403, 406, 408, 409, 410, 411, 413, 417, 420, 422], "work": [22, 255, 284, 315, 371, 373, 374, 377, 388, 394, 396, 401, 403, 404, 405, 406, 410, 411, 412, 414, 416, 417], "workaround": [402, 403], "workflow": [380, 401, 409, 414, 416, 421], "world": [401, 409], "worldwid": 406, "worst": [215, 217, 219, 363], "would": [52, 72, 132, 213, 215, 221, 229, 376, 383, 386, 401, 404, 408, 410, 411, 413, 414, 415, 416, 417, 420, 422], "wrap": [79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 234, 238, 256, 257, 297, 401, 403, 412], "wrapper": [1, 21, 219, 221, 230, 298, 398, 399, 401, 414], "write": [401, 402, 406, 416], "written": [391, 392, 404, 406], "wrong": [396, 403], "wrongli": 402, "www": [401, 406], "x": [22, 100, 188, 215, 217, 238, 294, 298, 310, 323, 335, 350, 360, 361, 362, 363, 371, 372, 373, 374, 377, 378, 383, 388, 394, 398, 399, 401, 403, 415, 418], "x0": 415, "x1": 415, "x2": 415, "x_": [360, 368, 369, 390, 391, 392], "x_1": [368, 369, 390, 391, 392, 410], "x_2": [368, 369, 390, 391, 392, 410], "x_3": [368, 369, 390, 391, 392, 410], "x_4": [368, 369, 390, 391, 392], "x_5": 392, "x_6": 392, "x_i": 410, "x_pend": 22, "xlsx": [361, 362, 363, 377], "xpho": [361, 362, 363], "xxxx": 402, "xylen": [361, 362, 363, 365, 366], "y": [246, 302, 318, 335, 360, 361, 362, 363, 377, 378, 380, 383, 398, 399, 401, 420], "ye": 302, "year": 420, "yet": [22, 154, 156, 157, 158, 403, 408, 414], "yield": [6, 84, 361, 362, 363, 365, 366, 371, 377, 380, 381, 383, 392, 394, 395, 396, 401, 403, 407, 412, 416], "yield_cumbest": [361, 362, 363, 377], "yml": 403, "you": [27, 48, 362, 366, 368, 376, 381, 383, 386, 391, 392, 395, 401, 402, 404, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422], "your": [362, 376, 383, 386, 392, 401, 402, 403, 404, 406, 409, 411, 413, 416, 417, 418, 419, 420, 422], "your_branch_nam": 404, "yourself": 386, "z": [378, 401], "zdir": 378, "zero": [8, 18, 142, 316, 383, 386, 420], "zip": [377, 378], "\u00b5fmt": 403, "\u0161o\u0161i\u0107": [401, 405]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedImprovement", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objective", "baybe.objective.Objective", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.deprecation", "baybe.objectives.deprecation.structure_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.single", "SingleTargetObjective", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "Surrogate", "SurrogateProtocol", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "classproperty", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.plotting", "baybe.utils.plotting.create_example_plots", "baybe.utils.plotting.indent", "baybe.utils.plotting.to_string", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 404, "0": 403, "01": 403, "02": 403, "03": 403, "04": 403, "05": 403, "06": 403, "07": 403, "08": 403, "09": 403, "1": 403, "10": 403, "11": 403, "12": 403, "13": 403, "14": 403, "15": 403, "16": 403, "17": 403, "19": 403, "2": 403, "2022": 403, "2023": 403, "2024": 403, "21": 403, "23": 403, "24": 403, "27": 403, "28": 403, "29": 403, "3": 403, "4": 403, "5": 403, "6": 403, "7": 403, "8": 403, "9": 403, "A": 401, "The": [386, 395, 401, 416, 417, 420], "abbrevi": 416, "acqf": 2, "acquisit": [1, 2, 19, 21, 23, 24, 25, 366, 408], "acquisitionfunct": 20, "action": 420, "activ": 407, "ad": [365, 403, 408, 409, 420, 422], "add_fake_measur": 312, "add_noise_to_perturb_degenerate_row": 313, "add_parameter_nois": 314, "addendum": 388, "addit": [383, 414], "additivekernel": 92, "advanc": [401, 418], "altern": 416, "amount": 383, "an": 386, "arm": [385, 386], "arm64": 402, "arrai": 417, "arrays_to_datafram": 315, "assembli": 416, "asynchron": 408, "attr": 404, "augment": [283, 284, 285], "automat": 416, "avail": [366, 418], "avx": 402, "back": 401, "backtest": [359, 398], "bandit": [223, 385, 386], "base": [19, 29, 78, 98, 100, 111, 139, 150, 153, 162, 165, 172, 225, 263, 361, 362, 363, 368, 369, 383, 384, 392, 417], "basic": [82, 141, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 364, 365, 409, 411, 416], "basickernel": 79, "batch": 409, "batchify_ensemble_predictor": 256, "batchify_mean_var_predict": 257, "bayb": [0, 1, 2, 19, 21, 23, 24, 25, 26, 28, 29, 35, 39, 42, 43, 44, 45, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 91, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 108, 110, 111, 115, 118, 120, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 149, 150, 152, 153, 155, 159, 161, 162, 164, 165, 167, 169, 170, 171, 172, 174, 179, 182, 183, 185, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 229, 231, 232, 233, 235, 238, 239, 240, 242, 243, 245, 247, 249, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 365, 401, 404], "bayesian": [164, 165, 167, 169, 170, 401, 414], "bayesianlinearsurrog": 248, "bayesianrecommend": 166, "bell_transform": 274, "bernoulli": 386, "betabernoullimultiarmedbanditsurrog": 224, "betaprior": 142, "binari": [265, 267], "binarytarget": 266, "black": [360, 386], "block_deserialization_hook": 202, "block_serialization_hook": 203, "boolean": [299, 300, 301, 302], "both": 394, "botorch": [167, 391], "botorchrecommend": 168, "bound": [376, 412, 415], "box": [360, 386], "break": 403, "build": [386, 415], "bytes_to_human_read": 330, "cach": [409, 411], "callabl": [368, 369, 392, 417], "campaign": [26, 27, 360, 361, 362, 363, 366, 368, 369, 371, 372, 374, 377, 380, 381, 388, 391, 392, 394, 395, 409], "cardinalityconstraint": 30, "case": 386, "catch_constant_target": 258, "categor": 115, "categoricalencod": 121, "categoricalparamet": [116, 413], "chang": 403, "changelog": 403, "check_if_in": 300, "chemic": 401, "chemistri": [303, 304, 305, 306, 307], "choicevalu": 267, "class": 404, "classproperti": 288, "clone": 401, "closer_el": 335, "closest_el": 336, "cluster": [174, 414], "code": 404, "columntransform": 350, "compar": 394, "compon": 376, "composit": 91, "compositekernel": 80, "condit": [35, 36, 410], "config": [395, 396, 409], "configur": [380, 381, 395, 416], "constraint": [28, 29, 31, 35, 39, 42, 43, 44, 45, 46, 56, 57, 58, 367, 368, 369, 370, 371, 372, 373, 374, 383, 384, 410, 415, 422], "construct": [361, 362, 363, 368, 369, 383, 391, 392, 412, 415], "constructor": [415, 416], "continu": [39, 183, 367, 369, 383, 390, 407, 410, 413, 415, 420, 422], "continuouscardinalityconstraint": 40, "continuousconstraint": 32, "continuouslinearconstraint": [41, 410], "continuouslinearequalityconstraint": 43, "continuouslinearinequalityconstraint": 44, "continuousnonlinearconstraint": 33, "continuousparamet": 112, "contribut": 404, "contributor": 405, "conveni": 412, "convent": 404, "convers": [308, 309, 310, 412, 416], "convert": [204, 380], "convert_acqf": 24, "convert_bound": 327, "copi": 416, "core": [185, 188, 189, 201, 202, 203, 204, 205, 206, 207, 214, 215, 233, 240, 242], "cpu": 402, "creat": [360, 361, 362, 363, 366, 368, 369, 371, 372, 373, 374, 380, 381, 388, 390, 391, 394, 395, 398, 399, 409, 415], "create_example_plot": 339, "creation": [361, 362, 363, 383, 384, 409, 422], "current": 418, "custom": [118, 229, 231, 360, 371, 375, 376, 379, 380, 381, 418], "customdiscreteparamet": [119, 413], "customencod": 122, "customonnxsurrog": 230, "data": [361, 362, 363, 415, 420], "datafram": [311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 368, 369, 392, 415, 416, 417], "de": [394, 416], "default": [243, 415, 416], "defaultkernelfactori": 244, "defin": [360, 368, 369, 376, 377, 378, 388, 391, 392, 396, 398, 399, 401], "definit": 377, "depend": [372, 401, 413], "deprec": [42, 43, 44, 45, 101, 102, 403], "deprecationerror": 60, "descript": 388, "deseri": 416, "deserialize_datafram": 211, "design": [401, 404], "desir": [103, 105], "desirabilityobject": [104, 412], "develop": 404, "df_apply_dependency_augment": 284, "df_apply_permutation_augment": 285, "df_drop_single_value_column": 316, "df_drop_string_column": 317, "df_uncorrelated_featur": 318, "dictionari": [395, 396], "differ": 366, "dimens": 392, "discret": [46, 190, 193, 194, 195, 370, 371, 372, 373, 383, 391, 410, 413, 414, 415], "discretecardinalityconstraint": 47, "discreteconstraint": 34, "discretecustomconstraint": [48, 410], "discretedependenciesconstraint": [49, 410], "discreteexcludeconstraint": [50, 410], "discretelinkedparametersconstraint": [51, 410], "discretenolabelduplicatesconstraint": [52, 410], "discreteparamet": 113, "discretepermutationinvarianceconstraint": [53, 410], "discreteproductconstraint": [54, 410], "discretesamplingmethod": 346, "discretesumconstraint": [55, 410], "discuss": 386, "disk": 411, "do": 417, "docstr": 404, "document": 381, "dtypefloatnumpi": 332, "dtypefloatonnx": 333, "dtypefloattorch": 352, "dummi": 287, "duplic": 383, "dure": 422, "edbo": 245, "edbokernelfactori": 246, "effici": 422, "emptysearchspaceerror": 61, "encod": 413, "end": 401, "enum": [106, 120, 268], "environ": 411, "equival": 416, "estim": 422, "exampl": [361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 380, 381, 388, 391, 392, 394, 395, 396, 400, 401], "except": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "exceptiongroup": 402, "exclus": [373, 374], "expect": 420, "expectedimprov": 3, "experi": [371, 372, 373, 374, 380, 381, 388, 394, 401, 408, 417], "experiment": [409, 411], "expir": 403, "explicit": 415, "extend": 404, "extract": 418, "fake": 422, "farthest_point_sampl": 347, "featur": 411, "field": 416, "file": [395, 396], "filter_df": 319, "find_subclass": 289, "finite_float": 355, "fix": [402, 403], "float": 411, "fpsrecommend": 180, "fraction_to_float": 309, "from": [395, 401, 403, 409, 415, 416], "full": [361, 362, 363, 415], "function": [360, 361, 362, 363, 366, 368, 369, 377, 388, 391, 392, 404, 408], "further": 409, "fuzzy_row_match": 320, "gammaprior": 143, "gaussian_process": [232, 233, 235, 238, 239, 240, 242, 243, 245], "gaussianmixtureclusteringrecommend": 175, "gaussianprocesspreset": 241, "gaussianprocesssurrog": 234, "gener": [398, 399, 404, 414], "geom_mean": 337, "get": [365, 409], "get_base_structure_hook": 205, "get_baseclass": 290, "get_canonical_smil": 304, "get_fingerprint_class": 305, "get_model_params_valid": 260, "get_parameters_from_datafram": 132, "get_subclass": 291, "get_transform_object": 321, "get_transform_paramet": 197, "get_user_detail": 278, "github": 401, "global": 407, "group_duplicate_valu": 292, "guid": 421, "halfcauchyprior": 144, "halfnormalprior": 145, "hilberts_factori": 293, "hook": [375, 376, 377, 378], "hybrid": [368, 392, 410], "imaginari": 386, "implicit": 412, "import": [360, 361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 376, 378, 380, 381, 383, 384, 386, 388, 390, 391, 392, 394, 395, 396, 398, 399], "improv": 378, "inclus": 361, "incompatibilityerror": 62, "incompatibleacquisitionfunctionerror": 63, "incompatiblesearchspaceerror": 64, "incomplet": 363, "incorpor": 374, "indent": 340, "independentgaussiansurrog": 226, "index": 401, "indic": 401, "infiniteintervalerror": 325, "influenc": 422, "inform": [409, 414], "initi": [361, 366], "instal": [401, 402], "instanc": 376, "instead": [380, 381], "instruct": 411, "internet": 411, "interrupt": 377, "interv": [324, 325, 326, 327, 328], "invalidsurrogatemodelerror": 65, "invalidtargetvalueerror": 66, "invari": 383, "invok": 416, "irrelev": 420, "is_abstract": 301, "is_all_inst": 294, "is_en": 279, "issu": [401, 402], "iter": [368, 369, 380, 381, 388], "json": [409, 416], "kernel": [77, 78, 81, 82, 91], "kernel_factori": [235, 238], "kernelfactori": 236, "kmeansclusteringrecommend": 176, "known": [401, 402], "leak": 402, "learn": [397, 399, 407, 417, 420], "licens": [401, 406], "limit": [418, 419], "linear": [247, 369], "linear_transform": 275, "linearkernel": 83, "link": 381, "local": [401, 407], "logexpectedimprov": 4, "lognormalprior": 146, "look_up_target": 217, "lookup": [216, 217, 361, 362, 363, 368, 369, 377, 392, 398, 399, 417], "loop": [360, 361, 362, 363, 398, 399, 401], "maco": 402, "maintain": [401, 405], "make_gp_from_preset": 242, "mandatori": 412, "manual": [371, 372, 373, 374], "mark": 408, "match": 419, "match_attribut": 295, "maternkernel": 84, "max": 419, "mean": 417, "meanpredictionsurrog": 250, "measur": [365, 380, 381, 409, 422], "mechan": [361, 362, 363, 417], "memori": [329, 330, 422], "memorys": 191, "meta": [152, 153, 155, 414], "metarecommend": 154, "method": [376, 404, 407], "min": 419, "miss": 417, "mixin": 208, "mixtur": [382, 383, 384], "mode": [388, 419], "model": [366, 380, 381, 383, 384, 386, 418], "modelnottrainederror": 67, "monitor": 378, "monkeypatch": [376, 377, 378], "multi": [385, 386, 387, 388], "multipl": 417, "naiv": [159, 249], "naivehybridspacerecommend": 160, "name": 413, "name_to_smil": 306, "necessari": [361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 380, 381, 388, 391, 392, 394, 395, 396], "nest": 416, "ngboost": 251, "ngboostsurrog": 252, "nois": 422, "nomcacquisitionfunctionerror": 68, "non_inf_float": 356, "non_nan_float": 357, "none": 417, "nonpredict": [171, 172, 174, 179], "nonpredictiverecommend": 173, "nonstring_to_tupl": 310, "norecommenderslefterror": 69, "normalprior": 147, "notenoughpointslefterror": 70, "nothingtosimulateerror": 71, "numer": [125, 271, 331, 332, 333, 334, 335, 336, 337], "numericalcontinuousparamet": [126, 413], "numericaldiscreteparamet": [127, 413], "numericaltarget": [272, 419], "numericalunderflowerror": 72, "object": [95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 361, 362, 363, 366, 368, 369, 371, 372, 373, 374, 388, 391, 394, 398, 399, 401, 412, 416], "onli": 411, "onnx": 380, "optim": [360, 398, 399, 401, 409, 422], "option": [401, 413, 414], "optionalimporterror": 73, "order": 383, "other": 366, "output": [380, 381], "overrid": 404, "packag": [401, 411], "pamclusteringrecommend": 177, "parallel": 409, "paramet": [110, 111, 114, 115, 118, 120, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 361, 362, 363, 366, 381, 383, 384, 409, 413, 415, 422], "parameter_cartesian_prod_panda": 193, "parameter_cartesian_prod_polar": 194, "parameterencod": 123, "partial": [21, 408], "partialacquisitionfunct": 22, "pass": 381, "pend": 408, "perform": [361, 388, 391, 392], "periodickernel": 85, "permut": 383, "piecewisepolynomialkernel": 86, "plainkernelfactori": 237, "plot": [338, 339, 340, 341, 360, 377, 378], "point": 411, "polar": [402, 411], "polynomialkernel": 87, "posteriormean": 5, "posteriorstandarddevi": 6, "pre": 380, "precis": 411, "preset": [239, 240, 242, 243, 245], "pretrain": 380, "pretty_print_df": 322, "print": [371, 372, 374, 388], "prior": [138, 139, 140, 141], "probabilityofimprov": 7, "probabl": 378, "problem": [360, 377, 402], "product": [374, 415], "productkernel": 93, "pull": 404, "pure": [161, 162, 164, 165, 167, 169, 170, 171, 172, 174, 179, 407, 414], "purerecommend": 163, "pycharm": 402, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedimprov": 12, "qnegintegratedposteriorvari": 13, "qnoisyexpectedimprov": 14, "qprobabilityofimprov": 15, "qsimpleregret": 16, "qthompsonsampl": 17, "quick": 401, "qupperconfidencebound": 18, "random": [342, 343, 344], "random_forest": 253, "randomforestsurrog": 254, "randomrecommend": 181, "rbfkernel": 88, "recommend": [149, 150, 152, 153, 155, 159, 161, 162, 164, 165, 167, 169, 170, 171, 172, 174, 179, 365, 366, 380, 381, 391, 392, 394, 408, 409, 414], "recommenderprotocol": 151, "reduct": 407, "refers_to": 296, "regist": 376, "register_custom_architectur": 231, "register_hook": 297, "relat": 402, "remov": 403, "represent": [383, 384, 415], "reproduc": 422, "request": 404, "restrict": 415, "result": [360, 377, 378, 408], "rffkernel": 89, "role": 420, "rqkernel": 90, "run": [360, 368, 369, 386], "sampl": [179, 407, 414], "sample_numerical_df": 348, "sampling_algorithm": [345, 347, 348], "scalar": [105, 107, 418], "scale": 349, "scalekernel": 94, "scenario": [218, 219, 417], "scope": 411, "search": [383, 384, 390, 398, 401, 407, 414, 415, 422], "searchspac": [182, 183, 185, 186, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 361, 363, 366, 368, 369, 371, 372, 373, 374, 388, 389, 391, 392, 399], "searchspacetyp": 187, "see": 420, "select_constructor_hook": 206, "semaphor": 402, "sequenti": [155, 409], "sequential_greedi": [169, 170], "sequentialgreedyrecommend": 170, "sequentialmetarecommend": 156, "serial": [200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 393, 394, 409, 416], "serialize_datafram": 212, "serialmixin": 209, "set": [360, 377, 378, 390, 398, 399], "set_random_se": 343, "setup": [365, 371, 372, 373, 374, 380, 381, 383, 384, 386, 388, 394], "signatur": 376, "simplex": [383, 415], "simul": [213, 214, 215, 216, 217, 218, 219, 220, 221, 360, 361, 362, 363, 377, 386, 398, 399, 417], "simulate_experi": 215, "simulate_scenario": 219, "simulate_transfer_learn": 221, "singl": [108, 417], "singletargetobject": [109, 412], "sklearnclusteringrecommend": 178, "slot": [383, 384], "smile": 129, "smiles_to_fingerprint_featur": 307, "smoothedboxprior": 148, "some": [368, 369, 388], "sort_paramet": 133, "space": [383, 384, 390, 392, 398, 401, 407, 414, 415, 422], "span": 383, "stage": 380, "start": 401, "stop": 377, "str_to_acqf": 25, "strategi": [366, 401], "streamingsequentialmetarecommend": 157, "string": [395, 416], "strtobool": 302, "structure_constraint": 45, "structure_object": 102, "studi": 418, "sub": 407, "subselectioncondit": [37, 410], "subspac": 415, "subspacecontinu": 184, "subspacediscret": 192, "substanc": [128, 129, 383, 401], "substanceencod": 124, "substanceparamet": [130, 413], "suggest": 402, "suitabl": 366, "sum": 374, "support": [402, 408], "surrog": [222, 223, 225, 227, 229, 231, 232, 233, 235, 238, 239, 240, 242, 243, 245, 247, 249, 251, 253, 255, 256, 257, 258, 259, 260, 261, 366, 379, 380, 381, 418], "surrogateprotocol": 228, "synchron": 404, "synthet": [391, 392], "tabl": [361, 362, 363, 398, 399, 401], "target": [262, 263, 264, 265, 267, 268, 271, 273, 274, 275, 276, 376, 387, 388, 412, 419, 422], "targetmod": 269, "targettransform": 270, "task": [398, 399], "taskparamet": [117, 413, 420], "technologi": 420, "telemetri": [277, 278, 279, 280, 281, 401, 411], "telemetry_record_recommended_measurement_percentag": 280, "telemetry_record_valu": 281, "temporary_se": 344, "terminologi": [383, 416, 417, 420], "test": [368, 369, 391, 392], "theoret": 383, "thi": [361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 388, 391, 392], "thresholdcondit": [38, 410], "through": 420, "to_kernel_factori": 238, "to_object": 100, "to_searchspac": 188, "to_str": 341, "to_tensor": 323, "to_tupl": 298, "toler": 409, "tool": 404, "torch": [351, 352, 353, 402], "tradit": 384, "train": 380, "transfer": [397, 399, 417, 420], "transfer_learn": [220, 221], "transform": [273, 274, 275, 276, 388], "treasur": 420, "triangular_transform": 276, "trigger": [376, 378], "two": 396, "twophasemetarecommend": 158, "type": 416, "uncertainti": 407, "unidentifiedsubclasserror": 74, "uninstal": 411, "uninterrupt": 377, "unlock": 420, "unmatchedattributeerror": 75, "unreleas": 403, "unstructure_bas": 207, "unusedobjectwarn": 76, "upperconfidencebound": 8, "us": [361, 362, 363, 365, 366, 371, 372, 373, 374, 380, 381, 386, 388, 391, 392, 415, 416, 417, 418], "use_fallback_constructor_hook": 328, "user": 421, "util": [23, 24, 25, 131, 132, 133, 210, 211, 212, 255, 256, 257, 258, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 422], "v": [376, 383, 402, 409], "valid": [56, 57, 58, 134, 135, 136, 137, 196, 197, 198, 199, 259, 260, 261, 354, 355, 356, 357, 358, 381, 396], "validate_cardinality_constraints_are_nonoverlap": 57, "validate_constraint": 58, "validate_custom_architecture_cl": 261, "validate_decorrel": 135, "validate_is_finit": 136, "validate_not_nan": 358, "validate_paramet": 199, "validate_parameter_nam": 198, "validate_searchspace_from_config": 189, "validate_simplex_subspace_from_config": 195, "validate_unique_valu": 137, "valu": [415, 416, 417], "variabl": 411, "varname_numpy_use_single_precis": 334, "varname_torch_use_single_precis": 353, "verif": [371, 372, 373, 374, 383, 384, 396], "verifi": 369, "we": 417, "what": 417, "window": 402, "within": 415, "without": 402, "workflow": [404, 408], "wrap": [368, 369, 392], "write": 404}})